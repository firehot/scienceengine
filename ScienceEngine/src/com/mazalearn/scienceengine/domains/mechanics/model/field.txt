GlowScript 1.0
// Converted from the VPython program 02_newton

/*
Bruce Sherwood Fall 2000
Illustrates the Momentum Principle (Newton's 2nd law).
*/

var h = 400, w = 400
scene.width = w
scene.height = h
scene.caption.text("In lower window, drag the force vector.\nObject above moves under the influence of this single force.")
var wide = 1
scene.fov = 0.001
scene.range = wide
scene.userzoom = false
scene.userspin = false
var ball = sphere( {pos:vec(-0.9*wide,0,0), color:color.cyan, size:2*wide/20*vec(1,1,1)} )
ball.mass = 200
ball.p = vec(0,0,0)
var Rtrail = ball.size.x/40
var trail = attach_trail(ball, {radius:Rtrail, pps:30} )
var dt = 0.1
var Foffset = vec(0,0,-ball.size.y/2 )
var Fvec = arrow( {pos:ball.pos+Foffset, axis_and_length:vec(0,0,0), shaftwidth:wide/30, color:color.green} )
var pvec = arrow( {pos:ball.pos, axis_and_length:vec(0,0,0), shaftwidth:wide/30, color:color.red} )
var Fmouse = 1 // F mouse scale factor
var Fview = 1 // F view scale factor
var pview = 0.05 // p view scale factor

var scene2 = canvas( {width:w, height:h} )
scene2.range = wide
scene2.userzoom = false
scene2.userspin = false
var Fvec2 = arrow( {canvas:scene2, axis_and_length:vec(0,0,0), shaftwidth:wide/30, color:color.green} )
sphere( {canvas:scene2, color:Fvec2.color, size:2*Fvec2.shaftwidth/2*vec(1,1,1)} )
//canvas.selected = scene

var drag = false

scene2.bind("mousedown", function() {
    drag = true
    
    scene2.bind("mouseup", function() {
        drag = false 
    })
})

var F = vec(0,0,0)
var count = 0
while (true) { 
    rate(40,wait)
    if (drag) { 
        F = Fmouse*scene2.mouse.pos
    }
    Fvec2.axis_and_length = Fview*F
    ball.p = ball.p+F*dt
    ball.pos = ball.pos+(ball.p/ball.mass)*dt
    if (!(-wide <= ball.pos.x && ball.pos.x <= wide)) { 
        trail.clear()
        if (ball.p.x > 0) { 
            ball.pos.x = -wide
        }
        else { 
            ball.pos.x = wide
        }
    }
    if (!(-wide <= ball.pos.y && ball.pos.y <= wide)) {
        trail.clear()
        if (ball.p.y > 0) { 
            ball.pos.y = -wide
        }
        else { 
            ball.pos.y = wide
        }
    }
    Fvec.pos = ball.pos+Foffset
    Fvec.axis_and_length = Fview*F
    pvec.pos = ball.pos
    pvec.axis_and_length = pview*ball.p
}
    
