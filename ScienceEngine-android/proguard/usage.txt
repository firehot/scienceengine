android.annotation.SuppressLint
android.annotation.TargetApi
com.android.vending.billing.IInAppBillingService$Stub:
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_isBillingSupported
    static final int TRANSACTION_getSkuDetails
    static final int TRANSACTION_getBuyIntent
    static final int TRANSACTION_getPurchases
    static final int TRANSACTION_consumePurchase
    37:40:public IInAppBillingService$Stub()
    58:58:public android.os.IBinder asBinder()
com.android.vending.billing.IInAppBillingService$Stub$Proxy:
    186:186:public java.lang.String getInterfaceDescriptor()
com.badlogic.gdx.Application:
    public static final int LOG_NONE
    public static final int LOG_DEBUG
    public static final int LOG_INFO
    public static final int LOG_ERROR
    public abstract com.badlogic.gdx.Audio getAudio()
    public abstract com.badlogic.gdx.Input getInput()
    public abstract com.badlogic.gdx.Files getFiles()
    public abstract com.badlogic.gdx.Net getNet()
    public abstract void log(java.lang.String,java.lang.String,java.lang.Exception)
    public abstract void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void setLogLevel(int)
    public abstract int getVersion()
    public abstract long getJavaHeap()
    public abstract long getNativeHeap()
    public abstract void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
    public abstract void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.ApplicationAdapter
com.badlogic.gdx.Audio:
    public abstract com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
    public abstract com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
com.badlogic.gdx.Files:
    public abstract com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType)
    public abstract com.badlogic.gdx.files.FileHandle local(java.lang.String)
    public abstract boolean isExternalStorageAvailable()
    public abstract java.lang.String getLocalStoragePath()
    public abstract boolean isLocalStorageAvailable()
com.badlogic.gdx.Gdx:
    35:35:public Gdx()
com.badlogic.gdx.Graphics:
    public abstract boolean isGL11Available()
    public abstract com.badlogic.gdx.graphics.GLCommon getGLCommon()
    public abstract com.badlogic.gdx.graphics.GL10 getGL10()
    public abstract com.badlogic.gdx.graphics.GL11 getGL11()
    public abstract com.badlogic.gdx.graphics.GLU getGLU()
    public abstract float getRawDeltaTime()
    public abstract com.badlogic.gdx.Graphics$GraphicsType getType()
    public abstract float getPpiX()
    public abstract float getPpiY()
    public abstract float getPpcX()
    public abstract float getPpcY()
    public abstract float getDensity()
    public abstract boolean supportsDisplayModeChange()
    public abstract com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    public abstract boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
    public abstract boolean setDisplayMode(int,int,boolean)
    public abstract void setTitle(java.lang.String)
    public abstract void setVSync(boolean)
    public abstract com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    public abstract boolean isContinuousRendering()
    public abstract boolean isFullscreen()
com.badlogic.gdx.Graphics$GraphicsType
com.badlogic.gdx.HttpParametersUtils
com.badlogic.gdx.Input:
    public abstract float getAccelerometerX()
    public abstract float getAccelerometerY()
    public abstract float getAccelerometerZ()
    public abstract int getX()
    public abstract int getDeltaX()
    public abstract int getDeltaX(int)
    public abstract int getY()
    public abstract int getDeltaY()
    public abstract int getDeltaY(int)
    public abstract boolean isTouched()
    public abstract boolean justTouched()
    public abstract void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    public abstract void vibrate(int)
    public abstract void vibrate(long[],int)
    public abstract void cancelVibrate()
    public abstract float getAzimuth()
    public abstract float getPitch()
    public abstract float getRoll()
    public abstract void getRotationMatrix(float[])
    public abstract com.badlogic.gdx.InputProcessor getInputProcessor()
    public abstract boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
    public abstract int getRotation()
    public abstract com.badlogic.gdx.Input$Orientation getNativeOrientation()
    public abstract void setCursorCatched(boolean)
    public abstract boolean isCursorCatched()
    public abstract void setCursorPosition(int,int)
com.badlogic.gdx.Input$Buttons
com.badlogic.gdx.Input$Keys
com.badlogic.gdx.Input$Peripheral
com.badlogic.gdx.InputAdapter:
    49:49:public boolean mouseMoved(int,int)
    54:54:public boolean scrolled(int)
com.badlogic.gdx.InputMultiplexer:
    36:37:public void addProcessor(int,com.badlogic.gdx.InputProcessor)
    40:41:public void removeProcessor(int)
    44:45:public void addProcessor(com.badlogic.gdx.InputProcessor)
    48:49:public void removeProcessor(com.badlogic.gdx.InputProcessor)
    53:53:public int size()
    57:58:public void clear()
    61:62:public void setProcessors(com.badlogic.gdx.utils.Array)
    65:65:public com.badlogic.gdx.utils.Array getProcessors()
    106:108:public boolean mouseMoved(int,int)
    113:115:public boolean scrolled(int)
com.badlogic.gdx.InputProcessor:
    public abstract boolean mouseMoved(int,int)
    public abstract boolean scrolled(int)
com.badlogic.gdx.Net:
    public abstract void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
    public abstract com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
com.badlogic.gdx.Net$HttpMethods
com.badlogic.gdx.Net$HttpRequest
com.badlogic.gdx.Net$HttpResponse
com.badlogic.gdx.Net$HttpResponseListener
com.badlogic.gdx.Net$HttpStatus
com.badlogic.gdx.Preferences:
    public abstract void putInteger(java.lang.String,int)
    public abstract void putLong(java.lang.String,long)
    public abstract void put(java.util.Map)
    public abstract boolean getBoolean(java.lang.String)
    public abstract int getInteger(java.lang.String)
    public abstract long getLong(java.lang.String)
    public abstract float getFloat(java.lang.String)
    public abstract int getInteger(java.lang.String,int)
    public abstract long getLong(java.lang.String,long)
    public abstract java.lang.String getString(java.lang.String,java.lang.String)
    public abstract java.util.Map get()
    public abstract boolean contains(java.lang.String)
    public abstract void clear()
com.badlogic.gdx.Screen:
    public abstract void dispose()
com.badlogic.gdx.StreamUtils
com.badlogic.gdx.Version
com.badlogic.gdx.assets.AssetManager:
    102:109:public synchronized java.lang.Object get(java.lang.String)
    190:196:public synchronized boolean containsAsset(java.lang.Object)
    222:226:public synchronized boolean isLoaded(java.lang.String,java.lang.Class)
    284:285:public synchronized void load(com.badlogic.gdx.assets.AssetDescriptor)
    290:300:private void disposeDependencies(java.lang.String)
    326:331:public synchronized boolean update(int)
    497:498:public synchronized float getProgress()
    504:505:public synchronized void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener)
    563:563:public com.badlogic.gdx.utils.Logger getLogger()
    584:608:public synchronized java.lang.String getDiagnostics()
    613:613:public synchronized com.badlogic.gdx.utils.Array getAssetNames()
    618:618:public synchronized com.badlogic.gdx.utils.Array getDependencies(java.lang.String)
    623:623:public synchronized java.lang.Class getAssetType(java.lang.String)
com.badlogic.gdx.assets.RefCountedContainer:
    49:50:public void setObject(java.lang.Object)
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter:
    65:67:public SkinLoader$SkinParameter(java.lang.String)
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter:
    82:84:public TextureAtlasLoader$TextureAtlasParameter(boolean)
com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter:
    public java.lang.String inputDirectory
com.badlogic.gdx.assets.loaders.TileMapRendererLoader$TileMapParameter:
    41:47:public TileMapRendererLoader$TileMapParameter(java.lang.String,int,int)
    50:56:public TileMapRendererLoader$TileMapParameter(java.lang.String,int,int,float,float)
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution
com.badlogic.gdx.audio.AudioDevice
com.badlogic.gdx.audio.AudioRecorder
com.badlogic.gdx.audio.Music:
    public abstract void pause()
    public abstract boolean isPlaying()
    public abstract boolean isLooping()
    public abstract float getPosition()
com.badlogic.gdx.audio.Sound:
    public abstract long play()
    public abstract long play(float,float,float)
    public abstract long loop()
    public abstract long loop(float)
    public abstract long loop(float,float,float)
    public abstract void stop()
    public abstract void dispose()
    public abstract void stop(long)
    public abstract void setLooping(long,boolean)
    public abstract void setPitch(long,float)
    public abstract void setVolume(long,float)
    public abstract void setPan(long,float,float)
    public abstract void setPriority(long,int)
com.badlogic.gdx.backends.android.AndroidApplication:
    87:90:public void initialize(com.badlogic.gdx.ApplicationListener,boolean)
    172:174:public android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean)
    191:209:public android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    311:311:public long getJavaHeap()
    316:316:public long getNativeHeap()
    369:372:public void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    396:397:public void setLogLevel(int)
    401:404:public void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
    408:411:public void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.backends.android.AndroidAudio:
    79:79:public com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
    146:146:public com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
com.badlogic.gdx.backends.android.AndroidAudioDevice
com.badlogic.gdx.backends.android.AndroidAudioRecorder
com.badlogic.gdx.backends.android.AndroidDaydream
com.badlogic.gdx.backends.android.AndroidDaydream$1
com.badlogic.gdx.backends.android.AndroidFileHandle:
    52:54:public com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
    80:91:public com.badlogic.gdx.files.FileHandle[] list()
    95:116:public com.badlogic.gdx.files.FileHandle[] list(java.lang.String)
    120:127:public boolean isDirectory()
    159:159:public long lastModified()
com.badlogic.gdx.backends.android.AndroidFiles:
    33:36:public AndroidFiles(android.content.res.AssetManager)
    45:45:public com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType)
    70:71:public com.badlogic.gdx.files.FileHandle local(java.lang.String)
    81:81:public boolean isExternalStorageAvailable()
    86:86:public java.lang.String getLocalStoragePath()
    91:91:public boolean isLocalStorageAvailable()
com.badlogic.gdx.backends.android.AndroidGL10:
    36:37:public final void glActiveTexture(int)
    41:42:public final void glAlphaFunc(int,float)
    66:67:public final void glClearDepthf(float)
    71:72:public final void glClearStencil(int)
    81:82:public final void glColor4f(float,float,float,float)
    86:87:public final void glColorMask(boolean,boolean,boolean,boolean)
    103:104:public final void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    108:109:public final void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    113:114:public final void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    118:119:public final void glCullFace(int)
    128:129:public final void glDepthFunc(int)
    138:139:public final void glDepthRangef(float,float)
    173:174:public final void glFinish()
    178:179:public final void glFlush()
    183:184:public final void glFogf(int,float)
    188:189:public final void glFogfv(int,java.nio.FloatBuffer)
    193:194:public final void glFrontFace(int)
    198:199:public final void glFrustumf(float,float,float,float,float,float)
    208:208:public final int glGetError()
    223:224:public final void glHint(int,int)
    228:229:public final void glLightModelf(int,float)
    233:234:public final void glLightModelfv(int,java.nio.FloatBuffer)
    238:239:public final void glLightf(int,int,float)
    243:244:public final void glLightfv(int,int,java.nio.FloatBuffer)
    248:249:public final void glLineWidth(float)
    258:259:public final void glLoadMatrixf(java.nio.FloatBuffer)
    263:264:public final void glLogicOp(int)
    268:269:public final void glMaterialf(int,int,float)
    273:274:public final void glMaterialfv(int,int,java.nio.FloatBuffer)
    283:284:public final void glMultMatrixf(java.nio.FloatBuffer)
    288:289:public final void glMultiTexCoord4f(int,float,float,float,float)
    293:294:public final void glNormal3f(float,float,float)
    303:304:public final void glOrthof(float,float,float,float,float,float)
    313:314:public final void glPointSize(float)
    318:319:public final void glPolygonOffset(float,float)
    323:324:public final void glPopMatrix()
    328:329:public final void glPushMatrix()
    338:339:public final void glRotatef(float,float,float,float)
    343:344:public final void glSampleCoverage(float,boolean)
    348:349:public final void glScalef(float,float,float)
    358:359:public final void glShadeModel(int)
    363:364:public final void glStencilFunc(int,int,int)
    368:369:public final void glStencilMask(int)
    373:374:public final void glStencilOp(int,int,int)
    383:384:public final void glTexEnvf(int,int,float)
    388:389:public final void glTexEnvfv(int,int,java.nio.FloatBuffer)
    410:411:public final void glTranslatef(float,float,float)
    420:421:public final void glViewport(int,int,int,int)
    425:426:public final void glDeleteTextures(int,int[],int)
    430:431:public final void glFogfv(int,float[],int)
    435:436:public final void glGenTextures(int,int[],int)
    440:441:public final void glGetIntegerv(int,int[],int)
    445:446:public final void glLightModelfv(int,float[],int)
    450:451:public final void glLightfv(int,int,float[],int)
    460:461:public final void glMaterialfv(int,int,float[],int)
    465:466:public final void glMultMatrixf(float[],int)
    470:471:public final void glTexEnvfv(int,int,float[],int)
    476:476:public void glPolygonMode(int,int)
com.badlogic.gdx.backends.android.AndroidGL11:
    55:56:public void glClipPlanef(int,java.nio.FloatBuffer)
    60:61:public void glColor4ub(byte,byte,byte,byte)
    75:76:public void glGetBooleanv(int,java.nio.IntBuffer)
    80:81:public void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    85:86:public void glGetClipPlanef(int,java.nio.FloatBuffer)
    90:91:public void glGetFloatv(int,java.nio.FloatBuffer)
    95:96:public void glGetLightfv(int,int,java.nio.FloatBuffer)
    100:101:public void glGetMaterialfv(int,int,java.nio.FloatBuffer)
    105:106:public void glGetPointerv(int,java.nio.Buffer[])
    110:111:public void glGetTexEnviv(int,int,java.nio.IntBuffer)
    115:116:public void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    120:121:public void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    125:125:public boolean glIsBuffer(int)
    130:130:public boolean glIsEnabled(int)
    135:135:public boolean glIsTexture(int)
    140:141:public void glPointParameterf(int,float)
    145:146:public void glPointParameterfv(int,java.nio.FloatBuffer)
    150:151:public void glPointSizePointerOES(int,int,java.nio.Buffer)
    155:156:public void glTexEnvi(int,int,int)
    160:161:public void glTexEnviv(int,int,java.nio.IntBuffer)
    165:166:public void glTexParameterfv(int,int,java.nio.FloatBuffer)
    170:171:public void glTexParameteri(int,int,int)
    175:176:public void glTexParameteriv(int,int,java.nio.IntBuffer)
    180:181:public void glClipPlanef(int,float[],int)
    185:186:public void glDeleteBuffers(int,int[],int)
    190:191:public void glGenBuffers(int,int[],int)
    195:196:public void glGetBooleanv(int,boolean[],int)
    200:201:public void glGetBufferParameteriv(int,int,int[],int)
    205:206:public void glGetClipPlanef(int,float[],int)
    210:211:public void glGetFloatv(int,float[],int)
    215:216:public void glGetLightfv(int,int,float[],int)
    220:221:public void glGetMaterialfv(int,int,float[],int)
    225:226:public void glGetTexEnviv(int,int,int[],int)
    230:231:public void glGetTexParameterfv(int,int,float[],int)
    235:236:public void glGetTexParameteriv(int,int,int[],int)
    240:241:public void glPointParameterfv(int,float[],int)
    245:246:public void glTexEnviv(int,int,int[],int)
    250:251:public void glTexParameterfv(int,int,float[],int)
    255:256:public void glTexParameteriv(int,int,int[],int)
com.badlogic.gdx.backends.android.AndroidGL20:
    public native void glActiveTexture(int)
    public native void glBindAttribLocation(int,int,java.lang.String)
    public native void glBlendColor(float,float,float,float)
    public native void glBlendEquation(int)
    public native void glBlendEquationSeparate(int,int)
    public native void glBlendFuncSeparate(int,int,int,int)
    public native void glClearDepthf(float)
    public native void glClearStencil(int)
    public native void glColorMask(boolean,boolean,boolean,boolean)
    public native void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public native void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    public native void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    public native void glCullFace(int)
    public native void glDepthFunc(int)
    public native void glDepthRangef(float,float)
    public native void glDetachShader(int,int)
    public native void glFinish()
    public native void glFlush()
    public native void glFrontFace(int)
    public native void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    public native void glGetBooleanv(int,java.nio.Buffer)
    public native void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public native int glGetError()
    public native void glGetFloatv(int,java.nio.FloatBuffer)
    public native void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    public native void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    public native void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    public native void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String)
    public native void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public native void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public native void glGetUniformfv(int,int,java.nio.FloatBuffer)
    public native void glGetUniformiv(int,int,java.nio.IntBuffer)
    public native void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    public native void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    public native void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    public native void glHint(int,int)
    public native boolean glIsBuffer(int)
    public native boolean glIsEnabled(int)
    public native boolean glIsFramebuffer(int)
    public native boolean glIsProgram(int)
    public native boolean glIsRenderbuffer(int)
    public native boolean glIsShader(int)
    public native boolean glIsTexture(int)
    public native void glLineWidth(float)
    public native void glPolygonOffset(float,float)
    public native void glReleaseShaderCompiler()
    public native void glSampleCoverage(float,boolean)
    public native void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    public native void glStencilFunc(int,int,int)
    public native void glStencilFuncSeparate(int,int,int,int)
    public native void glStencilMask(int)
    public native void glStencilMaskSeparate(int,int)
    public native void glStencilOp(int,int,int)
    public native void glStencilOpSeparate(int,int,int,int)
    public native void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public native void glTexParameteri(int,int,int)
    public native void glTexParameteriv(int,int,java.nio.IntBuffer)
    public native void glUniform1f(int,float)
    public native void glUniform1fv(int,int,java.nio.FloatBuffer)
    public native void glUniform1iv(int,int,java.nio.IntBuffer)
    public native void glUniform2f(int,float,float)
    public native void glUniform2fv(int,int,java.nio.FloatBuffer)
    public native void glUniform2i(int,int,int)
    public native void glUniform2iv(int,int,java.nio.IntBuffer)
    public native void glUniform3f(int,float,float,float)
    public native void glUniform3fv(int,int,java.nio.FloatBuffer)
    public native void glUniform3i(int,int,int,int)
    public native void glUniform3iv(int,int,java.nio.IntBuffer)
    public native void glUniform4f(int,float,float,float,float)
    public native void glUniform4fv(int,int,java.nio.FloatBuffer)
    public native void glUniform4i(int,int,int,int,int)
    public native void glUniform4iv(int,int,java.nio.IntBuffer)
    public native void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    public native void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
    public native void glValidateProgram(int)
    public native void glVertexAttrib1f(int,float)
    public native void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib2f(int,float,float)
    public native void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib3f(int,float,float,float)
    public native void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    public native void glVertexAttrib4f(int,float,float,float,float)
    public native void glVertexAttrib4fv(int,java.nio.FloatBuffer)
    public native void glViewport(int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGLU:
    27:28:public void gluLookAt(com.badlogic.gdx.graphics.GL10,float,float,float,float,float,float,float,float,float)
    32:33:public void gluOrtho2D(com.badlogic.gdx.graphics.GL10,float,float,float,float)
    37:38:public void gluPerspective(com.badlogic.gdx.graphics.GL10,float,float,float,float)
    43:45:public boolean gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int)
    51:53:public boolean gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int)
com.badlogic.gdx.backends.android.AndroidGraphics:
    201:201:public com.badlogic.gdx.graphics.GL10 getGL10()
    207:207:public com.badlogic.gdx.graphics.GL11 getGL11()
    231:231:public boolean isGL11Available()
    241:241:private static boolean isPowerOfTwo(int)
    501:501:public float getRawDeltaTime()
    507:507:public com.badlogic.gdx.Graphics$GraphicsType getType()
    535:535:public com.badlogic.gdx.graphics.GLCommon getGLCommon()
    540:540:public float getPpiX()
    545:545:public float getPpiY()
    550:550:public float getPpcX()
    555:555:public float getPpcY()
    560:560:public float getDensity()
    565:565:public com.badlogic.gdx.graphics.GLU getGLU()
    570:570:public boolean supportsDisplayModeChange()
    575:575:public boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
    580:580:public com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    585:585:public boolean setDisplayMode(int,int,boolean)
    591:591:public void setTitle(java.lang.String)
    608:608:public com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    613:613:public void setVSync(boolean)
    646:646:public boolean isFullscreen()
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$1
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$AndroidDisplayMode
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$AndroidDisplayMode
com.badlogic.gdx.backends.android.AndroidInput:
    final boolean hasMultitouch
    private java.lang.String text
    private com.badlogic.gdx.Input$TextInputListener textListener
    protected final android.os.Vibrator vibrator
    private float azimuth
    private float pitch
    private float roll
    private float inclination
    private final com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard
    final float[] R
    final float[] orientation
    132:170:public AndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    174:174:public float getAccelerometerX()
    179:179:public float getAccelerometerY()
    184:184:public float getAccelerometerZ()
    234:266:public void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    270:272:public int getX()
    277:279:public int getY()
    418:419:public void onTap(int,int)
    425:426:public void onDrop(int,int)
    429:447:protected void postTap(int,int)
    539:540:public void vibrate(int)
    544:545:public void vibrate(long[],int)
    549:550:public void cancelVibrate()
    554:554:public boolean justTouched()
    569:575:private void updateOrientation()
    583:584:public void getRotationMatrix(float[])
    588:591:public float getAzimuth()
    596:599:public float getPitch()
    604:607:public float getRoll()
    658:658:public com.badlogic.gdx.InputProcessor getInputProcessor()
    663:669:public boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
    673:681:public int getFreePointerIndex()
    685:695:public int lookUpPointerIndex(int)
    700:718:public int getRotation()
    724:724:public com.badlogic.gdx.Input$Orientation getNativeOrientation()
    729:729:public void setCursorCatched(boolean)
    733:733:public boolean isCursorCatched()
    738:738:public int getDeltaX()
    743:743:public int getDeltaX(int)
    748:748:public int getDeltaY()
    753:753:public int getDeltaY(int)
    758:758:public void setCursorPosition(int,int)
    766:767:public void addKeyListener(android.view.View$OnKeyListener)
com.badlogic.gdx.backends.android.AndroidInput$1
com.badlogic.gdx.backends.android.AndroidInput$2
com.badlogic.gdx.backends.android.AndroidInput$4
com.badlogic.gdx.backends.android.AndroidInput$4$1
com.badlogic.gdx.backends.android.AndroidInput$4$1$1
com.badlogic.gdx.backends.android.AndroidInput$4$2
com.badlogic.gdx.backends.android.AndroidInput$4$2$1
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    static final int KEY_DOWN
    static final int KEY_UP
    static final int KEY_TYPED
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    static final int TOUCH_DOWN
    static final int TOUCH_UP
    static final int TOUCH_DRAGGED
com.badlogic.gdx.backends.android.AndroidInputFactory:
    15:15:public AndroidInputFactory()
com.badlogic.gdx.backends.android.AndroidInputThreePlus:
    java.util.ArrayList genericMotionListeners
    22:29:public AndroidInputThreePlus(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
    33:35:public boolean onGenericMotion(android.view.View,android.view.MotionEvent)
    39:40:public void addGenericMotionListener(android.view.View$OnGenericMotionListener)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService:
    40:42:public void onCreate()
    46:46:public android.service.wallpaper.WallpaperService$Engine onCreateEngine()
    public abstract com.badlogic.gdx.ApplicationListener createListener(boolean)
    public abstract com.badlogic.gdx.backends.android.AndroidApplicationConfiguration createConfig()
    public abstract void offsetChange(com.badlogic.gdx.ApplicationListener,float,float,float,float,int,int)
    73:75:public void onDestroy()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler
com.badlogic.gdx.backends.android.AndroidMusic:
    55:55:public boolean isLooping()
    105:105:public float getPosition()
com.badlogic.gdx.backends.android.AndroidNet:
    77:78:public void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
    82:82:public com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable
com.badlogic.gdx.backends.android.AndroidPreferences:
    43:45:public void putInteger(java.lang.String,int)
    49:51:public void putLong(java.lang.String,long)
    67:75:public void put(java.util.Map)
    79:79:public boolean getBoolean(java.lang.String)
    84:84:public int getInteger(java.lang.String)
    89:89:public long getLong(java.lang.String)
    94:94:public float getFloat(java.lang.String)
    109:109:public int getInteger(java.lang.String,int)
    114:114:public long getLong(java.lang.String,long)
    124:124:public java.lang.String getString(java.lang.String,java.lang.String)
    129:129:public java.util.Map get()
    134:134:public boolean contains(java.lang.String)
    139:141:public void clear()
com.badlogic.gdx.backends.android.AndroidServerSocket
com.badlogic.gdx.backends.android.AndroidSingleTouchHandler
com.badlogic.gdx.backends.android.AndroidSocket:
    59:62:public AndroidSocket(java.net.Socket,com.badlogic.gdx.net.SocketHints)
    85:89:public boolean isConnected()
com.badlogic.gdx.backends.android.AndroidSound:
    44:44:public long play()
    56:58:public void stop()
    62:63:public void stop(long)
    67:68:public void setPitch(long,float)
    72:73:public void setVolume(long,float)
    77:77:public long loop()
    82:85:public long loop(float)
    90:91:public void setLooping(long,boolean)
    95:105:public void setPan(long,float,float)
    109:119:public long play(float,float,float)
    124:134:public long loop(float,float,float)
    139:140:public void setPriority(long,int)
com.badlogic.gdx.backends.android.AndroidTouchHandler:
    public abstract boolean supportsMultitouch(android.content.Context)
com.badlogic.gdx.backends.android.InputProcessorLW
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceViewLW
com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView:
    private static final boolean LOG_THREADS
    private static final boolean LOG_SURFACE
    private static final boolean LOG_RENDERER
    private static final boolean DRAW_TWICE_AFTER_SIZE_CHANGED
    public static final int RENDERMODE_WHEN_DIRTY
    public static final int RENDERMODE_CONTINUOUSLY
    public static final int DEBUG_CHECK_GL_ERROR
    public static final int DEBUG_LOG_GL_CALLS
    163:165:public GLBaseSurfaceView(android.content.Context)
    189:190:public void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper)
    252:254:public void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory)
    262:264:public void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory)
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$BaseConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$ComponentSizeChooser
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultWindowSurfaceFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$LogWriter
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$SimpleEGLConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper:
    public static final int CONFIG_CHECK_GL_ERROR
    public static final int CONFIG_CHECK_THREAD
    public static final int CONFIG_LOG_ARGUMENT_NAMES
    public static final int ERROR_WRONG_THREAD
    24:24:public GLDebugHelper()
    72:75:public static javax.microedition.khronos.egl.EGL wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer)
com.badlogic.gdx.backends.android.surfaceview.GLException:
    40:40:int getError()
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper:
    private static final int FORMAT_INT
    private static final int FORMAT_FLOAT
    private static final int FORMAT_FIXED
    248:264:public static java.lang.String getErrorString(int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20:
    private static final boolean DEBUG
    50:54:public GLSurfaceView20(android.content.Context,boolean,int,int,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser:
    188:194:private void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
    197:228:private void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake:
    public static final int RENDERMODE_WHEN_DIRTY
    public static final int RENDERMODE_CONTINUOUSLY
    public static final int DEBUG_CHECK_GL_ERROR
    public static final int DEBUG_LOG_GL_CALLS
    private int mDebugFlags
    169:172:public GLSurfaceViewCupcake(android.content.Context,android.util.AttributeSet,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
    198:199:public void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper)
    207:208:public void setDebugFlags(int)
    213:213:public int getDebugFlags()
    271:272:public void setEGLConfigChooser(boolean)
    309:309:public int getRenderMode()
    382:385:public void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread:
    757:759:public int getRenderMode()
    822:825:public void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$LogWriter
com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase:
    331:331:public void glBindFramebufferOES(int,int)
    335:335:public void glBindRenderbufferOES(int,int)
    339:339:public void glBlendEquation(int)
    343:343:public void glBlendEquationSeparate(int,int)
    347:347:public void glBlendFuncSeparate(int,int,int,int)
    351:351:int glCheckFramebufferStatusOES(int)
    355:355:public void glCompressedTexImage2D(int,int,int,int,int,int,int)
    359:359:public void glDeleteFramebuffersOES(int,int[],int)
    363:363:public void glDeleteFramebuffersOES(int,java.nio.IntBuffer)
    367:367:public void glDeleteRenderbuffersOES(int,int[],int)
    371:371:public void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)
    375:375:public void glFramebufferRenderbufferOES(int,int,int,int)
    379:379:public void glFramebufferTexture2DOES(int,int,int,int,int)
    383:383:public void glGenerateMipmapOES(int)
    387:387:public void glGenFramebuffersOES(int,int[],int)
    391:391:public void glGenFramebuffersOES(int,java.nio.IntBuffer)
    395:395:public void glGenRenderbuffersOES(int,int[],int)
    399:399:public void glGenRenderbuffersOES(int,java.nio.IntBuffer)
    403:403:public void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)
    407:407:public void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)
    411:411:public void glGetRenderbufferParameterivOES(int,int,int[],int)
    415:415:public void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)
    419:419:public void glGetTexGenfv(int,int,float[],int)
    423:423:public void glGetTexGenfv(int,int,java.nio.FloatBuffer)
    427:427:public void glGetTexGeniv(int,int,int[],int)
    431:431:public void glGetTexGeniv(int,int,java.nio.IntBuffer)
    435:435:public void glGetTexGenxv(int,int,int[],int)
    439:439:public void glGetTexGenxv(int,int,java.nio.IntBuffer)
    443:443:public boolean glIsFramebufferOES(int)
    447:447:public boolean glIsRenderbufferOES(int)
    451:451:public void glRenderbufferStorageOES(int,int,int,int)
    455:455:public void glTexGenf(int,int,float)
    459:459:public void glTexGenfv(int,int,float[],int)
    463:463:public void glTexGenfv(int,int,java.nio.FloatBuffer)
    467:467:public void glTexGeni(int,int,int)
    471:471:public void glTexGeniv(int,int,int[],int)
    475:475:public void glTexGeniv(int,int,java.nio.IntBuffer)
    479:479:public void glTexGenx(int,int,int)
    483:483:public void glTexGenxv(int,int,int[],int)
    487:487:public void glTexGenxv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser:
    private static final int EGL_OPENGL_ES2_BIT
    public static final int EGL_COVERAGE_BUFFERS_NV
    public static final int EGL_COVERAGE_SAMPLES_NV
    private static final java.lang.String TAG
    163:169:private void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
    172:207:private void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy
com.badlogic.gdx.files.FileHandle:
    52:55:public FileHandle(java.lang.String)
    60:63:public FileHandle(java.io.File)
    142:142:public java.io.BufferedInputStream read(int)
    148:148:public java.io.Reader reader()
    155:157:public java.io.Reader reader(java.lang.String)
    164:164:public java.io.BufferedReader reader(int)
    171:173:public java.io.BufferedReader reader(int,java.lang.String)
    258:274:public int readBytes(byte[],int,int)
    300:322:public void write(java.io.InputStream,boolean)
    329:329:public java.io.Writer writer(boolean)
    338:350:public java.io.Writer writer(boolean,java.lang.String)
    359:360:public void writeString(java.lang.String,boolean)
    368:380:public void writeString(java.lang.String,boolean,java.lang.String)
    405:416:public void writeBytes(byte[],int,int,boolean)
    423:429:public com.badlogic.gdx.files.FileHandle[] list()
    437:453:public com.badlogic.gdx.files.FileHandle[] list(java.lang.String)
    460:461:public boolean isDirectory()
    476:477:public com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
    522:524:public boolean deleteDirectory()
    530:531:public void emptyDirectory()
    536:539:public void emptyDirectory(boolean)
    550:564:public void copyTo(com.badlogic.gdx.files.FileHandle)
    570:574:public void moveTo(com.badlogic.gdx.files.FileHandle)
    599:599:public long lastModified()
    608:610:public static com.badlogic.gdx.files.FileHandle tempFile(java.lang.String)
    616:621:public static com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String)
    626:639:private static void emptyDirectory(java.io.File,boolean)
    642:643:private static boolean deleteDirectory(java.io.File)
    648:653:private static void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    656:666:private static void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.files.FileHandleStream
com.badlogic.gdx.graphics.Camera:
    public abstract void update(boolean)
    77:81:public void apply(com.badlogic.gdx.graphics.GL10)
    88:89:public void lookAt(float,float,float)
    96:98:public void normalizeUp()
    108:109:public void rotate(float,float,float,float)
    117:120:public void rotate(com.badlogic.gdx.math.Vector3,float)
    129:135:public void rotateAround(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
    148:149:public void translate(com.badlogic.gdx.math.Vector3)
    227:230:public com.badlogic.gdx.math.collision.Ray getPickRay(float,float,float,float,float,float)
    241:241:public com.badlogic.gdx.math.collision.Ray getPickRay(float,float)
com.badlogic.gdx.graphics.Color:
    101:106:public com.badlogic.gdx.graphics.Color mul(float)
    114:119:public com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color)
    127:132:public com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color)
    220:222:public static float toFloatBits(int,int,int,int)
    241:241:public static int toIntBits(int,int,int,int)
    245:245:public static int alpha(float)
    249:249:public static int luminanceAlpha(float,float)
    253:253:public static int rgb565(float,float,float)
    257:257:public static int rgba4444(float,float,float,float)
    261:261:public static int rgb888(float,float,float)
    269:269:public static int rgb565(com.badlogic.gdx.graphics.Color)
    273:273:public static int rgba4444(com.badlogic.gdx.graphics.Color)
    277:277:public static int rgb888(com.badlogic.gdx.graphics.Color)
    290:293:public static void rgb565ToColor(com.badlogic.gdx.graphics.Color,int)
    301:305:public static void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int)
    313:316:public static void rgb888ToColor(com.badlogic.gdx.graphics.Color,int)
    324:328:public static void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int)
    334:334:public com.badlogic.gdx.graphics.Color tmp()
    339:339:public com.badlogic.gdx.graphics.Color cpy()
com.badlogic.gdx.graphics.FPSLogger:
    34:38:public void log()
com.badlogic.gdx.graphics.GL10:
    public static final int GL_OES_VERSION_1_0
    public static final int GL_OES_read_format
    public static final int GL_OES_compressed_paletted_texture
    public static final int GL_DEPTH_BUFFER_BIT
    public static final int GL_STENCIL_BUFFER_BIT
    public static final int GL_COLOR_BUFFER_BIT
    public static final int GL_FALSE
    public static final int GL_TRUE
    public static final int GL_POINTS
    public static final int GL_LINES
    public static final int GL_LINE_LOOP
    public static final int GL_LINE_STRIP
    public static final int GL_TRIANGLES
    public static final int GL_TRIANGLE_STRIP
    public static final int GL_TRIANGLE_FAN
    public static final int GL_NEVER
    public static final int GL_LESS
    public static final int GL_EQUAL
    public static final int GL_LEQUAL
    public static final int GL_GREATER
    public static final int GL_NOTEQUAL
    public static final int GL_GEQUAL
    public static final int GL_ALWAYS
    public static final int GL_ZERO
    public static final int GL_ONE
    public static final int GL_SRC_COLOR
    public static final int GL_ONE_MINUS_SRC_COLOR
    public static final int GL_SRC_ALPHA
    public static final int GL_ONE_MINUS_SRC_ALPHA
    public static final int GL_DST_ALPHA
    public static final int GL_ONE_MINUS_DST_ALPHA
    public static final int GL_DST_COLOR
    public static final int GL_ONE_MINUS_DST_COLOR
    public static final int GL_SRC_ALPHA_SATURATE
    public static final int GL_FRONT
    public static final int GL_BACK
    public static final int GL_FRONT_AND_BACK
    public static final int GL_FOG
    public static final int GL_LIGHTING
    public static final int GL_TEXTURE_2D
    public static final int GL_CULL_FACE
    public static final int GL_ALPHA_TEST
    public static final int GL_BLEND
    public static final int GL_COLOR_LOGIC_OP
    public static final int GL_DITHER
    public static final int GL_STENCIL_TEST
    public static final int GL_DEPTH_TEST
    public static final int GL_POINT_SMOOTH
    public static final int GL_LINE_SMOOTH
    public static final int GL_SCISSOR_TEST
    public static final int GL_COLOR_MATERIAL
    public static final int GL_NORMALIZE
    public static final int GL_RESCALE_NORMAL
    public static final int GL_POLYGON_OFFSET_FILL
    public static final int GL_VERTEX_ARRAY
    public static final int GL_NORMAL_ARRAY
    public static final int GL_COLOR_ARRAY
    public static final int GL_TEXTURE_COORD_ARRAY
    public static final int GL_MULTISAMPLE
    public static final int GL_SAMPLE_ALPHA_TO_COVERAGE
    public static final int GL_SAMPLE_ALPHA_TO_ONE
    public static final int GL_SAMPLE_COVERAGE
    public static final int GL_NO_ERROR
    public static final int GL_INVALID_ENUM
    public static final int GL_INVALID_VALUE
    public static final int GL_INVALID_OPERATION
    public static final int GL_STACK_OVERFLOW
    public static final int GL_STACK_UNDERFLOW
    public static final int GL_OUT_OF_MEMORY
    public static final int GL_EXP
    public static final int GL_EXP2
    public static final int GL_FOG_DENSITY
    public static final int GL_FOG_START
    public static final int GL_FOG_END
    public static final int GL_FOG_MODE
    public static final int GL_FOG_COLOR
    public static final int GL_CW
    public static final int GL_CCW
    public static final int GL_SMOOTH_POINT_SIZE_RANGE
    public static final int GL_SMOOTH_LINE_WIDTH_RANGE
    public static final int GL_ALIASED_POINT_SIZE_RANGE
    public static final int GL_ALIASED_LINE_WIDTH_RANGE
    public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
    public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
    public static final int GL_MAX_LIGHTS
    public static final int GL_MAX_TEXTURE_SIZE
    public static final int GL_MAX_MODELVIEW_STACK_DEPTH
    public static final int GL_MAX_PROJECTION_STACK_DEPTH
    public static final int GL_MAX_TEXTURE_STACK_DEPTH
    public static final int GL_MAX_VIEWPORT_DIMS
    public static final int GL_MAX_ELEMENTS_VERTICES
    public static final int GL_MAX_ELEMENTS_INDICES
    public static final int GL_MAX_TEXTURE_UNITS
    public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_SUBPIXEL_BITS
    public static final int GL_RED_BITS
    public static final int GL_GREEN_BITS
    public static final int GL_BLUE_BITS
    public static final int GL_ALPHA_BITS
    public static final int GL_DEPTH_BITS
    public static final int GL_STENCIL_BITS
    public static final int GL_DONT_CARE
    public static final int GL_FASTEST
    public static final int GL_NICEST
    public static final int GL_PERSPECTIVE_CORRECTION_HINT
    public static final int GL_POINT_SMOOTH_HINT
    public static final int GL_LINE_SMOOTH_HINT
    public static final int GL_POLYGON_SMOOTH_HINT
    public static final int GL_FOG_HINT
    public static final int GL_LIGHT_MODEL_AMBIENT
    public static final int GL_LIGHT_MODEL_TWO_SIDE
    public static final int GL_AMBIENT
    public static final int GL_DIFFUSE
    public static final int GL_SPECULAR
    public static final int GL_POSITION
    public static final int GL_SPOT_DIRECTION
    public static final int GL_SPOT_EXPONENT
    public static final int GL_SPOT_CUTOFF
    public static final int GL_CONSTANT_ATTENUATION
    public static final int GL_LINEAR_ATTENUATION
    public static final int GL_QUADRATIC_ATTENUATION
    public static final int GL_BYTE
    public static final int GL_UNSIGNED_BYTE
    public static final int GL_SHORT
    public static final int GL_UNSIGNED_SHORT
    public static final int GL_FLOAT
    public static final int GL_CLEAR
    public static final int GL_AND
    public static final int GL_AND_REVERSE
    public static final int GL_COPY
    public static final int GL_AND_INVERTED
    public static final int GL_NOOP
    public static final int GL_XOR
    public static final int GL_OR
    public static final int GL_NOR
    public static final int GL_EQUIV
    public static final int GL_INVERT
    public static final int GL_OR_REVERSE
    public static final int GL_COPY_INVERTED
    public static final int GL_OR_INVERTED
    public static final int GL_NAND
    public static final int GL_SET
    public static final int GL_EMISSION
    public static final int GL_SHININESS
    public static final int GL_AMBIENT_AND_DIFFUSE
    public static final int GL_MODELVIEW
    public static final int GL_PROJECTION
    public static final int GL_TEXTURE
    public static final int GL_ALPHA
    public static final int GL_RGB
    public static final int GL_RGBA
    public static final int GL_LUMINANCE
    public static final int GL_LUMINANCE_ALPHA
    public static final int GL_UNPACK_ALIGNMENT
    public static final int GL_PACK_ALIGNMENT
    public static final int GL_UNSIGNED_SHORT_4_4_4_4
    public static final int GL_UNSIGNED_SHORT_5_5_5_1
    public static final int GL_UNSIGNED_SHORT_5_6_5
    public static final int GL_FLAT
    public static final int GL_SMOOTH
    public static final int GL_KEEP
    public static final int GL_REPLACE
    public static final int GL_INCR
    public static final int GL_DECR
    public static final int GL_VENDOR
    public static final int GL_RENDERER
    public static final int GL_VERSION
    public static final int GL_EXTENSIONS
    public static final int GL_MODULATE
    public static final int GL_DECAL
    public static final int GL_ADD
    public static final int GL_TEXTURE_ENV_MODE
    public static final int GL_TEXTURE_ENV_COLOR
    public static final int GL_TEXTURE_ENV
    public static final int GL_NEAREST
    public static final int GL_LINEAR
    public static final int GL_NEAREST_MIPMAP_NEAREST
    public static final int GL_LINEAR_MIPMAP_NEAREST
    public static final int GL_NEAREST_MIPMAP_LINEAR
    public static final int GL_LINEAR_MIPMAP_LINEAR
    public static final int GL_TEXTURE_MAG_FILTER
    public static final int GL_TEXTURE_MIN_FILTER
    public static final int GL_TEXTURE_WRAP_S
    public static final int GL_TEXTURE_WRAP_T
    public static final int GL_TEXTURE0
    public static final int GL_TEXTURE1
    public static final int GL_TEXTURE2
    public static final int GL_TEXTURE3
    public static final int GL_TEXTURE4
    public static final int GL_TEXTURE5
    public static final int GL_TEXTURE6
    public static final int GL_TEXTURE7
    public static final int GL_TEXTURE8
    public static final int GL_TEXTURE9
    public static final int GL_TEXTURE10
    public static final int GL_TEXTURE11
    public static final int GL_TEXTURE12
    public static final int GL_TEXTURE13
    public static final int GL_TEXTURE14
    public static final int GL_TEXTURE15
    public static final int GL_TEXTURE16
    public static final int GL_TEXTURE17
    public static final int GL_TEXTURE18
    public static final int GL_TEXTURE19
    public static final int GL_TEXTURE20
    public static final int GL_TEXTURE21
    public static final int GL_TEXTURE22
    public static final int GL_TEXTURE23
    public static final int GL_TEXTURE24
    public static final int GL_TEXTURE25
    public static final int GL_TEXTURE26
    public static final int GL_TEXTURE27
    public static final int GL_TEXTURE28
    public static final int GL_TEXTURE29
    public static final int GL_TEXTURE30
    public static final int GL_TEXTURE31
    public static final int GL_REPEAT
    public static final int GL_CLAMP_TO_EDGE
    public static final int GL_PALETTE4_RGB8_OES
    public static final int GL_PALETTE4_RGBA8_OES
    public static final int GL_PALETTE4_R5_G6_B5_OES
    public static final int GL_PALETTE4_RGBA4_OES
    public static final int GL_PALETTE4_RGB5_A1_OES
    public static final int GL_PALETTE8_RGB8_OES
    public static final int GL_PALETTE8_RGBA8_OES
    public static final int GL_PALETTE8_R5_G6_B5_OES
    public static final int GL_PALETTE8_RGBA4_OES
    public static final int GL_PALETTE8_RGB5_A1_OES
    public static final int GL_LIGHT0
    public static final int GL_LIGHT1
    public static final int GL_LIGHT2
    public static final int GL_LIGHT3
    public static final int GL_LIGHT4
    public static final int GL_LIGHT5
    public static final int GL_LIGHT6
    public static final int GL_LIGHT7
    public static final int GL_POINT
    public static final int GL_LINE
    public static final int GL_FILL
    public abstract void glAlphaFunc(int,float)
    public abstract void glColor4f(float,float,float,float)
    public abstract void glDeleteTextures(int,int[],int)
    public abstract void glFogf(int,float)
    public abstract void glFogfv(int,float[],int)
    public abstract void glFogfv(int,java.nio.FloatBuffer)
    public abstract void glFrustumf(float,float,float,float,float,float)
    public abstract void glGenTextures(int,int[],int)
    public abstract void glGetIntegerv(int,int[],int)
    public abstract void glLightModelf(int,float)
    public abstract void glLightModelfv(int,float[],int)
    public abstract void glLightModelfv(int,java.nio.FloatBuffer)
    public abstract void glLightf(int,int,float)
    public abstract void glLightfv(int,int,float[],int)
    public abstract void glLightfv(int,int,java.nio.FloatBuffer)
    public abstract void glLoadMatrixf(java.nio.FloatBuffer)
    public abstract void glLogicOp(int)
    public abstract void glMaterialf(int,int,float)
    public abstract void glMaterialfv(int,int,float[],int)
    public abstract void glMaterialfv(int,int,java.nio.FloatBuffer)
    public abstract void glMultMatrixf(float[],int)
    public abstract void glMultMatrixf(java.nio.FloatBuffer)
    public abstract void glMultiTexCoord4f(int,float,float,float,float)
    public abstract void glNormal3f(float,float,float)
    public abstract void glOrthof(float,float,float,float,float,float)
    public abstract void glPointSize(float)
    public abstract void glPopMatrix()
    public abstract void glPushMatrix()
    public abstract void glRotatef(float,float,float,float)
    public abstract void glSampleCoverage(float,boolean)
    public abstract void glScalef(float,float,float)
    public abstract void glShadeModel(int)
    public abstract void glTexEnvf(int,int,float)
    public abstract void glTexEnvfv(int,int,float[],int)
    public abstract void glTexEnvfv(int,int,java.nio.FloatBuffer)
    public abstract void glTranslatef(float,float,float)
    public abstract void glPolygonMode(int,int)
com.badlogic.gdx.graphics.GL11:
    public static final int GL_OES_VERSION_1_0
    public static final int GL_MAX_ELEMENTS_VERTICES
    public static final int GL_MAX_ELEMENTS_INDICES
    public static final int GL_POLYGON_SMOOTH_HINT
    public static final int GL_VERSION_ES_CM_1_0
    public static final int GL_VERSION_ES_CL_1_0
    public static final int GL_VERSION_ES_CM_1_1
    public static final int GL_VERSION_ES_CL_1_1
    public static final int GL_CLIP_PLANE0
    public static final int GL_CLIP_PLANE1
    public static final int GL_CLIP_PLANE2
    public static final int GL_CLIP_PLANE3
    public static final int GL_CLIP_PLANE4
    public static final int GL_CLIP_PLANE5
    public static final int GL_CURRENT_COLOR
    public static final int GL_CURRENT_NORMAL
    public static final int GL_CURRENT_TEXTURE_COORDS
    public static final int GL_POINT_SIZE
    public static final int GL_POINT_SIZE_MIN
    public static final int GL_POINT_SIZE_MAX
    public static final int GL_POINT_FADE_THRESHOLD_SIZE
    public static final int GL_POINT_DISTANCE_ATTENUATION
    public static final int GL_LINE_WIDTH
    public static final int GL_CULL_FACE_MODE
    public static final int GL_FRONT_FACE
    public static final int GL_SHADE_MODEL
    public static final int GL_DEPTH_RANGE
    public static final int GL_DEPTH_WRITEMASK
    public static final int GL_DEPTH_CLEAR_VALUE
    public static final int GL_DEPTH_FUNC
    public static final int GL_STENCIL_CLEAR_VALUE
    public static final int GL_STENCIL_FUNC
    public static final int GL_STENCIL_VALUE_MASK
    public static final int GL_STENCIL_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_PASS
    public static final int GL_STENCIL_REF
    public static final int GL_STENCIL_WRITEMASK
    public static final int GL_MATRIX_MODE
    public static final int GL_VIEWPORT
    public static final int GL_MODELVIEW_STACK_DEPTH
    public static final int GL_PROJECTION_STACK_DEPTH
    public static final int GL_TEXTURE_STACK_DEPTH
    public static final int GL_MODELVIEW_MATRIX
    public static final int GL_PROJECTION_MATRIX
    public static final int GL_TEXTURE_MATRIX
    public static final int GL_ALPHA_TEST_FUNC
    public static final int GL_ALPHA_TEST_REF
    public static final int GL_BLEND_DST
    public static final int GL_BLEND_SRC
    public static final int GL_LOGIC_OP_MODE
    public static final int GL_SCISSOR_BOX
    public static final int GL_COLOR_CLEAR_VALUE
    public static final int GL_COLOR_WRITEMASK
    public static final int GL_MAX_CLIP_PLANES
    public static final int GL_POLYGON_OFFSET_UNITS
    public static final int GL_POLYGON_OFFSET_FACTOR
    public static final int GL_TEXTURE_BINDING_2D
    public static final int GL_VERTEX_ARRAY_SIZE
    public static final int GL_VERTEX_ARRAY_TYPE
    public static final int GL_VERTEX_ARRAY_STRIDE
    public static final int GL_NORMAL_ARRAY_TYPE
    public static final int GL_NORMAL_ARRAY_STRIDE
    public static final int GL_COLOR_ARRAY_SIZE
    public static final int GL_COLOR_ARRAY_TYPE
    public static final int GL_COLOR_ARRAY_STRIDE
    public static final int GL_TEXTURE_COORD_ARRAY_SIZE
    public static final int GL_TEXTURE_COORD_ARRAY_TYPE
    public static final int GL_TEXTURE_COORD_ARRAY_STRIDE
    public static final int GL_VERTEX_ARRAY_POINTER
    public static final int GL_NORMAL_ARRAY_POINTER
    public static final int GL_COLOR_ARRAY_POINTER
    public static final int GL_TEXTURE_COORD_ARRAY_POINTER
    public static final int GL_SAMPLE_BUFFERS
    public static final int GL_SAMPLES
    public static final int GL_SAMPLE_COVERAGE_VALUE
    public static final int GL_SAMPLE_COVERAGE_INVERT
    public static final int GL_GENERATE_MIPMAP_HINT
    public static final int GL_GENERATE_MIPMAP
    public static final int GL_ACTIVE_TEXTURE
    public static final int GL_CLIENT_ACTIVE_TEXTURE
    public static final int GL_ARRAY_BUFFER
    public static final int GL_ELEMENT_ARRAY_BUFFER
    public static final int GL_ARRAY_BUFFER_BINDING
    public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING
    public static final int GL_VERTEX_ARRAY_BUFFER_BINDING
    public static final int GL_NORMAL_ARRAY_BUFFER_BINDING
    public static final int GL_COLOR_ARRAY_BUFFER_BINDING
    public static final int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
    public static final int GL_STATIC_DRAW
    public static final int GL_DYNAMIC_DRAW
    public static final int GL_BUFFER_SIZE
    public static final int GL_BUFFER_USAGE
    public static final int GL_SUBTRACT
    public static final int GL_COMBINE
    public static final int GL_COMBINE_RGB
    public static final int GL_COMBINE_ALPHA
    public static final int GL_RGB_SCALE
    public static final int GL_ADD_SIGNED
    public static final int GL_INTERPOLATE
    public static final int GL_CONSTANT
    public static final int GL_PRIMARY_COLOR
    public static final int GL_PREVIOUS
    public static final int GL_OPERAND0_RGB
    public static final int GL_OPERAND1_RGB
    public static final int GL_OPERAND2_RGB
    public static final int GL_OPERAND0_ALPHA
    public static final int GL_OPERAND1_ALPHA
    public static final int GL_OPERAND2_ALPHA
    public static final int GL_ALPHA_SCALE
    public static final int GL_SRC0_RGB
    public static final int GL_SRC1_RGB
    public static final int GL_SRC2_RGB
    public static final int GL_SRC0_ALPHA
    public static final int GL_SRC1_ALPHA
    public static final int GL_SRC2_ALPHA
    public static final int GL_DOT3_RGB
    public static final int GL_DOT3_RGBA
    public static final int GL_POINT_SIZE_ARRAY_OES
    public static final int GL_POINT_SIZE_ARRAY_TYPE_OES
    public static final int GL_POINT_SIZE_ARRAY_STRIDE_OES
    public static final int GL_POINT_SIZE_ARRAY_POINTER_OES
    public static final int GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES
    public static final int GL_POINT_SPRITE_OES
    public static final int GL_COORD_REPLACE_OES
    public static final int GL_OES_point_size_array
    public static final int GL_OES_point_sprite
    public abstract void glClipPlanef(int,float[],int)
    public abstract void glClipPlanef(int,java.nio.FloatBuffer)
    public abstract void glGetClipPlanef(int,float[],int)
    public abstract void glGetClipPlanef(int,java.nio.FloatBuffer)
    public abstract void glGetFloatv(int,float[],int)
    public abstract void glGetFloatv(int,java.nio.FloatBuffer)
    public abstract void glGetLightfv(int,int,float[],int)
    public abstract void glGetLightfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetMaterialfv(int,int,float[],int)
    public abstract void glGetMaterialfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetTexParameterfv(int,int,float[],int)
    public abstract void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glPointParameterf(int,float)
    public abstract void glPointParameterfv(int,float[],int)
    public abstract void glPointParameterfv(int,java.nio.FloatBuffer)
    public abstract void glTexParameterfv(int,int,float[],int)
    public abstract void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glColor4ub(byte,byte,byte,byte)
    public abstract void glDeleteBuffers(int,int[],int)
    public abstract void glGetBooleanv(int,boolean[],int)
    public abstract void glGetBooleanv(int,java.nio.IntBuffer)
    public abstract void glGetBufferParameteriv(int,int,int[],int)
    public abstract void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGenBuffers(int,int[],int)
    public abstract void glGetPointerv(int,java.nio.Buffer[])
    public abstract void glGetTexEnviv(int,int,int[],int)
    public abstract void glGetTexEnviv(int,int,java.nio.IntBuffer)
    public abstract void glGetTexParameteriv(int,int,int[],int)
    public abstract void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract boolean glIsBuffer(int)
    public abstract boolean glIsEnabled(int)
    public abstract boolean glIsTexture(int)
    public abstract void glTexEnvi(int,int,int)
    public abstract void glTexEnviv(int,int,int[],int)
    public abstract void glTexEnviv(int,int,java.nio.IntBuffer)
    public abstract void glTexParameteri(int,int,int)
    public abstract void glTexParameteriv(int,int,int[],int)
    public abstract void glTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glPointSizePointerOES(int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20:
    public static final int GL_ES_VERSION_2_0
    public static final int GL_DEPTH_BUFFER_BIT
    public static final int GL_STENCIL_BUFFER_BIT
    public static final int GL_COLOR_BUFFER_BIT
    public static final int GL_FALSE
    public static final int GL_TRUE
    public static final int GL_POINTS
    public static final int GL_LINES
    public static final int GL_LINE_LOOP
    public static final int GL_LINE_STRIP
    public static final int GL_TRIANGLES
    public static final int GL_TRIANGLE_STRIP
    public static final int GL_TRIANGLE_FAN
    public static final int GL_ZERO
    public static final int GL_ONE
    public static final int GL_SRC_COLOR
    public static final int GL_ONE_MINUS_SRC_COLOR
    public static final int GL_SRC_ALPHA
    public static final int GL_ONE_MINUS_SRC_ALPHA
    public static final int GL_DST_ALPHA
    public static final int GL_ONE_MINUS_DST_ALPHA
    public static final int GL_DST_COLOR
    public static final int GL_ONE_MINUS_DST_COLOR
    public static final int GL_SRC_ALPHA_SATURATE
    public static final int GL_FUNC_ADD
    public static final int GL_BLEND_EQUATION
    public static final int GL_BLEND_EQUATION_RGB
    public static final int GL_BLEND_EQUATION_ALPHA
    public static final int GL_FUNC_SUBTRACT
    public static final int GL_FUNC_REVERSE_SUBTRACT
    public static final int GL_BLEND_DST_RGB
    public static final int GL_BLEND_SRC_RGB
    public static final int GL_BLEND_DST_ALPHA
    public static final int GL_BLEND_SRC_ALPHA
    public static final int GL_CONSTANT_COLOR
    public static final int GL_ONE_MINUS_CONSTANT_COLOR
    public static final int GL_CONSTANT_ALPHA
    public static final int GL_ONE_MINUS_CONSTANT_ALPHA
    public static final int GL_BLEND_COLOR
    public static final int GL_ARRAY_BUFFER
    public static final int GL_ELEMENT_ARRAY_BUFFER
    public static final int GL_ARRAY_BUFFER_BINDING
    public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING
    public static final int GL_STREAM_DRAW
    public static final int GL_STATIC_DRAW
    public static final int GL_DYNAMIC_DRAW
    public static final int GL_BUFFER_SIZE
    public static final int GL_BUFFER_USAGE
    public static final int GL_CURRENT_VERTEX_ATTRIB
    public static final int GL_FRONT
    public static final int GL_BACK
    public static final int GL_FRONT_AND_BACK
    public static final int GL_TEXTURE_2D
    public static final int GL_CULL_FACE
    public static final int GL_BLEND
    public static final int GL_DITHER
    public static final int GL_STENCIL_TEST
    public static final int GL_DEPTH_TEST
    public static final int GL_SCISSOR_TEST
    public static final int GL_POLYGON_OFFSET_FILL
    public static final int GL_SAMPLE_ALPHA_TO_COVERAGE
    public static final int GL_SAMPLE_COVERAGE
    public static final int GL_NO_ERROR
    public static final int GL_INVALID_ENUM
    public static final int GL_INVALID_VALUE
    public static final int GL_INVALID_OPERATION
    public static final int GL_OUT_OF_MEMORY
    public static final int GL_CW
    public static final int GL_CCW
    public static final int GL_LINE_WIDTH
    public static final int GL_ALIASED_POINT_SIZE_RANGE
    public static final int GL_ALIASED_LINE_WIDTH_RANGE
    public static final int GL_CULL_FACE_MODE
    public static final int GL_FRONT_FACE
    public static final int GL_DEPTH_RANGE
    public static final int GL_DEPTH_WRITEMASK
    public static final int GL_DEPTH_CLEAR_VALUE
    public static final int GL_DEPTH_FUNC
    public static final int GL_STENCIL_CLEAR_VALUE
    public static final int GL_STENCIL_FUNC
    public static final int GL_STENCIL_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_PASS
    public static final int GL_STENCIL_REF
    public static final int GL_STENCIL_VALUE_MASK
    public static final int GL_STENCIL_WRITEMASK
    public static final int GL_STENCIL_BACK_FUNC
    public static final int GL_STENCIL_BACK_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_PASS
    public static final int GL_STENCIL_BACK_REF
    public static final int GL_STENCIL_BACK_VALUE_MASK
    public static final int GL_STENCIL_BACK_WRITEMASK
    public static final int GL_VIEWPORT
    public static final int GL_SCISSOR_BOX
    public static final int GL_COLOR_CLEAR_VALUE
    public static final int GL_COLOR_WRITEMASK
    public static final int GL_UNPACK_ALIGNMENT
    public static final int GL_PACK_ALIGNMENT
    public static final int GL_MAX_TEXTURE_SIZE
    public static final int GL_MAX_TEXTURE_UNITS
    public static final int GL_MAX_VIEWPORT_DIMS
    public static final int GL_SUBPIXEL_BITS
    public static final int GL_RED_BITS
    public static final int GL_GREEN_BITS
    public static final int GL_BLUE_BITS
    public static final int GL_ALPHA_BITS
    public static final int GL_DEPTH_BITS
    public static final int GL_STENCIL_BITS
    public static final int GL_POLYGON_OFFSET_UNITS
    public static final int GL_POLYGON_OFFSET_FACTOR
    public static final int GL_TEXTURE_BINDING_2D
    public static final int GL_SAMPLE_BUFFERS
    public static final int GL_SAMPLES
    public static final int GL_SAMPLE_COVERAGE_VALUE
    public static final int GL_SAMPLE_COVERAGE_INVERT
    public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_DONT_CARE
    public static final int GL_FASTEST
    public static final int GL_NICEST
    public static final int GL_GENERATE_MIPMAP_HINT
    public static final int GL_BYTE
    public static final int GL_UNSIGNED_BYTE
    public static final int GL_SHORT
    public static final int GL_UNSIGNED_SHORT
    public static final int GL_INT
    public static final int GL_UNSIGNED_INT
    public static final int GL_FLOAT
    public static final int GL_FIXED
    public static final int GL_DEPTH_COMPONENT
    public static final int GL_ALPHA
    public static final int GL_RGB
    public static final int GL_RGBA
    public static final int GL_LUMINANCE
    public static final int GL_LUMINANCE_ALPHA
    public static final int GL_UNSIGNED_SHORT_4_4_4_4
    public static final int GL_UNSIGNED_SHORT_5_5_5_1
    public static final int GL_UNSIGNED_SHORT_5_6_5
    public static final int GL_FRAGMENT_SHADER
    public static final int GL_VERTEX_SHADER
    public static final int GL_MAX_VERTEX_ATTRIBS
    public static final int GL_MAX_VERTEX_UNIFORM_VECTORS
    public static final int GL_MAX_VARYING_VECTORS
    public static final int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_FRAGMENT_UNIFORM_VECTORS
    public static final int GL_SHADER_TYPE
    public static final int GL_DELETE_STATUS
    public static final int GL_LINK_STATUS
    public static final int GL_VALIDATE_STATUS
    public static final int GL_ATTACHED_SHADERS
    public static final int GL_ACTIVE_UNIFORMS
    public static final int GL_ACTIVE_UNIFORM_MAX_LENGTH
    public static final int GL_ACTIVE_ATTRIBUTES
    public static final int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
    public static final int GL_SHADING_LANGUAGE_VERSION
    public static final int GL_CURRENT_PROGRAM
    public static final int GL_NEVER
    public static final int GL_LESS
    public static final int GL_EQUAL
    public static final int GL_LEQUAL
    public static final int GL_GREATER
    public static final int GL_NOTEQUAL
    public static final int GL_GEQUAL
    public static final int GL_ALWAYS
    public static final int GL_KEEP
    public static final int GL_REPLACE
    public static final int GL_INCR
    public static final int GL_DECR
    public static final int GL_INVERT
    public static final int GL_INCR_WRAP
    public static final int GL_DECR_WRAP
    public static final int GL_VENDOR
    public static final int GL_RENDERER
    public static final int GL_VERSION
    public static final int GL_EXTENSIONS
    public static final int GL_NEAREST
    public static final int GL_LINEAR
    public static final int GL_NEAREST_MIPMAP_NEAREST
    public static final int GL_LINEAR_MIPMAP_NEAREST
    public static final int GL_NEAREST_MIPMAP_LINEAR
    public static final int GL_LINEAR_MIPMAP_LINEAR
    public static final int GL_TEXTURE_MAG_FILTER
    public static final int GL_TEXTURE_MIN_FILTER
    public static final int GL_TEXTURE_WRAP_S
    public static final int GL_TEXTURE_WRAP_T
    public static final int GL_TEXTURE
    public static final int GL_TEXTURE_CUBE_MAP
    public static final int GL_TEXTURE_BINDING_CUBE_MAP
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Z
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
    public static final int GL_MAX_CUBE_MAP_TEXTURE_SIZE
    public static final int GL_TEXTURE0
    public static final int GL_TEXTURE1
    public static final int GL_TEXTURE2
    public static final int GL_TEXTURE3
    public static final int GL_TEXTURE4
    public static final int GL_TEXTURE5
    public static final int GL_TEXTURE6
    public static final int GL_TEXTURE7
    public static final int GL_TEXTURE8
    public static final int GL_TEXTURE9
    public static final int GL_TEXTURE10
    public static final int GL_TEXTURE11
    public static final int GL_TEXTURE12
    public static final int GL_TEXTURE13
    public static final int GL_TEXTURE14
    public static final int GL_TEXTURE15
    public static final int GL_TEXTURE16
    public static final int GL_TEXTURE17
    public static final int GL_TEXTURE18
    public static final int GL_TEXTURE19
    public static final int GL_TEXTURE20
    public static final int GL_TEXTURE21
    public static final int GL_TEXTURE22
    public static final int GL_TEXTURE23
    public static final int GL_TEXTURE24
    public static final int GL_TEXTURE25
    public static final int GL_TEXTURE26
    public static final int GL_TEXTURE27
    public static final int GL_TEXTURE28
    public static final int GL_TEXTURE29
    public static final int GL_TEXTURE30
    public static final int GL_TEXTURE31
    public static final int GL_ACTIVE_TEXTURE
    public static final int GL_REPEAT
    public static final int GL_CLAMP_TO_EDGE
    public static final int GL_MIRRORED_REPEAT
    public static final int GL_FLOAT_VEC2
    public static final int GL_FLOAT_VEC3
    public static final int GL_FLOAT_VEC4
    public static final int GL_INT_VEC2
    public static final int GL_INT_VEC3
    public static final int GL_INT_VEC4
    public static final int GL_BOOL
    public static final int GL_BOOL_VEC2
    public static final int GL_BOOL_VEC3
    public static final int GL_BOOL_VEC4
    public static final int GL_FLOAT_MAT2
    public static final int GL_FLOAT_MAT3
    public static final int GL_FLOAT_MAT4
    public static final int GL_SAMPLER_2D
    public static final int GL_SAMPLER_CUBE
    public static final int GL_VERTEX_ATTRIB_ARRAY_ENABLED
    public static final int GL_VERTEX_ATTRIB_ARRAY_SIZE
    public static final int GL_VERTEX_ATTRIB_ARRAY_STRIDE
    public static final int GL_VERTEX_ATTRIB_ARRAY_TYPE
    public static final int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
    public static final int GL_VERTEX_ATTRIB_ARRAY_POINTER
    public static final int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
    public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE
    public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT
    public static final int GL_COMPILE_STATUS
    public static final int GL_INFO_LOG_LENGTH
    public static final int GL_SHADER_SOURCE_LENGTH
    public static final int GL_SHADER_COMPILER
    public static final int GL_SHADER_BINARY_FORMATS
    public static final int GL_NUM_SHADER_BINARY_FORMATS
    public static final int GL_LOW_FLOAT
    public static final int GL_MEDIUM_FLOAT
    public static final int GL_HIGH_FLOAT
    public static final int GL_LOW_INT
    public static final int GL_MEDIUM_INT
    public static final int GL_HIGH_INT
    public static final int GL_FRAMEBUFFER
    public static final int GL_RENDERBUFFER
    public static final int GL_RGBA4
    public static final int GL_RGB5_A1
    public static final int GL_RGB565
    public static final int GL_DEPTH_COMPONENT16
    public static final int GL_STENCIL_INDEX
    public static final int GL_STENCIL_INDEX8
    public static final int GL_RENDERBUFFER_WIDTH
    public static final int GL_RENDERBUFFER_HEIGHT
    public static final int GL_RENDERBUFFER_INTERNAL_FORMAT
    public static final int GL_RENDERBUFFER_RED_SIZE
    public static final int GL_RENDERBUFFER_GREEN_SIZE
    public static final int GL_RENDERBUFFER_BLUE_SIZE
    public static final int GL_RENDERBUFFER_ALPHA_SIZE
    public static final int GL_RENDERBUFFER_DEPTH_SIZE
    public static final int GL_RENDERBUFFER_STENCIL_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
    public static final int GL_COLOR_ATTACHMENT0
    public static final int GL_DEPTH_ATTACHMENT
    public static final int GL_STENCIL_ATTACHMENT
    public static final int GL_NONE
    public static final int GL_FRAMEBUFFER_COMPLETE
    public static final int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
    public static final int GL_FRAMEBUFFER_UNSUPPORTED
    public static final int GL_FRAMEBUFFER_BINDING
    public static final int GL_RENDERBUFFER_BINDING
    public static final int GL_MAX_RENDERBUFFER_SIZE
    public static final int GL_INVALID_FRAMEBUFFER_OPERATION
    public static final int GL_VERTEX_PROGRAM_POINT_SIZE
    public static final int GL_COVERAGE_BUFFER_BIT_NV
    public abstract void glBindAttribLocation(int,int,java.lang.String)
    public abstract void glBlendColor(float,float,float,float)
    public abstract void glBlendEquation(int)
    public abstract void glBlendEquationSeparate(int,int)
    public abstract void glBlendFuncSeparate(int,int,int,int)
    public abstract void glDetachShader(int,int)
    public abstract void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    public abstract void glGetBooleanv(int,java.nio.Buffer)
    public abstract void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetFloatv(int,java.nio.FloatBuffer)
    public abstract void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    public abstract void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    public abstract void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String)
    public abstract void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetUniformfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetUniformiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    public abstract boolean glIsBuffer(int)
    public abstract boolean glIsEnabled(int)
    public abstract boolean glIsFramebuffer(int)
    public abstract boolean glIsProgram(int)
    public abstract boolean glIsRenderbuffer(int)
    public abstract boolean glIsShader(int)
    public abstract boolean glIsTexture(int)
    public abstract void glReleaseShaderCompiler()
    public abstract void glSampleCoverage(float,boolean)
    public abstract void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    public abstract void glStencilFuncSeparate(int,int,int,int)
    public abstract void glStencilMaskSeparate(int,int)
    public abstract void glStencilOpSeparate(int,int,int,int)
    public abstract void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glTexParameteri(int,int,int)
    public abstract void glTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glUniform1f(int,float)
    public abstract void glUniform1fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform1iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform2f(int,float,float)
    public abstract void glUniform2fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform2i(int,int,int)
    public abstract void glUniform2iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform3f(int,float,float,float)
    public abstract void glUniform3fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform3i(int,int,int,int)
    public abstract void glUniform3iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform4f(int,float,float,float,float)
    public abstract void glUniform4fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform4i(int,int,int,int,int)
    public abstract void glUniform4iv(int,int,java.nio.IntBuffer)
    public abstract void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glValidateProgram(int)
    public abstract void glVertexAttrib1f(int,float)
    public abstract void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib2f(int,float,float)
    public abstract void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib3f(int,float,float,float)
    public abstract void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib4f(int,float,float,float,float)
    public abstract void glVertexAttrib4fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GLCommon:
    public static final int GL_GENERATE_MIPMAP
    public static final int GL_TEXTURE_MAX_ANISOTROPY_EXT
    public static final int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
    public abstract void glActiveTexture(int)
    public abstract void glClearDepthf(float)
    public abstract void glClearStencil(int)
    public abstract void glColorMask(boolean,boolean,boolean,boolean)
    public abstract void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCullFace(int)
    public abstract void glDepthFunc(int)
    public abstract void glDepthRangef(float,float)
    public abstract void glFinish()
    public abstract void glFlush()
    public abstract void glFrontFace(int)
    public abstract int glGetError()
    public abstract void glHint(int,int)
    public abstract void glLineWidth(float)
    public abstract void glPolygonOffset(float,float)
    public abstract void glStencilFunc(int,int,int)
    public abstract void glStencilMask(int)
    public abstract void glStencilOp(int,int,int)
    public abstract void glViewport(int,int,int,int)
com.badlogic.gdx.graphics.GLU:
    public abstract void gluLookAt(com.badlogic.gdx.graphics.GL10,float,float,float,float,float,float,float,float,float)
    public abstract void gluOrtho2D(com.badlogic.gdx.graphics.GL10,float,float,float,float)
    public abstract void gluPerspective(com.badlogic.gdx.graphics.GL10,float,float,float,float)
    public abstract boolean gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int)
    public abstract boolean gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int)
com.badlogic.gdx.graphics.Mesh:
    114:126:public Mesh(boolean,int,int,com.badlogic.gdx.graphics.VertexAttributes)
    163:187:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.math.Matrix4[])
    198:198:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[])
    211:252:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[],com.badlogic.gdx.math.Matrix4[])
    260:261:public void setVertices(float[])
    276:277:public void getVertices(float[])
    283:284:public void getVertices(int,float[])
    291:292:public void getVertices(int,int,float[])
    301:315:public void getVertices(int,int,float[],int)
    330:331:public void setIndices(short[],int,int)
    336:337:public void getIndices(short[])
    343:350:public void getIndices(short[],int)
    364:364:public int getMaxVertices()
    369:369:public int getMaxIndices()
    374:374:public int getVertexSize()
    438:439:public void render(int)
    591:593:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox()
    601:631:public void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    682:717:public void scale(float,float,float)
    725:726:public void transform(com.badlogic.gdx.math.Matrix4)
    730:742:protected void transform(com.badlogic.gdx.math.Matrix4,int,int)
    755:789:public static void transform(com.badlogic.gdx.math.Matrix4,float[],int,int,int,int,int)
    801:884:public com.badlogic.gdx.graphics.Mesh copy(boolean,boolean,int[])
    892:892:public com.badlogic.gdx.graphics.Mesh copy(boolean)
com.badlogic.gdx.graphics.OrthographicCamera:
    40:45:public OrthographicCamera(float,float)
    53:59:public OrthographicCamera(float,float,float)
    62:82:public void findDirectionForIsoView(float,float,int)
    85:96:private float calculateAngle(float)
    100:104:private com.badlogic.gdx.math.Vector3 calculateDirection(float)
    133:134:public void setToOrtho(boolean)
    142:150:public void setToOrtho(boolean,float,float)
    155:156:public void rotate(float)
    162:163:public void translate(float,float)
    168:169:public void translate(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.PerspectiveCamera
com.badlogic.gdx.graphics.Pixmap:
    123:129:public Pixmap(byte[],int,int)
    191:192:public void drawLine(int,int,int,int)
    202:203:public void drawRectangle(int,int,int,int)
    262:263:public void drawCircle(int,int,int)
    305:306:public void drawPixel(int,int)
com.badlogic.gdx.graphics.PixmapIO:
    35:152:public PixmapIO()
    41:42:public static void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$CIM:
    private static final int BUFFER_SIZE
    62:62:private PixmapIO$CIM()
    68:107:public static void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$PNG:
    static final int ZLIB_BLOCK_SIZE
    152:152:private PixmapIO$PNG()
com.badlogic.gdx.graphics.Texture:
    142:143:public Texture(com.badlogic.gdx.graphics.Pixmap,boolean)
    146:147:public Texture(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
    250:252:public void bind(int)
    300:300:public boolean isManaged()
    344:345:public static void setEnforcePotImages(boolean)
    424:425:public static void setAssetManager(com.badlogic.gdx.assets.AssetManager)
    440:440:public static int getNumManagedTextures()
com.badlogic.gdx.graphics.TextureDict
com.badlogic.gdx.graphics.TextureRef
com.badlogic.gdx.graphics.VertexAttribute:
    51:51:public static com.badlogic.gdx.graphics.VertexAttribute Position()
    55:55:public static com.badlogic.gdx.graphics.VertexAttribute TexCoords(int)
    59:59:public static com.badlogic.gdx.graphics.VertexAttribute Normal()
    63:63:public static com.badlogic.gdx.graphics.VertexAttribute Color()
    67:67:public static com.badlogic.gdx.graphics.VertexAttribute ColorUnpacked()
com.badlogic.gdx.graphics.VertexAttributes:
    59:61:public int getOffset(int)
    67:70:public com.badlogic.gdx.graphics.VertexAttribute findByUsage(int)
com.badlogic.gdx.graphics.VertexAttributes$Usage
com.badlogic.gdx.graphics.g2d.Animation
com.badlogic.gdx.graphics.g2d.BitmapFont:
    private static final int LOG2_PAGE_SIZE
    private static final int PAGE_SIZE
    private static final int PAGES
    81:83:public BitmapFont(boolean)
    223:226:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float)
    233:236:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    243:246:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float)
    254:257:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    269:269:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    470:471:public void setColor(float)
    507:508:public void setScale(float)
    512:513:public void scale(float)
    529:529:public float getLineHeight()
    534:534:public float getSpaceWidth()
    539:539:public float getXHeight()
    550:550:public float getAscent()
    572:585:public void setFixedWidthGlyphs(java.lang.CharSequence)
    594:596:public void setUseIntegerPositions(boolean)
    604:604:public com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData()
    611:611:public boolean ownsTexture()
    621:622:public void setOwnsTexture(boolean)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData:
    871:871:public com.badlogic.gdx.files.FileHandle getFontFile()
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds:
    675:677:public BitmapFont$TextBounds(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
com.badlogic.gdx.graphics.g2d.BitmapFontCache:
    89:94:public void setColor(float)
    118:122:public void setColor(com.badlogic.gdx.graphics.Color,int,int)
    279:285:public static synchronized void setComplexScriptLayout(java.lang.String,java.lang.String)
    293:294:public static void setFallbackFont(com.badlogic.gdx.graphics.g2d.BitmapFont)
    344:345:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float)
    351:352:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float,int,int)
    358:358:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float)
    391:391:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float)
    435:436:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float)
    451:451:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float)
    526:526:public float getX()
    531:531:public float getY()
    546:546:public boolean usesIntegerPositions()
    550:550:public float[] getVertices()
com.badlogic.gdx.graphics.g2d.FreeTypeComplexFontGenerator
com.badlogic.gdx.graphics.g2d.FreeTypeComplexFontGenerator$FreeTypeBitmapFontData
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    public static final int GDX2D_FORMAT_ALPHA
    public static final int GDX2D_FORMAT_LUMINANCE_ALPHA
    public static final int GDX2D_FORMAT_RGB888
    public static final int GDX2D_FORMAT_RGBA8888
    public static final int GDX2D_FORMAT_RGB565
    public static final int GDX2D_FORMAT_RGBA4444
    public static final int GDX2D_SCALE_NEAREST
    public static final int GDX2D_SCALE_LINEAR
    public static final int GDX2D_BLEND_NONE
    public static final int GDX2D_BLEND_SRC_OVER
    65:82:public Gdx2DPixmap(java.io.InputStream,int)
    94:100:public Gdx2DPixmap(java.nio.ByteBuffer,long[])
    119:120:public void drawLine(int,int,int,int,int)
    123:124:public void drawRect(int,int,int,int,int)
    127:128:public void drawCircle(int,int,int,int)
    149:151:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int)
    157:159:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int)
    217:231:public java.lang.String getFormatString()
    private static native void drawLine(long,int,int,int,int,int)
    private static native void drawRect(long,int,int,int,int,int)
    private static native void drawCircle(long,int,int,int,int)
com.badlogic.gdx.graphics.g2d.NinePatch:
    public static final int TOP_LEFT
    public static final int TOP_CENTER
    public static final int TOP_RIGHT
    public static final int MIDDLE_LEFT
    public static final int MIDDLE_CENTER
    public static final int MIDDLE_RIGHT
    public static final int BOTTOM_LEFT
    public static final int BOTTOM_CENTER
    public static final int BOTTOM_RIGHT
    53:54:public NinePatch(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    105:107:public NinePatch(com.badlogic.gdx.graphics.Texture,com.badlogic.gdx.graphics.Color)
    110:111:public NinePatch(com.badlogic.gdx.graphics.Texture)
    114:116:public NinePatch(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.graphics.Color)
    127:159:public varargs NinePatch(com.badlogic.gdx.graphics.g2d.TextureRegion[])
    162:163:public NinePatch(com.badlogic.gdx.graphics.g2d.NinePatch)
    321:322:public void setColor(com.badlogic.gdx.graphics.Color)
    325:325:public com.badlogic.gdx.graphics.Color getColor()
    333:334:public void setLeftWidth(float)
    341:342:public void setRightWidth(float)
    349:350:public void setTopHeight(float)
    357:358:public void setBottomHeight(float)
    361:361:public float getMiddleWidth()
    365:366:public void setMiddleWidth(float)
    369:369:public float getMiddleHeight()
    373:374:public void setMiddleHeight(float)
    398:399:public void setPadLeft(int)
    408:409:public void setPadRight(int)
    418:419:public void setPadTop(int)
    428:429:public void setPadBottom(int)
    432:432:public com.badlogic.gdx.graphics.Texture getTexture()
com.badlogic.gdx.graphics.g2d.ParticleEffect
com.badlogic.gdx.graphics.g2d.ParticleEffectPool
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect
com.badlogic.gdx.graphics.g2d.ParticleEmitter
com.badlogic.gdx.graphics.g2d.ParticleEmitter$1
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$1
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$ParticleBox2D
com.badlogic.gdx.graphics.g2d.PixmapPacker
com.badlogic.gdx.graphics.g2d.PixmapPacker$1
com.badlogic.gdx.graphics.g2d.PixmapPacker$2
com.badlogic.gdx.graphics.g2d.PixmapPacker$ManagedPixmapTextureData
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page
com.badlogic.gdx.graphics.g2d.PolygonRegion
com.badlogic.gdx.graphics.g2d.PolygonSprite
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch
com.badlogic.gdx.graphics.g2d.Sprite:
    static final int VERTEX_SIZE
    static final int SPRITE_SIZE
    private com.badlogic.gdx.math.Rectangle bounds
    56:57:public Sprite(com.badlogic.gdx.graphics.Texture)
    63:64:public Sprite(com.badlogic.gdx.graphics.Texture,int,int)
    69:76:public Sprite(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    90:95:public Sprite(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
    182:183:public void setPosition(float,float)
    189:190:public void setX(float)
    196:197:public void setY(float)
    202:211:public void translateX(float)
    216:225:public void translateY(float)
    269:274:public void setColor(float)
    284:286:public void setRotation(float)
    290:292:public void rotate(float)
    327:330:public void setScale(float)
    333:336:public void setScale(float,float)
    340:343:public void scale(float)
    420:448:public com.badlogic.gdx.math.Rectangle getBoundingRectangle()
    456:463:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    490:490:public float getRotation()
    494:494:public float getScaleX()
    498:498:public float getScaleY()
    532:535:public void setU(float)
    538:541:public void setV(float)
    544:547:public void setU2(float)
    550:553:public void setV2(float)
    577:598:public void scroll(float,float)
com.badlogic.gdx.graphics.g2d.SpriteBatch:
    public static final int X1
    public static final int Y1
    public static final int C1
    public static final int U1
    public static final int V1
    public static final int X2
    public static final int Y2
    public static final int C2
    public static final int U2
    public static final int V2
    public static final int X3
    public static final int Y3
    public static final int C3
    public static final int U3
    public static final int V3
    public static final int X4
    public static final int Y4
    public static final int C4
    public static final int U4
    public static final int V4
    148:149:public SpriteBatch(int,int)
    300:301:public void setColor(float)
    338:458:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean)
    477:525:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
    538:574:public void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
    901:1027:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean)
    1071:1074:public void disableBlending()
    1078:1081:public void enableBlending()
    1088:1091:public void setBlendFunction(int,int)
    1173:1188:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.SpriteCache:
    private boolean drawing
    132:133:public void setColor(com.badlogic.gdx.graphics.Color)
    137:139:public void setColor(float,float,float,float)
    144:145:public void setColor(float)
    148:154:public com.badlogic.gdx.graphics.Color getColor()
    170:179:public void beginCache(int)
    229:231:public void clear()
    253:301:public void add(com.badlogic.gdx.graphics.Texture,float,float)
    306:354:public void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,float,float,float,float,float)
    358:412:public void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
    418:483:public void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
    631:632:public void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)
    636:688:public void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float)
    695:818:public void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float)
    822:833:public void add(com.badlogic.gdx.graphics.g2d.Sprite)
    837:871:public void begin()
    875:889:public void end()
    893:918:public void draw(int)
    924:959:public void draw(int,int,int)
    968:968:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    972:974:public void setProjectionMatrix(com.badlogic.gdx.math.Matrix4)
    977:977:public com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    981:983:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    1039:1040:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.TextureAtlas:
    202:203:public TextureAtlas(java.lang.String)
    213:214:public TextureAtlas(com.badlogic.gdx.files.FileHandle,boolean)
    267:274:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.Texture,int,int,int,int)
    279:279:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion)
    301:307:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int)
    325:328:public com.badlogic.gdx.utils.Array createSprites()
    336:338:public com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String)
    346:352:public com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int)
    360:365:public com.badlogic.gdx.utils.Array createSprites(java.lang.String)
    369:378:private com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion)
    386:396:public com.badlogic.gdx.graphics.g2d.NinePatch createPatch(java.lang.String)
    401:401:public java.util.Set getTextures()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite:
    559:560:public void setPosition(float,float)
    664:664:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion getAtlasRegion()
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData:
    191:191:public com.badlogic.gdx.utils.Array getRegions()
com.badlogic.gdx.graphics.g2d.TextureRegion:
    56:59:public TextureRegion(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    75:77:public void setRegion(com.badlogic.gdx.graphics.Texture)
    115:116:public void setTexture(com.badlogic.gdx.graphics.Texture)
    123:125:public void setU(float)
    132:134:public void setV(float)
    141:143:public void setU2(float)
    150:152:public void setV2(float)
    159:160:public void setRegionX(int)
    167:168:public void setRegionY(int)
    176:177:public void setRegionWidth(int)
    185:186:public void setRegionHeight(int)
    202:202:public boolean isFlipX()
    206:206:public boolean isFlipY()
    214:224:public void scroll(float,float)
    234:251:public com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(int,int)
    263:264:public static com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Pointer
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap
com.badlogic.gdx.graphics.g2d.freetype.FreetypeBuild
com.badlogic.gdx.graphics.g2d.harfbuzz.ComplexScriptLayout:
    private static java.lang.String fontLanguage
    private static java.lang.String loadedLanguage
    private static java.lang.String fontFilePath
    6:6:public ComplexScriptLayout()
    private static synchronized native void jniInitialize(java.lang.String,java.lang.String)
    27:43:public static synchronized void setLanguage(java.lang.String,java.lang.String)
com.badlogic.gdx.graphics.g2d.tiled.SimpleTileAtlas:
    33:62:public SimpleTileAtlas(com.badlogic.gdx.graphics.g2d.tiled.TiledMap,com.badlogic.gdx.files.FileHandle)
    67:76:private static com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.tiled.TileAtlas:
    128:131:public void flipRegions(boolean,boolean)
com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer:
    private static final int FLAG_FLIP_X
    private static final int FLAG_FLIP_Y
    private static final int FLAG_ROTATE
    private static final int MASK_CLEAR
    private int initialRow
    private int initialCol
    private int currentRow
    private int currentCol
    private int lastRow
    private int lastCol
    private int currentLayer
    103:104:public TileMapRenderer(com.badlogic.gdx.graphics.g2d.tiled.TiledMap,com.badlogic.gdx.graphics.g2d.tiled.TileAtlas,int,int,com.badlogic.gdx.graphics.glutils.ShaderProgram)
    152:154:public TileMapRenderer(int[][][],com.badlogic.gdx.graphics.g2d.tiled.TileAtlas,int,int,float,float,com.badlogic.gdx.utils.IntArray,int,int)
    173:175:public TileMapRenderer(int[][][],com.badlogic.gdx.graphics.g2d.tiled.TileAtlas,int,int,float,float,com.badlogic.gdx.utils.IntArray,int,int,com.badlogic.gdx.graphics.glutils.ShaderProgram)
    348:349:public void render()
    354:355:public void render(float,float,float,float)
    360:361:public void render(com.badlogic.gdx.graphics.OrthographicCamera)
    370:374:public void render(com.badlogic.gdx.graphics.OrthographicCamera,int[])
    394:431:public void render(float,float,float,float,int[])
    434:444:private int getLayerWidthInBlocks(int,int)
    448:458:private int getLayerHeightInBlocks(int)
    462:462:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    466:466:public com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    472:472:public int getRow(int)
    478:478:public int getCol(int)
    484:484:public int getInitialRow()
    490:490:public int getInitialCol()
    496:496:public int getLastRow()
    502:502:public int getLastCol()
    506:506:public float getUnitsPerTileX()
    510:510:public float getUnitsPerTileY()
    514:514:public int getMapHeightUnits()
    518:518:public int getMapWidthUnits()
    522:526:private static int parseIntWithDefault(java.lang.String,int)
    537:537:public com.badlogic.gdx.graphics.g2d.tiled.TiledMap getMap()
    541:541:public com.badlogic.gdx.graphics.g2d.tiled.TileAtlas getAtlas()
com.badlogic.gdx.graphics.g2d.tiled.TileSet:
    32:40:protected TileSet(com.badlogic.gdx.graphics.g2d.tiled.TileSet)
com.badlogic.gdx.graphics.g2d.tiled.TiledLayer:
    35:36:public int getWidth()
    40:40:public int getHeight()
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader:
    32:32:public TiledLoader()
    37:37:public static com.badlogic.gdx.graphics.g2d.tiled.TiledMap createMap(java.lang.String)
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline:
    76:77:public TiledLoader$1$Polyline(com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1)
com.badlogic.gdx.graphics.g2d.tiled.TiledMap:
    63:69:public java.lang.String getTileProperty(int,java.lang.String)
com.badlogic.gdx.graphics.g3d.AnimatedModelInstance
com.badlogic.gdx.graphics.g3d.AnimatedModelNode
com.badlogic.gdx.graphics.g3d.ModelLoaderHints
com.badlogic.gdx.graphics.g3d.ModelRenderer
com.badlogic.gdx.graphics.g3d.StillModelInstance
com.badlogic.gdx.graphics.g3d.StillModelNode
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2
com.badlogic.gdx.graphics.g3d.decals.Decal
com.badlogic.gdx.graphics.g3d.decals.DecalBatch
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.GroupPlug
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator
com.badlogic.gdx.graphics.g3d.loaders.KeyframedModelLoader
com.badlogic.gdx.graphics.g3d.loaders.ModelLoader
com.badlogic.gdx.graphics.g3d.loaders.ModelLoaderRegistry
com.badlogic.gdx.graphics.g3d.loaders.SkeletonModelLoader
com.badlogic.gdx.graphics.g3d.loaders.StillModelLoader
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dConstants
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dKeyframedModelLoader
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dSkeletonModelLoader
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dStillModelLoader
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader$G3dtKeyframedModelLoader
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader$G3dtStillModelLoader
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.CountingDataInputStream
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.G3dExporter
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader$MD2LoaderHints
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader$VertexIndices
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Normals
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle
com.badlogic.gdx.graphics.g3d.loaders.wavefront.MtlLoader
com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader
com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader$Group
com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute
com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute$1
com.badlogic.gdx.graphics.g3d.materials.ColorAttribute
com.badlogic.gdx.graphics.g3d.materials.ColorAttribute$1
com.badlogic.gdx.graphics.g3d.materials.Material
com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute
com.badlogic.gdx.graphics.g3d.materials.TextureAttribute
com.badlogic.gdx.graphics.g3d.materials.TextureAttribute$1
com.badlogic.gdx.graphics.g3d.model.AnimatedModel
com.badlogic.gdx.graphics.g3d.model.Animation
com.badlogic.gdx.graphics.g3d.model.Model
com.badlogic.gdx.graphics.g3d.model.SubMesh
com.badlogic.gdx.graphics.g3d.model.keyframe.Keyframe
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh
com.badlogic.gdx.graphics.g3d.model.skeleton.Skeleton
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonKeyframe
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModelGpuSkinned
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh
com.badlogic.gdx.graphics.g3d.model.still.StillModel
com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh
com.badlogic.gdx.graphics.glutils.ETC1:
    35:42:public ETC1()
    147:150:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap)
    158:161:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap)
    public static native int getCompressedDataSize(int,int)
    public static native void formatHeader(java.nio.ByteBuffer,int,int,int)
    private static native java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int)
    private static native java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int)
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data:
    52:57:public ETC1$ETC1Data(int,int,java.nio.ByteBuffer,int)
    95:119:public void write(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.glutils.ETC1TextureData:
    38:39:public ETC1TextureData(com.badlogic.gdx.files.FileHandle)
    46:49:public ETC1TextureData(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,boolean)
com.badlogic.gdx.graphics.glutils.FileTextureData:
    128:128:public com.badlogic.gdx.files.FileHandle getFileHandle()
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer
com.badlogic.gdx.graphics.glutils.FloatTextureData
com.badlogic.gdx.graphics.glutils.FrameBuffer:
    92:100:public FrameBuffer(com.badlogic.gdx.graphics.Pixmap$Format,int,int,boolean)
    208:210:public void begin()
    214:216:public void end()
    219:223:private void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.FrameBuffer)
    255:255:public com.badlogic.gdx.graphics.Texture getColorBufferTexture()
    260:260:public int getHeight()
    265:265:public int getWidth()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer:
    public abstract void texCoord(float,float)
    public abstract void normal(float,float,float)
    public abstract void dispose()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10:
    136:140:public void normal(float,float,float)
    146:149:public void texCoord(float,float)
    216:217:public void vertex(com.badlogic.gdx.math.Vector3)
    221:221:public void dispose()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20:
    49:51:public ImmediateModeRenderer20(boolean,boolean,int)
    90:93:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    105:109:public void texCoord(float,float)
    112:116:public void normal(float,float,float)
    154:156:public void dispose()
com.badlogic.gdx.graphics.glutils.IndexBufferObject:
    84:93:public IndexBufferObject(int)
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData:
    84:93:public IndexBufferObjectSubData(int)
com.badlogic.gdx.graphics.glutils.MipMapGenerator:
    29:29:public MipMapGenerator()
    33:34:public static void setUseHardwareMipMap(boolean)
com.badlogic.gdx.graphics.glutils.ShaderProgram:
    public static final java.lang.String POSITION_ATTRIBUTE
    public static final java.lang.String NORMAL_ATTRIBUTE
    public static final java.lang.String COLOR_ATTRIBUTE
    public static final java.lang.String TEXCOORD_ATTRIBUTE
    public static final java.lang.String TANGENT_ATTRIBUTE
    public static final java.lang.String BINORMAL_ATTRIBUTE
    165:166:public ShaderProgram(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    302:305:public void setUniformi(int,int)
    314:318:public void setUniformi(java.lang.String,int,int)
    321:324:public void setUniformi(int,int,int)
    334:338:public void setUniformi(java.lang.String,int,int,int)
    341:344:public void setUniformi(int,int,int,int)
    355:359:public void setUniformi(java.lang.String,int,int,int,int)
    362:365:public void setUniformi(int,int,int,int,int)
    373:377:public void setUniformf(java.lang.String,float)
    380:383:public void setUniformf(int,float)
    392:396:public void setUniformf(java.lang.String,float,float)
    399:402:public void setUniformf(int,float,float)
    412:416:public void setUniformf(java.lang.String,float,float,float)
    419:422:public void setUniformf(int,float,float,float)
    433:437:public void setUniformf(java.lang.String,float,float,float,float)
    440:443:public void setUniformf(int,float,float,float,float)
    446:453:public void setUniform1fv(java.lang.String,float[],int,int)
    456:462:public void setUniform1fv(int,float[],int,int)
    465:472:public void setUniform2fv(java.lang.String,float[],int,int)
    475:481:public void setUniform2fv(int,float[],int,int)
    484:491:public void setUniform3fv(java.lang.String,float[],int,int)
    494:500:public void setUniform3fv(int,float[],int,int)
    503:510:public void setUniform4fv(java.lang.String,float[],int,int)
    513:519:public void setUniform4fv(int,float[],int,int)
    546:547:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4)
    550:555:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4,boolean)
    563:564:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3)
    573:580:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3,boolean)
    583:584:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3)
    587:593:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3,boolean)
    602:607:public void setUniformMatrix4fv(java.lang.String,java.nio.FloatBuffer,int,boolean)
    615:616:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2)
    619:620:public void setUniformf(int,com.badlogic.gdx.math.Vector2)
    628:629:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3)
    632:633:public void setUniformf(int,com.badlogic.gdx.math.Vector3)
    641:642:public void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color)
    645:646:public void setUniformf(int,com.badlogic.gdx.graphics.Color)
    667:670:public void setVertexAttribute(int,int,int,boolean,int,java.nio.Buffer)
    691:694:public void setVertexAttribute(int,int,int,boolean,int,int)
    733:736:public void disableVertexAttribute(int)
    750:753:public void enableVertexAttribute(int)
    807:810:public void setAttributef(java.lang.String,float,float,float,float)
    813:818:private void ensureBufferCapacity(int)
    864:864:public boolean hasAttribute(java.lang.String)
    870:874:public int getAttributeType(java.lang.String)
    880:884:public int getAttributeLocation(java.lang.String)
    890:890:public boolean hasUniform(java.lang.String)
    896:900:public int getUniformType(java.lang.String)
    906:910:public int getUniformLocation(java.lang.String)
    915:915:public java.lang.String[] getAttributes()
    920:920:public java.lang.String[] getUniforms()
com.badlogic.gdx.graphics.glutils.ShapeRenderer:
    139:140:public void setColor(float,float,float,float)
    150:152:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    184:186:public void scale(float,float,float)
    212:217:public void point(float,float,float)
    227:234:public void line(float,float,float,float,float,float)
    254:263:public void curve(float,float,float,float,float,float,float,float)
    267:315:public void curve(float,float,float,float,float,float,float,float,int)
    381:397:public void filledRect(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
    406:470:public void box(float,float,float,float,float,float)
    474:475:public void circle(float,float,float)
    478:504:public void circle(float,float,float,int)
    546:563:public void triangle(float,float,float,float,float,float)
    578:579:public void cone(float,float,float,float,float)
    582:610:public void cone(float,float,float,float,float,int)
    615:616:public void filledCone(float,float,float,float,float)
    619:656:public void filledCone(float,float,float,float,float,int)
    679:682:public void flush()
    686:686:public com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType getCurrentType()
    690:691:public void dispose()
com.badlogic.gdx.graphics.glutils.VertexArray:
    88:88:public int getNumMaxVertices()
com.badlogic.gdx.graphics.glutils.VertexBufferObject:
    115:115:public int getNumMaxVertices()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData:
    123:123:public int getNumMaxVertices()
    297:299:public void invalidate()
    326:326:public int getBufferHandle()
com.badlogic.gdx.graphics.glutils.VertexData:
    public abstract int getNumMaxVertices()
com.badlogic.gdx.input.GestureDetector:
    216:216:public boolean isLongPressed()
    222:223:public boolean isLongPressed(float)
    231:234:public void reset()
    242:243:public void invalidateTapSquare()
    246:247:public void setTapSquareSize(int)
    251:252:public void setTapCountInterval(float)
    255:256:public void setLongPressSeconds(float)
    259:260:public void setMaxFlingDelay(long)
com.badlogic.gdx.input.GestureDetector$VelocityTracker:
    418:424:private float getSum(float[],int)
com.badlogic.gdx.input.RemoteInput
com.badlogic.gdx.input.RemoteInput$EventTrigger
com.badlogic.gdx.input.RemoteInput$KeyEvent
com.badlogic.gdx.input.RemoteInput$TouchEvent
com.badlogic.gdx.input.RemoteSender
com.badlogic.gdx.math.CatmullRomSpline
com.badlogic.gdx.math.Circle
com.badlogic.gdx.math.EarClippingTriangulator
com.badlogic.gdx.math.FloatCounter
com.badlogic.gdx.math.Frustum:
    79:83:public boolean pointInFrustum(com.badlogic.gdx.math.Vector3)
    92:95:public boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float)
    104:107:public boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float)
    115:127:public boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.Interpolation$Bounce:
    240:241:public Interpolation$Bounce(float[],float[])
com.badlogic.gdx.math.Interpolation$BounceIn:
    330:331:public Interpolation$BounceIn(float[],float[])
com.badlogic.gdx.math.Interpolation$BounceOut:
    262:267:public Interpolation$BounceOut(float[],float[])
com.badlogic.gdx.math.Intersector
com.badlogic.gdx.math.Intersector$MinimumTranslationVector
com.badlogic.gdx.math.Intersector$SplitTriangle
com.badlogic.gdx.math.MathUtils:
    public static final float nanoToSec
    public static final float PI
    private static final int SIN_BITS
    private static final int SIN_MASK
    private static final int SIN_COUNT
    private static final float radFull
    private static final float degFull
    private static final float radToIndex
    private static final float degToIndex
    public static final float radiansToDegrees
    public static final float radDeg
    public static final float degreesToRadians
    public static final float degRad
    private static final int ATAN2_BITS
    private static final int ATAN2_BITS2
    private static final int ATAN2_MASK
    private static final int ATAN2_COUNT
    private static final int BIG_ENOUGH_INT
    private static final double BIG_ENOUGH_FLOOR
    private static final double CEIL
    private static final double BIG_ENOUGH_ROUND
    27:97:public MathUtils()
    159:159:public static final float random(float)
    188:190:public static int clamp(int,int,int)
    194:196:public static short clamp(short,short,short)
    217:217:public static int floor(float)
    223:223:public static int floorPositive(float)
    235:235:public static int ceilPositive(float)
    241:241:public static int round(float)
    246:246:public static int roundPositive(float)
com.badlogic.gdx.math.MathUtils$Atan2:
    97:97:private MathUtils$Atan2()
com.badlogic.gdx.math.MathUtils$Cos:
    58:58:private MathUtils$Cos()
com.badlogic.gdx.math.MathUtils$Sin:
    48:48:private MathUtils$Sin()
com.badlogic.gdx.math.Matrix3:
    private static final long serialVersionUID
    private static final float DEGREE_TO_RAD
    public static final int M00
    public static final int M01
    public static final int M02
    public static final int M10
    public static final int M11
    public static final int M12
    public static final int M20
    public static final int M21
    public static final int M22
    45:47:public Matrix3(com.badlogic.gdx.math.Matrix3)
    101:117:public com.badlogic.gdx.math.Matrix3 setToRotation(float)
    144:156:public com.badlogic.gdx.math.Matrix3 setToTranslation(com.badlogic.gdx.math.Vector2)
    165:174:public com.badlogic.gdx.math.Matrix3 setToScaling(float,float)
    184:184:public float det()
    191:216:public com.badlogic.gdx.math.Matrix3 inv()
    231:240:public com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix4)
    247:249:public com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector2)
    266:268:public com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector3)
    297:309:public com.badlogic.gdx.math.Matrix3 translate(com.badlogic.gdx.math.Vector2)
    361:371:public com.badlogic.gdx.math.Matrix3 scale(com.badlogic.gdx.math.Vector2)
    377:377:public float[] getValues()
    384:386:public com.badlogic.gdx.math.Matrix3 scl(float)
    393:395:public com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector2)
    402:404:public com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector3)
    411:423:public com.badlogic.gdx.math.Matrix3 transpose()
com.badlogic.gdx.math.Matrix4:
    private static final long serialVersionUID
    public static final int M00
    public static final int M01
    public static final int M02
    public static final int M03
    public static final int M10
    public static final int M11
    public static final int M12
    public static final int M13
    public static final int M20
    public static final int M21
    public static final int M22
    public static final int M23
    public static final int M30
    public static final int M31
    public static final int M32
    public static final int M33
    62:64:public Matrix4(com.badlogic.gdx.math.Matrix4)
    69:71:public Matrix4(float[])
    75:77:public Matrix4(com.badlogic.gdx.math.Quaternion)
    104:130:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Quaternion)
    141:157:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    162:162:public com.badlogic.gdx.math.Matrix4 cpy()
    170:173:public com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3)
    183:186:public com.badlogic.gdx.math.Matrix4 trn(float,float,float)
    191:191:public float[] getValues()
    211:227:public com.badlogic.gdx.math.Matrix4 tra()
    258:317:public com.badlogic.gdx.math.Matrix4 inv()
    322:322:public float det()
    341:362:public com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float)
    389:390:public com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float)
    455:459:public com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float)
    469:476:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    491:498:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float)
    509:513:public com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float)
    524:528:public com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float)
    536:537:public com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    549:550:public com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float,float,float)
    561:562:public com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float)
    570:574:public com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3)
    584:588:public com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float)
    642:647:public com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    661:663:public void lerp(com.badlogic.gdx.math.Matrix4,float)
    688:691:public com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3)
    695:698:public com.badlogic.gdx.math.Matrix4 scl(float,float,float)
    702:705:public com.badlogic.gdx.math.Matrix4 scl(float)
    709:712:public void getTranslation(com.badlogic.gdx.math.Vector3)
    715:716:public void getRotation(com.badlogic.gdx.math.Quaternion)
    720:723:public com.badlogic.gdx.math.Matrix4 toNormalMatrix()
    public static native void mulVec(float[],float[])
    public static native void mulVec(float[],float[],int,int,int)
    public static native void prj(float[],float[])
    public static native void rot(float[],float[])
    public static native void rot(float[],float[],int,int,int)
    public static native float det(float[])
    986:986:public com.badlogic.gdx.math.Matrix4 translate(com.badlogic.gdx.math.Vector3)
    1024:1026:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,float)
    1060:1078:public com.badlogic.gdx.math.Matrix4 scale(float,float,float)
com.badlogic.gdx.math.Plane:
    private static final long serialVersionUID
    51:54:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    62:64:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    87:89:public void set(float,float,float,float)
    96:96:public float distance(com.badlogic.gdx.math.Vector3)
    105:112:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3)
    123:130:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)
    139:140:public boolean isFrontFacing(com.badlogic.gdx.math.Vector3)
    145:145:public com.badlogic.gdx.math.Vector3 getNormal()
    150:150:public float getD()
    158:160:public void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    163:165:public void set(float,float,float,float,float,float)
    171:173:public void set(com.badlogic.gdx.math.Plane)
com.badlogic.gdx.math.Plane$PlaneSide
com.badlogic.gdx.math.Polygon
com.badlogic.gdx.math.Quaternion:
    private static final long serialVersionUID
    private static final float NORMALIZATION_TOLERANCE
    52:54:public Quaternion(com.badlogic.gdx.math.Quaternion)
    60:62:public Quaternion(com.badlogic.gdx.math.Vector3,float)
    82:82:public com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion)
    99:99:public com.badlogic.gdx.math.Quaternion cpy()
    104:104:public float len()
    118:139:public com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float)
    165:168:public com.badlogic.gdx.math.Quaternion conjugate()
    176:183:public void transform(com.badlogic.gdx.math.Vector3)
    190:198:public com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion)
    206:214:public com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion)
    265:265:public com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float)
    276:279:public com.badlogic.gdx.math.Quaternion setFromAxis(float,float,float,float)
    289:289:public com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4)
    315:352:public com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float)
    360:361:public com.badlogic.gdx.math.Quaternion setFromCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    373:374:public com.badlogic.gdx.math.Quaternion setFromCross(float,float,float,float,float,float)
    383:421:public com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float)
    440:440:public float dot(com.badlogic.gdx.math.Quaternion)
    447:451:public com.badlogic.gdx.math.Quaternion mul(float)
com.badlogic.gdx.math.Rectangle:
    private static final long serialVersionUID
    50:55:public Rectangle(com.badlogic.gdx.math.Rectangle)
    59:59:public float getX()
    65:66:public void setX(float)
    70:70:public float getY()
    76:77:public void setY(float)
    81:81:public float getWidth()
    87:88:public void setWidth(float)
    92:92:public float getHeight()
    98:99:public void setHeight(float)
    104:110:public boolean contains(com.badlogic.gdx.math.Rectangle)
    117:117:public boolean overlaps(com.badlogic.gdx.math.Rectangle)
    137:141:public void set(com.badlogic.gdx.math.Rectangle)
    146:155:public void merge(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.math.Vector2:
    private static final long serialVersionUID
    55:57:public Vector2(com.badlogic.gdx.math.Vector2)
    61:61:public com.badlogic.gdx.math.Vector2 cpy()
    71:71:public float len2()
    117:119:public com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2)
    135:135:public float dot(com.badlogic.gdx.math.Vector2)
    150:152:public com.badlogic.gdx.math.Vector2 mul(float,float)
    156:156:public com.badlogic.gdx.math.Vector2 div(float)
    160:160:public com.badlogic.gdx.math.Vector2 div(float,float)
    164:164:public com.badlogic.gdx.math.Vector2 div(com.badlogic.gdx.math.Vector2)
    179:181:public float dst(float,float)
    187:189:public float dst2(com.badlogic.gdx.math.Vector2)
    196:198:public float dst2(float,float)
    221:221:public com.badlogic.gdx.math.Vector2 tmp()
    228:232:public com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3)
    239:239:public float crs(com.badlogic.gdx.math.Vector2)
    247:247:public float crs(float,float)
    261:263:public void setAngle(float)
    288:290:public com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float)
    318:321:public boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.math.Vector3:
    private static final long serialVersionUID
    73:75:public Vector3(float[])
    103:103:public com.badlogic.gdx.math.Vector3 set(float[])
    132:132:com.badlogic.gdx.math.Vector3 tmp3()
    157:157:public com.badlogic.gdx.math.Vector3 add(float)
    182:182:public com.badlogic.gdx.math.Vector3 sub(float)
    198:198:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Vector3)
    208:208:public com.badlogic.gdx.math.Vector3 mul(float,float,float)
    220:220:public com.badlogic.gdx.math.Vector3 div(float,float,float)
    224:224:public com.badlogic.gdx.math.Vector3 div(com.badlogic.gdx.math.Vector3)
    234:234:public float len2()
    240:240:public boolean idt(com.badlogic.gdx.math.Vector3)
    246:254:public float dst(com.badlogic.gdx.math.Vector3)
    288:288:public com.badlogic.gdx.math.Vector3 crs(float,float,float)
    319:320:public com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4)
    331:331:public com.badlogic.gdx.math.Vector3 rotate(float,float,float,float)
    340:341:public com.badlogic.gdx.math.Vector3 rotate(com.badlogic.gdx.math.Vector3,float)
    346:346:public boolean isUnit()
    351:351:public boolean isZero()
    361:363:public com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float)
    373:387:public com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float)
    402:402:public float dot(float,float,float)
    411:419:public float dst2(com.badlogic.gdx.math.Vector3)
    429:437:public float dst2(float,float,float)
    441:441:public float dst(float,float,float)
    473:477:public boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float)
    483:486:public boolean epsilonEquals(float,float,float,float)
    495:498:public com.badlogic.gdx.math.Vector3 scale(float,float,float)
com.badlogic.gdx.math.WindowedMean:
    83:83:public float getOldest()
    88:88:public float getLatest()
    93:101:public float standardDeviation()
com.badlogic.gdx.math.collision.BoundingBox
com.badlogic.gdx.math.collision.Ray:
    private static final long serialVersionUID
    43:43:public com.badlogic.gdx.math.collision.Ray cpy()
    51:51:public com.badlogic.gdx.math.Vector3 getEndPoint(float)
    61:65:public com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4)
    79:81:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    94:96:public com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float)
    105:107:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray)
com.badlogic.gdx.math.collision.Segment
com.badlogic.gdx.math.collision.Sphere
com.badlogic.gdx.net.NetJavaImpl:
    101:195:public void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
com.badlogic.gdx.net.NetJavaImpl$1
com.badlogic.gdx.net.NetJavaImpl$1$1
com.badlogic.gdx.net.NetJavaImpl$1$2
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse
com.badlogic.gdx.net.ServerSocket
com.badlogic.gdx.net.ServerSocketHints
com.badlogic.gdx.net.Socket:
    public abstract boolean isConnected()
com.badlogic.gdx.net.SocketHints:
    24:67:public SocketHints()
com.badlogic.gdx.physics.box2d.Body:
    108:113:public com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float)
    private native long jniCreateFixture(long,long,float)
    128:132:public void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture)
    private native void jniDestroyFixture(long,long)
    154:155:public void setTransform(float,float,float)
    166:167:public void setTransform(float,float,float,boolean)
    private native void jniSetTransform(long,float,float,float,boolean)
    183:184:public com.badlogic.gdx.physics.box2d.Transform getTransform()
    private native void jniGetTransform(long,float[])
    246:249:public com.badlogic.gdx.math.Vector2 getLocalCenter()
    private native void jniGetLocalCenter(long,float[])
    326:327:public void applyForce(float,float,float,float)
    337:338:public void applyForceToCenter(com.badlogic.gdx.math.Vector2)
    344:345:public void applyForceToCenter(float,float)
    private native void jniApplyForceToCenter(long,float,float)
    356:357:public void applyTorque(float)
    private native void jniApplyTorque(long,float)
    369:370:public void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    379:380:public void applyLinearImpulse(float,float,float,float)
    private native void jniApplyLinearImpulse(long,float,float,float,float)
    390:391:public void applyAngularImpulse(float)
    private native void jniApplyAngularImpulse(long,float)
    401:401:public float getMass()
    private native float jniGetMass(long)
    412:412:public float getInertia()
    private native float jniGetInertia(long)
    425:430:public com.badlogic.gdx.physics.box2d.MassData getMassData()
    private native void jniGetMassData(long,float[])
    447:448:public void setMassData(com.badlogic.gdx.physics.box2d.MassData)
    private native void jniSetMassData(long,float,float,float,float)
    463:464:public void resetMassData()
    private native void jniResetMassData(long)
    496:499:public com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2)
    private native void jniGetWorldVector(long,float,float,float[])
    534:537:public com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2)
    private native void jniGetLocalVector(long,float,float,float[])
    553:556:public com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetLinearVelocityFromWorldPoint(long,float,float,float[])
    572:575:public com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetLinearVelocityFromLocalPoint(long,float,float,float[])
    587:587:public float getLinearDamping()
    private native float jniGetLinearDamping(long)
    597:598:public void setLinearDamping(float)
    private native void jniSetLinearDamping(long,float)
    607:607:public float getAngularDamping()
    private native float jniGetAngularDamping(long)
    666:667:public void setBullet(boolean)
    private native void jniSetBullet(long,boolean)
    676:676:public boolean isBullet()
    private native boolean jniIsBullet(long)
    686:687:public void setSleepingAllowed(boolean)
    private native void jniSetSleepingAllowed(long,boolean)
    696:696:public boolean isSleepingAllowed()
    private native boolean jniIsSleepingAllowed(long)
    707:708:public void setAwake(boolean)
    private native void jniSetAwake(long,boolean)
    718:718:public boolean isAwake()
    private native boolean jniIsAwake(long)
    753:754:public void setFixedRotation(boolean)
    private native void jniSetFixedRotation(long,boolean)
    763:763:public boolean isFixedRotation()
    private native boolean jniIsFixedRotation(long)
    773:773:public java.util.ArrayList getFixtureList()
    778:778:public java.util.ArrayList getJointList()
    791:791:public float getGravityScale()
    private native float jniGetGravityScale(long)
    801:802:public void setGravityScale(float)
    private native void jniSetGravityScale(long,float)
    811:811:public com.badlogic.gdx.physics.box2d.World getWorld()
    816:816:public java.lang.Object getUserData()
    821:822:public void setUserData(java.lang.Object)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer
com.badlogic.gdx.physics.box2d.ChainShape
com.badlogic.gdx.physics.box2d.CircleShape:
    37:39:protected CircleShape(long)
    44:44:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    52:55:public com.badlogic.gdx.math.Vector2 getPosition()
    private native void jniGetPosition(long,float[])
    66:67:public void setPosition(com.badlogic.gdx.math.Vector2)
    private native void jniSetPosition(long,float,float)
com.badlogic.gdx.physics.box2d.Contact:
    48:58:public com.badlogic.gdx.physics.box2d.WorldManifold getWorldManifold()
    private native int jniGetWorldManifold(long,float[])
    80:80:public boolean isTouching()
    private native boolean jniIsTouching(long)
    91:92:public void setEnabled(boolean)
    private native void jniSetEnabled(long,boolean)
    101:101:public boolean isEnabled()
    private native boolean jniIsEnabled(long)
    111:111:public com.badlogic.gdx.physics.box2d.Fixture getFixtureA()
    private native long jniGetFixtureA(long)
    121:121:public com.badlogic.gdx.physics.box2d.Fixture getFixtureB()
    private native long jniGetFixtureB(long)
    131:131:public int getChildIndexA()
    private native int jniGetChildIndexA(long)
    141:141:public int getChildIndexB()
    private native int jniGetChildIndexB(long)
    152:153:public void setFriction(float)
    private native void jniSetFriction(long,float)
    162:162:public float getFriction()
    private native float jniGetFriction(long)
    172:173:public void resetFriction()
    private native void jniResetFriction(long)
    183:184:public void setRestitution(float)
    private native void jniSetRestitution(long,float)
    193:193:public float getRestitution()
    private native float jniGetRestitution(long)
    203:204:public void ResetRestitution()
    private native void jniResetRestitution(long)
com.badlogic.gdx.physics.box2d.ContactFilter:
    public abstract boolean shouldCollide(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Fixture)
com.badlogic.gdx.physics.box2d.ContactImpulse:
    40:41:public float[] getNormalImpulses()
    private native void jniGetNormalImpulses(long,float[])
    51:52:public float[] getTangentImpulses()
    private native void jniGetTangentImpulses(long,float[])
    62:62:public int getCount()
    private native int jniGetCount(long)
com.badlogic.gdx.physics.box2d.ContactListener:
    public abstract void beginContact(com.badlogic.gdx.physics.box2d.Contact)
    public abstract void endContact(com.badlogic.gdx.physics.box2d.Contact)
    public abstract void preSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.Manifold)
    public abstract void postSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.ContactImpulse)
com.badlogic.gdx.physics.box2d.DestructionListener
com.badlogic.gdx.physics.box2d.EdgeShape
com.badlogic.gdx.physics.box2d.Fixture:
    57:68:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    private native int jniGetType(long)
    88:111:public com.badlogic.gdx.physics.box2d.Shape getShape()
    private native long jniGetShape(long)
    121:122:public void setSensor(boolean)
    private native void jniSetSensor(long,boolean)
    132:132:public boolean isSensor()
    private native boolean jniIsSensor(long)
    143:144:public void setFilterData(com.badlogic.gdx.physics.box2d.Filter)
    private native void jniSetFilterData(long,short,short,short)
    160:164:public com.badlogic.gdx.physics.box2d.Filter getFilterData()
    private native void jniGetFilterData(long,short[])
    178:179:public void refilter()
    private native void jniRefilter(long)
    188:188:public com.badlogic.gdx.physics.box2d.Body getBody()
    194:194:public boolean testPoint(com.badlogic.gdx.math.Vector2)
    201:201:public boolean testPoint(float,float)
    private native boolean jniTestPoint(long,float,float)
    236:237:public void setDensity(float)
    private native void jniSetDensity(long,float)
    246:246:public float getDensity()
    private native float jniGetDensity(long)
    256:256:public float getFriction()
    private native float jniGetFriction(long)
    266:267:public void setFriction(float)
    private native void jniSetFriction(long,float)
    276:276:public float getRestitution()
    private native float jniGetRestitution(long)
    286:287:public void setRestitution(float)
    private native void jniSetRestitution(long,float)
    301:302:public void setUserData(java.lang.Object)
    306:306:public java.lang.Object getUserData()
com.badlogic.gdx.physics.box2d.Joint:
    51:55:public com.badlogic.gdx.physics.box2d.JointDef$JointType getType()
    private native int jniGetType(long)
    65:65:public com.badlogic.gdx.physics.box2d.Body getBodyA()
    private native long jniGetBodyA(long)
    75:75:public com.badlogic.gdx.physics.box2d.Body getBodyB()
    private native long jniGetBodyB(long)
    87:90:public com.badlogic.gdx.math.Vector2 getAnchorA()
    private native void jniGetAnchorA(long,float[])
    104:107:public com.badlogic.gdx.math.Vector2 getAnchorB()
    private native void jniGetAnchorB(long,float[])
    121:124:public com.badlogic.gdx.math.Vector2 getReactionForce(float)
    private native void jniGetReactionForce(long,float,float[])
    136:136:public float getReactionTorque(float)
    private native float jniGetReactionTorque(long,float)
    155:155:public boolean isActive()
    private native boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.JointDef$JointType:
    33:33:public int getValue()
com.badlogic.gdx.physics.box2d.Manifold:
    40:44:public com.badlogic.gdx.physics.box2d.Manifold$ManifoldType getType()
    private native int jniGetType(long)
    53:53:public int getPointCount()
    private native int jniGetPointCount(long)
    62:64:public com.badlogic.gdx.math.Vector2 getLocalNormal()
    private native void jniGetLocalNormal(long,float[])
    74:76:public com.badlogic.gdx.math.Vector2 getLocalPoint()
    private native void jniGetLocalPoint(long,float[])
    86:97:public com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] getPoints()
    private native int jniGetPoint(long,float[],int)
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType
com.badlogic.gdx.physics.box2d.MassData:
    public float mass
    public float I
com.badlogic.gdx.physics.box2d.PolygonShape:
    32:34:protected PolygonShape(long)
    44:44:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    50:56:public void set(com.badlogic.gdx.math.Vector2[])
    61:62:public void set(float[])
    67:68:public void set(float[],int,int)
    private native void jniSet(long,float[],int,int)
    109:109:public int getVertexCount()
    private native int jniGetVertexCount(long)
    123:126:public void getVertex(int,com.badlogic.gdx.math.Vector2)
    private native void jniGetVertex(long,int,float[])
com.badlogic.gdx.physics.box2d.QueryCallback:
    public abstract boolean reportFixture(com.badlogic.gdx.physics.box2d.Fixture)
com.badlogic.gdx.physics.box2d.RayCastCallback:
    public abstract float reportRayFixture(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.Shape:
    public abstract com.badlogic.gdx.physics.box2d.Shape$Type getType()
    45:45:public float getRadius()
    private native float jniGetRadius(long)
    protected static native int jniGetType(long)
    86:86:public int getChildCount()
    private native int jniGetChildCount(long)
com.badlogic.gdx.physics.box2d.Shape$Type
com.badlogic.gdx.physics.box2d.Transform:
    public static final int POS_X
    public static final int POS_Y
    public static final int COS
    public static final int SIN
    41:44:public Transform(com.badlogic.gdx.math.Vector2,float)
    49:54:public com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2)
    59:59:public com.badlogic.gdx.math.Vector2 getPosition()
    65:68:public void setRotation(float)
    71:71:public float getRotation()
    77:79:public void setPosition(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.World:
    251:251:public void setDestructionListener(com.badlogic.gdx.physics.box2d.DestructionListener)
    256:258:public void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter)
    private native void setUseDefaultContactFilter(boolean)
    267:268:public void setContactListener(com.badlogic.gdx.physics.box2d.ContactListener)
    310:321:public void destroyBody(com.badlogic.gdx.physics.box2d.Body)
    private native void jniDestroyBody(long,long)
    620:621:public void clearForces()
    private native void jniClearForces(long)
    630:631:public void setWarmStarting(boolean)
    private native void jniSetWarmStarting(long,boolean)
    640:641:public void setContinuousPhysics(boolean)
    private native void jniSetContiousPhysics(long,boolean)
    650:650:public int getProxyCount()
    private native int jniGetProxyCount(long)
    660:660:public int getBodyCount()
    private native int jniGetBodyCount(long)
    670:670:public int getJointCount()
    private native int jniGetJointcount(long)
    680:680:public int getContactCount()
    private native int jniGetContactCount(long)
    690:691:public void setGravity(com.badlogic.gdx.math.Vector2)
    private native void jniSetGravity(long,float,float)
    703:706:public com.badlogic.gdx.math.Vector2 getGravity()
    private native void jniGetGravity(long,float[])
    718:718:public boolean isLocked()
    private native boolean jniIsLocked(long)
    728:729:public void setAutoClearForces(boolean)
    private native void jniSetAutoClearForces(long,boolean)
    738:738:public boolean getAutoClearForces()
    private native boolean jniGetAutoClearForces(long)
    753:755:public void QueryAABB(com.badlogic.gdx.physics.box2d.QueryCallback,float,float,float,float)
    private native void jniQueryAABB(long,float,float,float,float)
    793:814:public java.util.List getContactList()
    819:819:public java.util.Iterator getBodies()
    824:824:public java.util.Iterator getJoints()
    private native void jniGetContactList(long,long[])
    853:864:private boolean contactFilter(long,long)
    873:875:private void beginContact(long)
    878:880:private void endContact(long)
    883:886:private void preSolve(long,long)
    889:892:private void postSolve(long,long)
    895:898:private boolean reportFixture(long)
    public static native void setVelocityThreshold(float)
    public static native float getVelocityThreshold()
    917:919:public void rayCast(com.badlogic.gdx.physics.box2d.RayCastCallback,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    private native void jniRayCast(long,float,float,float,float)
    933:940:private float reportRayFixture(long,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.WorldManifold:
    protected int numContactPoints
    32:32:public com.badlogic.gdx.math.Vector2 getNormal()
    38:38:public com.badlogic.gdx.math.Vector2[] getPoints()
    43:43:public int getNumberOfContactPoints()
com.badlogic.gdx.physics.box2d.joints.DistanceJoint:
    36:37:public void setLength(float)
    private native void jniSetLength(long,float)
    46:46:public float getLength()
    private native float jniGetLength(long)
    56:57:public void setFrequency(float)
    private native void jniSetFrequency(long,float)
    66:66:public float getFrequency()
    private native float jniGetFrequency(long)
    76:77:public void setDampingRatio(float)
    private native void jniSetDampingRatio(long,float)
    86:86:public float getDampingRatio()
    private native float jniGetDampingRatio(long)
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef:
    34:39:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.FrictionJoint:
    35:36:public void setMaxForce(float)
    private native void jniSetMaxForce(long,float)
    45:45:public float getMaxForce()
    private native float jniGetMaxForce(long)
    55:56:public void setMaxTorque(float)
    private native void jniSetMaxTorque(long,float)
    65:65:public float getMaxTorque()
    private native float jniGetMaxTorque(long)
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef:
    32:36:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.GearJoint:
    39:40:public void setRatio(float)
    private native void jniSetRatio(long,float)
    49:49:public float getRatio()
    private native float jniGetRatio(long)
com.badlogic.gdx.physics.box2d.joints.MouseJoint:
    38:39:public void setTarget(com.badlogic.gdx.math.Vector2)
    private native void jniSetTarget(long,float,float)
    51:54:public com.badlogic.gdx.math.Vector2 getTarget()
    private native void jniGetTarget(long,float[])
    65:66:public void setMaxForce(float)
    private native void jniSetMaxForce(long,float)
    75:75:public float getMaxForce()
    private native float jniGetMaxForce(long)
    85:86:public void setFrequency(float)
    private native void jniSetFrequency(long,float)
    95:95:public float getFrequency()
    private native float jniGetFrequency(long)
    105:106:public void setDampingRatio(float)
    private native void jniSetDampingRatio(long,float)
    115:115:public float getDampingRatio()
    private native float jniGetDampingRatio(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint:
    37:37:public float getJointTranslation()
    private native float jniGetJointTranslation(long)
    47:47:public float getJointSpeed()
    private native float jniGetJointSpeed(long)
    57:57:public boolean isLimitEnabled()
    private native boolean jniIsLimitEnabled(long)
    67:68:public void enableLimit(boolean)
    private native void jniEnableLimit(long,boolean)
    77:77:public float getLowerLimit()
    private native float jniGetLowerLimit(long)
    87:87:public float getUpperLimit()
    private native float jniGetUpperLimit(long)
    97:98:public void setLimits(float,float)
    private native void jniSetLimits(long,float,float)
    107:107:public boolean isMotorEnabled()
    private native boolean jniIsMotorEnabled(long)
    117:118:public void enableMotor(boolean)
    private native void jniEnableMotor(long,boolean)
    127:128:public void setMotorSpeed(float)
    private native void jniSetMotorSpeed(long,float)
    137:137:public float getMotorSpeed()
    private native float jniGetMotorSpeed(long)
    147:148:public void setMaxMotorForce(float)
    private native void jniSetMaxMotorForce(long,float)
    157:157:public float getMotorForce(float)
    private native float jniGetMotorForce(long,float)
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef:
    35:42:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.PulleyJoint:
    41:43:public com.badlogic.gdx.math.Vector2 getGroundAnchorA()
    private native void jniGetGroundAnchorA(long,float[])
    56:58:public com.badlogic.gdx.math.Vector2 getGroundAnchorB()
    private native void jniGetGroundAnchorB(long,float[])
    69:69:public float getLength1()
    private native float jniGetLength1(long)
    79:79:public float getLength2()
    private native float jniGetLength2(long)
    89:89:public float getRatio()
    private native float jniGetRatio(long)
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef:
    private static final float minPulleyLength
    36:46:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint:
    38:38:public float getJointAngle()
    private native float jniGetJointAngle(long)
    48:48:public float getJointSpeed()
    private native float jniGetJointSpeed(long)
    58:58:public boolean isLimitEnabled()
    private native boolean jniIsLimitEnabled(long)
    68:69:public void enableLimit(boolean)
    private native void jniEnableLimit(long,boolean)
    78:78:public float getLowerLimit()
    private native float jniGetLowerLimit(long)
    88:88:public float getUpperLimit()
    private native float jniGetUpperLimit(long)
    99:100:public void setLimits(float,float)
    private native void jniSetLimits(long,float,float)
    109:109:public boolean isMotorEnabled()
    private native boolean jniIsMotorEnabled(long)
    119:120:public void enableMotor(boolean)
    private native void jniEnableMotor(long,boolean)
    129:130:public void setMotorSpeed(float)
    private native void jniSetMotorSpeed(long,float)
    139:139:public float getMotorSpeed()
    private native float jniGetMotorSpeed(long)
    149:150:public void setMaxMotorTorque(float)
    private native void jniSetMaxMotorTorque(long,float)
    159:159:public float getMotorTorque(float)
    private native float jniGetMotorTorque(long,float)
com.badlogic.gdx.physics.box2d.joints.RopeJoint:
    38:38:public float getMaxLength()
    private native float jniGetMaxLength(long)
    48:49:public void setMaxLength(float)
    private native float jniSetMaxLength(long,float)
com.badlogic.gdx.physics.box2d.joints.WeldJoint:
    35:35:public float getReferenceAngle()
    private native float jniGetReferenceAngle(long)
com.badlogic.gdx.physics.box2d.joints.WeldJointDef:
    31:36:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.WheelJoint:
    37:37:public float getJointTranslation()
    private native float jniGetJointTranslation(long)
    47:47:public float getJointSpeed()
    private native float jniGetJointSpeed(long)
    57:57:private boolean isMotorEnabled()
    private native boolean jniIsMotorEnabled(long)
    67:68:public void enableMotor(boolean)
    private native void jniEnableMotor(long,boolean)
    77:78:public void setMotorSpeed(float)
    private native void jniSetMotorSpeed(long,float)
    87:87:public float getMotorSpeed()
    private native float jniGetMotorSpeed(long)
    97:98:public void setMaxMotorTorque(float)
    private native void jniSetMaxMotorTorque(long,float)
    106:106:public float getMaxMotorTorque()
    private native float jniGetMaxMotorTorque(long)
    116:116:public float getMotorTorque(float)
    private native float jniGetMotorTorque(long,float)
    126:127:public void setSpringFrequencyHz(float)
    private native void jniSetSpringFrequencyHz(long,float)
    135:135:public float getSpringFrequencyHz()
    private native float jniGetSpringFrequencyHz(long)
    145:146:public void setSpringDampingRatio(float)
    private native void jniSetSpringDampingRatio(long,float)
    154:154:public float getSpringDampingRatio()
    private native float jniGetSpringDampingRatio(long)
com.badlogic.gdx.physics.box2d.joints.WheelJointDef:
    33:38:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.Action:
    43:43:public com.badlogic.gdx.scenes.scene2d.Actor getActor()
    76:76:public com.badlogic.gdx.utils.Pool getPool()
com.badlogic.gdx.scenes.scene2d.Actor:
    221:221:public com.badlogic.gdx.utils.Array getCaptureListeners()
    230:231:public void removeAction(com.badlogic.gdx.scenes.scene2d.Action)
    234:234:public com.badlogic.gdx.utils.Array getActions()
    278:278:public boolean hasParent()
    371:373:public void size(float)
    377:379:public void size(float,float)
    416:417:public void setScaleX(float)
    424:425:public void setScaleY(float)
    429:431:public void setScale(float)
    435:437:public void setScale(float,float)
    441:443:public void scale(float)
    447:449:public void scale(float,float)
    494:495:public void toBack()
    516:518:public int getZIndex()
    523:523:public boolean clipBegin()
    552:554:public com.badlogic.gdx.math.Vector2 screenToLocalCoordinates(com.badlogic.gdx.math.Vector2)
    582:586:public com.badlogic.gdx.math.Vector2 localToParentCoordinates(com.badlogic.gdx.math.Vector2)
    591:597:public com.badlogic.gdx.math.Vector2 localToAscendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.Event:
    91:92:public void setBubbles(boolean)
    116:116:public boolean isCapture()
com.badlogic.gdx.scenes.scene2d.Group:
    246:255:public void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
    307:311:public boolean swapActor(int,int)
    316:320:public boolean swapActor(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
    344:350:public com.badlogic.gdx.math.Vector2 localToDescendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.InputEvent:
    107:108:public void setScrollAmount(int)
com.badlogic.gdx.scenes.scene2d.Stage:
    322:339:public boolean mouseMoved(int,int)
    345:358:public boolean scrolled(int)
    418:427:public void removeTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int)
    434:435:public void cancelTouchFocus()
    476:477:public void addAction(com.badlogic.gdx.scenes.scene2d.Action)
    494:494:public boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    511:513:public void clear()
    517:520:public void unfocusAll()
    605:605:public float getGutterWidth()
    611:611:public float getGutterHeight()
    656:660:public com.badlogic.gdx.math.Vector2 stageToScreenCoordinates(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.actions.Actions:
    29:29:public Actions()
    39:42:public static com.badlogic.gdx.scenes.scene2d.actions.AddAction add(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Action)
    81:81:public static com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float)
    85:85:public static com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float)
    89:93:public static com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float,com.badlogic.gdx.math.Interpolation)
    98:98:public static com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float)
    102:102:public static com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float)
    106:110:public static com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float,com.badlogic.gdx.math.Interpolation)
    115:115:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float)
    119:119:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float)
    123:127:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float,com.badlogic.gdx.math.Interpolation)
    132:132:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float)
    136:136:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float)
    140:144:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float,com.badlogic.gdx.math.Interpolation)
    149:149:public static com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float)
    153:153:public static com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float)
    157:161:public static com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float,com.badlogic.gdx.math.Interpolation)
    166:166:public static com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float)
    183:183:public static com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color)
    188:188:public static com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float)
    193:197:public static com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float,com.badlogic.gdx.math.Interpolation)
    248:248:public static com.badlogic.gdx.scenes.scene2d.actions.VisibleAction show()
    252:252:public static com.badlogic.gdx.scenes.scene2d.actions.VisibleAction hide()
    256:258:public static com.badlogic.gdx.scenes.scene2d.actions.VisibleAction visible(boolean)
    262:264:public static com.badlogic.gdx.scenes.scene2d.actions.TouchableAction touchable(com.badlogic.gdx.scenes.scene2d.Touchable)
    272:274:public static com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor(com.badlogic.gdx.scenes.scene2d.Actor)
    284:287:public static com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float,com.badlogic.gdx.scenes.scene2d.Action)
    291:293:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action)
    321:327:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    331:334:public static varargs com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action[])
    338:338:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence()
    342:344:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action)
    363:368:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    372:378:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    382:385:public static varargs com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action[])
    389:389:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel()
    407:409:public static com.badlogic.gdx.scenes.scene2d.actions.RunnableAction run(java.lang.Runnable)
    413:415:public static com.badlogic.gdx.scenes.scene2d.actions.LayoutAction layout(boolean)
    419:421:public static com.badlogic.gdx.scenes.scene2d.actions.AfterAction after(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.AddAction
com.badlogic.gdx.scenes.scene2d.actions.AfterAction
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction:
    44:44:public com.badlogic.gdx.graphics.Color getColor()
    50:51:public void setColor(com.badlogic.gdx.graphics.Color)
    54:54:public float getAlpha()
com.badlogic.gdx.scenes.scene2d.actions.ColorAction
com.badlogic.gdx.scenes.scene2d.actions.DelayAction:
    36:37:public void finish()
    46:46:public float getTime()
    51:52:public void setTime(float)
    55:55:public float getDuration()
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction:
    33:33:public com.badlogic.gdx.scenes.scene2d.Action getAction()
com.badlogic.gdx.scenes.scene2d.actions.FloatAction
com.badlogic.gdx.scenes.scene2d.actions.IntAction
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction:
    34:34:public float getAmountX()
    38:39:public void setAmountX(float)
    42:42:public float getAmountY()
    46:47:public void setAmountY(float)
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction:
    40:40:public float getX()
    44:45:public void setX(float)
    48:48:public float getY()
    52:53:public void setY(float)
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction:
    63:63:public com.badlogic.gdx.utils.Array getActions()
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction:
    46:46:public com.badlogic.gdx.scenes.scene2d.Actor getRemoveActor()
    51:52:public void setRemoveActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction:
    public static final int FOREVER
    39:40:public void finish()
    54:54:public int getCount()
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction:
    29:29:public float getAmount()
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction:
    40:40:public float getWidth()
    44:45:public void setWidth(float)
    48:48:public float getHeight()
    52:53:public void setHeight(float)
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction:
    32:34:public TemporalAction(float)
    36:39:public TemporalAction(float,com.badlogic.gdx.math.Interpolation)
    74:75:public void finish()
    90:90:public float getTime()
    95:96:public void setTime(float)
    99:99:public float getDuration()
    108:108:public com.badlogic.gdx.math.Interpolation getInterpolation()
    116:116:public boolean isReverse()
    121:122:public void setReverse(boolean)
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction
com.badlogic.gdx.scenes.scene2d.ui.Button:
    45:50:public Button(com.badlogic.gdx.scenes.scene2d.ui.Skin)
    53:58:public Button(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    61:62:public Button(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    64:70:public Button(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
    91:92:public Button(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    95:96:public Button(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    99:100:public Button(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    103:104:public Button(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Skin)
    120:121:public void toggle()
    165:165:public com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup:
    35:39:public varargs ButtonGroup(com.badlogic.gdx.scenes.scene2d.ui.Button[])
    52:55:public varargs void add(com.badlogic.gdx.scenes.scene2d.ui.Button[])
    58:61:public void remove(com.badlogic.gdx.scenes.scene2d.ui.Button)
    64:67:public varargs void remove(com.badlogic.gdx.scenes.scene2d.ui.Button[])
    71:79:public void setChecked(java.lang.String)
    110:117:public void uncheckAll()
    126:126:public com.badlogic.gdx.utils.Array getAllChecked()
    147:148:public void setUncheckLast(boolean)
com.badlogic.gdx.scenes.scene2d.ui.CheckBox:
    36:37:public CheckBox(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    59:59:public com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle getStyle()
    27:27:public bridge synthetic com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle()
    27:27:public bridge synthetic com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle:
    88:93:public CheckBox$CheckBoxStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color)
    95:100:public CheckBox$CheckBoxStyle(com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle)
com.badlogic.gdx.scenes.scene2d.ui.Dialog:
    65:67:public Dialog(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle)
    119:121:public com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String)
    126:126:public com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle)
    131:132:public com.badlogic.gdx.scenes.scene2d.ui.Dialog text(com.badlogic.gdx.scenes.scene2d.ui.Label)
    211:221:public com.badlogic.gdx.scenes.scene2d.ui.Dialog key(int,java.lang.Object)
    230:231:public void cancel()
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3
com.badlogic.gdx.scenes.scene2d.ui.Image:
    48:49:public Image(com.badlogic.gdx.graphics.g2d.NinePatch)
    64:65:public Image(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    76:77:public Image(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.utils.Scaling)
    159:161:public void setScaling(com.badlogic.gdx.utils.Scaling)
    164:165:public void setAlign(int)
    186:186:public float getImageX()
    190:190:public float getImageY()
    194:194:public float getImageWidth()
    198:198:public float getImageHeight()
com.badlogic.gdx.scenes.scene2d.ui.ImageButton
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.Label:
    66:67:public Label(java.lang.CharSequence,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String,java.lang.String)
    215:216:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getTextBounds()
    256:259:public void setFontScale(float,float)
    262:262:public float getFontScaleX()
    266:268:public void setFontScaleX(float)
    271:271:public float getFontScaleY()
    275:277:public void setFontScaleY(float)
com.badlogic.gdx.scenes.scene2d.ui.List:
    52:53:public List(java.lang.Object[],com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    91:91:public com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle getStyle()
    129:129:public int getSelectedIndex()
    133:136:public void setSelectedIndex(int)
    189:189:public java.lang.String[] getItems()
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle:
    216:221:public List$ListStyle(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    223:228:public List$ListStyle(com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane:
    83:84:public ScrollPane(com.badlogic.gdx.scenes.scene2d.Actor)
    244:247:public void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle)
    252:252:public com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle getStyle()
    578:578:public com.badlogic.gdx.scenes.scene2d.Actor getWidget()
    632:632:public float getScrollX()
    641:641:public float getScrollY()
    645:645:public float getVisualScrollX()
    649:649:public float getVisualScrollY()
    681:690:public void scrollTo(float,float,float,float)
    695:704:public void scrollToCenter(float,float,float,float)
    708:708:public float getMaxX()
    713:713:public float getMaxY()
    717:717:public float getScrollBarHeight()
    721:721:public float getScrollBarWidth()
    725:725:public boolean isScrollX()
    729:729:public boolean isScrollY()
    739:739:public boolean isDragging()
    743:743:public boolean isPanning()
    747:747:public boolean isFlinging()
    751:752:public void setVelocityX(float)
    756:759:public float getVelocityX()
    763:764:public void setVelocityY(float)
    768:768:public float getVelocityY()
    774:776:public void setOverscroll(boolean,boolean)
    781:784:public void setupOverscroll(float,float,float)
    789:791:public void setForceOverscroll(boolean,boolean)
    795:796:public void setFlingTime(float)
    800:801:public void setClamp(boolean)
    812:814:public void setupFadeScrollBars(float,float)
    817:818:public void setSmoothScrolling(boolean)
    824:826:public void setScrollbarsOnTop(boolean)
    831:832:public void setCancelTouchFocus(boolean)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle:
    848:854:public ScrollPane$ScrollPaneStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    856:862:public ScrollPane$ScrollPaneStyle(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox:
    98:98:public com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle getStyle()
    167:168:public void setSelection(int)
    180:180:public int getSelectionIndex()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle:
    332:338:public SelectBox$SelectBoxStyle(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    340:346:public SelectBox$SelectBoxStyle(com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle)
com.badlogic.gdx.scenes.scene2d.ui.Skin:
    65:73:public Skin(com.badlogic.gdx.files.FileHandle)
    85:88:public Skin(com.badlogic.gdx.graphics.g2d.TextureAtlas)
    152:154:public boolean has(java.lang.String,java.lang.Class)
    186:200:public com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable getTiledDrawable(java.lang.String)
    295:298:public java.lang.String find(java.lang.Object)
    303:303:public com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String)
    308:308:public com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,float,float,float,float)
    318:321:public com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    326:326:public com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,float,float,float,float)
    366:386:public void setEnabled(com.badlogic.gdx.scenes.scene2d.Actor,boolean)
    390:390:public com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas()
    498:503:private static java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable:
    public java.lang.String name
    public com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.scenes.scene2d.ui.Slider:
    55:56:public Slider(float,float,float,boolean,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    107:107:public com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle getStyle()
    203:203:public boolean isDragging()
    236:240:public void setRange(float,float)
    244:246:public void setStepSize(float)
    263:263:public float getMinValue()
    267:267:public float getMaxValue()
    271:271:public float getStepSize()
    276:277:public void setAnimateDuration(float)
    281:283:public void setAnimateInterpolation(com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle:
    299:302:public Slider$SliderStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    304:307:public Slider$SliderStyle(com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle
com.badlogic.gdx.scenes.scene2d.ui.Stack
com.badlogic.gdx.scenes.scene2d.ui.Table:
    134:135:public void setBackground(java.lang.String)
    176:176:public int getRow(float)
    194:195:public com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String)
    200:201:public com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String,com.badlogic.gdx.graphics.Color)
    206:207:public com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String,java.lang.String)
    212:212:public com.esotericsoftware.tablelayout.Cell add()
    224:229:public varargs com.esotericsoftware.tablelayout.Cell stack(com.badlogic.gdx.scenes.scene2d.Actor[])
    256:257:public void reset()
    266:266:public java.util.List getCells()
    276:277:public com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    282:283:public com.badlogic.gdx.scenes.scene2d.ui.Table padTop(com.esotericsoftware.tablelayout.Value)
    288:289:public com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(com.esotericsoftware.tablelayout.Value)
    294:295:public com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(com.esotericsoftware.tablelayout.Value)
    300:301:public com.badlogic.gdx.scenes.scene2d.ui.Table padRight(com.esotericsoftware.tablelayout.Value)
    306:307:public com.badlogic.gdx.scenes.scene2d.ui.Table pad(float)
    311:312:public com.badlogic.gdx.scenes.scene2d.ui.Table pad(float,float,float,float)
    342:343:public com.badlogic.gdx.scenes.scene2d.ui.Table align(int)
    348:349:public com.badlogic.gdx.scenes.scene2d.ui.Table center()
    354:355:public com.badlogic.gdx.scenes.scene2d.ui.Table top()
    360:361:public com.badlogic.gdx.scenes.scene2d.ui.Table left()
    366:367:public com.badlogic.gdx.scenes.scene2d.ui.Table bottom()
    372:373:public com.badlogic.gdx.scenes.scene2d.ui.Table right()
    384:385:public com.badlogic.gdx.scenes.scene2d.ui.Table debugTable()
    390:391:public com.badlogic.gdx.scenes.scene2d.ui.Table debugCell()
    396:397:public com.badlogic.gdx.scenes.scene2d.ui.Table debugWidget()
    402:403:public com.badlogic.gdx.scenes.scene2d.ui.Table debug(com.esotericsoftware.tablelayout.BaseTableLayout$Debug)
    407:407:public com.esotericsoftware.tablelayout.BaseTableLayout$Debug getDebug()
    411:411:public com.esotericsoftware.tablelayout.Value getPadTopValue()
    419:419:public com.esotericsoftware.tablelayout.Value getPadLeftValue()
    427:427:public com.esotericsoftware.tablelayout.Value getPadBottomValue()
    431:431:public float getPadBottom()
    435:435:public com.esotericsoftware.tablelayout.Value getPadRightValue()
    444:444:public float getPadX()
    449:449:public float getPadY()
    453:453:public int getAlign()
    462:463:public void setRound(boolean)
com.badlogic.gdx.scenes.scene2d.ui.TableLayout:
    112:114:public void invalidateHierarchy()
    117:120:private void toStageCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit:
    81:81:public float getWidth(com.badlogic.gdx.scenes.scene2d.Actor)
    85:85:public float getHeight(com.badlogic.gdx.scenes.scene2d.Actor)
    31:31:public bridge synthetic float getHeight(java.lang.Object)
    31:31:public bridge synthetic float getWidth(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.TextButton:
    67:67:public com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle()
    91:91:public com.esotericsoftware.tablelayout.Cell getLabelCell()
    29:29:public bridge synthetic com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.TextField:
    private static final char BACKSPACE
    private static final char ENTER_DESKTOP
    private static final char ENTER_ANDROID
    private static final char TAB
    private static final char DELETE
    private static final char BULLET
    111:112:public TextField(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    365:366:public void setMaxLength(int)
    369:369:public int getMaxLength()
    379:380:public void setPasswordCharacter(char)
    385:385:public com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle getStyle()
    628:629:public void setTextFieldListener(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener)
    633:634:public void setTextFieldFilter(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter)
    638:639:public void setFocusTraversal(boolean)
    643:643:public java.lang.String getMessageText()
    649:650:public void setMessageText(java.lang.String)
    703:704:public void selectAll()
    712:715:public void setCursorPosition(int)
    718:718:public int getCursorPosition()
    723:723:public com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard getOnscreenKeyboard()
    727:728:public void setOnscreenKeyboard(com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard)
    731:732:public void setClipboard(com.badlogic.gdx.utils.Clipboard)
    748:749:public void setRightAligned(boolean)
    754:755:public void setPasswordMode(boolean)
    758:759:public void setBlinkTime(float)
    766:766:public boolean isDisabled()
    770:770:public boolean isPasswordMode()
    774:774:public com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter getTextFieldFilter()
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle:
    840:846:public TextField$TextFieldStyle(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    848:857:public TextField$TextFieldStyle(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle
com.badlogic.gdx.scenes.scene2d.ui.Tree
com.badlogic.gdx.scenes.scene2d.ui.Tree$1
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup
com.badlogic.gdx.scenes.scene2d.ui.Widget:
    65:67:public void setLayoutEnabled(boolean)
    97:97:public boolean needsLayout()
    112:120:public void pack()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup:
    66:69:public void setLayoutEnabled(boolean)
    72:80:private void setLayoutEnabled(com.badlogic.gdx.scenes.scene2d.Group,boolean)
    110:110:public boolean needsLayout()
com.badlogic.gdx.scenes.scene2d.ui.Window:
    49:51:public Window(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin)
    54:56:public Window(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    123:123:public com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle getStyle()
    182:182:public java.lang.String getTitle()
    187:188:public void setTitleAlignment(int)
    191:192:public void setMovable(boolean)
    199:200:public void setKeepWithinStage(boolean)
    203:203:public boolean isDragging()
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle:
    224:228:public Window$WindowStyle(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
    230:234:public Window$WindowStyle(com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener:
    147:147:public com.badlogic.gdx.scenes.scene2d.Actor getTouchDownTarget()
com.badlogic.gdx.scenes.scene2d.utils.Align
com.badlogic.gdx.scenes.scene2d.utils.ClickListener:
    44:46:public ClickListener(int)
    97:101:public void cancel()
    107:107:public void dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
    110:110:public void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
    113:113:public void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
    144:145:public void setTapSquareSize(float)
    148:148:public float getTapSquareSize()
    153:154:public void setTapCountInterval(float)
    162:162:public float getTouchDownX()
    166:166:public float getTouchDownY()
    170:170:public int getButton()
    175:176:public void setButton(int)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target
com.badlogic.gdx.scenes.scene2d.utils.DragListener:
    79:79:public boolean isDragging()
    83:84:public void setTapSquareSize(float)
    87:87:public float getTapSquareSize()
    109:109:public int getButton()
    114:115:public void setButton(int)
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2
com.badlogic.gdx.scenes.scene2d.utils.Drawable:
    public abstract void setLeftWidth(float)
    public abstract void setRightWidth(float)
    public abstract void setTopHeight(float)
    public abstract void setBottomHeight(float)
    public abstract void setMinWidth(float)
    public abstract void setMinHeight(float)
com.badlogic.gdx.scenes.scene2d.utils.Layout:
    public abstract void layout()
    public abstract void pack()
    public abstract void setFillParent(boolean)
    public abstract void setLayoutEnabled(boolean)
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack:
    33:33:public ScissorStack()
    124:130:public static com.badlogic.gdx.math.Rectangle getViewport()
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable:
    36:38:public TextureRegionDrawable(com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable)
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable:
    30:31:public TiledDrawable(com.badlogic.gdx.graphics.g2d.TextureRegion)
    34:35:public TiledDrawable(com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable)
com.badlogic.gdx.utils.Array:
    67:68:public Array(java.lang.Class)
    74:77:public Array(com.badlogic.gdx.utils.Array)
    83:84:public Array(java.lang.Object[])
    91:94:public Array(boolean,java.lang.Object[])
    113:114:public void addAll(java.lang.Object[])
    130:132:public void set(int,java.lang.Object)
    146:152:public void swap(int,int)
    181:189:public int lastIndexOf(java.lang.Object,boolean)
    230:256:public boolean removeAll(com.badlogic.gdx.utils.Array,boolean)
    274:274:public java.lang.Object first()
    287:288:public void shrink()
    311:312:public void sort()
    320:326:public void reverse()
    329:335:public void shuffle()
    350:354:public void truncate(int)
    358:359:public java.lang.Object random()
    403:411:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.Array$ArrayIterable
com.badlogic.gdx.utils.Array$ArrayIterator:
    437:438:public void reset()
com.badlogic.gdx.utils.ArrayMap:
    private com.badlogic.gdx.utils.ArrayMap$Entries entries
    private com.badlogic.gdx.utils.ArrayMap$Values valuesIter
    private com.badlogic.gdx.utils.ArrayMap$Keys keysIter
    47:48:public ArrayMap(int)
    63:67:public ArrayMap(boolean,int,java.lang.Class,java.lang.Class)
    71:72:public ArrayMap(java.lang.Class,java.lang.Class)
    78:83:public ArrayMap(com.badlogic.gdx.utils.ArrayMap)
    86:91:public void put(java.lang.Object,java.lang.Object)
    94:102:public void put(java.lang.Object,java.lang.Object,int)
    105:106:public void addAll(com.badlogic.gdx.utils.ArrayMap)
    109:116:public void addAll(com.badlogic.gdx.utils.ArrayMap,int,int)
    121:130:public java.lang.Object get(java.lang.Object)
    137:146:public java.lang.Object getKey(java.lang.Object,boolean)
    150:151:public java.lang.Object getKeyAt(int)
    155:156:public java.lang.Object getValueAt(int)
    160:160:public java.lang.Object firstKey()
    164:164:public java.lang.Object firstValue()
    168:170:public void setKey(int,java.lang.Object)
    173:175:public void setValue(int,java.lang.Object)
    178:189:public void insert(int,java.lang.Object,java.lang.Object)
    192:201:public boolean containsKey(java.lang.Object)
    206:215:public boolean containsValue(java.lang.Object,boolean)
    219:227:public int indexOfKey(java.lang.Object)
    231:239:public int indexOfValue(java.lang.Object,boolean)
    243:261:public java.lang.Object removeKey(java.lang.Object)
    265:281:public boolean removeValue(java.lang.Object,boolean)
    286:298:public void removeIndex(int)
    302:302:public java.lang.Object peekKey()
    307:307:public java.lang.Object peekValue()
    311:318:public void clear()
    323:324:public void shrink()
    329:331:public void ensureCapacity(int)
    334:341:protected void resize(int)
    344:354:public void reverse()
    357:367:public void shuffle()
    372:378:public void truncate(int)
    402:406:public com.badlogic.gdx.utils.ArrayMap$Entries entries()
    412:416:public com.badlogic.gdx.utils.ArrayMap$Values values()
    422:426:public com.badlogic.gdx.utils.ArrayMap$Keys keys()
com.badlogic.gdx.utils.ArrayMap$Entries
com.badlogic.gdx.utils.ArrayMap$Keys
com.badlogic.gdx.utils.ArrayMap$Values
com.badlogic.gdx.utils.AtomicQueue
com.badlogic.gdx.utils.Base64Coder:
    private static final java.lang.String systemLineSeparator
    72:72:public static java.lang.String encodeLines(byte[])
    84:96:public static java.lang.String encodeLines(byte[],int,int,int,java.lang.String)
    113:113:public static char[] encode(byte[],int)
    163:169:public static byte[] decodeLines(java.lang.String)
    230:231:private Base64Coder()
com.badlogic.gdx.utils.BinaryHeap
com.badlogic.gdx.utils.BinaryHeap$Node
com.badlogic.gdx.utils.BooleanArray
com.badlogic.gdx.utils.BufferUtils:
    32:32:public BufferUtils()
    65:67:public static void copy(byte[],int,java.nio.Buffer,int)
    79:81:public static void copy(short[],int,java.nio.Buffer,int)
    93:95:public static void copy(char[],int,java.nio.Buffer,int)
    107:109:public static void copy(int[],int,java.nio.Buffer,int)
    121:123:public static void copy(long[],int,java.nio.Buffer,int)
    135:137:public static void copy(float[],int,java.nio.Buffer,int)
    149:151:public static void copy(double[],int,java.nio.Buffer,int)
    163:166:public static void copy(java.nio.Buffer,java.nio.Buffer,int)
    169:184:private static int positionInBytes(java.nio.Buffer)
    188:203:private static int bytesToElements(java.nio.Buffer,int)
    207:222:private static int elementsToBytes(java.nio.Buffer,int)
    232:234:public static java.nio.DoubleBuffer newDoubleBuffer(int)
    244:246:public static java.nio.ShortBuffer newShortBuffer(int)
    250:252:public static java.nio.CharBuffer newCharBuffer(int)
    262:264:public static java.nio.LongBuffer newLongBuffer(int)
    303:303:public static long getUnsafeBufferAddress(java.nio.Buffer)
    314:318:public static java.nio.ByteBuffer newUnsafeByteBuffer(java.nio.ByteBuffer)
    325:325:public static int getAllocatedBytesUnsafe()
    private static native long getBufferAddress(java.nio.Buffer)
    public static native void clear(java.nio.ByteBuffer,int)
    private static native void copyJni(byte[],int,java.nio.Buffer,int,int)
    private static native void copyJni(char[],int,java.nio.Buffer,int,int)
    private static native void copyJni(short[],int,java.nio.Buffer,int,int)
    private static native void copyJni(int[],int,java.nio.Buffer,int,int)
    private static native void copyJni(long[],int,java.nio.Buffer,int,int)
    private static native void copyJni(float[],int,java.nio.Buffer,int,int)
    private static native void copyJni(double[],int,java.nio.Buffer,int,int)
    private static native void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.CharArray
com.badlogic.gdx.utils.ComparableTimSort
com.badlogic.gdx.utils.DataInput
com.badlogic.gdx.utils.DataOutput
com.badlogic.gdx.utils.DelayedRemovalArray:
    37:38:public DelayedRemovalArray(com.badlogic.gdx.utils.Array)
    41:42:public DelayedRemovalArray(boolean,int,java.lang.Class)
    45:46:public DelayedRemovalArray(boolean,int)
    49:50:public DelayedRemovalArray(boolean,java.lang.Object[])
    53:54:public DelayedRemovalArray(java.lang.Class)
    61:62:public DelayedRemovalArray(java.lang.Object[])
    105:107:public void set(int,java.lang.Object)
    115:117:public void swap(int,int)
    130:132:public void sort()
    140:142:public void reverse()
    145:147:public void shuffle()
    150:152:public void truncate(int)
com.badlogic.gdx.utils.FloatArray:
    38:39:public FloatArray(int)
    52:57:public FloatArray(com.badlogic.gdx.utils.FloatArray)
    62:63:public FloatArray(float[])
    70:73:public FloatArray(boolean,float[])
    82:83:public void addAll(com.badlogic.gdx.utils.FloatArray)
    86:89:public void addAll(com.badlogic.gdx.utils.FloatArray,int,int)
    92:93:public void addAll(float[])
    96:101:public void addAll(float[],int,int)
    109:111:public void set(int,float)
    114:122:public void insert(int,float)
    125:131:public void swap(int,int)
    134:138:public boolean contains(float)
    142:145:public int indexOf(float)
    149:152:public int lastIndexOf(char)
    156:163:public boolean removeValue(float)
    168:176:public float removeIndex(int)
    182:195:public boolean removeAll(com.badlogic.gdx.utils.FloatArray)
    200:200:public float pop()
    205:205:public float peek()
    210:210:public float first()
    220:221:public void shrink()
    227:229:public float[] ensureCapacity(int)
    241:242:public void sort()
    245:251:public void reverse()
    254:260:public void shuffle()
    265:266:public void truncate(int)
    270:271:public float random()
    275:277:public float[] toArray()
    306:314:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.GdxBuild
com.badlogic.gdx.utils.GdxNativesLoader:
    19:19:public GdxNativesLoader()
com.badlogic.gdx.utils.GdxRuntimeException:
    private static final long serialVersionUID
com.badlogic.gdx.utils.GwtModuleGenerator
com.badlogic.gdx.utils.IdentityMap
com.badlogic.gdx.utils.IdentityMap$Entries
com.badlogic.gdx.utils.IdentityMap$Entry
com.badlogic.gdx.utils.IdentityMap$Keys
com.badlogic.gdx.utils.IdentityMap$MapIterator
com.badlogic.gdx.utils.IdentityMap$Values
com.badlogic.gdx.utils.IntArray:
    52:57:public IntArray(com.badlogic.gdx.utils.IntArray)
    62:63:public IntArray(int[])
    70:73:public IntArray(boolean,int[])
    82:83:public void addAll(com.badlogic.gdx.utils.IntArray)
    86:89:public void addAll(com.badlogic.gdx.utils.IntArray,int,int)
    92:93:public void addAll(int[])
    96:101:public void addAll(int[],int,int)
    109:111:public void set(int,int)
    125:131:public void swap(int,int)
    142:145:public int indexOf(int)
    149:152:public int lastIndexOf(int)
    156:163:public boolean removeValue(int)
    168:176:public int removeIndex(int)
    182:195:public boolean removeAll(com.badlogic.gdx.utils.IntArray)
    205:205:public int peek()
    210:210:public int first()
    214:215:public void clear()
    227:229:public int[] ensureCapacity(int)
    241:242:public void sort()
    245:251:public void reverse()
    254:260:public void shuffle()
    265:266:public void truncate(int)
    270:271:public int random()
    275:277:public int[] toArray()
    306:314:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.IntFloatMap
com.badlogic.gdx.utils.IntFloatMap$Entries
com.badlogic.gdx.utils.IntFloatMap$Entry
com.badlogic.gdx.utils.IntFloatMap$Keys
com.badlogic.gdx.utils.IntFloatMap$MapIterator
com.badlogic.gdx.utils.IntFloatMap$Values
com.badlogic.gdx.utils.IntIntMap
com.badlogic.gdx.utils.IntIntMap$Entries
com.badlogic.gdx.utils.IntIntMap$Entry
com.badlogic.gdx.utils.IntIntMap$Keys
com.badlogic.gdx.utils.IntIntMap$MapIterator
com.badlogic.gdx.utils.IntIntMap$Values
com.badlogic.gdx.utils.IntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.IntMap$Entries entries
    private com.badlogic.gdx.utils.IntMap$Values values
    private com.badlogic.gdx.utils.IntMap$Keys keys
    63:64:public IntMap(int)
    160:162:public void putAll(com.badlogic.gdx.utils.IntMap)
    302:311:public java.lang.Object get(int,java.lang.Object)
    387:397:public void clear()
    404:419:public boolean containsValue(java.lang.Object,boolean)
    447:462:public int findKey(java.lang.Object,boolean,int)
    468:470:public void ensureCapacity(int)
    541:545:public com.badlogic.gdx.utils.IntMap$Entries entries()
    551:555:public com.badlogic.gdx.utils.IntMap$Values values()
    561:565:public com.badlogic.gdx.utils.IntMap$Keys keys()
com.badlogic.gdx.utils.IntMap$Entries
com.badlogic.gdx.utils.IntMap$Entry
com.badlogic.gdx.utils.IntMap$Keys
com.badlogic.gdx.utils.IntMap$MapIterator
com.badlogic.gdx.utils.IntMap$Values
com.badlogic.gdx.utils.Json:
    private static final boolean debug
    65:66:public void setIgnoreUnknownFields(boolean)
    69:70:public void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType)
    73:75:public void addClassTag(java.lang.String,java.lang.Class)
    78:83:public java.lang.Class getClass(java.lang.String)
    88:90:public java.lang.String getTag(java.lang.Class)
    104:104:public com.badlogic.gdx.utils.Json$Serializer getSerializer(java.lang.Class)
    112:117:public void setElementType(java.lang.Class,java.lang.String,java.lang.Class)
    155:155:public java.lang.String toJson(java.lang.Object,java.lang.Class)
    167:168:public void toJson(java.lang.Object,com.badlogic.gdx.files.FileHandle)
    172:173:public void toJson(java.lang.Object,java.lang.Class,com.badlogic.gdx.files.FileHandle)
    178:190:public void toJson(java.lang.Object,java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle)
    193:194:public void toJson(java.lang.Object,java.io.Writer)
    198:199:public void toJson(java.lang.Object,java.lang.Class,java.io.Writer)
    288:289:public void writeField(java.lang.Object,java.lang.String)
    293:294:public void writeField(java.lang.Object,java.lang.String,java.lang.Class)
    297:298:public void writeField(java.lang.Object,java.lang.String,java.lang.String)
    302:323:public void writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class)
    342:347:public void writeValue(java.lang.String,java.lang.Object,java.lang.Class)
    363:367:public void writeValue(java.lang.Object)
    372:373:public void writeValue(java.lang.Object,java.lang.Class)
    511:516:public void writeObjectStart(java.lang.String,java.lang.Class,java.lang.Class)
    546:551:public void writeArrayStart(java.lang.String)
    584:584:public java.lang.Object fromJson(java.lang.Class,java.io.Reader)
    591:591:public java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.Reader)
    597:597:public java.lang.Object fromJson(java.lang.Class,java.io.InputStream)
    604:604:public java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.InputStream)
    622:624:public java.lang.Object fromJson(java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle)
    631:631:public java.lang.Object fromJson(java.lang.Class,char[],int,int)
    638:638:public java.lang.Object fromJson(java.lang.Class,java.lang.Class,char[],int,int)
    650:650:public java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.lang.String)
    654:655:public void readField(java.lang.Object,java.lang.String,java.lang.Object)
    658:659:public void readField(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Object)
    662:663:public void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object)
    667:689:public void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class,java.lang.Object)
    750:753:public java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object,java.lang.Object)
    760:760:public java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object,java.lang.Object)
    924:924:public java.lang.String prettyPrint(java.lang.Object)
    928:928:public java.lang.String prettyPrint(java.lang.String)
    932:932:public java.lang.String prettyPrint(java.lang.Object,int)
    936:938:public java.lang.String prettyPrint(java.lang.String,int)
    942:1009:private void prettyPrint(java.lang.Object,com.badlogic.gdx.utils.StringBuilder,int,int)
    1012:1016:private static boolean isFlat(com.badlogic.gdx.utils.ObjectMap)
    1020:1025:private static boolean isFlat(com.badlogic.gdx.utils.Array)
    1029:1031:private static void indent(int,com.badlogic.gdx.utils.StringBuilder)
com.badlogic.gdx.utils.Json$ReadOnlySerializer:
    public abstract java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class)
com.badlogic.gdx.utils.JsonReader:
    static final int json_start
    static final int json_first_final
    static final int json_error
    static final int json_en_object
    static final int json_en_array
    static final int json_en_main
com.badlogic.gdx.utils.JsonWriter:
    101:101:public com.badlogic.gdx.utils.JsonWriter object(java.lang.String)
com.badlogic.gdx.utils.LittleEndianInputStream
com.badlogic.gdx.utils.Logger:
    public static final int NONE
    public static final int ERROR
    public static final int INFO
    public static final int DEBUG
    36:37:public Logger(java.lang.String)
    49:50:public void debug(java.lang.String,java.lang.Exception)
    57:58:public void info(java.lang.String,java.lang.Exception)
    61:62:public void error(java.lang.String)
    72:73:public void setLevel(int)
com.badlogic.gdx.utils.LongArray
com.badlogic.gdx.utils.LongMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.LongMap$Entries entries
    private com.badlogic.gdx.utils.LongMap$Values values
    private com.badlogic.gdx.utils.LongMap$Keys keys
    160:162:public void putAll(com.badlogic.gdx.utils.LongMap)
    288:297:public java.lang.Object get(long)
    301:310:public java.lang.Object get(long,java.lang.Object)
    314:317:private java.lang.Object getStash(long,java.lang.Object)
    386:396:public void clear()
    401:416:public boolean containsValue(java.lang.Object,boolean)
    420:429:public boolean containsKey(long)
    433:436:private boolean containsKeyStash(long)
    444:459:public long findKey(java.lang.Object,boolean,long)
    465:467:public void ensureCapacity(int)
    533:537:public com.badlogic.gdx.utils.LongMap$Entries entries()
    543:547:public com.badlogic.gdx.utils.LongMap$Values values()
    553:557:public com.badlogic.gdx.utils.LongMap$Keys keys()
com.badlogic.gdx.utils.LongMap$Entries
com.badlogic.gdx.utils.LongMap$Entry
com.badlogic.gdx.utils.LongMap$Keys
com.badlogic.gdx.utils.LongMap$MapIterator
com.badlogic.gdx.utils.LongMap$Values
com.badlogic.gdx.utils.NumberUtils:
    19:19:public NumberUtils()
    25:25:public static int floatToRawIntBits(float)
    39:39:public static float intBitsToFloat(int)
com.badlogic.gdx.utils.ObjectIntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private com.badlogic.gdx.utils.ObjectIntMap$Entries entries
    private com.badlogic.gdx.utils.ObjectIntMap$Values values
    private com.badlogic.gdx.utils.ObjectIntMap$Keys keys
    60:61:public ObjectIntMap(int)
    144:146:public void putAll(com.badlogic.gdx.utils.ObjectIntMap)
    291:302:public int getAndIncrement(java.lang.Object,int,int)
    306:314:private int getAndIncrementStash(java.lang.Object,int,int)
    318:343:public int remove(java.lang.Object,int)
    347:356:int removeStash(java.lang.Object,int)
    361:367:void removeStashIndex(int)
    380:383:public boolean containsValue(int)
    387:396:public boolean containsKey(java.lang.Object)
    400:403:private boolean containsKeyStash(java.lang.Object)
    409:412:public java.lang.Object findKey(int)
    418:420:public void ensureCapacity(int)
    486:490:public com.badlogic.gdx.utils.ObjectIntMap$Entries entries()
    496:500:public com.badlogic.gdx.utils.ObjectIntMap$Values values()
    506:510:public com.badlogic.gdx.utils.ObjectIntMap$Keys keys()
com.badlogic.gdx.utils.ObjectIntMap$Entries
com.badlogic.gdx.utils.ObjectIntMap$Entry
com.badlogic.gdx.utils.ObjectIntMap$Keys
com.badlogic.gdx.utils.ObjectIntMap$MapIterator
com.badlogic.gdx.utils.ObjectIntMap$Values
com.badlogic.gdx.utils.ObjectMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    154:156:public void putAll(com.badlogic.gdx.utils.ObjectMap)
    299:308:public java.lang.Object get(java.lang.Object,java.lang.Object)
    312:315:private java.lang.Object getStash(java.lang.Object,java.lang.Object)
    391:403:public boolean containsValue(java.lang.Object,boolean)
    431:443:public java.lang.Object findKey(java.lang.Object,boolean)
    449:451:public void ensureCapacity(int)
com.badlogic.gdx.utils.ObjectMap$Values:
    643:646:public com.badlogic.gdx.utils.Array toArray()
    651:653:public void toArray(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.OrderedMap:
    32:34:public OrderedMap(int)
    37:39:public OrderedMap(int,float)
com.badlogic.gdx.utils.PauseableThread
com.badlogic.gdx.utils.PerformanceCounter
com.badlogic.gdx.utils.PerformanceCounters
com.badlogic.gdx.utils.Pool:
    28:29:public Pool()
    33:34:public Pool(int)
    61:68:public void freeAll(com.badlogic.gdx.utils.Array)
    72:73:public void clear()
com.badlogic.gdx.utils.PooledLinkedList
com.badlogic.gdx.utils.PooledLinkedList$1
com.badlogic.gdx.utils.PooledLinkedList$Item
com.badlogic.gdx.utils.Pools:
    51:59:public static void freeAll(com.badlogic.gdx.utils.Array)
    61:62:private Pools()
com.badlogic.gdx.utils.ReflectionPool:
    27:29:public ReflectionPool(java.lang.Class)
    37:39:public ReflectionPool(java.lang.Class,int)
com.badlogic.gdx.utils.ScreenUtils
com.badlogic.gdx.utils.SerializationException:
    42:42:public boolean causedBy(java.lang.Class)
    46:49:private boolean causedBy(java.lang.Throwable,java.lang.Class)
com.badlogic.gdx.utils.SharedLibraryLoader:
    60:62:public SharedLibraryLoader(java.lang.String)
com.badlogic.gdx.utils.SnapshotArray:
    48:49:public SnapshotArray(com.badlogic.gdx.utils.Array)
    56:57:public SnapshotArray(boolean,int)
    60:61:public SnapshotArray(boolean,java.lang.Object[])
    64:65:public SnapshotArray(java.lang.Class)
    68:69:public SnapshotArray(int)
    72:73:public SnapshotArray(java.lang.Object[])
    107:109:public void set(int,java.lang.Object)
    117:119:public void swap(int,int)
    142:144:public void sort()
    152:154:public void reverse()
    157:159:public void shuffle()
    162:164:public void truncate(int)
com.badlogic.gdx.utils.Sort:
    private com.badlogic.gdx.utils.ComparableTimSort comparableTimSort
    31:33:public void sort(com.badlogic.gdx.utils.Array)
    36:38:public void sort(java.lang.Object[])
    41:43:public void sort(java.lang.Object[],int,int)
    46:48:public void sort(com.badlogic.gdx.utils.Array,java.util.Comparator)
    51:53:public void sort(java.lang.Object[],java.util.Comparator)
com.badlogic.gdx.utils.SortedIntList
com.badlogic.gdx.utils.SortedIntList$Iterator
com.badlogic.gdx.utils.SortedIntList$Node
com.badlogic.gdx.utils.SortedIntList$NodePool
com.badlogic.gdx.utils.StringBuilder:
    static final int INITIAL_CAPACITY
    39:39:final char[] getValue()
    67:68:public StringBuilder(java.lang.CharSequence)
    70:74:public StringBuilder(com.badlogic.gdx.utils.StringBuilder)
    81:85:public StringBuilder(java.lang.String)
    169:169:public int capacity()
    185:199:final void delete0(int,int)
    203:211:final void deleteCharAt0(int)
    220:224:public void ensureCapacity(int)
    236:240:public void getChars(int,int,char[],int)
    243:251:final void insert0(int,char[])
    254:266:final void insert0(int,char[],int,int)
    270:277:final void insert0(int,char)
    280:293:final void insert0(int,java.lang.String)
    296:303:final void insert0(int,java.lang.CharSequence,int,int)
    313:324:private void move(int,int)
    327:353:final void replace0(int,int,java.lang.String)
    357:411:final void reverse0()
    419:423:public void setCharAt(int,char)
    451:459:public java.lang.String substring(int)
    510:510:public int indexOf(java.lang.String)
    522:553:public int indexOf(java.lang.String,int)
    565:565:public int lastIndexOf(java.lang.String)
    578:610:public int lastIndexOf(java.lang.String,int)
    618:623:public void trimToSize()
    634:637:public int codePointAt(int)
    649:652:public int codePointBefore(int)
    666:669:public int codePointCount(int,int)
    683:683:public int offsetByCodePoints(int,int)
    693:694:public com.badlogic.gdx.utils.StringBuilder append(boolean)
    795:796:public com.badlogic.gdx.utils.StringBuilder append(double)
    885:889:public com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder,int,int)
    899:900:public com.badlogic.gdx.utils.StringBuilder appendCodePoint(int)
    911:912:public com.badlogic.gdx.utils.StringBuilder delete(int,int)
    922:923:public com.badlogic.gdx.utils.StringBuilder deleteCharAt(int)
    935:936:public com.badlogic.gdx.utils.StringBuilder insert(int,boolean)
    948:949:public com.badlogic.gdx.utils.StringBuilder insert(int,char)
    961:962:public com.badlogic.gdx.utils.StringBuilder insert(int,int)
    974:975:public com.badlogic.gdx.utils.StringBuilder insert(int,long)
    987:988:public com.badlogic.gdx.utils.StringBuilder insert(int,float)
    1000:1001:public com.badlogic.gdx.utils.StringBuilder insert(int,double)
    1013:1014:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.Object)
    1025:1026:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.String)
    1038:1039:public com.badlogic.gdx.utils.StringBuilder insert(int,char[])
    1054:1055:public com.badlogic.gdx.utils.StringBuilder insert(int,char[],int,int)
    1068:1069:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence)
    1085:1086:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence,int,int)
    1099:1100:public com.badlogic.gdx.utils.StringBuilder replace(int,int,java.lang.String)
    1107:1108:public com.badlogic.gdx.utils.StringBuilder reverse()
com.badlogic.gdx.utils.TimSort:
    private static final int MIN_MERGE
    private static final int MIN_GALLOP
    private static final int INITIAL_TMP_STORAGE_LENGTH
    private static final boolean DEBUG
    152:171:private TimSort(java.lang.Object[],java.util.Comparator)
    179:180:static void sort(java.lang.Object[],java.util.Comparator)
    183:227:static void sort(java.lang.Object[],int,int,java.util.Comparator)
com.badlogic.gdx.utils.TimeUtils:
    21:21:public TimeUtils()
    29:29:public static long millis()
com.badlogic.gdx.utils.Timer:
    private static final int CANCELLED
    private static final int FOREVER
    62:63:public void postTask(com.badlogic.gdx.utils.Timer$Task)
    89:92:public void stop()
    105:110:public void clear()
    148:149:public static void post(com.badlogic.gdx.utils.Timer$Task)
    166:167:public static void schedule(com.badlogic.gdx.utils.Timer$Task,float,float,int)
com.badlogic.gdx.utils.Timer$Task:
    public abstract void run()
com.badlogic.gdx.utils.XmlReader:
    static final int xml_start
    static final int xml_first_final
    static final int xml_error
    static final int xml_en_elementBody
    static final int xml_en_main
com.badlogic.gdx.utils.XmlReader$Element:
    450:450:public com.badlogic.gdx.utils.ObjectMap getAttributes()
    455:458:public java.lang.String getAttribute(java.lang.String)
    462:465:public java.lang.String getAttribute(java.lang.String,java.lang.String)
    474:475:public int getChildCount()
    480:481:public com.badlogic.gdx.utils.XmlReader$Element getChild(int)
    498:499:public void removeChild(int)
    502:503:public void removeChild(com.badlogic.gdx.utils.XmlReader$Element)
    506:507:public void remove()
    510:510:public com.badlogic.gdx.utils.XmlReader$Element getParent()
    558:563:public com.badlogic.gdx.utils.XmlReader$Element getChildByName(java.lang.String)
    569:576:public com.badlogic.gdx.utils.XmlReader$Element getChildByNameRecursive(java.lang.String)
    582:588:public com.badlogic.gdx.utils.Array getChildrenByName(java.lang.String)
    594:596:public com.badlogic.gdx.utils.Array getChildrenByNameRecursively(java.lang.String)
    600:606:private void getChildrenByNameRecursively(java.lang.String,com.badlogic.gdx.utils.Array)
    610:610:public float getFloatAttribute(java.lang.String)
    614:616:public float getFloatAttribute(java.lang.String,float)
    621:621:public int getIntAttribute(java.lang.String)
    625:627:public int getIntAttribute(java.lang.String,int)
    632:632:public boolean getBooleanAttribute(java.lang.String)
    636:638:public boolean getBooleanAttribute(java.lang.String,boolean)
    644:646:public java.lang.String get(java.lang.String)
    652:660:public java.lang.String get(java.lang.String,java.lang.String)
    666:668:public int getInt(java.lang.String)
    674:676:public int getInt(java.lang.String,int)
    682:684:public float getFloat(java.lang.String)
    690:692:public float getFloat(java.lang.String,float)
    698:700:public boolean getBoolean(java.lang.String)
    706:708:public boolean getBoolean(java.lang.String,boolean)
com.badlogic.gdx.utils.XmlWriter
com.badlogic.gdx.utils.compression.CRC
com.badlogic.gdx.utils.compression.ICodeProgress
com.badlogic.gdx.utils.compression.Lzma
com.badlogic.gdx.utils.compression.Lzma$CommandLine
com.badlogic.gdx.utils.compression.lz.BinTree
com.badlogic.gdx.utils.compression.lz.InWindow
com.badlogic.gdx.utils.compression.lz.OutWindow
com.badlogic.gdx.utils.compression.lzma.Base
com.badlogic.gdx.utils.compression.lzma.Decoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2
com.badlogic.gdx.utils.compression.lzma.Encoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder
com.badlogic.gdx.utils.compression.rangecoder.Decoder
com.badlogic.gdx.utils.compression.rangecoder.Encoder
com.esotericsoftware.tablelayout.BaseTableLayout:
    public static final int CENTER
    public static final int TOP
    public static final int BOTTOM
    public static final int LEFT
    public static final int RIGHT
    public abstract void invalidateHierarchy()
    166:176:public void reset()
    206:207:public void setToolkit(com.esotericsoftware.tablelayout.Toolkit)
    259:264:public com.esotericsoftware.tablelayout.BaseTableLayout pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    269:271:public com.esotericsoftware.tablelayout.BaseTableLayout padTop(com.esotericsoftware.tablelayout.Value)
    276:278:public com.esotericsoftware.tablelayout.BaseTableLayout padLeft(com.esotericsoftware.tablelayout.Value)
    283:285:public com.esotericsoftware.tablelayout.BaseTableLayout padBottom(com.esotericsoftware.tablelayout.Value)
    290:292:public com.esotericsoftware.tablelayout.BaseTableLayout padRight(com.esotericsoftware.tablelayout.Value)
    297:302:public com.esotericsoftware.tablelayout.BaseTableLayout pad(float)
    306:311:public com.esotericsoftware.tablelayout.BaseTableLayout pad(float,float,float,float)
    345:346:public com.esotericsoftware.tablelayout.BaseTableLayout align(int)
    351:352:public com.esotericsoftware.tablelayout.BaseTableLayout center()
    357:359:public com.esotericsoftware.tablelayout.BaseTableLayout top()
    364:366:public com.esotericsoftware.tablelayout.BaseTableLayout left()
    371:373:public com.esotericsoftware.tablelayout.BaseTableLayout bottom()
    378:380:public com.esotericsoftware.tablelayout.BaseTableLayout right()
    392:394:public com.esotericsoftware.tablelayout.BaseTableLayout debugTable()
    399:401:public com.esotericsoftware.tablelayout.BaseTableLayout debugCell()
    406:408:public com.esotericsoftware.tablelayout.BaseTableLayout debugWidget()
    413:418:public com.esotericsoftware.tablelayout.BaseTableLayout debug(com.esotericsoftware.tablelayout.BaseTableLayout$Debug)
    426:426:public com.esotericsoftware.tablelayout.Value getPadTopValue()
    434:434:public com.esotericsoftware.tablelayout.Value getPadLeftValue()
    442:442:public com.esotericsoftware.tablelayout.Value getPadBottomValue()
    450:450:public com.esotericsoftware.tablelayout.Value getPadRightValue()
    458:458:public int getAlign()
    463:476:public int getRow(float)
com.esotericsoftware.tablelayout.Cell:
    129:129:public boolean hasWidget()
    134:140:public com.esotericsoftware.tablelayout.Cell size(com.esotericsoftware.tablelayout.Value)
    145:151:public com.esotericsoftware.tablelayout.Cell size(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    156:157:public com.esotericsoftware.tablelayout.Cell size(float)
    162:163:public com.esotericsoftware.tablelayout.Cell size(float,float)
    196:198:public com.esotericsoftware.tablelayout.Cell minSize(com.esotericsoftware.tablelayout.Value)
    203:205:public com.esotericsoftware.tablelayout.Cell minSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    209:210:public com.esotericsoftware.tablelayout.Cell minWidth(com.esotericsoftware.tablelayout.Value)
    214:215:public com.esotericsoftware.tablelayout.Cell minHeight(com.esotericsoftware.tablelayout.Value)
    220:222:public com.esotericsoftware.tablelayout.Cell minSize(float)
    227:229:public com.esotericsoftware.tablelayout.Cell minSize(float,float)
    233:234:public com.esotericsoftware.tablelayout.Cell minWidth(float)
    238:239:public com.esotericsoftware.tablelayout.Cell minHeight(float)
    244:246:public com.esotericsoftware.tablelayout.Cell prefSize(com.esotericsoftware.tablelayout.Value)
    251:253:public com.esotericsoftware.tablelayout.Cell prefSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    257:258:public com.esotericsoftware.tablelayout.Cell prefWidth(com.esotericsoftware.tablelayout.Value)
    262:263:public com.esotericsoftware.tablelayout.Cell prefHeight(com.esotericsoftware.tablelayout.Value)
    268:270:public com.esotericsoftware.tablelayout.Cell prefSize(float,float)
    275:277:public com.esotericsoftware.tablelayout.Cell prefSize(float)
    281:282:public com.esotericsoftware.tablelayout.Cell prefWidth(float)
    286:287:public com.esotericsoftware.tablelayout.Cell prefHeight(float)
    292:294:public com.esotericsoftware.tablelayout.Cell maxSize(com.esotericsoftware.tablelayout.Value)
    299:301:public com.esotericsoftware.tablelayout.Cell maxSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    305:306:public com.esotericsoftware.tablelayout.Cell maxWidth(com.esotericsoftware.tablelayout.Value)
    310:311:public com.esotericsoftware.tablelayout.Cell maxHeight(com.esotericsoftware.tablelayout.Value)
    316:318:public com.esotericsoftware.tablelayout.Cell maxSize(float)
    323:325:public com.esotericsoftware.tablelayout.Cell maxSize(float,float)
    329:330:public com.esotericsoftware.tablelayout.Cell maxWidth(float)
    334:335:public com.esotericsoftware.tablelayout.Cell maxHeight(float)
    340:344:public com.esotericsoftware.tablelayout.Cell space(com.esotericsoftware.tablelayout.Value)
    348:352:public com.esotericsoftware.tablelayout.Cell space(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    356:357:public com.esotericsoftware.tablelayout.Cell spaceTop(com.esotericsoftware.tablelayout.Value)
    361:362:public com.esotericsoftware.tablelayout.Cell spaceLeft(com.esotericsoftware.tablelayout.Value)
    366:367:public com.esotericsoftware.tablelayout.Cell spaceBottom(com.esotericsoftware.tablelayout.Value)
    371:372:public com.esotericsoftware.tablelayout.Cell spaceRight(com.esotericsoftware.tablelayout.Value)
    387:395:public com.esotericsoftware.tablelayout.Cell space(float,float,float,float)
    424:428:public com.esotericsoftware.tablelayout.Cell pad(com.esotericsoftware.tablelayout.Value)
    432:436:public com.esotericsoftware.tablelayout.Cell pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    440:441:public com.esotericsoftware.tablelayout.Cell padTop(com.esotericsoftware.tablelayout.Value)
    445:446:public com.esotericsoftware.tablelayout.Cell padLeft(com.esotericsoftware.tablelayout.Value)
    450:451:public com.esotericsoftware.tablelayout.Cell padBottom(com.esotericsoftware.tablelayout.Value)
    455:456:public com.esotericsoftware.tablelayout.Cell padRight(com.esotericsoftware.tablelayout.Value)
    517:519:public com.esotericsoftware.tablelayout.Cell fill(java.lang.Float,java.lang.Float)
    524:526:public com.esotericsoftware.tablelayout.Cell fill(boolean,boolean)
    531:533:public com.esotericsoftware.tablelayout.Cell fill(boolean)
    539:540:public com.esotericsoftware.tablelayout.Cell align(java.lang.Integer)
    573:579:public com.esotericsoftware.tablelayout.Cell bottom()
    602:603:public com.esotericsoftware.tablelayout.Cell expandX()
    608:609:public com.esotericsoftware.tablelayout.Cell expandY()
    613:615:public com.esotericsoftware.tablelayout.Cell expand(java.lang.Integer,java.lang.Integer)
    620:622:public com.esotericsoftware.tablelayout.Cell expand(boolean,boolean)
    626:627:public com.esotericsoftware.tablelayout.Cell ignore(java.lang.Boolean)
    632:633:public com.esotericsoftware.tablelayout.Cell ignore()
    647:649:public com.esotericsoftware.tablelayout.Cell uniform()
    660:661:public com.esotericsoftware.tablelayout.Cell uniformY()
    665:667:public com.esotericsoftware.tablelayout.Cell uniform(java.lang.Boolean,java.lang.Boolean)
    703:703:public int getColumn()
    707:707:public int getRow()
    712:712:public com.esotericsoftware.tablelayout.Value getMinWidthValue()
    716:716:public float getMinWidth()
    721:721:public com.esotericsoftware.tablelayout.Value getMinHeightValue()
    725:725:public float getMinHeight()
    730:730:public com.esotericsoftware.tablelayout.Value getPrefWidthValue()
    734:734:public float getPrefWidth()
    739:739:public com.esotericsoftware.tablelayout.Value getPrefHeightValue()
    743:743:public float getPrefHeight()
    748:748:public com.esotericsoftware.tablelayout.Value getMaxWidthValue()
    752:752:public float getMaxWidth()
    757:757:public com.esotericsoftware.tablelayout.Value getMaxHeightValue()
    761:761:public float getMaxHeight()
    766:766:public com.esotericsoftware.tablelayout.Value getSpaceTopValue()
    770:770:public float getSpaceTop()
    775:775:public com.esotericsoftware.tablelayout.Value getSpaceLeftValue()
    779:779:public float getSpaceLeft()
    784:784:public com.esotericsoftware.tablelayout.Value getSpaceBottomValue()
    788:788:public float getSpaceBottom()
    793:793:public com.esotericsoftware.tablelayout.Value getSpaceRightValue()
    797:797:public float getSpaceRight()
    802:802:public com.esotericsoftware.tablelayout.Value getPadTopValue()
    806:806:public float getPadTop()
    811:811:public com.esotericsoftware.tablelayout.Value getPadLeftValue()
    815:815:public float getPadLeft()
    820:820:public com.esotericsoftware.tablelayout.Value getPadBottomValue()
    824:824:public float getPadBottom()
    829:829:public com.esotericsoftware.tablelayout.Value getPadRightValue()
    833:833:public float getPadRight()
    838:838:public java.lang.Float getFillX()
    843:843:public java.lang.Float getFillY()
    848:848:public java.lang.Integer getAlign()
    853:853:public java.lang.Integer getExpandX()
    858:858:public java.lang.Integer getExpandY()
    863:863:public java.lang.Integer getColspan()
    868:868:public java.lang.Boolean getUniformX()
    873:873:public java.lang.Boolean getUniformY()
    878:878:public boolean isEndRow()
    883:883:public float getComputedPadTop()
    888:888:public float getComputedPadLeft()
    893:893:public float getComputedPadBottom()
    898:898:public float getComputedPadRight()
    902:902:public com.esotericsoftware.tablelayout.Cell row()
    906:906:public com.esotericsoftware.tablelayout.BaseTableLayout getLayout()
com.esotericsoftware.tablelayout.Toolkit:
    public abstract float getWidth(java.lang.Object)
    public abstract float getHeight(java.lang.Object)
com.esotericsoftware.tablelayout.Value:
    172:172:public static com.esotericsoftware.tablelayout.Value percentWidth(float)
    181:181:public static com.esotericsoftware.tablelayout.Value percentHeight(float)
    190:190:public static com.esotericsoftware.tablelayout.Value percentWidth(float,java.lang.Object)
    203:203:public static com.esotericsoftware.tablelayout.Value percentHeight(float,java.lang.Object)
com.esotericsoftware.tablelayout.Value$10
com.esotericsoftware.tablelayout.Value$11
com.esotericsoftware.tablelayout.Value$8
com.esotericsoftware.tablelayout.Value$9
com.esotericsoftware.tablelayout.Value$FixedValue:
    98:99:public void set(float)
com.esotericsoftware.tablelayout.Value$TableValue
com.mazalearn.scienceengine.AbstractPlatformAdapter:
    35:36:public void showExternalURL(java.lang.String)
    39:43:private void showFileUri(com.badlogic.gdx.files.FileHandle)
    47:48:public void showInternalURL(java.lang.String)
    76:76:public com.badlogic.gdx.graphics.g2d.BitmapFont loadFont(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.mazalearn.scienceengine.AndroidPlatformAdapter:
    private static final int PAUSE_MS
    private static final java.lang.String HINDI_TTF
    private static final java.lang.String KANNADA_TTF
    63:64:public void showExternalURL(java.lang.String)
    68:72:private void showFileUri(java.lang.String,java.lang.String)
    76:77:public void showInternalURL(java.lang.String)
    199:212:public com.badlogic.gdx.graphics.g2d.BitmapFont loadFont(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    239:244:public java.lang.String getUserEmail()
com.mazalearn.scienceengine.BuildConfig
com.mazalearn.scienceengine.Installation:
    private static final java.lang.String INSTALLATION
    10:10:public Installation()
com.mazalearn.scienceengine.MainActivity:
    static final int TTS_CHECK
    83:83:java.lang.String findAndroidId()
com.mazalearn.scienceengine.Messages:
    private static final java.lang.String BUNDLE_NAME
com.mazalearn.scienceengine.NonWebPlatformAdapter:
    private static final java.lang.String BODY_DELIMITER
com.mazalearn.scienceengine.R
com.mazalearn.scienceengine.R$attr
com.mazalearn.scienceengine.R$drawable
com.mazalearn.scienceengine.R$id
com.mazalearn.scienceengine.R$layout
com.mazalearn.scienceengine.R$string
com.mazalearn.scienceengine.ScienceEngine:
    public static final java.lang.String USER
com.mazalearn.scienceengine.ScreenComponent:
    public static final java.lang.String CORE_GROUP
    public static final java.lang.String TUTOR_GROUP
    public static final java.lang.String ACTIVITY_GROUP
    public static final java.lang.String HELP_TOUR
    public static final int PIXELS_PER_M
    private static final int CANONICAL_VIEWPORT_HEIGHT
    private static final int CANONICAL_VIEWPORT_WIDTH
    private static final int CANONICAL_FONT_SIZE
    156:161:public static com.mazalearn.scienceengine.ScreenComponent valueOf(com.mazalearn.scienceengine.core.model.IComponentType)
com.mazalearn.scienceengine.Topic:
    private static final java.lang.String PRODUCT_PREFIX
    85:85:public com.mazalearn.scienceengine.Topic idToTopic(int)
com.mazalearn.scienceengine.app.dialogs.AboutDialog:
    private static final java.lang.String COPYRIGHTS_FILE
com.mazalearn.scienceengine.app.dialogs.AboutDialog$Copyright:
    java.lang.String year
    138:145:java.lang.String toString(java.lang.String)
com.mazalearn.scienceengine.app.dialogs.AppRater:
    private static final java.lang.String APP_TITLE
    private static final java.lang.String APP_PNAME
    private static final int DAYS_UNTIL_PROMPT
    private static final int LAUNCHES_UNTIL_PROMPT
    17:17:public AppRater()
com.mazalearn.scienceengine.app.dialogs.PurchaseDialog:
    private static final java.lang.String PURCHASE_FLOW
com.mazalearn.scienceengine.app.dialogs.UserHomeDialog:
    private static final int GIFT_WIDTH
    static final int GIFT_HEIGHT
    private static final int CERTIFICATE_WIDTH
    private static final int CERTIFICATE_HEIGHT
    private static final boolean ENABLE_SOCIAL
com.mazalearn.scienceengine.app.screens.ChooseTopicScreen:
    private static final int THUMBNAIL_WIDTH
    private static final int THUMBNAIL_HEIGHT
com.mazalearn.scienceengine.app.screens.LoadingScreen:
    private static final float INCREMENT
com.mazalearn.scienceengine.app.screens.OverlayImage
com.mazalearn.scienceengine.app.screens.TopicHomeScreen:
    private static final int RESOURCE_WIDTH
    public static final int THUMBNAIL_WIDTH
    public static final int THUMBNAIL_HEIGHT
    private static final int RESOURCE_INFO_HEIGHT
com.mazalearn.scienceengine.app.services.InstallData:
    public static final java.lang.String PNG
    public static final java.lang.String USER_IDS
    public static final java.lang.String INSTALL_DATA
    public java.lang.String installName
    public java.lang.String enterpriseId
    public java.lang.String pngEnterpriseLogo
    public java.lang.String enterpriseName
    public java.lang.String expiryDate
com.mazalearn.scienceengine.app.services.InstallProfile:
    48:48:public java.lang.String getEnterpriseName()
    52:52:public java.lang.String getEnterpriseId()
    71:72:public com.badlogic.gdx.graphics.Pixmap getEnterpriseLogo()
    84:84:public java.lang.String getInstallationName()
com.mazalearn.scienceengine.app.services.MusicManager:
    private static final float ATTENUATION
    135:135:public float getVolume()
com.mazalearn.scienceengine.app.services.PreferencesManager:
    private static final java.lang.String SERVER_PROFILE_PREFIX
    private static final java.lang.String SYNC_PROFILES
    private static final java.lang.String INSTALL_PROFILE
    private static final java.lang.String PREF_VOLUME
    private static final java.lang.String PREF_MUSIC_ENABLED
    private static final java.lang.String PREF_SPEECH_ENABLED
    private static final java.lang.String PREF_SOUND_ENABLED
    private static final java.lang.String PREFS_NAME
    private static final java.lang.String PREFS_SYNC_MODE
com.mazalearn.scienceengine.app.services.Profile:
    public static final java.lang.String GUEST
    226:230:void testPostInMessage(com.mazalearn.scienceengine.app.services.ProfileData$Social$Message)
    233:233:public java.util.List getOutbox()
    406:406:public int getLaunchCount()
com.mazalearn.scienceengine.app.services.ProfileData:
    public static final java.lang.String USER_EMAIL
    public static final java.lang.String INSTALL_ID
    public static final java.lang.String USER_NAME
    public static final java.lang.String USER_ID
    public static final java.lang.String LAST_UPDATED
    public static final java.lang.String SEX
    public static final java.lang.String GRADE
    public static final java.lang.String SCHOOL
    public static final java.lang.String CITY
    public static final java.lang.String COMMENTS
    public static final java.lang.String COLOR
    public static final java.lang.String CURRENT
    public static final java.lang.String PNG
    public static final java.lang.String SOCIAL
    public static final java.lang.String CLIENT_PROPS
    public static final java.lang.String SERVER_PROPS
    public static final java.lang.String TOPIC_STATS
    public static final java.lang.String LAST_SYNC_TIME
    public static final java.lang.String COACH_PNG
    public static final java.lang.String USER_PNG
    public static final java.lang.String THIS_SYNC_TIME
    public static final java.lang.String SERVER_TIME_STAMPS
com.mazalearn.scienceengine.app.services.ProfileData$ClientProps:
    public java.lang.String userEmail
com.mazalearn.scienceengine.app.services.ProfileData$ServerProps:
    public java.lang.String sex
    public java.lang.String grade
    public java.lang.String school
    public java.lang.String city
    public java.lang.String comments
    public java.lang.String registrationDate
com.mazalearn.scienceengine.app.services.ProfileSyncer:
    public static final long FORCED_SYNC
    21:22:public static void setTestCurrentTime(long)
    105:121:public java.util.Map doSync(java.util.Map,java.util.Map,java.util.Map,java.util.Map)
com.mazalearn.scienceengine.app.services.loaders.CircuitLoader:
    10:10:public CircuitLoader()
com.mazalearn.scienceengine.app.services.loaders.ConfigLoader:
    10:10:public ConfigLoader()
com.mazalearn.scienceengine.app.services.loaders.GroupLoader:
    9:9:public GroupLoader()
com.mazalearn.scienceengine.app.services.loaders.Trivia:
    private static final java.lang.String TRIVIA_FILE_NAME
com.mazalearn.scienceengine.app.utils.Crypter:
    private static final java.lang.String SALT
    private static final java.lang.String XLATE
    10:10:public Crypter()
    41:42:public static void setSha1Implementor(com.mazalearn.scienceengine.app.utils.Crypter$Sha1)
com.mazalearn.scienceengine.app.utils.Format:
    3:3:public Format()
com.mazalearn.scienceengine.app.utils.IPlatformAdapter:
    public abstract void showExternalURL(java.lang.String)
    public abstract void showInternalURL(java.lang.String)
    public abstract com.badlogic.gdx.graphics.g2d.BitmapFont loadFont(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    public abstract java.lang.String getDeviceId()
com.mazalearn.scienceengine.app.utils.ImageList
com.mazalearn.scienceengine.app.utils.LevelUtil:
    11:11:public LevelUtil()
com.mazalearn.scienceengine.app.utils.ProfileMapConverter:
    11:11:public ProfileMapConverter()
com.mazalearn.scienceengine.app.utils.ScreenUtils:
    private static final int NUM_ENGINE_WHEELS
    34:34:public ScreenUtils()
    167:172:public static com.badlogic.gdx.scenes.scene2d.ui.TextButton createTextButton(java.lang.String,float,float,float,float,com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle)
com.mazalearn.scienceengine.app.utils.ServerConstants
com.mazalearn.scienceengine.billing.Base64:
    public static final boolean ENCODE
    public static final boolean DECODE
    private static final byte EQUALS_SIGN
    private static final byte NEW_LINE
    private static final byte WHITE_SPACE_ENC
    private static final byte EQUALS_SIGN_ENC
    210:234:private static byte[] encode3to4(byte[],int,int,byte[],int,byte[])
    247:247:public static java.lang.String encode(byte[])
    258:258:public static java.lang.String encodeWebSafe(byte[],boolean)
    274:286:public static java.lang.String encode(byte[],int,int,byte[],boolean)
    301:345:public static byte[] encode(byte[],int,int,byte[],int)
    431:432:public static byte[] decodeWebSafe(java.lang.String)
    445:445:public static byte[] decode(byte[])
    458:458:public static byte[] decodeWebSafe(byte[])
    489:489:public static byte[] decodeWebSafe(byte[],int,int)
com.mazalearn.scienceengine.billing.Base64DecoderException:
    private static final long serialVersionUID
com.mazalearn.scienceengine.billing.IBilling:
    public static final int REQUEST_CODE
com.mazalearn.scienceengine.billing.IabHelper:
    public static final int BILLING_RESPONSE_RESULT_OK
    public static final int BILLING_RESPONSE_RESULT_USER_CANCELED
    public static final int BILLING_RESPONSE_RESULT_BILLING_UNAVAILABLE
    public static final int BILLING_RESPONSE_RESULT_ITEM_UNAVAILABLE
    public static final int BILLING_RESPONSE_RESULT_DEVELOPER_ERROR
    public static final int BILLING_RESPONSE_RESULT_ERROR
    public static final int BILLING_RESPONSE_RESULT_ITEM_ALREADY_OWNED
    public static final int BILLING_RESPONSE_RESULT_ITEM_NOT_OWNED
    public static final int IABHELPER_ERROR_BASE
    public static final int IABHELPER_REMOTE_EXCEPTION
    public static final int IABHELPER_BAD_RESPONSE
    public static final int IABHELPER_VERIFICATION_FAILED
    public static final int IABHELPER_SEND_INTENT_FAILED
    public static final int IABHELPER_USER_CANCELLED
    public static final int IABHELPER_UNKNOWN_PURCHASE_RESPONSE
    public static final int IABHELPER_MISSING_TOKEN
    public static final int IABHELPER_UNKNOWN_ERROR
    public static final int IABHELPER_SUBSCRIPTIONS_NOT_AVAILABLE
    public static final int IABHELPER_INVALID_CONSUMPTION
    public static final java.lang.String RESPONSE_CODE
    public static final java.lang.String RESPONSE_GET_SKU_DETAILS_LIST
    public static final java.lang.String RESPONSE_BUY_INTENT
    public static final java.lang.String RESPONSE_INAPP_PURCHASE_DATA
    public static final java.lang.String RESPONSE_INAPP_SIGNATURE
    public static final java.lang.String RESPONSE_INAPP_ITEM_LIST
    public static final java.lang.String RESPONSE_INAPP_PURCHASE_DATA_LIST
    public static final java.lang.String RESPONSE_INAPP_SIGNATURE_LIST
    public static final java.lang.String INAPP_CONTINUATION_TOKEN
    public static final java.lang.String ITEM_TYPE_INAPP
    public static final java.lang.String ITEM_TYPE_SUBS
    public static final java.lang.String GET_SKU_DETAILS_ITEM_LIST
    public static final java.lang.String GET_SKU_DETAILS_ITEM_TYPE_LIST
    171:173:public void enableDebugLogging(boolean,java.lang.String)
    294:294:public boolean subscriptionsSupported()
    324:325:public void launchPurchaseFlow(android.app.Activity,java.lang.String,int,com.mazalearn.scienceengine.billing.IabHelper$OnIabPurchaseFinishedListener)
    329:330:public void launchPurchaseFlow(android.app.Activity,java.lang.String,int,com.mazalearn.scienceengine.billing.IabHelper$OnIabPurchaseFinishedListener,java.lang.String)
    334:335:public void launchSubscriptionPurchaseFlow(android.app.Activity,java.lang.String,int,com.mazalearn.scienceengine.billing.IabHelper$OnIabPurchaseFinishedListener)
    339:340:public void launchSubscriptionPurchaseFlow(android.app.Activity,java.lang.String,int,com.mazalearn.scienceengine.billing.IabHelper$OnIabPurchaseFinishedListener,java.lang.String)
    621:622:public void queryInventoryAsync(com.mazalearn.scienceengine.billing.IabHelper$QueryInventoryFinishedListener)
    639:668:void consume(com.mazalearn.scienceengine.billing.Purchase)
    706:710:public void consumeAsync(com.mazalearn.scienceengine.billing.Purchase,com.mazalearn.scienceengine.billing.IabHelper$OnConsumeFinishedListener)
    718:720:public void consumeAsync(java.util.List,com.mazalearn.scienceengine.billing.IabHelper$OnConsumeMultiFinishedListener)
    919:951:void consumeAsyncInternal(java.util.List,com.mazalearn.scienceengine.billing.IabHelper$OnConsumeFinishedListener,com.mazalearn.scienceengine.billing.IabHelper$OnConsumeMultiFinishedListener)
com.mazalearn.scienceengine.billing.IabHelper$3
com.mazalearn.scienceengine.billing.IabHelper$3$1
com.mazalearn.scienceengine.billing.IabHelper$3$2
com.mazalearn.scienceengine.billing.IabHelper$OnConsumeFinishedListener
com.mazalearn.scienceengine.billing.IabHelper$OnConsumeMultiFinishedListener
com.mazalearn.scienceengine.billing.Inventory:
    41:41:public com.mazalearn.scienceengine.billing.Purchase getPurchase(java.lang.String)
    46:46:public boolean hasPurchase(java.lang.String)
    51:51:public boolean hasDetails(java.lang.String)
    63:64:public void erasePurchase(java.lang.String)
    82:82:java.util.List getAllPurchases()
com.mazalearn.scienceengine.billing.Purchase:
    java.lang.String orderId
    java.lang.String packageName
    long purchaseTime
    int purchaseState
    44:44:public java.lang.String getOrderId()
    45:45:public java.lang.String getPackageName()
    47:47:public long getPurchaseTime()
    48:48:public int getPurchaseState()
    51:51:public java.lang.String getOriginalJson()
    52:52:public java.lang.String getSignature()
com.mazalearn.scienceengine.billing.Security:
    private static final java.lang.String TAG
    private static final java.lang.String KEY_FACTORY_ALGORITHM
    private static final java.lang.String SIGNATURE_ALGORITHM
    36:36:public Security()
    65:65:public static java.lang.String getSharedSecret()
com.mazalearn.scienceengine.billing.Security$Logger:
    51:51:public void i(java.lang.String,java.lang.String)
com.mazalearn.scienceengine.billing.SkuDetails:
    java.lang.String type
    java.lang.String title
    34:40:public SkuDetails(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
    50:50:public java.lang.String getType()
    52:52:public java.lang.String getTitle()
com.mazalearn.scienceengine.core.controller.AbstractModelConfig:
    32:33:public AbstractModelConfig(com.mazalearn.scienceengine.core.model.Science2DBody,com.mazalearn.scienceengine.core.model.IParameter,java.lang.String)
com.mazalearn.scienceengine.core.controller.AbstractScience2DController:
    105:105:public com.badlogic.gdx.scenes.scene2d.ui.Skin getSkin()
com.mazalearn.scienceengine.core.controller.CheckBoxControl
com.mazalearn.scienceengine.core.controller.CheckBoxControl$1
com.mazalearn.scienceengine.core.controller.CommandButtonControl:
    23:24:public CommandButtonControl(com.mazalearn.scienceengine.core.controller.IModelConfig,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.mazalearn.scienceengine.core.controller.IScience2DController:
    public abstract com.badlogic.gdx.scenes.scene2d.ui.Skin getSkin()
com.mazalearn.scienceengine.core.controller.RadioControl
com.mazalearn.scienceengine.core.controller.RadioControl$1
com.mazalearn.scienceengine.core.controller.SliderControl:
    private static final float DELTA
com.mazalearn.scienceengine.core.controller.ToggleButtonControl:
    22:23:public ToggleButtonControl(com.mazalearn.scienceengine.core.controller.IModelConfig,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.mazalearn.scienceengine.core.lang.Event:
    22:24:public Event(java.lang.String,java.lang.String,java.lang.String)
    27:29:public Event(java.lang.String,java.lang.String,boolean)
    58:63:public java.lang.String svalue()
    67:72:public boolean bvalue()
    76:76:public float getTime()
com.mazalearn.scienceengine.core.lang.Example
com.mazalearn.scienceengine.core.lang.Expr:
    public static final int ADD
    public static final int SUB
    public static final int MUL
    public static final int DIV
    public static final int POW
    public static final int ATAN2
    public static final int MAX
    public static final int MIN
    public static final int LT
    public static final int LE
    public static final int EQ
    public static final int NE
    public static final int GE
    public static final int GT
    public static final int AND
    public static final int OR
    public static final int ABS
    public static final int ACOS
    public static final int ASIN
    public static final int ATAN
    public static final int CEIL
    public static final int COS
    public static final int EXP
    public static final int FLOOR
    public static final int LOG
    public static final int NEG
    public static final int ROUND
    public static final int SIN
    public static final int SQRT
    public static final int TAN
    public static final int NOT
    public static final int FUNCTION
com.mazalearn.scienceengine.core.lang.Parser:
    private static final java.lang.String operatorChars
    71:71:static com.mazalearn.scienceengine.core.lang.Expr parse(java.lang.String)
    88:94:public void allow(com.mazalearn.scienceengine.core.lang.Variable)
    317:317:boolean tryCorrections()
    321:341:private boolean tryInsertions()
    345:358:private boolean tryDeletions()
    362:377:private boolean trySubstitutions()
    382:406:private com.mazalearn.scienceengine.core.lang.Token[] possibleInsertions(com.mazalearn.scienceengine.core.lang.Token)
    410:410:private com.mazalearn.scienceengine.core.lang.Token[] possibleSubstitutions(com.mazalearn.scienceengine.core.lang.Token)
com.mazalearn.scienceengine.core.lang.RegressionTest
com.mazalearn.scienceengine.core.lang.RegressionTest$1
com.mazalearn.scienceengine.core.lang.RegressionTest$2
com.mazalearn.scienceengine.core.lang.RegressionTest$3
com.mazalearn.scienceengine.core.lang.Scanner:
    27:27:public java.lang.String getInput()
    61:61:public boolean isEmpty()
    65:65:public boolean atStart()
com.mazalearn.scienceengine.core.lang.SyntaxException:
    private static final long serialVersionUID
    public static final int INCOMPLETE
    public static final int BAD_FACTOR
    public static final int PREMATURE_EOF
    public static final int EXPECTED
    public static final int UNKNOWN_VARIABLE
    61:71:public java.lang.String explain()
    83:107:private void explainWhere(java.lang.StringBuffer)
    110:133:private void explainWhy(java.lang.StringBuffer)
    136:142:private void explainWhat(java.lang.StringBuffer)
    145:145:private java.lang.String tryToFix()
    149:152:private void quotify(java.lang.StringBuffer,java.lang.String)
    155:157:private java.lang.String asFarAs()
    161:161:private java.lang.String theToken()
    165:166:private boolean isLegalToken()
com.mazalearn.scienceengine.core.lang.Token:
    public static final int TT_ERROR
    public static final int TT_EOF
    public static final int TT_NUMBER
    public static final int TT_WORD
    public static final int TT_LE
    public static final int TT_NE
    public static final int TT_GE
    public static final int TT_STRING
    39:46:Token(int,double,java.lang.String,com.mazalearn.scienceengine.core.lang.Token)
com.mazalearn.scienceengine.core.model.AbstractScience2DModel:
    private static final java.lang.String NUM_REVOLUTIONS
    private static final java.lang.String ANGLE
    private static final java.lang.String ANGULAR_VELOCITY
    private static final java.lang.String VELOCITY
com.mazalearn.scienceengine.core.model.CoreComponentType:
    14:14:public java.lang.String getLocalizedName()
com.mazalearn.scienceengine.core.model.DummyBody:
    49:54:public void setConfigParameter(com.mazalearn.scienceengine.core.model.IParameter,float)
com.mazalearn.scienceengine.core.model.DummyBody$ProbeConfig:
    28:30:public void setConfigParameter(com.mazalearn.scienceengine.core.model.IParameter)
com.mazalearn.scienceengine.core.model.IBody
com.mazalearn.scienceengine.core.model.IComponentType:
    public abstract java.lang.String getLocalizedName()
com.mazalearn.scienceengine.core.model.IParameter:
    public abstract java.lang.String toString()
com.mazalearn.scienceengine.core.model.Parameter:
    25:30:public static com.mazalearn.scienceengine.core.model.Parameter valueOf(com.mazalearn.scienceengine.core.model.IComponentType)
com.mazalearn.scienceengine.core.model.Science2DBody:
    140:142:public void setPositionAndAngle(float,float,float)
    145:145:public static com.badlogic.gdx.physics.box2d.World getBox2DWorld()
    210:215:public com.mazalearn.scienceengine.core.controller.IModelConfig findConfig(com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter)
    232:232:public com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float)
    237:238:public void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture)
    242:243:public void setTransform(com.badlogic.gdx.math.Vector2,float)
    247:248:public void setTransform(float,float,float)
    252:252:public com.badlogic.gdx.physics.box2d.Transform getTransform()
    276:276:public com.badlogic.gdx.math.Vector2 getLocalCenter()
    311:312:public void applyForce(float,float,float,float)
    316:317:public void applyForceToCenter(com.badlogic.gdx.math.Vector2)
    321:322:public void applyForceToCenter(float,float)
    326:327:public void applyTorque(float)
    331:332:public void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    337:338:public void applyLinearImpulse(float,float,float,float)
    342:343:public void applyAngularImpulse(float)
    347:347:public float getMass()
    352:352:public float getInertia()
    357:357:public com.badlogic.gdx.physics.box2d.MassData getMassData()
    362:363:public void setMassData(com.badlogic.gdx.physics.box2d.MassData)
    367:368:public void resetMassData()
    377:377:public com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2)
    387:387:public com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2)
    392:392:public com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2)
    397:397:public com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2)
    402:402:public float getLinearDamping()
    407:408:public void setLinearDamping(float)
    412:412:public float getAngularDamping()
    432:433:public void setBullet(boolean)
    437:437:public boolean isBullet()
    442:443:public void setSleepingAllowed(boolean)
    447:447:public boolean isSleepingAllowed()
    452:453:public void setAwake(boolean)
    457:457:public boolean isAwake()
    472:473:public void setFixedRotation(boolean)
    477:477:public boolean isFixedRotation()
    482:482:public java.util.ArrayList getFixtureList()
    487:487:public java.util.ArrayList getJointList()
    492:492:public float getGravityScale()
    497:498:public void setGravityScale(float)
    502:502:public com.badlogic.gdx.physics.box2d.World getWorld()
    507:507:public java.lang.Object getUserData()
    512:513:public void setUserData(java.lang.Object)
com.mazalearn.scienceengine.core.view.AbstractScience2DView:
    114:114:public boolean isTutoringInProgress()
com.mazalearn.scienceengine.core.view.AnimateAction:
    12:12:public AnimateAction()
com.mazalearn.scienceengine.core.view.CoachDrawingActor:
    private static final int LINE_WIDTH
    private static final float SCALE
    private static final int WHEEL_DIA
    private static final int COACH_HEIGHT
    private static final int COACH_WIDTH
    private static final int WHEEL_OFFSET
com.mazalearn.scienceengine.core.view.DrawingActor:
    public static final int FACE_HEIGHT
    public static final int FACE_WIDTH
    130:130:public boolean hasChangedSinceSnapshot()
    182:182:public com.mazalearn.scienceengine.core.view.DrawingActor$Face getFace()
com.mazalearn.scienceengine.core.view.Helper
com.mazalearn.scienceengine.core.view.Helper$1
com.mazalearn.scienceengine.core.view.Helper$2
com.mazalearn.scienceengine.core.view.Helper$2$1
com.mazalearn.scienceengine.core.view.IScience2DView:
    public abstract boolean isTutoringInProgress()
    public abstract com.mazalearn.scienceengine.core.view.ViewControls getViewControls()
com.mazalearn.scienceengine.core.view.Parameter
com.mazalearn.scienceengine.core.view.Science2DActor:
    protected static final float TOLERANCE
    float px
    float py
    float pbx
    float pby
    float pa
    210:220:public void debugDraw(com.badlogic.gdx.graphics.g2d.SpriteBatch)
com.mazalearn.scienceengine.core.view.Science2DGestureDetector$Science2DGestureAdapter:
    private static final float TOLERANCE
com.mazalearn.scienceengine.core.view.ViewControls:
    private static final int VIEW_BUTTON_HEIGHT
    private static final int VIEW_BUTTON_WIDTH
com.mazalearn.scienceengine.designer.LevelEditor:
    private static final float THUMBNAIL_SCALE
    480:482:public boolean scrolled(int)
com.mazalearn.scienceengine.designer.PngWriter:
    private static final java.lang.String CONTENT_TYPE
    41:41:public PngWriter()
    52:52:public static java.lang.String getContentType()
com.mazalearn.scienceengine.domains.electromagnetism.model.AbstractMagnet:
    private static final float TOLERANCE
    127:129:protected void scaleSize(float)
com.mazalearn.scienceengine.domains.electromagnetism.model.Ammeter:
    public static final float CURRENT_AMPLITUDE_THRESHOLD
    private static final float MAX_NEEDLE_ANGLE
    private static final float HYSTERESIS
    private static final int SMOOTH
com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet:
    public static final float MAX_STRENGTH
    private static final float GRID_MAGNET_STRENGTH
    private static final float INTERNAL_GRID_SPACING
    private static final float EXTERNAL_NEAR_GRID_SPACING
    private static final float EXTERNAL_FAR_GRID_SPACING
    private static final java.lang.String BX_INTERNAL_RESOURCE_NAME
    private static final java.lang.String BY_INTERNAL_RESOURCE_NAME
    private static final java.lang.String BX_EXTERNAL_NEAR_RESOURCE_NAME
    private static final java.lang.String BY_EXTERNAL_NEAR_RESOURCE_NAME
    private static final java.lang.String BX_EXTERNAL_FAR_RESOURCE_NAME
    private static final java.lang.String BY_EXTERNAL_FAR_RESOURCE_NAME
    private static final float PERIPHERY_SCALE_DOWN
    private static final float MODEL_SCALE
com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet$Grid:
    private static final java.lang.String TOKEN_DELIMITER
com.mazalearn.scienceengine.domains.electromagnetism.model.Charge:
    private static final float MAX_STRENGTH
com.mazalearn.scienceengine.domains.electromagnetism.model.Clamp:
    3:3:public Clamp()
com.mazalearn.scienceengine.domains.electromagnetism.model.Compass:
    49:49:public float getBField()
com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType:
    35:35:public java.lang.String getLocalizedName()
    39:44:public static com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType valueOf(com.mazalearn.scienceengine.core.model.IComponentType)
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil:
    private static final float OUTPUT_SCALE
    128:128:public float getWidth()
    132:132:public float getHeight()
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource:
    private static final float MIN_STEPS_PER_CYCLE
    public static final float DEFAULT_MAX_CURRENT
    private static final float TOLERANCE
com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo:
    private static final float TOLERANCE
    private static final float SCALE_OUTPUT
com.mazalearn.scienceengine.domains.electromagnetism.model.ElectroMagnet:
    private static final float OUTPUT_SCALE
    private static final float TOLERANCE
    private static final int ELECTROMAGNET_LOOPS_MAX
    private static final float MAX_EMF
    public static final float DISPLAY_WIDTH
    public static final float CANONICAL_RADIUS
    private static final float COIL_WIDTH
    240:240:public float getCoilWidth()
com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter:
    private static final float X_SPACE
    private static final float Y_SPACE
    111:111:public float getBField()
com.mazalearn.scienceengine.domains.electromagnetism.model.HorseshoeMagnet:
    private static final float B_FIELD_MAGNITUDE
com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb:
    public static final double CURRENT_AMPLITUDE_THRESHOLD
com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet:
    private static final int CANONICAL_WIDTH
    private static final int CANONICAL_HEIGHT
    private static final int CANONICAL_AREA
    106:106:public float getMaxWidth()
com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$MagnetType:
    private static final float OUTPUT_SCALE
com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField:
    public static final float MAX_STRENGTH
    53:53:public float getStrength()
com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole:
    private static final float MAX_STRENGTH
com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter:
    42:47:public static com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter valueOf(com.mazalearn.scienceengine.core.model.IComponentType)
com.mazalearn.scienceengine.domains.electromagnetism.model.PickupCoil:
    private static final boolean DEBUG_CALIBRATION
    private static final float MIN_PICKUP_LOOP_RADIUS
    private static final int NUM_SAMPLE_POINTS
    private static final float TOLERANCE
    125:125:public com.badlogic.gdx.math.Vector2[] getSamplePoints()
    139:145:public void setCalibrationEmf(float)
    148:148:public double getCalibrationEmf()
com.mazalearn.scienceengine.domains.electromagnetism.model.Wire:
    private static final int OUTPUT_SCALE
    86:86:public com.badlogic.gdx.math.Vector2 getBForce()
com.mazalearn.scienceengine.domains.electromagnetism.tutor.TutorType:
    26:26:public java.lang.String getLocalizedName()
com.mazalearn.scienceengine.domains.electromagnetism.view.ChargeActor:
    protected static final float SCALE
com.mazalearn.scienceengine.domains.electromagnetism.view.CircuitActor:
    public static final java.lang.String COMPONENT_TYPE
    private static final int WIRE_WIDTH
com.mazalearn.scienceengine.domains.electromagnetism.view.CurrentCoilActor:
    private static final int NUM_FRAMES
com.mazalearn.scienceengine.domains.electromagnetism.view.DynamoActor:
    private static final int NUM_FRAMES
    private static final float COIL_OFFSET_PERCENT
com.mazalearn.scienceengine.domains.mechanics.model.ComponentType
com.mazalearn.scienceengine.domains.mechanics.model.Parameter
com.mazalearn.scienceengine.domains.mechanics.model.SimpleBody
com.mazalearn.scienceengine.domains.mechanics.view.SimpleBodyActor
com.mazalearn.scienceengine.domains.mechanics.view.SimpleBodyActor$1
com.mazalearn.scienceengine.domains.statesofmatter.StatesOfMatterController:
    private static final int N
    com.mazalearn.scienceengine.core.view.ModelControls modelControls
com.mazalearn.scienceengine.domains.statesofmatter.StatesOfMatterModel:
    private static final int BOX_HEIGHT
    private static final int BOX_WIDTH
com.mazalearn.scienceengine.domains.statesofmatter.model.AbstractMoleculeBox:
    protected static final double WALL_STIFFNESS
    protected static final double GRAVITY
    protected static final double WALL_DISTANCE_THRESHOLD
    protected static final double MIN_DISTANCE
    protected static final double MIN_DISTANCE_SQUARED
    110:110:public double getEnergy()
    138:138:protected double getGravity()
    182:197:protected double computeElasticWallForce(com.mazalearn.scienceengine.domains.statesofmatter.model.Molecule)
com.mazalearn.scienceengine.domains.statesofmatter.model.Cell
com.mazalearn.scienceengine.domains.statesofmatter.model.CellularLJMoleculeBox
com.mazalearn.scienceengine.domains.statesofmatter.model.ComponentType:
    11:11:public java.lang.String getLocalizedName()
    15:20:public static com.mazalearn.scienceengine.domains.statesofmatter.model.ComponentType valueOf(com.mazalearn.scienceengine.core.model.IComponentType)
com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox:
    public abstract void reset()
    public abstract double getEnergy()
    public abstract void setTemperature(double)
    public abstract void setHeatingLevel(com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$HeatingLevel)
com.mazalearn.scienceengine.domains.statesofmatter.model.LJMoleculeBox:
    protected static final double LJ_CUTOFF
    protected static final double LJ_CUTOFF_SQUARED
    protected static final double LJ_CUTOFF_CORRECTION
com.mazalearn.scienceengine.domains.statesofmatter.model.Molecule:
    public com.mazalearn.scienceengine.domains.statesofmatter.model.Molecule nextMoleculeInCell
com.mazalearn.scienceengine.domains.statesofmatter.model.Parameter:
    19:24:public static com.mazalearn.scienceengine.domains.statesofmatter.model.Parameter valueOf(com.mazalearn.scienceengine.core.model.IComponentType)
com.mazalearn.scienceengine.domains.statesofmatter.model.SimpleMoleculeBox
com.mazalearn.scienceengine.domains.statesofmatter.view.MoleculeBoxActor:
    91:94:public void dispose()
com.mazalearn.scienceengine.domains.waves.WaveController:
    private static final int NUM_BALLS
    private static final float ORIGIN_Y
    private static final float ORIGIN_X
com.mazalearn.scienceengine.domains.waves.WaveView:
    private static final float ORIGIN_X
com.mazalearn.scienceengine.domains.waves.model.ComponentType:
    12:12:public java.lang.String getLocalizedName()
    16:21:public static com.mazalearn.scienceengine.domains.waves.model.ComponentType valueOf(com.mazalearn.scienceengine.core.model.IComponentType)
com.mazalearn.scienceengine.domains.waves.model.Parameter:
    24:29:public static com.mazalearn.scienceengine.domains.waves.model.Parameter valueOf(com.mazalearn.scienceengine.core.model.IComponentType)
com.mazalearn.scienceengine.domains.waves.model.WaveBox:
    private static final float MASS
    private static final float ALPHA_SQUARE
    public static final float BALL_DIAMETER
com.mazalearn.scienceengine.tutor.AbstractScience2DProber:
    protected static final float TOLERANCE
    protected static final float ZERO_TOLERANCE
com.mazalearn.scienceengine.tutor.Guru:
    public static final java.lang.String ID
    public static final java.lang.String ROOT_ID
    67:67:public com.mazalearn.scienceengine.tutor.ITutor getActiveTutor()
    151:151:public com.badlogic.gdx.scenes.scene2d.ui.Skin getSkin()
com.mazalearn.scienceengine.tutor.Hinter:
    private static final int TIME_GAP_BETWEEN_HINTS
    68:68:public boolean hasHint()
com.mazalearn.scienceengine.tutor.ITutor:
    public static final int NUM_ATTEMPTS
    public static final int NUM_SUCCESSES
    public static final int PERCENT_PROGRESS
    public static final int TIME_SPENT
    public static final int FAILURE_TRACKER
    public static final int POINTS
    public static final int NUM_STATS
com.mazalearn.scienceengine.tutor.KnowledgeUnit:
    46:46:public java.lang.String getWhen()
com.mazalearn.scienceengine.tutor.McqActor:
    private static final int MAX_OPTIONS
com.mazalearn.scienceengine.tutor.TimeTracker:
    33:33:public float getActiveTime()
com.mazalearn.scienceengine.tutor.TutorGroup:
    private static final int RAPID_FIRE_MAX
    private static final int REVIEWER_MAX
com.mazalearn.scienceengine.tutor.TutorNavigator:
    private static final float TUTOR_WIDTH
    private static final float TUTOR_HEIGHT
com.mazalearn.scienceengine.tutor.TutorType:
    33:33:public java.lang.String getLocalizedName()
com.mazalearn.scienceengine.tutor.Utils:
    7:7:public Utils()
