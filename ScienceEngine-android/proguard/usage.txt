android.annotation.SuppressLint
android.annotation.TargetApi
com.android.vending.billing.IInAppBillingService$Stub:
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_isBillingSupported
    static final int TRANSACTION_getSkuDetails
    static final int TRANSACTION_getBuyIntent
    static final int TRANSACTION_getPurchases
    static final int TRANSACTION_consumePurchase
    58:58:public android.os.IBinder asBinder()
com.android.vending.billing.IInAppBillingService$Stub$Proxy:
    186:186:public java.lang.String getInterfaceDescriptor()
com.badlogic.gdx.Application:
    public static final int LOG_NONE
    public static final int LOG_DEBUG
    public static final int LOG_INFO
    public static final int LOG_ERROR
    public abstract com.badlogic.gdx.Audio getAudio()
    public abstract com.badlogic.gdx.Files getFiles()
    public abstract com.badlogic.gdx.Net getNet()
    public abstract void log(java.lang.String,java.lang.String,java.lang.Exception)
    public abstract void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void setLogLevel(int)
    public abstract int getVersion()
    public abstract long getJavaHeap()
    public abstract long getNativeHeap()
    public abstract void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
    public abstract void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.ApplicationAdapter:
    24:24:public void create()
    28:28:public void resize(int,int)
    32:32:public void render()
    36:36:public void pause()
    40:40:public void resume()
    44:44:public void dispose()
com.badlogic.gdx.Audio:
    public abstract com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
    public abstract com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
com.badlogic.gdx.Files:
    public abstract com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType)
    public abstract com.badlogic.gdx.files.FileHandle local(java.lang.String)
    public abstract boolean isExternalStorageAvailable()
    public abstract java.lang.String getLocalStoragePath()
    public abstract boolean isLocalStorageAvailable()
com.badlogic.gdx.Graphics:
    public abstract boolean isGL11Available()
    public abstract com.badlogic.gdx.graphics.GLCommon getGLCommon()
    public abstract com.badlogic.gdx.graphics.GLU getGLU()
    public abstract float getRawDeltaTime()
    public abstract com.badlogic.gdx.Graphics$GraphicsType getType()
    public abstract float getPpiX()
    public abstract float getPpiY()
    public abstract float getPpcX()
    public abstract float getPpcY()
    public abstract float getDensity()
    public abstract boolean supportsDisplayModeChange()
    public abstract com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    public abstract boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
    public abstract boolean setDisplayMode(int,int,boolean)
    public abstract void setTitle(java.lang.String)
    public abstract void setVSync(boolean)
    public abstract com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    public abstract boolean isContinuousRendering()
    public abstract boolean isFullscreen()
com.badlogic.gdx.HttpParametersUtils:
    22:31:public static java.lang.String convertHttpParameters(java.util.Map)
    36:38:private static java.lang.String encode(java.lang.String,java.lang.String)
com.badlogic.gdx.Input:
    public abstract float getAccelerometerX()
    public abstract float getAccelerometerY()
    public abstract float getAccelerometerZ()
    public abstract int getX()
    public abstract int getDeltaX()
    public abstract int getDeltaX(int)
    public abstract int getY()
    public abstract int getDeltaY()
    public abstract int getDeltaY(int)
    public abstract boolean isTouched()
    public abstract boolean justTouched()
    public abstract void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    public abstract void vibrate(int)
    public abstract void vibrate(long[],int)
    public abstract void cancelVibrate()
    public abstract float getAzimuth()
    public abstract float getPitch()
    public abstract float getRoll()
    public abstract void getRotationMatrix(float[])
    public abstract com.badlogic.gdx.InputProcessor getInputProcessor()
    public abstract boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
    public abstract int getRotation()
    public abstract com.badlogic.gdx.Input$Orientation getNativeOrientation()
    public abstract void setCursorCatched(boolean)
    public abstract boolean isCursorCatched()
    public abstract void setCursorPosition(int,int)
com.badlogic.gdx.Input$Buttons:
    public static final int LEFT
    public static final int RIGHT
    public static final int MIDDLE
com.badlogic.gdx.Input$Keys:
    public static final int ANY_KEY
    public static final int NUM_0
    public static final int NUM_1
    public static final int NUM_2
    public static final int NUM_3
    public static final int NUM_4
    public static final int NUM_5
    public static final int NUM_6
    public static final int NUM_7
    public static final int NUM_8
    public static final int NUM_9
    public static final int A
    public static final int ALT_LEFT
    public static final int ALT_RIGHT
    public static final int APOSTROPHE
    public static final int AT
    public static final int B
    public static final int BACK
    public static final int BACKSLASH
    public static final int C
    public static final int CALL
    public static final int CAMERA
    public static final int CLEAR
    public static final int COMMA
    public static final int D
    public static final int DEL
    public static final int BACKSPACE
    public static final int FORWARD_DEL
    public static final int DPAD_CENTER
    public static final int DPAD_DOWN
    public static final int DPAD_LEFT
    public static final int DPAD_RIGHT
    public static final int DPAD_UP
    public static final int CENTER
    public static final int DOWN
    public static final int LEFT
    public static final int RIGHT
    public static final int UP
    public static final int E
    public static final int ENDCALL
    public static final int ENTER
    public static final int ENVELOPE
    public static final int EQUALS
    public static final int EXPLORER
    public static final int F
    public static final int FOCUS
    public static final int G
    public static final int GRAVE
    public static final int H
    public static final int HEADSETHOOK
    public static final int HOME
    public static final int I
    public static final int J
    public static final int K
    public static final int L
    public static final int LEFT_BRACKET
    public static final int M
    public static final int MEDIA_FAST_FORWARD
    public static final int MEDIA_NEXT
    public static final int MEDIA_PLAY_PAUSE
    public static final int MEDIA_PREVIOUS
    public static final int MEDIA_REWIND
    public static final int MEDIA_STOP
    public static final int MENU
    public static final int MINUS
    public static final int MUTE
    public static final int N
    public static final int NOTIFICATION
    public static final int NUM
    public static final int O
    public static final int P
    public static final int PERIOD
    public static final int PLUS
    public static final int POUND
    public static final int POWER
    public static final int Q
    public static final int R
    public static final int RIGHT_BRACKET
    public static final int S
    public static final int SEARCH
    public static final int SEMICOLON
    public static final int SHIFT_LEFT
    public static final int SHIFT_RIGHT
    public static final int SLASH
    public static final int SOFT_LEFT
    public static final int SOFT_RIGHT
    public static final int SPACE
    public static final int STAR
    public static final int SYM
    public static final int T
    public static final int TAB
    public static final int U
    public static final int UNKNOWN
    public static final int V
    public static final int VOLUME_DOWN
    public static final int VOLUME_UP
    public static final int W
    public static final int X
    public static final int Y
    public static final int Z
    public static final int META_ALT_LEFT_ON
    public static final int META_ALT_ON
    public static final int META_ALT_RIGHT_ON
    public static final int META_SHIFT_LEFT_ON
    public static final int META_SHIFT_ON
    public static final int META_SHIFT_RIGHT_ON
    public static final int META_SYM_ON
    public static final int CONTROL_LEFT
    public static final int CONTROL_RIGHT
    public static final int ESCAPE
    public static final int END
    public static final int INSERT
    public static final int PAGE_UP
    public static final int PAGE_DOWN
    public static final int PICTSYMBOLS
    public static final int SWITCH_CHARSET
    public static final int BUTTON_CIRCLE
    public static final int BUTTON_A
    public static final int BUTTON_B
    public static final int BUTTON_C
    public static final int BUTTON_X
    public static final int BUTTON_Y
    public static final int BUTTON_Z
    public static final int BUTTON_L1
    public static final int BUTTON_R1
    public static final int BUTTON_L2
    public static final int BUTTON_R2
    public static final int BUTTON_THUMBL
    public static final int BUTTON_THUMBR
    public static final int BUTTON_START
    public static final int BUTTON_SELECT
    public static final int BUTTON_MODE
    public static final int COLON
    public static final int F1
    public static final int F2
    public static final int F3
    public static final int F4
    public static final int F5
    public static final int F6
    public static final int F7
    public static final int F8
    public static final int F9
    public static final int F10
    public static final int F11
    public static final int F12
com.badlogic.gdx.InputAdapter:
    49:49:public boolean mouseMoved(int,int)
    54:54:public boolean scrolled(int)
com.badlogic.gdx.InputMultiplexer:
    36:37:public void addProcessor(int,com.badlogic.gdx.InputProcessor)
    40:41:public void removeProcessor(int)
    44:45:public void addProcessor(com.badlogic.gdx.InputProcessor)
    48:49:public void removeProcessor(com.badlogic.gdx.InputProcessor)
    53:53:public int size()
    57:58:public void clear()
    61:62:public void setProcessors(com.badlogic.gdx.utils.Array)
    65:65:public com.badlogic.gdx.utils.Array getProcessors()
    106:108:public boolean mouseMoved(int,int)
    113:115:public boolean scrolled(int)
com.badlogic.gdx.InputProcessor:
    public abstract boolean mouseMoved(int,int)
    public abstract boolean scrolled(int)
com.badlogic.gdx.Net:
    public abstract void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
    public abstract com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
com.badlogic.gdx.Net$HttpMethods:
    public static final java.lang.String GET
    public static final java.lang.String POST
com.badlogic.gdx.Net$HttpRequest:
    private long contentLength
    154:157:public Net$HttpRequest(java.lang.String)
    162:163:public void setUrl(java.lang.String)
    170:171:public void setHeader(java.lang.String,java.lang.String)
    178:179:public void setContent(java.lang.String)
    184:186:public void setContent(java.io.InputStream,long)
    192:193:public void setTimeOut(int)
    223:223:public long getContentLength()
com.badlogic.gdx.Net$HttpResponse:
    public abstract byte[] getResult()
    public abstract java.lang.String getResultAsString()
    public abstract java.io.InputStream getResultAsStream()
    public abstract com.badlogic.gdx.Net$HttpStatus getStatus()
com.badlogic.gdx.Net$HttpStatus:
    67:67:public int getStatusCode()
com.badlogic.gdx.Preferences:
    public abstract void putInteger(java.lang.String,int)
    public abstract void putLong(java.lang.String,long)
    public abstract void put(java.util.Map)
    public abstract boolean getBoolean(java.lang.String)
    public abstract int getInteger(java.lang.String)
    public abstract long getLong(java.lang.String)
    public abstract float getFloat(java.lang.String)
    public abstract int getInteger(java.lang.String,int)
    public abstract long getLong(java.lang.String,long)
    public abstract java.lang.String getString(java.lang.String,java.lang.String)
    public abstract java.util.Map get()
    public abstract boolean contains(java.lang.String)
    public abstract void clear()
com.badlogic.gdx.Screen:
    public abstract void dispose()
com.badlogic.gdx.assets.AssetManager:
    102:109:public synchronized java.lang.Object get(java.lang.String)
    190:196:public synchronized boolean containsAsset(java.lang.Object)
    222:226:public synchronized boolean isLoaded(java.lang.String,java.lang.Class)
    284:285:public synchronized void load(com.badlogic.gdx.assets.AssetDescriptor)
    290:300:private void disposeDependencies(java.lang.String)
    326:331:public synchronized boolean update(int)
    497:498:public synchronized float getProgress()
    504:505:public synchronized void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener)
    563:563:public com.badlogic.gdx.utils.Logger getLogger()
    584:608:public synchronized java.lang.String getDiagnostics()
    613:613:public synchronized com.badlogic.gdx.utils.Array getAssetNames()
    618:618:public synchronized com.badlogic.gdx.utils.Array getDependencies(java.lang.String)
    623:623:public synchronized java.lang.Class getAssetType(java.lang.String)
com.badlogic.gdx.assets.RefCountedContainer:
    49:50:public void setObject(java.lang.Object)
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter:
    65:67:public SkinLoader$SkinParameter(java.lang.String)
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter:
    82:84:public TextureAtlasLoader$TextureAtlasParameter(boolean)
com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter:
    public java.lang.String inputDirectory
com.badlogic.gdx.assets.loaders.TileMapRendererLoader$TileMapParameter:
    41:47:public TileMapRendererLoader$TileMapParameter(java.lang.String,int,int)
    50:56:public TileMapRendererLoader$TileMapParameter(java.lang.String,int,int,float,float)
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver:
    39:42:public varargs ResolutionFileResolver(com.badlogic.gdx.assets.loaders.FileHandleResolver,com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[])
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution:
    29:33:public ResolutionFileResolver$Resolution(int,int,java.lang.String)
com.badlogic.gdx.audio.AudioDevice:
    public abstract boolean isMono()
    public abstract void writeSamples(short[],int,int)
    public abstract void writeSamples(float[],int,int)
    public abstract int getLatency()
    public abstract void dispose()
    public abstract void setVolume(float)
com.badlogic.gdx.audio.AudioRecorder:
    public abstract void read(short[],int,int)
    public abstract void dispose()
com.badlogic.gdx.audio.Music:
    public abstract void pause()
    public abstract boolean isPlaying()
    public abstract boolean isLooping()
    public abstract float getPosition()
com.badlogic.gdx.audio.Sound:
    public abstract long play()
    public abstract long play(float,float,float)
    public abstract long loop()
    public abstract long loop(float)
    public abstract long loop(float,float,float)
    public abstract void stop()
    public abstract void dispose()
    public abstract void stop(long)
    public abstract void setLooping(long,boolean)
    public abstract void setPitch(long,float)
    public abstract void setVolume(long,float)
    public abstract void setPan(long,float,float)
    public abstract void setPriority(long,int)
com.badlogic.gdx.files.FileHandleStream:
    30:31:public FileHandleStream(java.lang.String)
com.badlogic.gdx.graphics.Camera:
    public abstract void update(boolean)
    77:81:public void apply(com.badlogic.gdx.graphics.GL10)
    88:89:public void lookAt(float,float,float)
    96:98:public void normalizeUp()
    108:109:public void rotate(float,float,float,float)
    117:120:public void rotate(com.badlogic.gdx.math.Vector3,float)
    129:135:public void rotateAround(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
    148:149:public void translate(com.badlogic.gdx.math.Vector3)
    227:230:public com.badlogic.gdx.math.collision.Ray getPickRay(float,float,float,float,float,float)
    241:241:public com.badlogic.gdx.math.collision.Ray getPickRay(float,float)
com.badlogic.gdx.graphics.Color:
    101:106:public com.badlogic.gdx.graphics.Color mul(float)
    114:119:public com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color)
    127:132:public com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color)
    220:222:public static float toFloatBits(int,int,int,int)
    241:241:public static int toIntBits(int,int,int,int)
    245:245:public static int alpha(float)
    249:249:public static int luminanceAlpha(float,float)
    253:253:public static int rgb565(float,float,float)
    257:257:public static int rgba4444(float,float,float,float)
    261:261:public static int rgb888(float,float,float)
    269:269:public static int rgb565(com.badlogic.gdx.graphics.Color)
    273:273:public static int rgba4444(com.badlogic.gdx.graphics.Color)
    277:277:public static int rgb888(com.badlogic.gdx.graphics.Color)
    290:293:public static void rgb565ToColor(com.badlogic.gdx.graphics.Color,int)
    301:305:public static void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int)
    313:316:public static void rgb888ToColor(com.badlogic.gdx.graphics.Color,int)
    324:328:public static void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int)
    334:334:public com.badlogic.gdx.graphics.Color tmp()
    339:339:public com.badlogic.gdx.graphics.Color cpy()
com.badlogic.gdx.graphics.FPSLogger:
    34:38:public void log()
com.badlogic.gdx.graphics.GL10:
    public static final int GL_OES_VERSION_1_0
    public static final int GL_OES_read_format
    public static final int GL_OES_compressed_paletted_texture
    public static final int GL_DEPTH_BUFFER_BIT
    public static final int GL_STENCIL_BUFFER_BIT
    public static final int GL_COLOR_BUFFER_BIT
    public static final int GL_FALSE
    public static final int GL_TRUE
    public static final int GL_POINTS
    public static final int GL_LINES
    public static final int GL_LINE_LOOP
    public static final int GL_LINE_STRIP
    public static final int GL_TRIANGLES
    public static final int GL_TRIANGLE_STRIP
    public static final int GL_TRIANGLE_FAN
    public static final int GL_NEVER
    public static final int GL_LESS
    public static final int GL_EQUAL
    public static final int GL_LEQUAL
    public static final int GL_GREATER
    public static final int GL_NOTEQUAL
    public static final int GL_GEQUAL
    public static final int GL_ALWAYS
    public static final int GL_ZERO
    public static final int GL_ONE
    public static final int GL_SRC_COLOR
    public static final int GL_ONE_MINUS_SRC_COLOR
    public static final int GL_SRC_ALPHA
    public static final int GL_ONE_MINUS_SRC_ALPHA
    public static final int GL_DST_ALPHA
    public static final int GL_ONE_MINUS_DST_ALPHA
    public static final int GL_DST_COLOR
    public static final int GL_ONE_MINUS_DST_COLOR
    public static final int GL_SRC_ALPHA_SATURATE
    public static final int GL_FRONT
    public static final int GL_BACK
    public static final int GL_FRONT_AND_BACK
    public static final int GL_FOG
    public static final int GL_LIGHTING
    public static final int GL_TEXTURE_2D
    public static final int GL_CULL_FACE
    public static final int GL_ALPHA_TEST
    public static final int GL_BLEND
    public static final int GL_COLOR_LOGIC_OP
    public static final int GL_DITHER
    public static final int GL_STENCIL_TEST
    public static final int GL_DEPTH_TEST
    public static final int GL_POINT_SMOOTH
    public static final int GL_LINE_SMOOTH
    public static final int GL_SCISSOR_TEST
    public static final int GL_COLOR_MATERIAL
    public static final int GL_NORMALIZE
    public static final int GL_RESCALE_NORMAL
    public static final int GL_POLYGON_OFFSET_FILL
    public static final int GL_VERTEX_ARRAY
    public static final int GL_NORMAL_ARRAY
    public static final int GL_COLOR_ARRAY
    public static final int GL_TEXTURE_COORD_ARRAY
    public static final int GL_MULTISAMPLE
    public static final int GL_SAMPLE_ALPHA_TO_COVERAGE
    public static final int GL_SAMPLE_ALPHA_TO_ONE
    public static final int GL_SAMPLE_COVERAGE
    public static final int GL_NO_ERROR
    public static final int GL_INVALID_ENUM
    public static final int GL_INVALID_VALUE
    public static final int GL_INVALID_OPERATION
    public static final int GL_STACK_OVERFLOW
    public static final int GL_STACK_UNDERFLOW
    public static final int GL_OUT_OF_MEMORY
    public static final int GL_EXP
    public static final int GL_EXP2
    public static final int GL_FOG_DENSITY
    public static final int GL_FOG_START
    public static final int GL_FOG_END
    public static final int GL_FOG_MODE
    public static final int GL_FOG_COLOR
    public static final int GL_CW
    public static final int GL_CCW
    public static final int GL_SMOOTH_POINT_SIZE_RANGE
    public static final int GL_SMOOTH_LINE_WIDTH_RANGE
    public static final int GL_ALIASED_POINT_SIZE_RANGE
    public static final int GL_ALIASED_LINE_WIDTH_RANGE
    public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
    public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
    public static final int GL_MAX_LIGHTS
    public static final int GL_MAX_TEXTURE_SIZE
    public static final int GL_MAX_MODELVIEW_STACK_DEPTH
    public static final int GL_MAX_PROJECTION_STACK_DEPTH
    public static final int GL_MAX_TEXTURE_STACK_DEPTH
    public static final int GL_MAX_VIEWPORT_DIMS
    public static final int GL_MAX_ELEMENTS_VERTICES
    public static final int GL_MAX_ELEMENTS_INDICES
    public static final int GL_MAX_TEXTURE_UNITS
    public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_SUBPIXEL_BITS
    public static final int GL_RED_BITS
    public static final int GL_GREEN_BITS
    public static final int GL_BLUE_BITS
    public static final int GL_ALPHA_BITS
    public static final int GL_DEPTH_BITS
    public static final int GL_STENCIL_BITS
    public static final int GL_DONT_CARE
    public static final int GL_FASTEST
    public static final int GL_NICEST
    public static final int GL_PERSPECTIVE_CORRECTION_HINT
    public static final int GL_POINT_SMOOTH_HINT
    public static final int GL_LINE_SMOOTH_HINT
    public static final int GL_POLYGON_SMOOTH_HINT
    public static final int GL_FOG_HINT
    public static final int GL_LIGHT_MODEL_AMBIENT
    public static final int GL_LIGHT_MODEL_TWO_SIDE
    public static final int GL_AMBIENT
    public static final int GL_DIFFUSE
    public static final int GL_SPECULAR
    public static final int GL_POSITION
    public static final int GL_SPOT_DIRECTION
    public static final int GL_SPOT_EXPONENT
    public static final int GL_SPOT_CUTOFF
    public static final int GL_CONSTANT_ATTENUATION
    public static final int GL_LINEAR_ATTENUATION
    public static final int GL_QUADRATIC_ATTENUATION
    public static final int GL_BYTE
    public static final int GL_UNSIGNED_BYTE
    public static final int GL_SHORT
    public static final int GL_UNSIGNED_SHORT
    public static final int GL_FLOAT
    public static final int GL_CLEAR
    public static final int GL_AND
    public static final int GL_AND_REVERSE
    public static final int GL_COPY
    public static final int GL_AND_INVERTED
    public static final int GL_NOOP
    public static final int GL_XOR
    public static final int GL_OR
    public static final int GL_NOR
    public static final int GL_EQUIV
    public static final int GL_INVERT
    public static final int GL_OR_REVERSE
    public static final int GL_COPY_INVERTED
    public static final int GL_OR_INVERTED
    public static final int GL_NAND
    public static final int GL_SET
    public static final int GL_EMISSION
    public static final int GL_SHININESS
    public static final int GL_AMBIENT_AND_DIFFUSE
    public static final int GL_MODELVIEW
    public static final int GL_PROJECTION
    public static final int GL_TEXTURE
    public static final int GL_ALPHA
    public static final int GL_RGB
    public static final int GL_RGBA
    public static final int GL_LUMINANCE
    public static final int GL_LUMINANCE_ALPHA
    public static final int GL_UNPACK_ALIGNMENT
    public static final int GL_PACK_ALIGNMENT
    public static final int GL_UNSIGNED_SHORT_4_4_4_4
    public static final int GL_UNSIGNED_SHORT_5_5_5_1
    public static final int GL_UNSIGNED_SHORT_5_6_5
    public static final int GL_FLAT
    public static final int GL_SMOOTH
    public static final int GL_KEEP
    public static final int GL_REPLACE
    public static final int GL_INCR
    public static final int GL_DECR
    public static final int GL_VENDOR
    public static final int GL_RENDERER
    public static final int GL_VERSION
    public static final int GL_EXTENSIONS
    public static final int GL_MODULATE
    public static final int GL_DECAL
    public static final int GL_ADD
    public static final int GL_TEXTURE_ENV_MODE
    public static final int GL_TEXTURE_ENV_COLOR
    public static final int GL_TEXTURE_ENV
    public static final int GL_NEAREST
    public static final int GL_LINEAR
    public static final int GL_NEAREST_MIPMAP_NEAREST
    public static final int GL_LINEAR_MIPMAP_NEAREST
    public static final int GL_NEAREST_MIPMAP_LINEAR
    public static final int GL_LINEAR_MIPMAP_LINEAR
    public static final int GL_TEXTURE_MAG_FILTER
    public static final int GL_TEXTURE_MIN_FILTER
    public static final int GL_TEXTURE_WRAP_S
    public static final int GL_TEXTURE_WRAP_T
    public static final int GL_TEXTURE0
    public static final int GL_TEXTURE1
    public static final int GL_TEXTURE2
    public static final int GL_TEXTURE3
    public static final int GL_TEXTURE4
    public static final int GL_TEXTURE5
    public static final int GL_TEXTURE6
    public static final int GL_TEXTURE7
    public static final int GL_TEXTURE8
    public static final int GL_TEXTURE9
    public static final int GL_TEXTURE10
    public static final int GL_TEXTURE11
    public static final int GL_TEXTURE12
    public static final int GL_TEXTURE13
    public static final int GL_TEXTURE14
    public static final int GL_TEXTURE15
    public static final int GL_TEXTURE16
    public static final int GL_TEXTURE17
    public static final int GL_TEXTURE18
    public static final int GL_TEXTURE19
    public static final int GL_TEXTURE20
    public static final int GL_TEXTURE21
    public static final int GL_TEXTURE22
    public static final int GL_TEXTURE23
    public static final int GL_TEXTURE24
    public static final int GL_TEXTURE25
    public static final int GL_TEXTURE26
    public static final int GL_TEXTURE27
    public static final int GL_TEXTURE28
    public static final int GL_TEXTURE29
    public static final int GL_TEXTURE30
    public static final int GL_TEXTURE31
    public static final int GL_REPEAT
    public static final int GL_CLAMP_TO_EDGE
    public static final int GL_PALETTE4_RGB8_OES
    public static final int GL_PALETTE4_RGBA8_OES
    public static final int GL_PALETTE4_R5_G6_B5_OES
    public static final int GL_PALETTE4_RGBA4_OES
    public static final int GL_PALETTE4_RGB5_A1_OES
    public static final int GL_PALETTE8_RGB8_OES
    public static final int GL_PALETTE8_RGBA8_OES
    public static final int GL_PALETTE8_R5_G6_B5_OES
    public static final int GL_PALETTE8_RGBA4_OES
    public static final int GL_PALETTE8_RGB5_A1_OES
    public static final int GL_LIGHT0
    public static final int GL_LIGHT1
    public static final int GL_LIGHT2
    public static final int GL_LIGHT3
    public static final int GL_LIGHT4
    public static final int GL_LIGHT5
    public static final int GL_LIGHT6
    public static final int GL_LIGHT7
    public static final int GL_POINT
    public static final int GL_LINE
    public static final int GL_FILL
    public abstract void glAlphaFunc(int,float)
    public abstract void glColor4f(float,float,float,float)
    public abstract void glDeleteTextures(int,int[],int)
    public abstract void glFogf(int,float)
    public abstract void glFogfv(int,float[],int)
    public abstract void glFogfv(int,java.nio.FloatBuffer)
    public abstract void glFrustumf(float,float,float,float,float,float)
    public abstract void glGenTextures(int,int[],int)
    public abstract void glGetIntegerv(int,int[],int)
    public abstract void glLightModelf(int,float)
    public abstract void glLightModelfv(int,float[],int)
    public abstract void glLightModelfv(int,java.nio.FloatBuffer)
    public abstract void glLightf(int,int,float)
    public abstract void glLightfv(int,int,float[],int)
    public abstract void glLightfv(int,int,java.nio.FloatBuffer)
    public abstract void glLoadMatrixf(java.nio.FloatBuffer)
    public abstract void glLogicOp(int)
    public abstract void glMaterialf(int,int,float)
    public abstract void glMaterialfv(int,int,float[],int)
    public abstract void glMaterialfv(int,int,java.nio.FloatBuffer)
    public abstract void glMultMatrixf(float[],int)
    public abstract void glMultMatrixf(java.nio.FloatBuffer)
    public abstract void glMultiTexCoord4f(int,float,float,float,float)
    public abstract void glNormal3f(float,float,float)
    public abstract void glOrthof(float,float,float,float,float,float)
    public abstract void glPointSize(float)
    public abstract void glPopMatrix()
    public abstract void glPushMatrix()
    public abstract void glRotatef(float,float,float,float)
    public abstract void glSampleCoverage(float,boolean)
    public abstract void glScalef(float,float,float)
    public abstract void glShadeModel(int)
    public abstract void glTexEnvf(int,int,float)
    public abstract void glTexEnvfv(int,int,float[],int)
    public abstract void glTexEnvfv(int,int,java.nio.FloatBuffer)
    public abstract void glTranslatef(float,float,float)
    public abstract void glPolygonMode(int,int)
com.badlogic.gdx.graphics.GL11:
    public static final int GL_OES_VERSION_1_0
    public static final int GL_MAX_ELEMENTS_VERTICES
    public static final int GL_MAX_ELEMENTS_INDICES
    public static final int GL_POLYGON_SMOOTH_HINT
    public static final int GL_VERSION_ES_CM_1_0
    public static final int GL_VERSION_ES_CL_1_0
    public static final int GL_VERSION_ES_CM_1_1
    public static final int GL_VERSION_ES_CL_1_1
    public static final int GL_CLIP_PLANE0
    public static final int GL_CLIP_PLANE1
    public static final int GL_CLIP_PLANE2
    public static final int GL_CLIP_PLANE3
    public static final int GL_CLIP_PLANE4
    public static final int GL_CLIP_PLANE5
    public static final int GL_CURRENT_COLOR
    public static final int GL_CURRENT_NORMAL
    public static final int GL_CURRENT_TEXTURE_COORDS
    public static final int GL_POINT_SIZE
    public static final int GL_POINT_SIZE_MIN
    public static final int GL_POINT_SIZE_MAX
    public static final int GL_POINT_FADE_THRESHOLD_SIZE
    public static final int GL_POINT_DISTANCE_ATTENUATION
    public static final int GL_LINE_WIDTH
    public static final int GL_CULL_FACE_MODE
    public static final int GL_FRONT_FACE
    public static final int GL_SHADE_MODEL
    public static final int GL_DEPTH_RANGE
    public static final int GL_DEPTH_WRITEMASK
    public static final int GL_DEPTH_CLEAR_VALUE
    public static final int GL_DEPTH_FUNC
    public static final int GL_STENCIL_CLEAR_VALUE
    public static final int GL_STENCIL_FUNC
    public static final int GL_STENCIL_VALUE_MASK
    public static final int GL_STENCIL_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_PASS
    public static final int GL_STENCIL_REF
    public static final int GL_STENCIL_WRITEMASK
    public static final int GL_MATRIX_MODE
    public static final int GL_VIEWPORT
    public static final int GL_MODELVIEW_STACK_DEPTH
    public static final int GL_PROJECTION_STACK_DEPTH
    public static final int GL_TEXTURE_STACK_DEPTH
    public static final int GL_MODELVIEW_MATRIX
    public static final int GL_PROJECTION_MATRIX
    public static final int GL_TEXTURE_MATRIX
    public static final int GL_ALPHA_TEST_FUNC
    public static final int GL_ALPHA_TEST_REF
    public static final int GL_BLEND_DST
    public static final int GL_BLEND_SRC
    public static final int GL_LOGIC_OP_MODE
    public static final int GL_SCISSOR_BOX
    public static final int GL_COLOR_CLEAR_VALUE
    public static final int GL_COLOR_WRITEMASK
    public static final int GL_MAX_CLIP_PLANES
    public static final int GL_POLYGON_OFFSET_UNITS
    public static final int GL_POLYGON_OFFSET_FACTOR
    public static final int GL_TEXTURE_BINDING_2D
    public static final int GL_VERTEX_ARRAY_SIZE
    public static final int GL_VERTEX_ARRAY_TYPE
    public static final int GL_VERTEX_ARRAY_STRIDE
    public static final int GL_NORMAL_ARRAY_TYPE
    public static final int GL_NORMAL_ARRAY_STRIDE
    public static final int GL_COLOR_ARRAY_SIZE
    public static final int GL_COLOR_ARRAY_TYPE
    public static final int GL_COLOR_ARRAY_STRIDE
    public static final int GL_TEXTURE_COORD_ARRAY_SIZE
    public static final int GL_TEXTURE_COORD_ARRAY_TYPE
    public static final int GL_TEXTURE_COORD_ARRAY_STRIDE
    public static final int GL_VERTEX_ARRAY_POINTER
    public static final int GL_NORMAL_ARRAY_POINTER
    public static final int GL_COLOR_ARRAY_POINTER
    public static final int GL_TEXTURE_COORD_ARRAY_POINTER
    public static final int GL_SAMPLE_BUFFERS
    public static final int GL_SAMPLES
    public static final int GL_SAMPLE_COVERAGE_VALUE
    public static final int GL_SAMPLE_COVERAGE_INVERT
    public static final int GL_GENERATE_MIPMAP_HINT
    public static final int GL_GENERATE_MIPMAP
    public static final int GL_ACTIVE_TEXTURE
    public static final int GL_CLIENT_ACTIVE_TEXTURE
    public static final int GL_ARRAY_BUFFER
    public static final int GL_ELEMENT_ARRAY_BUFFER
    public static final int GL_ARRAY_BUFFER_BINDING
    public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING
    public static final int GL_VERTEX_ARRAY_BUFFER_BINDING
    public static final int GL_NORMAL_ARRAY_BUFFER_BINDING
    public static final int GL_COLOR_ARRAY_BUFFER_BINDING
    public static final int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
    public static final int GL_STATIC_DRAW
    public static final int GL_DYNAMIC_DRAW
    public static final int GL_BUFFER_SIZE
    public static final int GL_BUFFER_USAGE
    public static final int GL_SUBTRACT
    public static final int GL_COMBINE
    public static final int GL_COMBINE_RGB
    public static final int GL_COMBINE_ALPHA
    public static final int GL_RGB_SCALE
    public static final int GL_ADD_SIGNED
    public static final int GL_INTERPOLATE
    public static final int GL_CONSTANT
    public static final int GL_PRIMARY_COLOR
    public static final int GL_PREVIOUS
    public static final int GL_OPERAND0_RGB
    public static final int GL_OPERAND1_RGB
    public static final int GL_OPERAND2_RGB
    public static final int GL_OPERAND0_ALPHA
    public static final int GL_OPERAND1_ALPHA
    public static final int GL_OPERAND2_ALPHA
    public static final int GL_ALPHA_SCALE
    public static final int GL_SRC0_RGB
    public static final int GL_SRC1_RGB
    public static final int GL_SRC2_RGB
    public static final int GL_SRC0_ALPHA
    public static final int GL_SRC1_ALPHA
    public static final int GL_SRC2_ALPHA
    public static final int GL_DOT3_RGB
    public static final int GL_DOT3_RGBA
    public static final int GL_POINT_SIZE_ARRAY_OES
    public static final int GL_POINT_SIZE_ARRAY_TYPE_OES
    public static final int GL_POINT_SIZE_ARRAY_STRIDE_OES
    public static final int GL_POINT_SIZE_ARRAY_POINTER_OES
    public static final int GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES
    public static final int GL_POINT_SPRITE_OES
    public static final int GL_COORD_REPLACE_OES
    public static final int GL_OES_point_size_array
    public static final int GL_OES_point_sprite
    public abstract void glClipPlanef(int,float[],int)
    public abstract void glClipPlanef(int,java.nio.FloatBuffer)
    public abstract void glGetClipPlanef(int,float[],int)
    public abstract void glGetClipPlanef(int,java.nio.FloatBuffer)
    public abstract void glGetFloatv(int,float[],int)
    public abstract void glGetFloatv(int,java.nio.FloatBuffer)
    public abstract void glGetLightfv(int,int,float[],int)
    public abstract void glGetLightfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetMaterialfv(int,int,float[],int)
    public abstract void glGetMaterialfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetTexParameterfv(int,int,float[],int)
    public abstract void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glPointParameterf(int,float)
    public abstract void glPointParameterfv(int,float[],int)
    public abstract void glPointParameterfv(int,java.nio.FloatBuffer)
    public abstract void glTexParameterfv(int,int,float[],int)
    public abstract void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glColor4ub(byte,byte,byte,byte)
    public abstract void glDeleteBuffers(int,int[],int)
    public abstract void glGetBooleanv(int,boolean[],int)
    public abstract void glGetBooleanv(int,java.nio.IntBuffer)
    public abstract void glGetBufferParameteriv(int,int,int[],int)
    public abstract void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGenBuffers(int,int[],int)
    public abstract void glGetPointerv(int,java.nio.Buffer[])
    public abstract void glGetTexEnviv(int,int,int[],int)
    public abstract void glGetTexEnviv(int,int,java.nio.IntBuffer)
    public abstract void glGetTexParameteriv(int,int,int[],int)
    public abstract void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract boolean glIsBuffer(int)
    public abstract boolean glIsEnabled(int)
    public abstract boolean glIsTexture(int)
    public abstract void glTexEnvi(int,int,int)
    public abstract void glTexEnviv(int,int,int[],int)
    public abstract void glTexEnviv(int,int,java.nio.IntBuffer)
    public abstract void glTexParameteri(int,int,int)
    public abstract void glTexParameteriv(int,int,int[],int)
    public abstract void glTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glPointSizePointerOES(int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20:
    public static final int GL_ES_VERSION_2_0
    public static final int GL_DEPTH_BUFFER_BIT
    public static final int GL_STENCIL_BUFFER_BIT
    public static final int GL_COLOR_BUFFER_BIT
    public static final int GL_FALSE
    public static final int GL_TRUE
    public static final int GL_POINTS
    public static final int GL_LINES
    public static final int GL_LINE_LOOP
    public static final int GL_LINE_STRIP
    public static final int GL_TRIANGLES
    public static final int GL_TRIANGLE_STRIP
    public static final int GL_TRIANGLE_FAN
    public static final int GL_ZERO
    public static final int GL_ONE
    public static final int GL_SRC_COLOR
    public static final int GL_ONE_MINUS_SRC_COLOR
    public static final int GL_SRC_ALPHA
    public static final int GL_ONE_MINUS_SRC_ALPHA
    public static final int GL_DST_ALPHA
    public static final int GL_ONE_MINUS_DST_ALPHA
    public static final int GL_DST_COLOR
    public static final int GL_ONE_MINUS_DST_COLOR
    public static final int GL_SRC_ALPHA_SATURATE
    public static final int GL_FUNC_ADD
    public static final int GL_BLEND_EQUATION
    public static final int GL_BLEND_EQUATION_RGB
    public static final int GL_BLEND_EQUATION_ALPHA
    public static final int GL_FUNC_SUBTRACT
    public static final int GL_FUNC_REVERSE_SUBTRACT
    public static final int GL_BLEND_DST_RGB
    public static final int GL_BLEND_SRC_RGB
    public static final int GL_BLEND_DST_ALPHA
    public static final int GL_BLEND_SRC_ALPHA
    public static final int GL_CONSTANT_COLOR
    public static final int GL_ONE_MINUS_CONSTANT_COLOR
    public static final int GL_CONSTANT_ALPHA
    public static final int GL_ONE_MINUS_CONSTANT_ALPHA
    public static final int GL_BLEND_COLOR
    public static final int GL_ARRAY_BUFFER
    public static final int GL_ELEMENT_ARRAY_BUFFER
    public static final int GL_ARRAY_BUFFER_BINDING
    public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING
    public static final int GL_STREAM_DRAW
    public static final int GL_STATIC_DRAW
    public static final int GL_DYNAMIC_DRAW
    public static final int GL_BUFFER_SIZE
    public static final int GL_BUFFER_USAGE
    public static final int GL_CURRENT_VERTEX_ATTRIB
    public static final int GL_FRONT
    public static final int GL_BACK
    public static final int GL_FRONT_AND_BACK
    public static final int GL_TEXTURE_2D
    public static final int GL_CULL_FACE
    public static final int GL_BLEND
    public static final int GL_DITHER
    public static final int GL_STENCIL_TEST
    public static final int GL_DEPTH_TEST
    public static final int GL_SCISSOR_TEST
    public static final int GL_POLYGON_OFFSET_FILL
    public static final int GL_SAMPLE_ALPHA_TO_COVERAGE
    public static final int GL_SAMPLE_COVERAGE
    public static final int GL_NO_ERROR
    public static final int GL_INVALID_ENUM
    public static final int GL_INVALID_VALUE
    public static final int GL_INVALID_OPERATION
    public static final int GL_OUT_OF_MEMORY
    public static final int GL_CW
    public static final int GL_CCW
    public static final int GL_LINE_WIDTH
    public static final int GL_ALIASED_POINT_SIZE_RANGE
    public static final int GL_ALIASED_LINE_WIDTH_RANGE
    public static final int GL_CULL_FACE_MODE
    public static final int GL_FRONT_FACE
    public static final int GL_DEPTH_RANGE
    public static final int GL_DEPTH_WRITEMASK
    public static final int GL_DEPTH_CLEAR_VALUE
    public static final int GL_DEPTH_FUNC
    public static final int GL_STENCIL_CLEAR_VALUE
    public static final int GL_STENCIL_FUNC
    public static final int GL_STENCIL_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_PASS
    public static final int GL_STENCIL_REF
    public static final int GL_STENCIL_VALUE_MASK
    public static final int GL_STENCIL_WRITEMASK
    public static final int GL_STENCIL_BACK_FUNC
    public static final int GL_STENCIL_BACK_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_PASS
    public static final int GL_STENCIL_BACK_REF
    public static final int GL_STENCIL_BACK_VALUE_MASK
    public static final int GL_STENCIL_BACK_WRITEMASK
    public static final int GL_VIEWPORT
    public static final int GL_SCISSOR_BOX
    public static final int GL_COLOR_CLEAR_VALUE
    public static final int GL_COLOR_WRITEMASK
    public static final int GL_UNPACK_ALIGNMENT
    public static final int GL_PACK_ALIGNMENT
    public static final int GL_MAX_TEXTURE_SIZE
    public static final int GL_MAX_TEXTURE_UNITS
    public static final int GL_MAX_VIEWPORT_DIMS
    public static final int GL_SUBPIXEL_BITS
    public static final int GL_RED_BITS
    public static final int GL_GREEN_BITS
    public static final int GL_BLUE_BITS
    public static final int GL_ALPHA_BITS
    public static final int GL_DEPTH_BITS
    public static final int GL_STENCIL_BITS
    public static final int GL_POLYGON_OFFSET_UNITS
    public static final int GL_POLYGON_OFFSET_FACTOR
    public static final int GL_TEXTURE_BINDING_2D
    public static final int GL_SAMPLE_BUFFERS
    public static final int GL_SAMPLES
    public static final int GL_SAMPLE_COVERAGE_VALUE
    public static final int GL_SAMPLE_COVERAGE_INVERT
    public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_DONT_CARE
    public static final int GL_FASTEST
    public static final int GL_NICEST
    public static final int GL_GENERATE_MIPMAP_HINT
    public static final int GL_BYTE
    public static final int GL_UNSIGNED_BYTE
    public static final int GL_SHORT
    public static final int GL_UNSIGNED_SHORT
    public static final int GL_INT
    public static final int GL_UNSIGNED_INT
    public static final int GL_FLOAT
    public static final int GL_FIXED
    public static final int GL_DEPTH_COMPONENT
    public static final int GL_ALPHA
    public static final int GL_RGB
    public static final int GL_RGBA
    public static final int GL_LUMINANCE
    public static final int GL_LUMINANCE_ALPHA
    public static final int GL_UNSIGNED_SHORT_4_4_4_4
    public static final int GL_UNSIGNED_SHORT_5_5_5_1
    public static final int GL_UNSIGNED_SHORT_5_6_5
    public static final int GL_FRAGMENT_SHADER
    public static final int GL_VERTEX_SHADER
    public static final int GL_MAX_VERTEX_ATTRIBS
    public static final int GL_MAX_VERTEX_UNIFORM_VECTORS
    public static final int GL_MAX_VARYING_VECTORS
    public static final int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_FRAGMENT_UNIFORM_VECTORS
    public static final int GL_SHADER_TYPE
    public static final int GL_DELETE_STATUS
    public static final int GL_LINK_STATUS
    public static final int GL_VALIDATE_STATUS
    public static final int GL_ATTACHED_SHADERS
    public static final int GL_ACTIVE_UNIFORMS
    public static final int GL_ACTIVE_UNIFORM_MAX_LENGTH
    public static final int GL_ACTIVE_ATTRIBUTES
    public static final int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
    public static final int GL_SHADING_LANGUAGE_VERSION
    public static final int GL_CURRENT_PROGRAM
    public static final int GL_NEVER
    public static final int GL_LESS
    public static final int GL_EQUAL
    public static final int GL_LEQUAL
    public static final int GL_GREATER
    public static final int GL_NOTEQUAL
    public static final int GL_GEQUAL
    public static final int GL_ALWAYS
    public static final int GL_KEEP
    public static final int GL_REPLACE
    public static final int GL_INCR
    public static final int GL_DECR
    public static final int GL_INVERT
    public static final int GL_INCR_WRAP
    public static final int GL_DECR_WRAP
    public static final int GL_VENDOR
    public static final int GL_RENDERER
    public static final int GL_VERSION
    public static final int GL_EXTENSIONS
    public static final int GL_NEAREST
    public static final int GL_LINEAR
    public static final int GL_NEAREST_MIPMAP_NEAREST
    public static final int GL_LINEAR_MIPMAP_NEAREST
    public static final int GL_NEAREST_MIPMAP_LINEAR
    public static final int GL_LINEAR_MIPMAP_LINEAR
    public static final int GL_TEXTURE_MAG_FILTER
    public static final int GL_TEXTURE_MIN_FILTER
    public static final int GL_TEXTURE_WRAP_S
    public static final int GL_TEXTURE_WRAP_T
    public static final int GL_TEXTURE
    public static final int GL_TEXTURE_CUBE_MAP
    public static final int GL_TEXTURE_BINDING_CUBE_MAP
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Z
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
    public static final int GL_MAX_CUBE_MAP_TEXTURE_SIZE
    public static final int GL_TEXTURE0
    public static final int GL_TEXTURE1
    public static final int GL_TEXTURE2
    public static final int GL_TEXTURE3
    public static final int GL_TEXTURE4
    public static final int GL_TEXTURE5
    public static final int GL_TEXTURE6
    public static final int GL_TEXTURE7
    public static final int GL_TEXTURE8
    public static final int GL_TEXTURE9
    public static final int GL_TEXTURE10
    public static final int GL_TEXTURE11
    public static final int GL_TEXTURE12
    public static final int GL_TEXTURE13
    public static final int GL_TEXTURE14
    public static final int GL_TEXTURE15
    public static final int GL_TEXTURE16
    public static final int GL_TEXTURE17
    public static final int GL_TEXTURE18
    public static final int GL_TEXTURE19
    public static final int GL_TEXTURE20
    public static final int GL_TEXTURE21
    public static final int GL_TEXTURE22
    public static final int GL_TEXTURE23
    public static final int GL_TEXTURE24
    public static final int GL_TEXTURE25
    public static final int GL_TEXTURE26
    public static final int GL_TEXTURE27
    public static final int GL_TEXTURE28
    public static final int GL_TEXTURE29
    public static final int GL_TEXTURE30
    public static final int GL_TEXTURE31
    public static final int GL_ACTIVE_TEXTURE
    public static final int GL_REPEAT
    public static final int GL_CLAMP_TO_EDGE
    public static final int GL_MIRRORED_REPEAT
    public static final int GL_FLOAT_VEC2
    public static final int GL_FLOAT_VEC3
    public static final int GL_FLOAT_VEC4
    public static final int GL_INT_VEC2
    public static final int GL_INT_VEC3
    public static final int GL_INT_VEC4
    public static final int GL_BOOL
    public static final int GL_BOOL_VEC2
    public static final int GL_BOOL_VEC3
    public static final int GL_BOOL_VEC4
    public static final int GL_FLOAT_MAT2
    public static final int GL_FLOAT_MAT3
    public static final int GL_FLOAT_MAT4
    public static final int GL_SAMPLER_2D
    public static final int GL_SAMPLER_CUBE
    public static final int GL_VERTEX_ATTRIB_ARRAY_ENABLED
    public static final int GL_VERTEX_ATTRIB_ARRAY_SIZE
    public static final int GL_VERTEX_ATTRIB_ARRAY_STRIDE
    public static final int GL_VERTEX_ATTRIB_ARRAY_TYPE
    public static final int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
    public static final int GL_VERTEX_ATTRIB_ARRAY_POINTER
    public static final int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
    public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE
    public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT
    public static final int GL_COMPILE_STATUS
    public static final int GL_INFO_LOG_LENGTH
    public static final int GL_SHADER_SOURCE_LENGTH
    public static final int GL_SHADER_COMPILER
    public static final int GL_SHADER_BINARY_FORMATS
    public static final int GL_NUM_SHADER_BINARY_FORMATS
    public static final int GL_LOW_FLOAT
    public static final int GL_MEDIUM_FLOAT
    public static final int GL_HIGH_FLOAT
    public static final int GL_LOW_INT
    public static final int GL_MEDIUM_INT
    public static final int GL_HIGH_INT
    public static final int GL_FRAMEBUFFER
    public static final int GL_RENDERBUFFER
    public static final int GL_RGBA4
    public static final int GL_RGB5_A1
    public static final int GL_RGB565
    public static final int GL_DEPTH_COMPONENT16
    public static final int GL_STENCIL_INDEX
    public static final int GL_STENCIL_INDEX8
    public static final int GL_RENDERBUFFER_WIDTH
    public static final int GL_RENDERBUFFER_HEIGHT
    public static final int GL_RENDERBUFFER_INTERNAL_FORMAT
    public static final int GL_RENDERBUFFER_RED_SIZE
    public static final int GL_RENDERBUFFER_GREEN_SIZE
    public static final int GL_RENDERBUFFER_BLUE_SIZE
    public static final int GL_RENDERBUFFER_ALPHA_SIZE
    public static final int GL_RENDERBUFFER_DEPTH_SIZE
    public static final int GL_RENDERBUFFER_STENCIL_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
    public static final int GL_COLOR_ATTACHMENT0
    public static final int GL_DEPTH_ATTACHMENT
    public static final int GL_STENCIL_ATTACHMENT
    public static final int GL_NONE
    public static final int GL_FRAMEBUFFER_COMPLETE
    public static final int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
    public static final int GL_FRAMEBUFFER_UNSUPPORTED
    public static final int GL_FRAMEBUFFER_BINDING
    public static final int GL_RENDERBUFFER_BINDING
    public static final int GL_MAX_RENDERBUFFER_SIZE
    public static final int GL_INVALID_FRAMEBUFFER_OPERATION
    public static final int GL_VERTEX_PROGRAM_POINT_SIZE
    public static final int GL_COVERAGE_BUFFER_BIT_NV
    public abstract void glBindAttribLocation(int,int,java.lang.String)
    public abstract void glBlendColor(float,float,float,float)
    public abstract void glBlendEquation(int)
    public abstract void glBlendEquationSeparate(int,int)
    public abstract void glBlendFuncSeparate(int,int,int,int)
    public abstract void glDetachShader(int,int)
    public abstract void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    public abstract void glGetBooleanv(int,java.nio.Buffer)
    public abstract void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetFloatv(int,java.nio.FloatBuffer)
    public abstract void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    public abstract void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    public abstract void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String)
    public abstract void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetUniformfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetUniformiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    public abstract boolean glIsBuffer(int)
    public abstract boolean glIsEnabled(int)
    public abstract boolean glIsFramebuffer(int)
    public abstract boolean glIsProgram(int)
    public abstract boolean glIsRenderbuffer(int)
    public abstract boolean glIsShader(int)
    public abstract boolean glIsTexture(int)
    public abstract void glReleaseShaderCompiler()
    public abstract void glSampleCoverage(float,boolean)
    public abstract void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    public abstract void glStencilFuncSeparate(int,int,int,int)
    public abstract void glStencilMaskSeparate(int,int)
    public abstract void glStencilOpSeparate(int,int,int,int)
    public abstract void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glTexParameteri(int,int,int)
    public abstract void glTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glUniform1f(int,float)
    public abstract void glUniform1fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform1iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform2f(int,float,float)
    public abstract void glUniform2fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform2i(int,int,int)
    public abstract void glUniform2iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform3f(int,float,float,float)
    public abstract void glUniform3fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform3i(int,int,int,int)
    public abstract void glUniform3iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform4f(int,float,float,float,float)
    public abstract void glUniform4fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform4i(int,int,int,int,int)
    public abstract void glUniform4iv(int,int,java.nio.IntBuffer)
    public abstract void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glValidateProgram(int)
    public abstract void glVertexAttrib1f(int,float)
    public abstract void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib2f(int,float,float)
    public abstract void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib3f(int,float,float,float)
    public abstract void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib4f(int,float,float,float,float)
    public abstract void glVertexAttrib4fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GLCommon:
    public static final int GL_GENERATE_MIPMAP
    public static final int GL_TEXTURE_MAX_ANISOTROPY_EXT
    public static final int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
    public abstract void glActiveTexture(int)
    public abstract void glClearDepthf(float)
    public abstract void glClearStencil(int)
    public abstract void glColorMask(boolean,boolean,boolean,boolean)
    public abstract void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCullFace(int)
    public abstract void glDepthFunc(int)
    public abstract void glDepthRangef(float,float)
    public abstract void glFinish()
    public abstract void glFlush()
    public abstract void glFrontFace(int)
    public abstract int glGetError()
    public abstract void glHint(int,int)
    public abstract void glLineWidth(float)
    public abstract void glPolygonOffset(float,float)
    public abstract void glStencilFunc(int,int,int)
    public abstract void glStencilMask(int)
    public abstract void glStencilOp(int,int,int)
    public abstract void glViewport(int,int,int,int)
com.badlogic.gdx.graphics.GLU:
    public abstract void gluLookAt(com.badlogic.gdx.graphics.GL10,float,float,float,float,float,float,float,float,float)
    public abstract void gluOrtho2D(com.badlogic.gdx.graphics.GL10,float,float,float,float)
    public abstract void gluPerspective(com.badlogic.gdx.graphics.GL10,float,float,float,float)
    public abstract boolean gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int)
    public abstract boolean gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int)
com.badlogic.gdx.graphics.Mesh:
    114:126:public Mesh(boolean,int,int,com.badlogic.gdx.graphics.VertexAttributes)
    163:187:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.math.Matrix4[])
    198:198:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[])
    211:252:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[],com.badlogic.gdx.math.Matrix4[])
    260:261:public void setVertices(float[])
    276:277:public void getVertices(float[])
    283:284:public void getVertices(int,float[])
    291:292:public void getVertices(int,int,float[])
    301:315:public void getVertices(int,int,float[],int)
    330:331:public void setIndices(short[],int,int)
    336:337:public void getIndices(short[])
    343:350:public void getIndices(short[],int)
    364:364:public int getMaxVertices()
    369:369:public int getMaxIndices()
    374:374:public int getVertexSize()
    438:439:public void render(int)
    591:593:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox()
    601:631:public void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    682:717:public void scale(float,float,float)
    725:726:public void transform(com.badlogic.gdx.math.Matrix4)
    730:742:protected void transform(com.badlogic.gdx.math.Matrix4,int,int)
    755:789:public static void transform(com.badlogic.gdx.math.Matrix4,float[],int,int,int,int,int)
    801:884:public com.badlogic.gdx.graphics.Mesh copy(boolean,boolean,int[])
    892:892:public com.badlogic.gdx.graphics.Mesh copy(boolean)
com.badlogic.gdx.graphics.OrthographicCamera:
    40:45:public OrthographicCamera(float,float)
    53:59:public OrthographicCamera(float,float,float)
    62:82:public void findDirectionForIsoView(float,float,int)
    85:96:private float calculateAngle(float)
    100:104:private com.badlogic.gdx.math.Vector3 calculateDirection(float)
    133:134:public void setToOrtho(boolean)
    142:150:public void setToOrtho(boolean,float,float)
    155:156:public void rotate(float)
    162:163:public void translate(float,float)
    168:169:public void translate(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.PerspectiveCamera:
    38:43:public PerspectiveCamera(float,float,float)
com.badlogic.gdx.graphics.Pixmap:
    123:129:public Pixmap(byte[],int,int)
    191:192:public void drawLine(int,int,int,int)
    202:203:public void drawRectangle(int,int,int,int)
    262:263:public void drawCircle(int,int,int)
    305:306:public void drawPixel(int,int)
com.badlogic.gdx.graphics.PixmapIO:
    41:42:public static void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$CIM:
    private static final int BUFFER_SIZE
    68:107:public static void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$PNG:
    static final int ZLIB_BLOCK_SIZE
com.badlogic.gdx.graphics.Texture:
    146:147:public Texture(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
    250:252:public void bind(int)
    300:300:public boolean isManaged()
    344:345:public static void setEnforcePotImages(boolean)
    424:425:public static void setAssetManager(com.badlogic.gdx.assets.AssetManager)
    440:440:public static int getNumManagedTextures()
com.badlogic.gdx.graphics.TextureDict:
    41:41:public static com.badlogic.gdx.graphics.TextureRef loadTexture(java.lang.String)
    53:65:public static com.badlogic.gdx.graphics.TextureRef loadTexture(java.lang.String,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap)
    72:73:public static void removeTexture(java.lang.String)
    77:81:public static void unloadAll()
com.badlogic.gdx.graphics.TextureRef:
    public java.lang.String Name
    private int mRefCount
    private com.badlogic.gdx.graphics.Texture mTexture
    32:36:public TextureRef(java.lang.String,com.badlogic.gdx.graphics.Texture)
    40:41:public void addRef()
    46:52:public int unload()
    56:57:public void dispose()
    61:62:public void bind()
    67:67:public com.badlogic.gdx.graphics.Texture get()
com.badlogic.gdx.graphics.VertexAttribute:
    51:51:public static com.badlogic.gdx.graphics.VertexAttribute Position()
    55:55:public static com.badlogic.gdx.graphics.VertexAttribute TexCoords(int)
    59:59:public static com.badlogic.gdx.graphics.VertexAttribute Normal()
    63:63:public static com.badlogic.gdx.graphics.VertexAttribute Color()
    67:67:public static com.badlogic.gdx.graphics.VertexAttribute ColorUnpacked()
com.badlogic.gdx.graphics.VertexAttributes:
    59:61:public int getOffset(int)
    67:70:public com.badlogic.gdx.graphics.VertexAttribute findByUsage(int)
com.badlogic.gdx.graphics.VertexAttributes$Usage:
    public static final int Position
    public static final int Color
    public static final int ColorPacked
    public static final int Normal
    public static final int TextureCoordinates
    public static final int Generic
com.badlogic.gdx.graphics.g2d.Animation:
    public static final int NORMAL
    public static final int REVERSED
    public static final int LOOP
    public static final int LOOP_REVERSED
    public static final int LOOP_PINGPONG
    public static final int LOOP_RANDOM
    final com.badlogic.gdx.graphics.g2d.TextureRegion[] keyFrames
    public final float frameDuration
    public final float animationDuration
    private int playMode
    46:55:public Animation(float,com.badlogic.gdx.utils.Array)
    62:72:public Animation(float,com.badlogic.gdx.utils.Array,int)
    78:83:public varargs Animation(float,com.badlogic.gdx.graphics.g2d.TextureRegion[])
    95:107:public com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float,boolean)
    117:118:public com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float)
    125:159:public int getKeyFrameIndex(float)
    167:168:public void setPlayMode(int)
    174:176:public boolean isAnimationFinished(float)
com.badlogic.gdx.graphics.g2d.BitmapFont:
    private static final int LOG2_PAGE_SIZE
    private static final int PAGE_SIZE
    private static final int PAGES
    81:83:public BitmapFont(boolean)
    223:226:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float)
    233:236:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    243:246:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float)
    254:257:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    269:269:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    470:471:public void setColor(float)
    507:508:public void setScale(float)
    512:513:public void scale(float)
    529:529:public float getLineHeight()
    534:534:public float getSpaceWidth()
    539:539:public float getXHeight()
    550:550:public float getAscent()
    572:585:public void setFixedWidthGlyphs(java.lang.CharSequence)
    594:596:public void setUseIntegerPositions(boolean)
    604:604:public com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData()
    611:611:public boolean ownsTexture()
    621:622:public void setOwnsTexture(boolean)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData:
    871:871:public com.badlogic.gdx.files.FileHandle getFontFile()
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds:
    675:677:public BitmapFont$TextBounds(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
com.badlogic.gdx.graphics.g2d.BitmapFontCache:
    89:94:public void setColor(float)
    118:122:public void setColor(com.badlogic.gdx.graphics.Color,int,int)
    279:285:public static synchronized void setComplexScriptLayout(java.lang.String,java.lang.String)
    293:294:public static void setFallbackFont(com.badlogic.gdx.graphics.g2d.BitmapFont)
    344:345:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float)
    351:352:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float,int,int)
    358:358:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float)
    391:391:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float)
    435:436:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float)
    451:451:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float)
    526:526:public float getX()
    531:531:public float getY()
    546:546:public boolean usesIntegerPositions()
    550:550:public float[] getVertices()
com.badlogic.gdx.graphics.g2d.FreeTypeComplexFontGenerator:
    64:70:public FreeTypeComplexFontGenerator(com.badlogic.gdx.files.FileHandle)
    79:80:public com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(int,boolean)
    88:88:public com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(int)
    95:95:public com.badlogic.gdx.graphics.g2d.FreeTypeComplexFontGenerator$FreeTypeBitmapFontData generateData(int)
    105:183:public com.badlogic.gdx.graphics.g2d.FreeTypeComplexFontGenerator$FreeTypeBitmapFontData generateData(int,boolean)
com.badlogic.gdx.graphics.g2d.FreeTypeComplexFontGenerator$FreeTypeBitmapFontData:
    com.badlogic.gdx.graphics.g2d.TextureRegion region
    201:201:public com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    public static final int GDX2D_FORMAT_ALPHA
    public static final int GDX2D_FORMAT_LUMINANCE_ALPHA
    public static final int GDX2D_FORMAT_RGB888
    public static final int GDX2D_FORMAT_RGBA8888
    public static final int GDX2D_FORMAT_RGB565
    public static final int GDX2D_FORMAT_RGBA4444
    public static final int GDX2D_SCALE_NEAREST
    public static final int GDX2D_SCALE_LINEAR
    public static final int GDX2D_BLEND_NONE
    public static final int GDX2D_BLEND_SRC_OVER
    65:82:public Gdx2DPixmap(java.io.InputStream,int)
    94:100:public Gdx2DPixmap(java.nio.ByteBuffer,long[])
    119:120:public void drawLine(int,int,int,int,int)
    123:124:public void drawRect(int,int,int,int,int)
    127:128:public void drawCircle(int,int,int,int)
    149:151:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int)
    157:159:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int)
    217:231:public java.lang.String getFormatString()
    private static native void drawLine(long,int,int,int,int,int)
    private static native void drawRect(long,int,int,int,int,int)
    private static native void drawCircle(long,int,int,int,int)
com.badlogic.gdx.graphics.g2d.NinePatch:
    public static final int TOP_LEFT
    public static final int TOP_CENTER
    public static final int TOP_RIGHT
    public static final int MIDDLE_LEFT
    public static final int MIDDLE_CENTER
    public static final int MIDDLE_RIGHT
    public static final int BOTTOM_LEFT
    public static final int BOTTOM_CENTER
    public static final int BOTTOM_RIGHT
    53:54:public NinePatch(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    105:107:public NinePatch(com.badlogic.gdx.graphics.Texture,com.badlogic.gdx.graphics.Color)
    110:111:public NinePatch(com.badlogic.gdx.graphics.Texture)
    114:116:public NinePatch(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.graphics.Color)
    127:159:public varargs NinePatch(com.badlogic.gdx.graphics.g2d.TextureRegion[])
    162:163:public NinePatch(com.badlogic.gdx.graphics.g2d.NinePatch)
    321:322:public void setColor(com.badlogic.gdx.graphics.Color)
    325:325:public com.badlogic.gdx.graphics.Color getColor()
    333:334:public void setLeftWidth(float)
    341:342:public void setRightWidth(float)
    349:350:public void setTopHeight(float)
    357:358:public void setBottomHeight(float)
    361:361:public float getMiddleWidth()
    365:366:public void setMiddleWidth(float)
    369:369:public float getMiddleHeight()
    373:374:public void setMiddleHeight(float)
    398:399:public void setPadLeft(int)
    408:409:public void setPadRight(int)
    418:419:public void setPadTop(int)
    428:429:public void setPadBottom(int)
    432:432:public com.badlogic.gdx.graphics.Texture getTexture()
com.badlogic.gdx.graphics.g2d.ParticleEffect:
    49:51:public void start()
    59:61:public void update(float)
    64:66:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch)
    69:71:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    74:76:public void allowCompletion()
    79:83:public boolean isComplete()
    87:93:public void setDuration(int)
    96:98:public void setPosition(float,float)
    101:103:public void setFlip(boolean,boolean)
    106:108:public void flipY()
    111:111:public com.badlogic.gdx.utils.Array getEmitters()
    116:120:public com.badlogic.gdx.graphics.g2d.ParticleEmitter findEmitter(java.lang.String)
    124:143:public void save(java.io.File)
    146:148:public void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    151:153:public void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureAtlas)
    156:177:public void loadEmitters(com.badlogic.gdx.files.FileHandle)
    180:191:public void loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas)
    194:201:public void loadEmitterImages(com.badlogic.gdx.files.FileHandle)
    204:204:protected com.badlogic.gdx.graphics.Texture loadTexture(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g2d.ParticleEffectPool:
    26:28:public ParticleEffectPool(com.badlogic.gdx.graphics.g2d.ParticleEffect,int,int)
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect:
    53:54:public void free()
com.badlogic.gdx.graphics.g2d.ParticleEmitter:
    private static final int UPDATE_SCALE
    private static final int UPDATE_ANGLE
    private static final int UPDATE_ROTATION
    private static final int UPDATE_VELOCITY
    private static final int UPDATE_WIND
    private static final int UPDATE_GRAVITY
    private static final int UPDATE_TINT
    private float accumulator
    private float x
    private float y
    private java.lang.String imagePath
    private boolean flipX
    private boolean flipY
    90:93:public ParticleEmitter(java.io.BufferedReader)
    144:155:public void addParticle()
    158:174:public void addParticles(int)
    177:222:public void update(float)
    225:236:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch)
    241:299:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    351:351:protected com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite)
    355:497:private void activateParticle(int)
    500:553:private boolean updateParticle(com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle,float,int)
    557:566:public void setPosition(float,float)
    569:580:public void setSprite(com.badlogic.gdx.graphics.g2d.Sprite)
    585:587:public void allowCompletion()
    594:594:public java.lang.String getName()
    598:599:public void setName(java.lang.String)
    602:602:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLife()
    606:606:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getScale()
    610:610:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getRotation()
    614:614:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue getTint()
    618:618:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getVelocity()
    622:622:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getWind()
    626:626:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getGravity()
    630:630:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getAngle()
    634:634:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getEmission()
    638:638:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getTransparency()
    642:642:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDuration()
    646:646:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDelay()
    650:650:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLifeOffset()
    654:654:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getXOffsetValue()
    658:658:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getYOffsetValue()
    662:662:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnWidth()
    666:666:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnHeight()
    670:670:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue getSpawnShape()
    674:674:public boolean isAttached()
    678:679:public void setAttached(boolean)
    682:682:public boolean isContinuous()
    686:687:public void setContinuous(boolean)
    690:690:public boolean isAligned()
    694:695:public void setAligned(boolean)
    698:698:public boolean isAdditive()
    702:703:public void setAdditive(boolean)
    706:706:public boolean isBehind()
    710:711:public void setBehind(boolean)
    714:714:public int getMinParticleCount()
    718:719:public void setMinParticleCount(int)
    722:722:public int getMaxParticleCount()
    726:727:public boolean isComplete()
    731:732:public float getPercentComplete()
    736:736:public float getX()
    740:740:public float getY()
    744:744:public int getActiveCount()
    748:748:public java.lang.String getImagePath()
    752:753:public void setImagePath(java.lang.String)
    756:763:public void setFlip(boolean,boolean)
    766:779:public void flipY()
    782:828:public void save(java.io.Writer)
    832:882:public void load(java.io.BufferedReader)
    885:887:static java.lang.String readString(java.io.BufferedReader,java.lang.String)
    891:891:static boolean readBoolean(java.io.BufferedReader,java.lang.String)
    895:895:static int readInt(java.io.BufferedReader,java.lang.String)
    899:899:static float readFloat(java.io.BufferedReader,java.lang.String)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue:
    1172:1172:public float[] getTimeline()
    1176:1177:public void setTimeline(float[])
    1180:1180:public float[] getColors()
    1184:1185:public void setColors(float[])
    1188:1215:public float[] getColor(float)
    1219:1227:public void save(java.io.Writer)
    1230:1238:public void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue:
    private float value
    963:963:public float getValue()
    967:968:public void setValue(float)
    971:974:public void save(java.io.Writer)
    977:980:public void load(java.io.BufferedReader)
    983:985:public void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle:
    int life
    int currentLife
    float scale
    float scaleDiff
    float rotation
    float rotationDiff
    float velocityDiff
    float angleDiff
    float transparency
    float transparencyDiff
    float wind
    float windDiff
    float gravity
    float gravityDiff
    float[] tint
    915:916:public ParticleEmitter$Particle(com.badlogic.gdx.graphics.g2d.Sprite)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue:
    928:928:public boolean isAlwaysActive()
    932:932:public boolean isActive()
    936:937:public void setActive(boolean)
    940:944:public void save(java.io.Writer)
    947:951:public void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue:
    996:998:public void setLow(float)
    1001:1003:public void setLow(float,float)
    1006:1006:public float getLowMin()
    1010:1011:public void setLowMin(float)
    1014:1014:public float getLowMax()
    1018:1019:public void setLowMax(float)
    1022:1026:public void save(java.io.Writer)
    1029:1033:public void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue:
    1053:1055:public void setHigh(float)
    1058:1060:public void setHigh(float,float)
    1063:1063:public float getHighMin()
    1067:1068:public void setHighMin(float)
    1071:1071:public float getHighMax()
    1075:1076:public void setHighMax(float)
    1079:1079:public float[] getScaling()
    1083:1084:public void setScaling(float[])
    1087:1087:public float[] getTimeline()
    1091:1092:public void setTimeline(float[])
    1099:1100:public void setRelative(boolean)
    1103:1118:public float getScale(float)
    1122:1133:public void save(java.io.Writer)
    1136:1147:public void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue:
    1255:1255:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape getShape()
    1259:1260:public void setShape(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape)
    1263:1263:public boolean isEdges()
    1267:1268:public void setEdges(boolean)
    1271:1271:public com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide getSide()
    1275:1276:public void setSide(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide)
    1279:1286:public void save(java.io.Writer)
    1289:1296:public void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D:
    private static final float EPSILON
    59:61:public ParticleEmitterBox2D(com.badlogic.gdx.physics.box2d.World)
    70:72:public ParticleEmitterBox2D(com.badlogic.gdx.physics.box2d.World,java.io.BufferedReader)
    80:82:public ParticleEmitterBox2D(com.badlogic.gdx.physics.box2d.World,com.badlogic.gdx.graphics.g2d.ParticleEmitter)
    86:86:protected com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite)
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$1:
    final synthetic com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D this$0
    46:46:ParticleEmitterBox2D$1(com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D)
    48:50:public float reportRayFixture(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$ParticleBox2D:
    91:93:public ParticleEmitterBox2D$ParticleBox2D(com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D,com.badlogic.gdx.graphics.g2d.Sprite)
com.badlogic.gdx.graphics.g2d.PixmapPacker:
    final int pageWidth
    final int pageHeight
    final com.badlogic.gdx.graphics.Pixmap$Format pageFormat
    final int padding
    final boolean duplicateBorder
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page currPage
    137:144:public PixmapPacker(int,int,com.badlogic.gdx.graphics.Pixmap$Format,int,boolean)
    156:203:public synchronized com.badlogic.gdx.math.Rectangle pack(java.lang.String,com.badlogic.gdx.graphics.Pixmap)
    207:213:private void newPage()
    216:258:private com.badlogic.gdx.graphics.g2d.PixmapPacker$Node insert(com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,com.badlogic.gdx.math.Rectangle)
    264:264:public com.badlogic.gdx.utils.Array getPages()
    270:274:public synchronized com.badlogic.gdx.math.Rectangle getRect(java.lang.String)
    280:284:public synchronized com.badlogic.gdx.graphics.g2d.PixmapPacker$Page getPage(java.lang.String)
    303:323:public synchronized com.badlogic.gdx.graphics.g2d.TextureAtlas generateTextureAtlas(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean)
    331:365:public synchronized void updateTextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean)
    368:368:public int getPageWidth()
    372:372:public int getPageHeight()
    376:376:public int getPadding()
    380:380:public boolean duplicateBoarder()
com.badlogic.gdx.graphics.g2d.PixmapPacker$1:
    final synthetic com.badlogic.gdx.graphics.g2d.PixmapPacker this$0
    306:306:PixmapPacker$1(com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.graphics.g2d.PixmapPacker$2:
    final synthetic com.badlogic.gdx.graphics.g2d.PixmapPacker this$0
    334:334:PixmapPacker$2(com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.graphics.g2d.PixmapPacker$ManagedPixmapTextureData:
    final synthetic com.badlogic.gdx.graphics.g2d.PixmapPacker this$0
    384:386:public PixmapPacker$ManagedPixmapTextureData(com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node:
    public com.badlogic.gdx.graphics.g2d.PixmapPacker$Node leftChild
    public com.badlogic.gdx.graphics.g2d.PixmapPacker$Node rightChild
    public java.lang.String leaveName
    94:99:public PixmapPacker$Node(int,int,int,int,com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,java.lang.String)
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node root
    com.badlogic.gdx.utils.OrderedMap rects
    com.badlogic.gdx.graphics.Texture texture
    com.badlogic.gdx.utils.Array addedRects
    final synthetic com.badlogic.gdx.graphics.g2d.PixmapPacker this$0
    106:111:public PixmapPacker$Page(com.badlogic.gdx.graphics.g2d.PixmapPacker)
    114:114:public com.badlogic.gdx.graphics.Pixmap getPixmap()
com.badlogic.gdx.graphics.g2d.PolygonRegion:
    private float[] texCoords
    private float[] localVertices
    private final com.badlogic.gdx.graphics.g2d.TextureRegion region
    47:53:public PolygonRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)
    59:83:public PolygonRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,float[])
    94:130:private void loadPolygonDefinition(com.badlogic.gdx.files.FileHandle)
    136:144:private float[] calculateAtlasTexCoords(float[])
    149:149:public float[] getLocalVertices()
    154:154:public float[] getTextureCoords()
    159:159:public com.badlogic.gdx.graphics.g2d.TextureRegion getRegion()
com.badlogic.gdx.graphics.g2d.PolygonSprite:
    com.badlogic.gdx.graphics.g2d.PolygonRegion region
    private float x
    private float y
    private float width
    private float height
    private float scaleX
    private float scaleY
    private float rotation
    private float originX
    private float originY
    private float[] vertices
    private boolean dirty
    private com.badlogic.gdx.math.Rectangle bounds
    private final com.badlogic.gdx.graphics.Color color
    38:43:public PolygonSprite(com.badlogic.gdx.graphics.g2d.PolygonRegion)
    46:48:public PolygonSprite(com.badlogic.gdx.graphics.g2d.PolygonSprite)
    51:66:public void set(com.badlogic.gdx.graphics.g2d.PolygonSprite)
    71:77:public void setBounds(float,float,float,float)
    83:87:public void setSize(float,float)
    93:94:public void setPosition(float,float)
    100:101:public void setX(float)
    107:108:public void setY(float)
    113:121:public void translateX(float)
    126:134:public void translateY(float)
    139:149:public void translate(float,float)
    152:158:public void setColor(com.badlogic.gdx.graphics.Color)
    161:167:public void setColor(float,float,float,float)
    171:174:public void setOrigin(float,float)
    177:179:public void setRotation(float)
    183:185:public void rotate(float)
    188:191:public void setScale(float)
    194:197:public void setScale(float,float)
    201:204:public void scale(float)
    208:246:public float[] getVertices()
    255:274:public com.badlogic.gdx.math.Rectangle getBoundingRectangle()
    278:279:public void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch)
    282:289:public void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch,float)
    292:292:public float getX()
    296:296:public float getY()
    300:300:public float getWidth()
    304:304:public float getHeight()
    308:308:public float getOriginX()
    312:312:public float getOriginY()
    316:316:public float getRotation()
    320:320:public float getScaleX()
    324:324:public float getScaleY()
    330:336:public com.badlogic.gdx.graphics.Color getColor()
    340:355:public void setRegion(com.badlogic.gdx.graphics.g2d.PolygonRegion)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch:
    148:149:public PolygonSpriteBatch(int,int)
    230:247:public void begin()
    252:270:public void end()
    274:275:public void setColor(com.badlogic.gdx.graphics.Color)
    279:281:public void setColor(float,float,float,float)
    286:287:public void setColor(float)
    291:297:public com.badlogic.gdx.graphics.Color getColor()
    302:303:public void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float)
    307:329:public void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float)
    337:383:public void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float,float,float,float,float,float)
    388:403:public void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float[],int,int)
    407:408:public void flush()
    411:441:private void renderMesh()
    445:447:public void disableBlending()
    451:453:public void enableBlending()
    460:463:public void setBlendFunction(int,int)
    467:470:public void dispose()
    476:476:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    483:483:public com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    491:494:public void setProjectionMatrix(com.badlogic.gdx.math.Matrix4)
    501:504:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    507:525:private void setupMatrices()
    528:530:private void switchTexture(com.badlogic.gdx.graphics.Texture)
    547:562:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    566:566:public boolean isBlendingEnabled()
com.badlogic.gdx.graphics.g2d.Sprite:
    static final int VERTEX_SIZE
    static final int SPRITE_SIZE
    private com.badlogic.gdx.math.Rectangle bounds
    56:57:public Sprite(com.badlogic.gdx.graphics.Texture)
    63:64:public Sprite(com.badlogic.gdx.graphics.Texture,int,int)
    69:76:public Sprite(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    90:95:public Sprite(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
    182:183:public void setPosition(float,float)
    189:190:public void setX(float)
    196:197:public void setY(float)
    202:211:public void translateX(float)
    216:225:public void translateY(float)
    269:274:public void setColor(float)
    284:286:public void setRotation(float)
    290:292:public void rotate(float)
    327:330:public void setScale(float)
    333:336:public void setScale(float,float)
    340:343:public void scale(float)
    420:448:public com.badlogic.gdx.math.Rectangle getBoundingRectangle()
    456:463:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    490:490:public float getRotation()
    494:494:public float getScaleX()
    498:498:public float getScaleY()
    532:535:public void setU(float)
    538:541:public void setV(float)
    544:547:public void setU2(float)
    550:553:public void setV2(float)
    577:598:public void scroll(float,float)
com.badlogic.gdx.graphics.g2d.SpriteBatch:
    public static final int X1
    public static final int Y1
    public static final int C1
    public static final int U1
    public static final int V1
    public static final int X2
    public static final int Y2
    public static final int C2
    public static final int U2
    public static final int V2
    public static final int X3
    public static final int Y3
    public static final int C3
    public static final int U3
    public static final int V3
    public static final int X4
    public static final int Y4
    public static final int C4
    public static final int U4
    public static final int V4
    148:149:public SpriteBatch(int,int)
    300:301:public void setColor(float)
    338:458:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean)
    477:525:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
    538:574:public void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
    901:1027:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean)
    1071:1074:public void disableBlending()
    1078:1081:public void enableBlending()
    1088:1091:public void setBlendFunction(int,int)
    1173:1188:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.SpriteCache:
    private boolean drawing
    132:133:public void setColor(com.badlogic.gdx.graphics.Color)
    137:139:public void setColor(float,float,float,float)
    144:145:public void setColor(float)
    148:154:public com.badlogic.gdx.graphics.Color getColor()
    170:179:public void beginCache(int)
    229:231:public void clear()
    253:301:public void add(com.badlogic.gdx.graphics.Texture,float,float)
    306:354:public void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,float,float,float,float,float)
    358:412:public void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
    418:483:public void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
    631:632:public void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)
    636:688:public void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float)
    695:818:public void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float)
    822:833:public void add(com.badlogic.gdx.graphics.g2d.Sprite)
    837:871:public void begin()
    875:889:public void end()
    893:918:public void draw(int)
    924:959:public void draw(int,int,int)
    968:968:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    972:974:public void setProjectionMatrix(com.badlogic.gdx.math.Matrix4)
    977:977:public com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    981:983:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    1039:1040:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.TextureAtlas:
    202:203:public TextureAtlas(java.lang.String)
    213:214:public TextureAtlas(com.badlogic.gdx.files.FileHandle,boolean)
    267:274:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.Texture,int,int,int,int)
    279:279:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion)
    301:307:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int)
    325:328:public com.badlogic.gdx.utils.Array createSprites()
    336:338:public com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String)
    346:352:public com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int)
    360:365:public com.badlogic.gdx.utils.Array createSprites(java.lang.String)
    369:378:private com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion)
    386:396:public com.badlogic.gdx.graphics.g2d.NinePatch createPatch(java.lang.String)
    401:401:public java.util.Set getTextures()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite:
    559:560:public void setPosition(float,float)
    664:664:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion getAtlasRegion()
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData:
    191:191:public com.badlogic.gdx.utils.Array getRegions()
com.badlogic.gdx.graphics.g2d.TextureRegion:
    56:59:public TextureRegion(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    75:77:public void setRegion(com.badlogic.gdx.graphics.Texture)
    115:116:public void setTexture(com.badlogic.gdx.graphics.Texture)
    123:125:public void setU(float)
    132:134:public void setV(float)
    141:143:public void setU2(float)
    150:152:public void setV2(float)
    159:160:public void setRegionX(int)
    167:168:public void setRegionY(int)
    176:177:public void setRegionWidth(int)
    185:186:public void setRegionHeight(int)
    202:202:public boolean isFlipX()
    206:206:public boolean isFlipY()
    214:224:public void scroll(float,float)
    234:251:public com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(int,int)
    263:264:public static com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType:
    541:544:public static com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library initFreeType()
    private static native long initFreeTypeJni()
    566:567:public static com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face newFace(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library,com.badlogic.gdx.files.FileHandle,int)
    571:580:public static com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face newMemoryFace(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library,byte[],int,int)
    private static native long newMemoryFace(long,java.nio.ByteBuffer,int,int)
    605:605:public static boolean selectSize(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int)
    private static native boolean selectSize(long,int)
    613:613:public static boolean setCharSize(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int,int,int)
    private static native boolean setCharSize(long,int,int,int,int)
    621:621:public static boolean setPixelSizes(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int)
    private static native boolean setPixelSizes(long,int,int)
    629:629:public static boolean loadGlyph(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int)
    private static native boolean loadGlyph(long,int,int)
    637:637:public static boolean loadChar(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int)
    private static native boolean loadChar(long,int,int)
    645:645:public static boolean renderGlyph(com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot,int)
    private static native boolean renderGlyph(long,int)
    653:653:public static boolean hasKerning(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face)
    private static native boolean hasKerning(long)
    661:661:public static int getKerning(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int,int)
    private static native int getKerning(long,int,int,int)
    672:672:public static int getCharIndex(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int)
    private static native int getCharIndex(long,int)
    680:681:public static int toInt(int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap:
    323:324:FreeType$Bitmap(long)
    327:327:public int getRows()
    private static native int getRows(long)
    335:335:public int getWidth()
    private static native int getWidth(long)
    343:343:public int getPitch()
    private static native int getPitch(long)
    351:358:public java.nio.ByteBuffer getBuffer()
    365:373:public com.badlogic.gdx.graphics.Pixmap getPixmap(com.badlogic.gdx.graphics.Pixmap$Format)
    private static native java.nio.ByteBuffer getBuffer(long)
    382:382:public int getNumGray()
    private static native int getNumGray(long)
    390:390:public int getPixelMode()
    private static native int getPixelMode(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face:
    57:59:public FreeType$Face(long,com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library)
    62:62:public int getFaceFlags()
    private static native int getFaceFlags(long)
    70:70:public int getStyleFlags()
    private static native int getStyleFlags(long)
    78:78:public int getNumGlyphs()
    private static native int getNumGlyphs(long)
    86:86:public int getAscender()
    private static native int getAscender(long)
    94:94:public int getDescender()
    private static native int getDescender(long)
    102:102:public int getHeight()
    private static native int getHeight(long)
    110:110:public int getMaxAdvanceWidth()
    private static native int getMaxAdvanceWidth(long)
    118:118:public int getMaxAdvanceHeight()
    private static native int getMaxAdvanceHeight(long)
    126:126:public int getUnderlinePosition()
    private static native int getUnderlinePosition(long)
    134:134:public int getUnderlineThickness()
    private static native int getUnderlineThickness(long)
    142:142:public com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot getGlyph()
    private static native long getGlyph(long)
    150:150:public com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size getSize()
    private static native long getSize(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics:
    400:401:FreeType$GlyphMetrics(long)
    404:404:public int getWidth()
    private static native int getWidth(long)
    412:412:public int getHeight()
    private static native int getHeight(long)
    420:420:public int getHoriBearingX()
    private static native int getHoriBearingX(long)
    428:428:public int getHoriBearingY()
    private static native int getHoriBearingY(long)
    436:436:public int getHoriAdvance()
    private static native int getHoriAdvance(long)
    444:444:public int getVertBearingX()
    private static native int getVertBearingX(long)
    452:452:public int getVertBearingY()
    private static native int getVertBearingY(long)
    460:460:public int getVertAdvance()
    private static native int getVertAdvance(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot:
    244:245:FreeType$GlyphSlot(long)
    248:248:public com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics getMetrics()
    private static native long getMetrics(long)
    256:256:public int getLinearHoriAdvance()
    private static native int getLinearHoriAdvance(long)
    264:264:public int getLinearVertAdvance()
    private static native int getLinearVertAdvance(long)
    272:272:public int getAdvanceX()
    private static native int getAdvanceX(long)
    280:280:public int getAdvanceY()
    private static native int getAdvanceY(long)
    288:288:public int getFormat()
    private static native int getFormat(long)
    296:296:public com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap getBitmap()
    private static native long getBitmap(long)
    305:305:public int getBitmapLeft()
    private static native int getBitmapLeft(long)
    313:313:public int getBitmapTop()
    private static native int getBitmapTop(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library:
    49:50:FreeType$Library(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Pointer:
    40:42:FreeType$Pointer(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size:
    160:161:FreeType$Size(long)
    164:164:public com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics getMetrics()
    private static native long getMetrics(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics:
    174:175:FreeType$SizeMetrics(long)
    178:178:public int getXppem()
    private static native int getXppem(long)
    186:186:public int getYppem()
    private static native int getYppem(long)
    194:194:public int getXScale()
    private static native int getXscale(long)
    202:202:public int getYscale()
    private static native int getYscale(long)
    210:210:public int getAscender()
    private static native int getAscender(long)
    218:218:public int getDescender()
    private static native int getDescender(long)
    226:226:public int getHeight()
    private static native int getHeight(long)
    234:234:public int getMaxAdvance()
    private static native int getMaxAdvance(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator:
    public static final java.lang.String DEFAULT_CHARS
    63:69:public FreeTypeFontGenerator(com.badlogic.gdx.files.FileHandle)
    78:79:public com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(int,java.lang.String,boolean)
    87:87:public com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(int)
    95:99:public int scaleForPixelHeight(int)
    111:150:public com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap generateGlyphAndBitmap(int,int,boolean)
    157:157:public com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(int)
    167:259:public com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(int,java.lang.String,boolean)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData:
    com.badlogic.gdx.graphics.g2d.TextureRegion region
    277:277:public com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion()
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap:
    public com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph glyph
    public com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap bitmap
    final synthetic com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator this$0
    102:102:public FreeTypeFontGenerator$GlyphAndBitmap(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator)
com.badlogic.gdx.graphics.g2d.freetype.FreetypeBuild:
    28:122:public static void main(java.lang.String[])
com.badlogic.gdx.graphics.g2d.harfbuzz.ComplexScriptLayout:
    private static java.lang.String fontLanguage
    private static java.lang.String loadedLanguage
    private static java.lang.String fontFilePath
    private static synchronized native void jniInitialize(java.lang.String,java.lang.String)
    27:43:public static synchronized void setLanguage(java.lang.String,java.lang.String)
com.badlogic.gdx.graphics.g2d.tiled.SimpleTileAtlas:
    33:62:public SimpleTileAtlas(com.badlogic.gdx.graphics.g2d.tiled.TiledMap,com.badlogic.gdx.files.FileHandle)
    67:76:private static com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.tiled.TileAtlas:
    128:131:public void flipRegions(boolean,boolean)
com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer:
    private static final int FLAG_FLIP_X
    private static final int FLAG_FLIP_Y
    private static final int FLAG_ROTATE
    private static final int MASK_CLEAR
    private int initialRow
    private int initialCol
    private int currentRow
    private int currentCol
    private int lastRow
    private int lastCol
    private int currentLayer
    103:104:public TileMapRenderer(com.badlogic.gdx.graphics.g2d.tiled.TiledMap,com.badlogic.gdx.graphics.g2d.tiled.TileAtlas,int,int,com.badlogic.gdx.graphics.glutils.ShaderProgram)
    152:154:public TileMapRenderer(int[][][],com.badlogic.gdx.graphics.g2d.tiled.TileAtlas,int,int,float,float,com.badlogic.gdx.utils.IntArray,int,int)
    173:175:public TileMapRenderer(int[][][],com.badlogic.gdx.graphics.g2d.tiled.TileAtlas,int,int,float,float,com.badlogic.gdx.utils.IntArray,int,int,com.badlogic.gdx.graphics.glutils.ShaderProgram)
    348:349:public void render()
    354:355:public void render(float,float,float,float)
    360:361:public void render(com.badlogic.gdx.graphics.OrthographicCamera)
    370:374:public void render(com.badlogic.gdx.graphics.OrthographicCamera,int[])
    394:431:public void render(float,float,float,float,int[])
    434:444:private int getLayerWidthInBlocks(int,int)
    448:458:private int getLayerHeightInBlocks(int)
    462:462:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    466:466:public com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    472:472:public int getRow(int)
    478:478:public int getCol(int)
    484:484:public int getInitialRow()
    490:490:public int getInitialCol()
    496:496:public int getLastRow()
    502:502:public int getLastCol()
    506:506:public float getUnitsPerTileX()
    510:510:public float getUnitsPerTileY()
    514:514:public int getMapHeightUnits()
    518:518:public int getMapWidthUnits()
    522:526:private static int parseIntWithDefault(java.lang.String,int)
    537:537:public com.badlogic.gdx.graphics.g2d.tiled.TiledMap getMap()
    541:541:public com.badlogic.gdx.graphics.g2d.tiled.TileAtlas getAtlas()
com.badlogic.gdx.graphics.g2d.tiled.TileSet:
    32:40:protected TileSet(com.badlogic.gdx.graphics.g2d.tiled.TileSet)
com.badlogic.gdx.graphics.g2d.tiled.TiledLayer:
    35:36:public int getWidth()
    40:40:public int getHeight()
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader:
    37:37:public static com.badlogic.gdx.graphics.g2d.tiled.TiledMap createMap(java.lang.String)
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline:
    76:77:public TiledLoader$1$Polyline(com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1)
com.badlogic.gdx.graphics.g2d.tiled.TiledMap:
    63:69:public java.lang.String getTileProperty(int,java.lang.String)
com.badlogic.gdx.graphics.g3d.AnimatedModelInstance:
    public abstract java.lang.String getAnimation()
    public abstract float getAnimationTime()
    public abstract boolean isLooping()
com.badlogic.gdx.graphics.g3d.AnimatedModelNode:
    public java.lang.String animation
    public float time
    public boolean looping
    31:32:public AnimatedModelNode(com.badlogic.gdx.graphics.g3d.materials.Material[])
    36:36:public java.lang.String getAnimation()
    41:41:public float getAnimationTime()
    46:46:public boolean isLooping()
    50:66:public com.badlogic.gdx.graphics.g3d.AnimatedModelNode copy()
    21:21:public bridge synthetic com.badlogic.gdx.graphics.g3d.StillModelNode copy()
com.badlogic.gdx.graphics.g3d.ModelRenderer:
    public abstract void begin()
    public abstract void draw(com.badlogic.gdx.graphics.g3d.model.still.StillModel,com.badlogic.gdx.graphics.g3d.StillModelInstance)
    public abstract void draw(com.badlogic.gdx.graphics.g3d.model.AnimatedModel,com.badlogic.gdx.graphics.g3d.AnimatedModelInstance)
    public abstract void end()
com.badlogic.gdx.graphics.g3d.StillModelInstance:
    public abstract com.badlogic.gdx.math.Matrix4 getTransform()
    public abstract com.badlogic.gdx.math.Vector3 getSortCenter()
    public abstract float getBoundingSphereRadius()
    public abstract com.badlogic.gdx.graphics.g3d.materials.Material[] getMaterials()
com.badlogic.gdx.graphics.g3d.StillModelNode:
    public float radius
    43:43:public com.badlogic.gdx.math.Matrix4 getTransform()
    48:55:public com.badlogic.gdx.math.Vector3 getSortCenter()
    60:60:public com.badlogic.gdx.graphics.g3d.materials.Material[] getMaterials()
    65:65:public float getBoundingSphereRadius()
    69:82:public com.badlogic.gdx.graphics.g3d.StillModelNode copy()
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy:
    private static final int GROUP_OPAQUE
    private static final int GROUP_BLEND
    com.badlogic.gdx.utils.Pool arrayPool
    com.badlogic.gdx.utils.Array usedArrays
    com.badlogic.gdx.utils.ObjectMap materialGroups
    com.badlogic.gdx.graphics.Camera camera
    private final java.util.Comparator cameraSorter
    99:107:public CameraGroupStrategy(com.badlogic.gdx.graphics.Camera)
    109:114:public CameraGroupStrategy(com.badlogic.gdx.graphics.Camera,java.util.Comparator)
    117:118:public void setCamera(com.badlogic.gdx.graphics.Camera)
    121:121:public com.badlogic.gdx.graphics.Camera getCamera()
    126:126:public int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal)
    131:156:public void beforeGroup(int,com.badlogic.gdx.utils.Array)
    160:163:public void afterGroup(int)
    167:179:public void beforeGroups()
    183:188:public void afterGroups()
    191:219:private void createDefaultShader()
    223:223:public com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int)
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1:
    final synthetic com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy this$0
    85:85:CameraGroupStrategy$1(com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy,int)
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2:
    99:99:CameraGroupStrategy$2(com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.graphics.g3d.decals.Decal:
    private static final int VERTEX_SIZE
    public static final int SIZE
    public int value
    public static final int X1
    public static final int Y1
    public static final int Z1
    public static final int C1
    public static final int U1
    public static final int V1
    public static final int X2
    public static final int Y2
    public static final int Z2
    public static final int C2
    public static final int U2
    public static final int V2
    public static final int X3
    public static final int Y3
    public static final int Z3
    public static final int C3
    public static final int U3
    public static final int V3
    public static final int X4
    public static final int Y4
    public static final int Z4
    public static final int C4
    public static final int U4
    public static final int V4
    69:75:public void setColor(float,float,float,float)
    81:83:public void setRotationX(float)
    89:91:public void setRotationY(float)
    97:99:public void setRotationZ(float)
    105:108:public void rotateX(float)
    114:117:public void rotateY(float)
    123:126:public void rotateZ(float)
    132:136:public void setRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    142:142:public com.badlogic.gdx.math.Quaternion getRotation()
    149:151:public void translateX(float)
    157:159:public void setX(float)
    163:163:public float getX()
    170:172:public void translateY(float)
    178:180:public void setY(float)
    184:184:public float getY()
    191:193:public void translateZ(float)
    199:201:public void setZ(float)
    214:216:public void translate(float,float,float)
    224:226:public void setPosition(float,float,float)
    232:232:public com.badlogic.gdx.math.Vector3 getPosition()
    239:241:public void setScaleX(float)
    245:245:public float getScaleX()
    252:254:public void setScaleY(float)
    258:258:public float getScaleY()
    266:268:public void setScale(float,float)
    274:276:public void setScale(float)
    282:284:public void setWidth(float)
    288:288:public float getWidth()
    295:297:public void setHeight(float)
    301:301:public float getHeight()
    309:311:public void setDimensions(float,float)
    318:318:public float[] getVertices()
    323:327:protected void update()
    341:436:protected void transformVertices()
    440:463:protected void resetVertices()
    467:480:protected void updateUVs()
    486:488:public void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
    492:492:public com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion()
    500:502:public void setBlending(int,int)
    505:505:public com.badlogic.gdx.graphics.g3d.decals.DecalMaterial getMaterial()
    514:516:public void lookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    554:554:public static com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion)
    564:564:public static com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)
    578:578:public static com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion)
    589:589:public static com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)
    602:608:public static com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,int,int)
com.badlogic.gdx.graphics.g3d.decals.DecalBatch:
    private static final int DEFAULT_SIZE
    70:71:public DecalBatch(com.badlogic.gdx.graphics.g3d.decals.GroupStrategy)
    109:109:public int getSize()
    116:126:public void add(com.badlogic.gdx.graphics.g3d.decals.Decal)
    130:132:public void flush()
    136:144:protected void render()
    151:175:private void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,com.badlogic.gdx.utils.Array)
    181:187:protected void flush(com.badlogic.gdx.graphics.glutils.ShaderProgram,int)
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial:
    public static final int NO_BLEND
    31:35:public void set()
    39:39:public boolean isOpaque()
    43:43:public int getSrcBlendFactor()
    47:47:public int getDstBlendFactor()
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy:
    private static final int GROUP_OPAQUE
    private static final int GROUP_BLEND
    78:78:public int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal)
    83:86:public void beforeGroup(int,com.badlogic.gdx.utils.Array)
    90:93:public void afterGroup(int)
    97:98:public void beforeGroups()
    102:103:public void afterGroups()
    107:107:public com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int)
com.badlogic.gdx.graphics.g3d.decals.GroupPlug:
    public abstract void beforeGroup(com.badlogic.gdx.utils.Array)
    public abstract void afterGroup()
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy:
    public abstract com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int)
    public abstract int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal)
    public abstract void beforeGroup(int,com.badlogic.gdx.utils.Array)
    public abstract void afterGroup(int)
    public abstract void beforeGroups()
    public abstract void afterGroups()
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy:
    29:30:public void beforeGroup(int,com.badlogic.gdx.utils.Array)
    34:35:public void afterGroup(int)
    41:42:public void plugIn(com.badlogic.gdx.graphics.g3d.decals.GroupPlug,int)
    48:48:public com.badlogic.gdx.graphics.g3d.decals.GroupPlug unPlug(int)
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy:
    private static final int GROUP_OPAQUE
    private static final int GROUP_BLEND
    76:76:public int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal)
    81:90:public void beforeGroup(int,com.badlogic.gdx.utils.Array)
    94:98:public void afterGroup(int)
    102:103:public void beforeGroups()
    107:108:public void afterGroups()
    120:120:public com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int)
com.badlogic.gdx.graphics.g3d.loaders.KeyframedModelLoader:
    public abstract com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
com.badlogic.gdx.graphics.g3d.loaders.ModelLoader:
    public abstract com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
com.badlogic.gdx.graphics.g3d.loaders.ModelLoaderRegistry:
    95:123:public static com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle)
    133:158:public static com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
    167:197:public static com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(com.badlogic.gdx.files.FileHandle)
    207:234:public static com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
    244:274:public static com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(com.badlogic.gdx.files.FileHandle)
    285:312:public static com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
    321:351:public static com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel loadSkeletonModel(com.badlogic.gdx.files.FileHandle)
    361:388:public static com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel loadSkeletonModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
com.badlogic.gdx.graphics.g3d.loaders.SkeletonModelLoader:
    public abstract com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
com.badlogic.gdx.graphics.g3d.loaders.StillModelLoader:
    public abstract com.badlogic.gdx.graphics.g3d.model.still.StillModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dConstants:
    public static final byte MAJOR_VERSION
    public static final byte MINOR_VERSION
    public static final int G3D_ROOT
    public static final int VERSION_INFO
    public static final int STILL_MODEL
    public static final int STILL_SUBMESH
    public static final int KEYFRAMED_MODEL
    public static final int KEYFRAMED_SUBMESH
    public static final int KEYFRAMED_ANIMATION
    public static final int KEYFRAMED_FRAME
    public static final int SKELETON_MODEL
    public static final int SKELETON_SUBMESH
    public static final int SKELETON_ANIMATIONS
    public static final int SKELETON_ANIMATION
    public static final int SKELETON
    public static final int SKELETON_HIERARCHY
    public static final int SKELETON_JOINT
    public static final int SKELETON_KEYFRAME
    public static final int VERTEX_LIST
    public static final int INDEX_LIST
    public static final int VERTEX_ATTRIBUTES
    public static final int VERTEX_ATTRIBUTE
    public static final int BONE_WEIGHTS
    public static final int BONE_WEIGHT
    public static final int BONE_ASSIGNMENTS
    public static final int BONE_ASSIGNMENT
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader:
    50:124:public static com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(com.badlogic.gdx.files.FileHandle)
    129:234:public static com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(com.badlogic.gdx.files.FileHandle)
    239:399:public static com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel loadSkeletonModel(com.badlogic.gdx.files.FileHandle)
    404:425:private static com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint readSkeletonJoint(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk)
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dKeyframedModelLoader:
    438:438:public com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
    435:435:public bridge synthetic com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dSkeletonModelLoader:
    445:445:public com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
    442:442:public bridge synthetic com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dStillModelLoader:
    431:431:public com.badlogic.gdx.graphics.g3d.model.still.StillModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
    428:428:public bridge synthetic com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader:
    51:51:public static com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(com.badlogic.gdx.files.FileHandle,boolean)
    55:55:public static com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(com.badlogic.gdx.files.FileHandle,boolean)
    62:76:public static com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(java.io.InputStream,boolean)
    82:122:private static com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh readStillSubMesh(java.io.BufferedReader,boolean)
    126:141:public static com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(java.io.InputStream,boolean)
    147:203:private static com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh readMesh(java.io.BufferedReader,boolean)
    207:226:private static float[] buildVertices(int,boolean,com.badlogic.gdx.utils.Array)
    230:237:private static com.badlogic.gdx.graphics.VertexAttribute[] createVertexAttributes(boolean,int)
    241:248:private static com.badlogic.gdx.utils.FloatArray readUVSet(java.io.BufferedReader,int,boolean)
    252:271:private static com.badlogic.gdx.utils.IntArray readFaces(java.io.BufferedReader)
    275:279:private static short[] convertToShortArray(com.badlogic.gdx.utils.IntArray)
    283:284:private static float readFloat(java.io.BufferedReader)
    288:289:private static int readInt(java.io.BufferedReader)
    293:294:private static java.lang.String readString(java.io.BufferedReader)
    298:305:private static void readFloatArray(java.io.BufferedReader,com.badlogic.gdx.utils.FloatArray)
    308:314:private static int readFloatArray(java.io.BufferedReader,float[],int)
    318:324:private static void readIntArray(java.io.BufferedReader,com.badlogic.gdx.utils.IntArray)
    327:328:private static java.lang.String read(java.io.BufferedReader)
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader$G3dtKeyframedModelLoader:
    342:342:public com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
    339:339:public bridge synthetic com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader$G3dtStillModelLoader:
    335:335:public com.badlogic.gdx.graphics.g3d.model.still.StillModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
    331:331:public bridge synthetic com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader:
    219:219:public static com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk readChunks(java.io.InputStream)
    223:225:private static com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk loadChunks(java.io.InputStream,int)
    229:240:private static com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk loadChunk(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.CountingDataInputStream,byte[])
    244:256:private static byte[] readStream(java.io.InputStream,int)
    263:264:public static void printChunks(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk)
    267:324:private static void printChunks(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk,int)
    327:330:private static java.lang.String rep(java.lang.String,int)
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk:
    int id
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk parent
    com.badlogic.gdx.utils.Array children
    java.io.ByteArrayInputStream payload
    byte[] payloadBytes
    int offset
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.CountingDataInputStream in
    41:48:protected ChunkReader$Chunk(int,com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk,byte[],int,int)
    51:51:public int getId()
    55:55:public com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk getParent()
    59:59:public com.badlogic.gdx.utils.Array getChildren()
    64:66:public int readByte()
    72:74:public short readShort()
    80:82:public int readInt()
    88:90:public long readLong()
    96:98:public float readFloat()
    104:106:public double readDouble()
    112:119:public byte[] readBytes()
    125:132:public short[] readShorts()
    138:145:public int[] readInts()
    151:158:public long[] readLongs()
    164:171:public float[] readFloats()
    177:184:public double[] readDoubles()
    190:195:public java.lang.String readString()
    200:204:public com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk getChild(int)
    208:214:public com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk[] getChildren(int)
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter:
    57:60:public void newChunk(int)
    63:64:public void endChunk()
    68:72:public void writeByte(int)
    76:80:public void writeShort(short)
    84:88:public void writeInt(int)
    92:96:public void writeLong(long)
    100:104:public void writeFloat(float)
    108:112:public void writeDouble(double)
    116:121:public void writeString(java.lang.String)
    124:125:public void writeToStream(java.io.OutputStream)
    129:141:private void writeToStream(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk,java.io.DataOutputStream)
    145:151:public void writeBytes(byte[])
    155:161:public void writeShorts(short[])
    165:171:public void writeInts(int[])
    175:181:public void writeLongs(long[])
    185:191:public void writeFloats(float[])
    195:201:public void writeDoubles(double[])
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk:
    42:45:public ChunkWriter$Chunk(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter,int,com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk)
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.CountingDataInputStream:
    28:30:public CountingDataInputStream(java.io.InputStream)
    33:33:public int getReadBytes()
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.G3dExporter:
    40:110:public static void export(com.badlogic.gdx.graphics.g3d.model.still.StillModel,com.badlogic.gdx.files.FileHandle)
    113:206:public static void export(com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel,com.badlogic.gdx.files.FileHandle)
    209:345:public static void export(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel,com.badlogic.gdx.files.FileHandle)
    348:364:private static void writeSkeletonJoint(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter,com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint)
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame:
    public float[] vertices
    public int[] normalIndices
    public java.lang.String name
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header:
    public int ident
    public int version
    public int skinWidth
    public int skinHeight
    public int frameSize
    public int numSkins
    public int numVertices
    public int numTexCoords
    public int numTriangles
    public int numGLCommands
    public int numFrames
    public int offsetSkin
    public int offsetTexCoords
    public int offsetTriangles
    public int offsetFrames
    public int offsetGLCommands
    public int offsetEnd
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader:
    43:47:public com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
    51:58:public com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,float)
    65:75:public com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(java.io.InputStream,float)
    81:220:private com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel buildModel(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle[],float[],com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame[],float)
    224:236:private float[] buildTexCoords(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle[],float[])
    240:249:private short[] buildIndices(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle[])
    253:263:private com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame[] loadFrames(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,byte[])
    269:300:private com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame loadFrame(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,com.badlogic.gdx.utils.LittleEndianInputStream)
    304:321:private com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle[] loadTriangles(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,byte[])
    325:338:private float[] loadTexCoords(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,byte[])
    342:365:private com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header loadHeader(byte[])
    369:378:private byte[] loadBytes(java.io.InputStream)
    41:41:public bridge synthetic com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader$VertexIndices:
    public short nIdx
    final synthetic com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader this$0
    382:386:public MD2Loader$VertexIndices(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader,short,short,short)
com.badlogic.gdx.graphics.g3d.loaders.wavefront.MtlLoader:
    312:384:public void load(java.lang.String,com.badlogic.gdx.files.FileHandle)
    388:392:public com.badlogic.gdx.graphics.g3d.materials.Material getMaterial(java.lang.String)
com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader:
    66:66:public com.badlogic.gdx.graphics.g3d.model.still.StillModel loadObj(com.badlogic.gdx.files.FileHandle)
    74:74:public com.badlogic.gdx.graphics.g3d.model.still.StillModel loadObj(com.badlogic.gdx.files.FileHandle,boolean)
    86:245:public com.badlogic.gdx.graphics.g3d.model.still.StillModel loadObj(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
    251:256:private com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader$Group setActiveGroup(java.lang.String)
    260:265:private int getIndex(java.lang.String,int)
    288:288:public com.badlogic.gdx.graphics.g3d.model.still.StillModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
    49:49:public bridge synthetic com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints)
com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader$Group:
    final java.lang.String name
    java.lang.String materialName
    java.util.ArrayList faces
    int numFaces
    boolean hasNorms
    boolean hasUVs
    com.badlogic.gdx.graphics.g3d.materials.Material mat
    final synthetic com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader this$0
    277:283:ObjLoader$Group(com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader,java.lang.String)
com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute:
    public static final java.lang.String translucent
    public int blendSrcFunc
    public int blendDstFunc
    38:39:public BlendingAttribute(java.lang.String)
    42:45:public BlendingAttribute(java.lang.String,int,int)
    49:50:public void bind()
    54:55:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    59:59:public com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute copy()
    64:68:public void set(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute)
    79:81:public com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute pooledCopy()
    86:87:public void free()
com.badlogic.gdx.graphics.g3d.materials.ColorAttribute:
    public static final java.lang.String diffuse
    public static final java.lang.String specular
    public static final java.lang.String emissive
    public static final java.lang.String rim
    public static final java.lang.String fog
    44:46:public ColorAttribute(com.badlogic.gdx.graphics.Color,java.lang.String)
    50:55:public void bind()
    59:60:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    64:64:public com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute copy()
    69:76:public void set(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute)
    87:89:public com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute pooledCopy()
    94:95:public void free()
com.badlogic.gdx.graphics.g3d.materials.Material:
    protected boolean needBlending
    protected boolean hasTexture
    protected com.badlogic.gdx.graphics.glutils.ShaderProgram shader
    39:44:public Material(java.lang.String,com.badlogic.gdx.utils.Array)
    47:48:public varargs Material(java.lang.String,com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute[])
    52:60:protected void checkAttributes()
    63:66:public void bind()
    69:72:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    75:75:public java.lang.String getName()
    79:86:public varargs void addAttribute(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute[])
    89:92:public varargs void removeAttribute(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute[])
    95:97:public void clearAttributes()
    100:102:public com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute getAttribute(int)
    106:106:public int getNumberOfAttributes()
    128:134:public com.badlogic.gdx.graphics.g3d.materials.Material copy()
    163:182:public boolean shaderEquals(com.badlogic.gdx.graphics.g3d.materials.Material)
    186:194:public void setPooled(com.badlogic.gdx.graphics.g3d.materials.Material)
    197:197:public boolean isNeedBlending()
    201:201:public boolean hasTexture()
    205:205:public com.badlogic.gdx.graphics.glutils.ShaderProgram getShader()
    209:210:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    213:214:public void resetShader()
com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute:
    private static final java.lang.String FLAG
    public java.lang.String name
    30:33:public MaterialAttribute(java.lang.String)
    public abstract void bind()
    public abstract void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    public abstract com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute copy()
    public abstract com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute pooledCopy()
    public abstract void free()
    public abstract void set(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute)
    48:48:public java.lang.String getShaderFlag()
com.badlogic.gdx.graphics.g3d.materials.TextureAttribute:
    public static final int MAX_TEXTURE_UNITS
    public static final java.lang.String diffuseTexture
    public static final java.lang.String lightmapTexture
    public static final java.lang.String specularTexture
    public com.badlogic.gdx.graphics.Texture texture
    public int unit
    public int minFilter
    public int magFilter
    public int uWrap
    public int vWrap
    46:47:public TextureAttribute(com.badlogic.gdx.graphics.Texture,int,java.lang.String,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap)
    50:58:public TextureAttribute(com.badlogic.gdx.graphics.Texture,int,java.lang.String,int,int,int,int)
    61:62:public TextureAttribute(com.badlogic.gdx.graphics.Texture,int,java.lang.String)
    66:71:public void bind()
    75:81:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    85:85:public com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute copy()
    90:98:public void set(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute)
    102:105:public boolean texturePortionEquals(com.badlogic.gdx.graphics.g3d.materials.TextureAttribute)
    119:121:public com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute pooledCopy()
    126:127:public void free()
com.badlogic.gdx.graphics.g3d.model.AnimatedModel:
    public abstract void setAnimation(java.lang.String,float,boolean)
    public abstract com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String)
    public abstract com.badlogic.gdx.graphics.g3d.model.Animation[] getAnimations()
com.badlogic.gdx.graphics.g3d.model.Animation:
    public final java.lang.String name
    public final float totalDuration
    23:26:public Animation(java.lang.String,float)
com.badlogic.gdx.graphics.g3d.model.Model:
    public abstract void render()
    public abstract void render(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    public varargs abstract com.badlogic.gdx.graphics.g3d.model.Model getSubModel(java.lang.String[])
    public abstract com.badlogic.gdx.graphics.g3d.model.SubMesh getSubMesh(java.lang.String)
    public abstract com.badlogic.gdx.graphics.g3d.model.SubMesh[] getSubMeshes()
    public abstract void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    public varargs abstract void setMaterials(com.badlogic.gdx.graphics.g3d.materials.Material[])
    public abstract void setMaterial(com.badlogic.gdx.graphics.g3d.materials.Material)
    public abstract void dispose()
com.badlogic.gdx.graphics.g3d.model.SubMesh:
    public java.lang.String name
    public com.badlogic.gdx.graphics.g3d.materials.Material material
    public int primitiveType
    30:35:public SubMesh(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,com.badlogic.gdx.graphics.g3d.materials.Material)
    38:39:public SubMesh(java.lang.String,com.badlogic.gdx.graphics.Mesh,int)
    public abstract void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    47:47:public com.badlogic.gdx.graphics.Mesh getMesh()
    51:52:public void setMesh(com.badlogic.gdx.graphics.Mesh)
com.badlogic.gdx.graphics.g3d.model.keyframe.Keyframe:
    public final float timeStamp
    public final float[] vertices
    23:26:public Keyframe(float,float[])
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation:
    public final float frameDuration
    public final com.badlogic.gdx.graphics.g3d.model.keyframe.Keyframe[] keyframes
    26:29:public KeyframedAnimation(java.lang.String,float,com.badlogic.gdx.graphics.g3d.model.keyframe.Keyframe[])
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel:
    protected final com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation[] animations
    33:43:public KeyframedModel(com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh[])
    46:65:private void checkValidity()
    69:77:public void render()
    81:89:public void render(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    93:99:public varargs void setMaterials(com.badlogic.gdx.graphics.g3d.materials.Material[])
    103:107:public void setMaterial(com.badlogic.gdx.graphics.g3d.materials.Material)
    111:115:public com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh getSubMesh(java.lang.String)
    120:120:public com.badlogic.gdx.graphics.g3d.model.SubMesh[] getSubMeshes()
    125:165:public void setAnimation(java.lang.String,float,boolean)
    169:169:public com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation getAnimation(java.lang.String)
    174:174:public com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation[] getAnimations()
    180:180:public varargs com.badlogic.gdx.graphics.g3d.model.Model getSubModel(java.lang.String[])
    187:192:public void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    29:29:public bridge synthetic com.badlogic.gdx.graphics.g3d.model.Animation[] getAnimations()
    29:29:public bridge synthetic com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String)
    29:29:public bridge synthetic com.badlogic.gdx.graphics.g3d.model.SubMesh getSubMesh(java.lang.String)
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh:
    public final float[] blendedVertices
    public final int animatedComponents
    public final com.badlogic.gdx.utils.ObjectMap animations
    32:37:public KeyframedSubMesh(java.lang.String,com.badlogic.gdx.graphics.Mesh,float[],com.badlogic.gdx.utils.ObjectMap,int,int)
    41:42:public void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.graphics.g3d.model.skeleton.Skeleton:
    53:66:public void buildFromHierarchy()
    69:92:private void recursiveFill(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint)
    95:98:protected void calculateOffsetMatrices()
    101:116:protected void calculateMatrices(com.badlogic.gdx.utils.Array)
    119:151:public void setAnimation(java.lang.String,float)
    154:155:public void setBindPose()
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation:
    public final com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonKeyframe[][] perJointkeyFrames
    25:27:public SkeletonAnimation(java.lang.String,float,com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonKeyframe[][])
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint:
    public java.lang.String name
    public int index
    public int parentIndex
    public com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint parent
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel:
    public final com.badlogic.gdx.graphics.g3d.model.skeleton.Skeleton skeleton
    public final com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh[] subMeshes
    final com.badlogic.gdx.math.Vector3 v
    protected com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation[] animations
    34:42:public SkeletonModel(com.badlogic.gdx.graphics.g3d.model.skeleton.Skeleton,com.badlogic.gdx.graphics.g3d.model.SubMesh[])
    45:49:public void setBindPose()
    53:57:public void setAnimation(java.lang.String,float,boolean)
    62:117:public void skin(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh,com.badlogic.gdx.utils.Array)
    121:131:public void render()
    135:145:public void render(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    149:155:public varargs void setMaterials(com.badlogic.gdx.graphics.g3d.materials.Material[])
    159:163:public void setMaterial(com.badlogic.gdx.graphics.g3d.materials.Material)
    167:171:public com.badlogic.gdx.graphics.g3d.model.SubMesh getSubMesh(java.lang.String)
    176:176:public com.badlogic.gdx.graphics.g3d.model.SubMesh[] getSubMeshes()
    181:181:public com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation getAnimation(java.lang.String)
    189:196:public com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation[] getAnimations()
    202:202:public varargs com.badlogic.gdx.graphics.g3d.model.Model getSubModel(java.lang.String[])
    209:214:public void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    218:221:public void dispose()
    30:30:public bridge synthetic com.badlogic.gdx.graphics.g3d.model.Animation[] getAnimations()
    30:30:public bridge synthetic com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String)
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModelGpuSkinned:
    public static final java.lang.String BoneIndexAttribue
    public static final java.lang.String BoneWeightAttribue
    32:33:public SkeletonModelGpuSkinned(com.badlogic.gdx.graphics.g3d.model.skeleton.Skeleton,com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh[])
    38:43:public static com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel CreateFromSkeletonModel(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel)
    47:50:public void setupGpuSkin()
    53:115:private void setupGpuSkin(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh)
    119:120:public void setAnimation(java.lang.String,float,boolean)
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh:
    public short[] indices
    public float[] vertices
    public float[] skinnedVertices
    public int[][] boneAssignments
    public float[][] boneWeights
    26:27:public SkeletonSubMesh(java.lang.String,com.badlogic.gdx.graphics.Mesh,int)
    38:39:public void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    42:43:public void setVertices(float[])
    46:47:public void setIndices(short[])
com.badlogic.gdx.graphics.g3d.model.still.StillModel:
    public final com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh[] subMeshes
    30:35:public varargs StillModel(com.badlogic.gdx.graphics.g3d.model.SubMesh[])
    39:49:public void render()
    53:63:public void render(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    67:72:public varargs com.badlogic.gdx.graphics.g3d.model.Model getSubModel(java.lang.String[])
    77:80:public com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh getSubMesh(java.lang.String)
    85:85:public com.badlogic.gdx.graphics.g3d.model.SubMesh[] getSubMeshes()
    90:96:public varargs void setMaterials(com.badlogic.gdx.graphics.g3d.materials.Material[])
    100:104:public void setMaterial(com.badlogic.gdx.graphics.g3d.materials.Material)
    110:115:public void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    119:122:public void dispose()
    27:27:public bridge synthetic com.badlogic.gdx.graphics.g3d.model.SubMesh getSubMesh(java.lang.String)
com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh:
    27:28:public StillSubMesh(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,com.badlogic.gdx.graphics.g3d.materials.Material)
    31:32:public StillSubMesh(java.lang.String,com.badlogic.gdx.graphics.Mesh,int)
    36:37:public void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.graphics.glutils.ETC1:
    147:150:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap)
    158:161:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap)
    public static native int getCompressedDataSize(int,int)
    public static native void formatHeader(java.nio.ByteBuffer,int,int,int)
    private static native java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int)
    private static native java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int)
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data:
    52:57:public ETC1$ETC1Data(int,int,java.nio.ByteBuffer,int)
    95:119:public void write(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.glutils.ETC1TextureData:
    38:39:public ETC1TextureData(com.badlogic.gdx.files.FileHandle)
    46:49:public ETC1TextureData(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,boolean)
com.badlogic.gdx.graphics.glutils.FileTextureData:
    128:128:public com.badlogic.gdx.files.FileHandle getFileHandle()
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer:
    39:40:public FloatFrameBuffer(int,int,boolean)
com.badlogic.gdx.graphics.glutils.FrameBuffer:
    92:100:public FrameBuffer(com.badlogic.gdx.graphics.Pixmap$Format,int,int,boolean)
    208:210:public void begin()
    214:216:public void end()
    219:223:private void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.FrameBuffer)
    255:255:public com.badlogic.gdx.graphics.Texture getColorBufferTexture()
    260:260:public int getHeight()
    265:265:public int getWidth()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer:
    public abstract void texCoord(float,float)
    public abstract void normal(float,float,float)
    public abstract void dispose()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10:
    136:140:public void normal(float,float,float)
    146:149:public void texCoord(float,float)
    216:217:public void vertex(com.badlogic.gdx.math.Vector3)
    221:221:public void dispose()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20:
    49:51:public ImmediateModeRenderer20(boolean,boolean,int)
    90:93:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    105:109:public void texCoord(float,float)
    112:116:public void normal(float,float,float)
    154:156:public void dispose()
com.badlogic.gdx.graphics.glutils.IndexBufferObject:
    84:93:public IndexBufferObject(int)
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData:
    84:93:public IndexBufferObjectSubData(int)
com.badlogic.gdx.graphics.glutils.MipMapGenerator:
    33:34:public static void setUseHardwareMipMap(boolean)
com.badlogic.gdx.graphics.glutils.ShaderProgram:
    public static final java.lang.String POSITION_ATTRIBUTE
    public static final java.lang.String NORMAL_ATTRIBUTE
    public static final java.lang.String COLOR_ATTRIBUTE
    public static final java.lang.String TEXCOORD_ATTRIBUTE
    public static final java.lang.String TANGENT_ATTRIBUTE
    public static final java.lang.String BINORMAL_ATTRIBUTE
    165:166:public ShaderProgram(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    302:305:public void setUniformi(int,int)
    314:318:public void setUniformi(java.lang.String,int,int)
    321:324:public void setUniformi(int,int,int)
    334:338:public void setUniformi(java.lang.String,int,int,int)
    341:344:public void setUniformi(int,int,int,int)
    355:359:public void setUniformi(java.lang.String,int,int,int,int)
    362:365:public void setUniformi(int,int,int,int,int)
    373:377:public void setUniformf(java.lang.String,float)
    380:383:public void setUniformf(int,float)
    392:396:public void setUniformf(java.lang.String,float,float)
    399:402:public void setUniformf(int,float,float)
    412:416:public void setUniformf(java.lang.String,float,float,float)
    419:422:public void setUniformf(int,float,float,float)
    433:437:public void setUniformf(java.lang.String,float,float,float,float)
    440:443:public void setUniformf(int,float,float,float,float)
    446:453:public void setUniform1fv(java.lang.String,float[],int,int)
    456:462:public void setUniform1fv(int,float[],int,int)
    465:472:public void setUniform2fv(java.lang.String,float[],int,int)
    475:481:public void setUniform2fv(int,float[],int,int)
    484:491:public void setUniform3fv(java.lang.String,float[],int,int)
    494:500:public void setUniform3fv(int,float[],int,int)
    503:510:public void setUniform4fv(java.lang.String,float[],int,int)
    513:519:public void setUniform4fv(int,float[],int,int)
    546:547:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4)
    550:555:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4,boolean)
    563:564:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3)
    573:580:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3,boolean)
    583:584:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3)
    587:593:public void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3,boolean)
    602:607:public void setUniformMatrix4fv(java.lang.String,java.nio.FloatBuffer,int,boolean)
    615:616:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2)
    619:620:public void setUniformf(int,com.badlogic.gdx.math.Vector2)
    628:629:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3)
    632:633:public void setUniformf(int,com.badlogic.gdx.math.Vector3)
    641:642:public void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color)
    645:646:public void setUniformf(int,com.badlogic.gdx.graphics.Color)
    667:670:public void setVertexAttribute(int,int,int,boolean,int,java.nio.Buffer)
    691:694:public void setVertexAttribute(int,int,int,boolean,int,int)
    733:736:public void disableVertexAttribute(int)
    750:753:public void enableVertexAttribute(int)
    807:810:public void setAttributef(java.lang.String,float,float,float,float)
    813:818:private void ensureBufferCapacity(int)
    864:864:public boolean hasAttribute(java.lang.String)
    870:874:public int getAttributeType(java.lang.String)
    880:884:public int getAttributeLocation(java.lang.String)
    890:890:public boolean hasUniform(java.lang.String)
    896:900:public int getUniformType(java.lang.String)
    906:910:public int getUniformLocation(java.lang.String)
    915:915:public java.lang.String[] getAttributes()
    920:920:public java.lang.String[] getUniforms()
com.badlogic.gdx.graphics.glutils.ShapeRenderer:
    139:140:public void setColor(float,float,float,float)
    150:152:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    184:186:public void scale(float,float,float)
    212:217:public void point(float,float,float)
    227:234:public void line(float,float,float,float,float,float)
    254:263:public void curve(float,float,float,float,float,float,float,float)
    267:315:public void curve(float,float,float,float,float,float,float,float,int)
    381:397:public void filledRect(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
    406:470:public void box(float,float,float,float,float,float)
    474:475:public void circle(float,float,float)
    478:504:public void circle(float,float,float,int)
    546:563:public void triangle(float,float,float,float,float,float)
    578:579:public void cone(float,float,float,float,float)
    582:610:public void cone(float,float,float,float,float,int)
    615:616:public void filledCone(float,float,float,float,float)
    619:656:public void filledCone(float,float,float,float,float,int)
    679:682:public void flush()
    686:686:public com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType getCurrentType()
    690:691:public void dispose()
com.badlogic.gdx.graphics.glutils.VertexArray:
    88:88:public int getNumMaxVertices()
com.badlogic.gdx.graphics.glutils.VertexBufferObject:
    115:115:public int getNumMaxVertices()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData:
    123:123:public int getNumMaxVertices()
    297:299:public void invalidate()
    326:326:public int getBufferHandle()
com.badlogic.gdx.graphics.glutils.VertexData:
    public abstract int getNumMaxVertices()
com.badlogic.gdx.input.GestureDetector:
    216:216:public boolean isLongPressed()
    222:223:public boolean isLongPressed(float)
    231:234:public void reset()
    242:243:public void invalidateTapSquare()
    246:247:public void setTapSquareSize(int)
    251:252:public void setTapCountInterval(float)
    255:256:public void setLongPressSeconds(float)
    259:260:public void setMaxFlingDelay(long)
com.badlogic.gdx.input.GestureDetector$VelocityTracker:
    418:424:private float getSum(float[],int)
com.badlogic.gdx.input.RemoteInput:
    258:258:public float getAccelerometerX()
    263:263:public float getAccelerometerY()
    268:268:public float getAccelerometerZ()
    273:273:public int getX()
    283:283:public int getY()
    293:293:public boolean isTouched()
    298:298:public boolean justTouched()
    326:327:public void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    336:336:public void vibrate(int)
    341:341:public void vibrate(long[],int)
    346:346:public void cancelVibrate()
    350:350:public float getAzimuth()
    355:355:public float getPitch()
    360:360:public float getRoll()
    375:375:public com.badlogic.gdx.InputProcessor getInputProcessor()
    380:380:public java.lang.String[] getIPs()
    385:388:public boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
    393:393:public int getRotation()
    398:398:public com.badlogic.gdx.Input$Orientation getNativeOrientation()
    404:404:public void setCursorCatched(boolean)
    408:408:public boolean isCursorCatched()
    414:414:public int getDeltaX()
    419:419:public int getDeltaX(int)
    424:424:public int getDeltaY()
    429:429:public int getDeltaY(int)
    434:434:public void setCursorPosition(int,int)
    452:452:public void getRotationMatrix(float[])
com.badlogic.gdx.input.RemoteInput$KeyEvent:
    static final int KEY_DOWN
    static final int KEY_UP
    static final int KEY_TYPED
    long timeStamp
com.badlogic.gdx.input.RemoteInput$TouchEvent:
    static final int TOUCH_DOWN
    static final int TOUCH_UP
    static final int TOUCH_DRAGGED
    long timeStamp
com.badlogic.gdx.input.RemoteSender:
    public static final int KEY_DOWN
    public static final int KEY_UP
    public static final int KEY_TYPED
    public static final int TOUCH_DOWN
    public static final int TOUCH_UP
    public static final int TOUCH_DRAGGED
    public static final int ACCEL
    public static final int COMPASS
    public static final int SIZE
    46:58:public RemoteSender(java.lang.String,int)
    61:80:public void sendUpdate()
    192:192:public boolean mouseMoved(int,int)
    197:197:public boolean scrolled(int)
    201:203:public boolean isConnected()
com.badlogic.gdx.math.CatmullRomSpline:
    37:38:public void add(com.badlogic.gdx.math.Vector3)
    42:42:public java.util.List getControlPoints()
    51:86:public java.util.List getPath(int)
    95:124:public void getPath(com.badlogic.gdx.math.Vector3[],int)
    131:166:public java.util.List getTangents(int)
    175:214:public java.util.List getTangentNormals2D(int)
    223:229:public java.util.List getTangentNormals(int,com.badlogic.gdx.math.Vector3)
    233:240:public java.util.List getTangentNormals(int,java.util.List)
com.badlogic.gdx.math.Circle:
    35:39:public Circle(com.badlogic.gdx.math.Vector2,float)
    48:50:public boolean contains(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.EarClippingTriangulator:
    private static final int CONCAVE
    private static final int CONVEX
    private int concaveVertexCount
    43:74:public java.util.List computeTriangles(java.util.List)
    78:90:private static boolean areVerticesClockwise(java.util.ArrayList)
    98:125:private int[] classifyVertices(java.util.ArrayList)
    130:133:private static boolean isTriangleConvex(float,float,float,float,float,float)
    143:149:private static int computeSpannedAreaSign(float,float,float,float,float,float)
    155:180:private static boolean isAnyVertexInTriangle(java.util.ArrayList,int[],float,float,float,float,float,float)
    184:196:private boolean isEarTip(java.util.ArrayList,int,int[])
    201:214:private void cutEarTip(java.util.ArrayList,int,java.util.ArrayList)
    218:234:private static void removeCollinearNeighborEarsAfterRemovingEarTip(java.util.ArrayList,int)
    237:240:private static boolean isCollinear(java.util.ArrayList,int)
    245:249:private static boolean isCollinear(java.util.ArrayList,int,int,int)
    254:254:private static int computePreviousIndex(java.util.List,int)
    258:258:private static int computeNextIndex(java.util.List,int)
com.badlogic.gdx.math.FloatCounter:
    public int count
    public float total
    public float min
    public float max
    public float average
    public float latest
    public final com.badlogic.gdx.math.WindowedMean mean
    44:47:public FloatCounter(int)
    54:71:public void put(float)
    77:86:public void reset()
com.badlogic.gdx.math.Frustum:
    79:83:public boolean pointInFrustum(com.badlogic.gdx.math.Vector3)
    92:95:public boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float)
    104:107:public boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float)
    115:127:public boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.Interpolation$Bounce:
    240:241:public Interpolation$Bounce(float[],float[])
com.badlogic.gdx.math.Interpolation$BounceIn:
    330:331:public Interpolation$BounceIn(float[],float[])
com.badlogic.gdx.math.Interpolation$BounceOut:
    262:267:public Interpolation$BounceOut(float[],float[])
com.badlogic.gdx.math.Intersector:
    39:57:public static float getLowestPositiveRoot(float,float,float)
    73:85:public static boolean isPointInTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    89:95:public static boolean intersectSegmentPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
    102:102:public static int pointLineSide(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    108:108:public static int pointLineSide(float,float,float,float,float,float)
    117:129:public static boolean isPointInPolygon(java.util.List,com.badlogic.gdx.math.Vector2)
    140:157:public static float distanceLinePoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    162:163:public static float distanceLinePoint(float,float,float,float,float,float)
    174:190:public static boolean intersectSegmentCircle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
    204:215:public static float intersectSegmentCircleDisplace(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2)
    226:237:public static boolean intersectRayPlane(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
    252:264:public static float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
    279:302:public static boolean intersectRayTriangle(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    318:358:public static boolean intersectRaySphere(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3)
    369:481:boolean intersectRayBounds(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox,com.badlogic.gdx.math.Vector3)
    491:527:public static boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox)
    543:567:public static boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],com.badlogic.gdx.math.Vector3)
    580:608:public static boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],short[],int,com.badlogic.gdx.math.Vector3)
    619:641:public static boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,java.util.List,com.badlogic.gdx.math.Vector3)
    651:651:public static boolean intersectRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
    664:676:public static boolean intersectLines(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    688:700:public static boolean intersectSegments(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    704:704:static float det(float,float,float,float)
    708:708:static double detd(double,double,double,double)
    712:716:public static boolean overlapCircles(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Circle)
    720:723:public static boolean overlapRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
    727:747:public static boolean overlapCircleRectangle(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Rectangle)
    756:756:public static boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon)
    767:767:public static boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Intersector$MinimumTranslationVector)
    778:917:public static boolean overlapConvexPolygons(float[],float[],com.badlogic.gdx.math.Intersector$MinimumTranslationVector)
    940:1035:public static void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)
    1040:1050:private static void splitEdge(float[],int,int,int,com.badlogic.gdx.math.Plane,float[],int)
    1053:1062:public static void main(java.lang.String[])
com.badlogic.gdx.math.Intersector$SplitTriangle:
    float[] edgeSplit
    boolean frontCurrent
    int frontOffset
    int backOffset
    1077:1081:public Intersector$SplitTriangle(int)
    1090:1091:void setSide(boolean)
    1094:1094:boolean getSide()
    1098:1105:void add(float[],int,int)
    1108:1114:void reset()
com.badlogic.gdx.math.MathUtils:
    public static final float nanoToSec
    public static final float PI
    private static final int SIN_BITS
    private static final int SIN_MASK
    private static final int SIN_COUNT
    private static final float radFull
    private static final float degFull
    private static final float radToIndex
    private static final float degToIndex
    public static final float radiansToDegrees
    public static final float radDeg
    public static final float degreesToRadians
    public static final float degRad
    private static final int ATAN2_BITS
    private static final int ATAN2_BITS2
    private static final int ATAN2_MASK
    private static final int ATAN2_COUNT
    private static final int BIG_ENOUGH_INT
    private static final double BIG_ENOUGH_FLOOR
    private static final double CEIL
    private static final double BIG_ENOUGH_ROUND
    159:159:public static final float random(float)
    188:190:public static int clamp(int,int,int)
    194:196:public static short clamp(short,short,short)
    217:217:public static int floor(float)
    223:223:public static int floorPositive(float)
    235:235:public static int ceilPositive(float)
    241:241:public static int round(float)
    246:246:public static int roundPositive(float)
com.badlogic.gdx.math.Matrix3:
    private static final float DEGREE_TO_RAD
    public static final int M00
    public static final int M01
    public static final int M02
    public static final int M10
    public static final int M11
    public static final int M12
    public static final int M20
    public static final int M21
    public static final int M22
    45:47:public Matrix3(com.badlogic.gdx.math.Matrix3)
    101:117:public com.badlogic.gdx.math.Matrix3 setToRotation(float)
    144:156:public com.badlogic.gdx.math.Matrix3 setToTranslation(com.badlogic.gdx.math.Vector2)
    165:174:public com.badlogic.gdx.math.Matrix3 setToScaling(float,float)
    184:184:public float det()
    191:216:public com.badlogic.gdx.math.Matrix3 inv()
    231:240:public com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix4)
    247:249:public com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector2)
    266:268:public com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector3)
    297:309:public com.badlogic.gdx.math.Matrix3 translate(com.badlogic.gdx.math.Vector2)
    361:371:public com.badlogic.gdx.math.Matrix3 scale(com.badlogic.gdx.math.Vector2)
    377:377:public float[] getValues()
    384:386:public com.badlogic.gdx.math.Matrix3 scl(float)
    393:395:public com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector2)
    402:404:public com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector3)
    411:423:public com.badlogic.gdx.math.Matrix3 transpose()
com.badlogic.gdx.math.Matrix4:
    public static final int M00
    public static final int M01
    public static final int M02
    public static final int M03
    public static final int M10
    public static final int M11
    public static final int M12
    public static final int M13
    public static final int M20
    public static final int M21
    public static final int M22
    public static final int M23
    public static final int M30
    public static final int M31
    public static final int M32
    public static final int M33
    62:64:public Matrix4(com.badlogic.gdx.math.Matrix4)
    69:71:public Matrix4(float[])
    75:77:public Matrix4(com.badlogic.gdx.math.Quaternion)
    104:130:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Quaternion)
    141:157:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    162:162:public com.badlogic.gdx.math.Matrix4 cpy()
    170:173:public com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3)
    183:186:public com.badlogic.gdx.math.Matrix4 trn(float,float,float)
    191:191:public float[] getValues()
    211:227:public com.badlogic.gdx.math.Matrix4 tra()
    258:317:public com.badlogic.gdx.math.Matrix4 inv()
    322:322:public float det()
    389:390:public com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float)
    455:459:public com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float)
    469:476:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    491:498:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float)
    509:513:public com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float)
    524:528:public com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float)
    536:537:public com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    549:550:public com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float,float,float)
    561:562:public com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float)
    570:574:public com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3)
    584:588:public com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float)
    642:647:public com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    661:663:public void lerp(com.badlogic.gdx.math.Matrix4,float)
    688:691:public com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3)
    695:698:public com.badlogic.gdx.math.Matrix4 scl(float,float,float)
    702:705:public com.badlogic.gdx.math.Matrix4 scl(float)
    709:712:public void getTranslation(com.badlogic.gdx.math.Vector3)
    715:716:public void getRotation(com.badlogic.gdx.math.Quaternion)
    720:723:public com.badlogic.gdx.math.Matrix4 toNormalMatrix()
    public static native void mulVec(float[],float[])
    public static native void mulVec(float[],float[],int,int,int)
    public static native void prj(float[],float[])
    public static native void rot(float[],float[])
    public static native void rot(float[],float[],int,int,int)
    public static native float det(float[])
    986:986:public com.badlogic.gdx.math.Matrix4 translate(com.badlogic.gdx.math.Vector3)
    1024:1026:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,float)
    1060:1078:public com.badlogic.gdx.math.Matrix4 scale(float,float,float)
com.badlogic.gdx.math.Plane:
    51:54:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    62:64:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    87:89:public void set(float,float,float,float)
    96:96:public float distance(com.badlogic.gdx.math.Vector3)
    105:112:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3)
    123:130:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)
    139:140:public boolean isFrontFacing(com.badlogic.gdx.math.Vector3)
    145:145:public com.badlogic.gdx.math.Vector3 getNormal()
    150:150:public float getD()
    158:160:public void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    163:165:public void set(float,float,float,float,float,float)
    171:173:public void set(com.badlogic.gdx.math.Plane)
com.badlogic.gdx.math.Polygon:
    private final float[] localVertices
    private float[] worldVertices
    private float x
    private float y
    private float originX
    private float originY
    private float rotation
    private float scaleX
    private float scaleY
    private boolean dirty
    private com.badlogic.gdx.math.Rectangle bounds
    29:32:public Polygon(float[])
    36:36:public float[] getVertices()
    41:79:public float[] getTransformedVertices()
    83:86:public void setOrigin(float,float)
    89:92:public void setPosition(float,float)
    95:98:public void translate(float,float)
    101:103:public void setRotation(float)
    106:108:public void rotate(float)
    111:114:public void setScale(float,float)
    117:120:public void scale(float)
    123:124:public void dirty()
    127:143:public float area()
    147:168:public com.badlogic.gdx.math.Rectangle getBoundingRectangle()
    172:183:public boolean contains(float,float)
    187:187:public float getX()
    191:191:public float getY()
    195:195:public float getOriginX()
    199:199:public float getOriginY()
    203:203:public float getRotation()
    207:207:public float getScaleX()
    211:211:public float getScaleY()
com.badlogic.gdx.math.Quaternion:
    private static final float NORMALIZATION_TOLERANCE
    52:54:public Quaternion(com.badlogic.gdx.math.Quaternion)
    82:82:public com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion)
    99:99:public com.badlogic.gdx.math.Quaternion cpy()
    104:104:public float len()
    118:139:public com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float)
    165:168:public com.badlogic.gdx.math.Quaternion conjugate()
    176:183:public void transform(com.badlogic.gdx.math.Vector3)
    190:198:public com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion)
    206:214:public com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion)
    265:265:public com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float)
    276:279:public com.badlogic.gdx.math.Quaternion setFromAxis(float,float,float,float)
    289:289:public com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4)
    315:352:public com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float)
    360:361:public com.badlogic.gdx.math.Quaternion setFromCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    373:374:public com.badlogic.gdx.math.Quaternion setFromCross(float,float,float,float,float,float)
    383:421:public com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float)
    440:440:public float dot(com.badlogic.gdx.math.Quaternion)
    447:451:public com.badlogic.gdx.math.Quaternion mul(float)
com.badlogic.gdx.math.Vector2:
    55:57:public Vector2(com.badlogic.gdx.math.Vector2)
    61:61:public com.badlogic.gdx.math.Vector2 cpy()
    71:71:public float len2()
    117:119:public com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2)
    135:135:public float dot(com.badlogic.gdx.math.Vector2)
    150:152:public com.badlogic.gdx.math.Vector2 mul(float,float)
    156:156:public com.badlogic.gdx.math.Vector2 div(float)
    160:160:public com.badlogic.gdx.math.Vector2 div(float,float)
    164:164:public com.badlogic.gdx.math.Vector2 div(com.badlogic.gdx.math.Vector2)
    179:181:public float dst(float,float)
    187:189:public float dst2(com.badlogic.gdx.math.Vector2)
    196:198:public float dst2(float,float)
    221:221:public com.badlogic.gdx.math.Vector2 tmp()
    228:232:public com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3)
    239:239:public float crs(com.badlogic.gdx.math.Vector2)
    247:247:public float crs(float,float)
    261:263:public void setAngle(float)
    288:290:public com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float)
    318:321:public boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.math.Vector3:
    73:75:public Vector3(float[])
    103:103:public com.badlogic.gdx.math.Vector3 set(float[])
    132:132:com.badlogic.gdx.math.Vector3 tmp3()
    157:157:public com.badlogic.gdx.math.Vector3 add(float)
    182:182:public com.badlogic.gdx.math.Vector3 sub(float)
    198:198:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Vector3)
    208:208:public com.badlogic.gdx.math.Vector3 mul(float,float,float)
    220:220:public com.badlogic.gdx.math.Vector3 div(float,float,float)
    224:224:public com.badlogic.gdx.math.Vector3 div(com.badlogic.gdx.math.Vector3)
    234:234:public float len2()
    240:240:public boolean idt(com.badlogic.gdx.math.Vector3)
    288:288:public com.badlogic.gdx.math.Vector3 crs(float,float,float)
    319:320:public com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4)
    331:331:public com.badlogic.gdx.math.Vector3 rotate(float,float,float,float)
    340:341:public com.badlogic.gdx.math.Vector3 rotate(com.badlogic.gdx.math.Vector3,float)
    346:346:public boolean isUnit()
    351:351:public boolean isZero()
    361:363:public com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float)
    373:387:public com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float)
    402:402:public float dot(float,float,float)
    411:419:public float dst2(com.badlogic.gdx.math.Vector3)
    429:437:public float dst2(float,float,float)
    441:441:public float dst(float,float,float)
    473:477:public boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float)
    483:486:public boolean epsilonEquals(float,float,float,float)
    495:498:public com.badlogic.gdx.math.Vector3 scale(float,float,float)
com.badlogic.gdx.math.WindowedMean:
    83:83:public float getOldest()
    88:88:public float getLatest()
    93:101:public float standardDeviation()
com.badlogic.gdx.math.collision.BoundingBox:
    40:40:public com.badlogic.gdx.math.Vector3 getCenter()
    44:55:protected void updateCorners()
    59:60:public com.badlogic.gdx.math.Vector3[] getCorners()
    65:65:public com.badlogic.gdx.math.Vector3 getDimensions()
    70:70:public com.badlogic.gdx.math.Vector3 getMin()
    75:75:public synchronized com.badlogic.gdx.math.Vector3 getMax()
    89:94:public BoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    100:105:public BoundingBox(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    112:113:public com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.collision.BoundingBox)
    137:141:public com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3[])
    149:153:public com.badlogic.gdx.math.collision.BoundingBox set(java.util.List)
    160:165:public com.badlogic.gdx.math.collision.BoundingBox inf()
    173:174:public com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.Vector3)
    190:190:public boolean isValid()
    198:199:public com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox)
    209:217:public com.badlogic.gdx.math.collision.BoundingBox mul(com.badlogic.gdx.math.Matrix4)
    224:231:public boolean contains(com.badlogic.gdx.math.collision.BoundingBox)
    238:245:public boolean contains(com.badlogic.gdx.math.Vector3)
    259:260:public com.badlogic.gdx.math.collision.BoundingBox ext(float,float,float)
    264:264:static float min(float,float)
    268:268:static float max(float,float)
com.badlogic.gdx.math.collision.Ray:
    43:43:public com.badlogic.gdx.math.collision.Ray cpy()
    51:51:public com.badlogic.gdx.math.Vector3 getEndPoint(float)
    61:65:public com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4)
    79:81:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    94:96:public com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float)
    105:107:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray)
com.badlogic.gdx.math.collision.Segment:
    39:42:public Segment(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    51:54:public Segment(float,float,float,float,float,float)
com.badlogic.gdx.math.collision.Sphere:
    36:39:public Sphere(com.badlogic.gdx.math.Vector3,float)
    44:44:public boolean overlaps(com.badlogic.gdx.math.collision.Sphere)
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse:
    52:65:public byte[] getResult()
    70:78:public java.lang.String getResultAsString()
    84:84:public java.io.InputStream getResultAsStream()
    89:89:public com.badlogic.gdx.Net$HttpStatus getStatus()
com.badlogic.gdx.net.ServerSocket:
    public abstract com.badlogic.gdx.Net$Protocol getProtocol()
    public abstract com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints)
com.badlogic.gdx.net.Socket:
    public abstract boolean isConnected()
com.badlogic.gdx.physics.box2d.Body:
    108:113:public com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float)
    private native long jniCreateFixture(long,long,float)
    128:132:public void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture)
    private native void jniDestroyFixture(long,long)
    154:155:public void setTransform(float,float,float)
    166:167:public void setTransform(float,float,float,boolean)
    private native void jniSetTransform(long,float,float,float,boolean)
    183:184:public com.badlogic.gdx.physics.box2d.Transform getTransform()
    private native void jniGetTransform(long,float[])
    246:249:public com.badlogic.gdx.math.Vector2 getLocalCenter()
    private native void jniGetLocalCenter(long,float[])
    326:327:public void applyForce(float,float,float,float)
    337:338:public void applyForceToCenter(com.badlogic.gdx.math.Vector2)
    344:345:public void applyForceToCenter(float,float)
    private native void jniApplyForceToCenter(long,float,float)
    356:357:public void applyTorque(float)
    private native void jniApplyTorque(long,float)
    369:370:public void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    379:380:public void applyLinearImpulse(float,float,float,float)
    private native void jniApplyLinearImpulse(long,float,float,float,float)
    390:391:public void applyAngularImpulse(float)
    private native void jniApplyAngularImpulse(long,float)
    401:401:public float getMass()
    private native float jniGetMass(long)
    412:412:public float getInertia()
    private native float jniGetInertia(long)
    425:430:public com.badlogic.gdx.physics.box2d.MassData getMassData()
    private native void jniGetMassData(long,float[])
    447:448:public void setMassData(com.badlogic.gdx.physics.box2d.MassData)
    private native void jniSetMassData(long,float,float,float,float)
    463:464:public void resetMassData()
    private native void jniResetMassData(long)
    496:499:public com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2)
    private native void jniGetWorldVector(long,float,float,float[])
    534:537:public com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2)
    private native void jniGetLocalVector(long,float,float,float[])
    553:556:public com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetLinearVelocityFromWorldPoint(long,float,float,float[])
    572:575:public com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2)
    private native void jniGetLinearVelocityFromLocalPoint(long,float,float,float[])
    587:587:public float getLinearDamping()
    private native float jniGetLinearDamping(long)
    597:598:public void setLinearDamping(float)
    private native void jniSetLinearDamping(long,float)
    607:607:public float getAngularDamping()
    private native float jniGetAngularDamping(long)
    666:667:public void setBullet(boolean)
    private native void jniSetBullet(long,boolean)
    676:676:public boolean isBullet()
    private native boolean jniIsBullet(long)
    686:687:public void setSleepingAllowed(boolean)
    private native void jniSetSleepingAllowed(long,boolean)
    696:696:public boolean isSleepingAllowed()
    private native boolean jniIsSleepingAllowed(long)
    707:708:public void setAwake(boolean)
    private native void jniSetAwake(long,boolean)
    718:718:public boolean isAwake()
    private native boolean jniIsAwake(long)
    753:754:public void setFixedRotation(boolean)
    private native void jniSetFixedRotation(long,boolean)
    763:763:public boolean isFixedRotation()
    private native boolean jniIsFixedRotation(long)
    773:773:public java.util.ArrayList getFixtureList()
    778:778:public java.util.ArrayList getJointList()
    791:791:public float getGravityScale()
    private native float jniGetGravityScale(long)
    801:802:public void setGravityScale(float)
    private native void jniSetGravityScale(long,float)
    811:811:public com.badlogic.gdx.physics.box2d.World getWorld()
    816:816:public java.lang.Object getUserData()
    821:822:public void setUserData(java.lang.Object)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer:
    75:77:public void render(com.badlogic.gdx.physics.box2d.World,com.badlogic.gdx.math.Matrix4)
    89:113:private void renderBodies(com.badlogic.gdx.physics.box2d.World)
    116:144:protected void renderBody(com.badlogic.gdx.physics.box2d.Body)
    147:187:private void drawAABB(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform)
    193:228:private void drawShape(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform,com.badlogic.gdx.graphics.Color)
    235:250:private void drawSolidCircle(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color)
    253:265:private void drawSolidPolygon(com.badlogic.gdx.math.Vector2[],int,com.badlogic.gdx.graphics.Color,boolean)
    268:294:private void drawJoint(com.badlogic.gdx.physics.box2d.Joint)
    297:299:private void drawSegment(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color)
    302:306:private void drawContact(com.badlogic.gdx.physics.box2d.Contact)
    309:309:public boolean isDrawBodies()
    313:314:public void setDrawBodies(boolean)
    317:317:public boolean isDrawJoints()
    321:322:public void setDrawJoints(boolean)
    325:325:public boolean isDrawAABBs()
    329:330:public void setDrawAABBs(boolean)
    333:333:public boolean isDrawInactiveBodies()
    337:338:public void setDrawInactiveBodies(boolean)
    341:341:public boolean isDrawVelocities()
    345:346:public void setDrawVelocities(boolean)
    349:349:public static com.badlogic.gdx.math.Vector2 getAxis()
    353:354:public static void setAxis(com.badlogic.gdx.math.Vector2)
    357:358:public void dispose()
com.badlogic.gdx.physics.box2d.ChainShape:
    36:38:ChainShape(long)
    42:42:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    48:55:public void createLoop(com.badlogic.gdx.math.Vector2[])
    private native void jniCreateLoop(long,float[],int)
    69:76:public void createChain(com.badlogic.gdx.math.Vector2[])
    private native void jniCreateChain(long,float[],int)
    89:90:public void setPrevVertex(com.badlogic.gdx.math.Vector2)
    94:95:public void setPrevVertex(float,float)
    private native void jniSetPrevVertex(long,float,float)
    104:105:public void setNextVertex(com.badlogic.gdx.math.Vector2)
    109:110:public void setNextVertex(float,float)
    private native void jniSetNextVertex(long,float,float)
    119:119:public int getVertexCount()
    private native int jniGetVertexCount(long)
    133:136:public void getVertex(int,com.badlogic.gdx.math.Vector2)
    private native void jniGetVertex(long,int,float[])
    146:146:public boolean isLooped()
com.badlogic.gdx.physics.box2d.CircleShape:
    37:39:protected CircleShape(long)
    44:44:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    52:55:public com.badlogic.gdx.math.Vector2 getPosition()
    private native void jniGetPosition(long,float[])
    66:67:public void setPosition(com.badlogic.gdx.math.Vector2)
    private native void jniSetPosition(long,float,float)
com.badlogic.gdx.physics.box2d.Contact:
    48:58:public com.badlogic.gdx.physics.box2d.WorldManifold getWorldManifold()
    private native int jniGetWorldManifold(long,float[])
    80:80:public boolean isTouching()
    private native boolean jniIsTouching(long)
    91:92:public void setEnabled(boolean)
    private native void jniSetEnabled(long,boolean)
    101:101:public boolean isEnabled()
    private native boolean jniIsEnabled(long)
    111:111:public com.badlogic.gdx.physics.box2d.Fixture getFixtureA()
    private native long jniGetFixtureA(long)
    121:121:public com.badlogic.gdx.physics.box2d.Fixture getFixtureB()
    private native long jniGetFixtureB(long)
    131:131:public int getChildIndexA()
    private native int jniGetChildIndexA(long)
    141:141:public int getChildIndexB()
    private native int jniGetChildIndexB(long)
    152:153:public void setFriction(float)
    private native void jniSetFriction(long,float)
    162:162:public float getFriction()
    private native float jniGetFriction(long)
    172:173:public void resetFriction()
    private native void jniResetFriction(long)
    183:184:public void setRestitution(float)
    private native void jniSetRestitution(long,float)
    193:193:public float getRestitution()
    private native float jniGetRestitution(long)
    203:204:public void ResetRestitution()
    private native void jniResetRestitution(long)
com.badlogic.gdx.physics.box2d.ContactFilter:
    public abstract boolean shouldCollide(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Fixture)
com.badlogic.gdx.physics.box2d.ContactImpulse:
    40:41:public float[] getNormalImpulses()
    private native void jniGetNormalImpulses(long,float[])
    51:52:public float[] getTangentImpulses()
    private native void jniGetTangentImpulses(long,float[])
    62:62:public int getCount()
    private native int jniGetCount(long)
com.badlogic.gdx.physics.box2d.ContactListener:
    public abstract void beginContact(com.badlogic.gdx.physics.box2d.Contact)
    public abstract void endContact(com.badlogic.gdx.physics.box2d.Contact)
    public abstract void preSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.Manifold)
    public abstract void postSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.ContactImpulse)
com.badlogic.gdx.physics.box2d.EdgeShape:
    37:39:EdgeShape(long)
    43:44:public void set(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    48:49:public void set(float,float,float,float)
    private native void jniSet(long,float,float,float,float)
    59:62:public void getVertex1(com.badlogic.gdx.math.Vector2)
    private native void jniGetVertex1(long,float[])
    71:74:public void getVertex2(com.badlogic.gdx.math.Vector2)
    private native void jniGetVertex2(long,float[])
    104:104:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.Fixture:
    57:68:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    private native int jniGetType(long)
    88:111:public com.badlogic.gdx.physics.box2d.Shape getShape()
    private native long jniGetShape(long)
    121:122:public void setSensor(boolean)
    private native void jniSetSensor(long,boolean)
    132:132:public boolean isSensor()
    private native boolean jniIsSensor(long)
    143:144:public void setFilterData(com.badlogic.gdx.physics.box2d.Filter)
    private native void jniSetFilterData(long,short,short,short)
    160:164:public com.badlogic.gdx.physics.box2d.Filter getFilterData()
    private native void jniGetFilterData(long,short[])
    178:179:public void refilter()
    private native void jniRefilter(long)
    188:188:public com.badlogic.gdx.physics.box2d.Body getBody()
    194:194:public boolean testPoint(com.badlogic.gdx.math.Vector2)
    201:201:public boolean testPoint(float,float)
    private native boolean jniTestPoint(long,float,float)
    236:237:public void setDensity(float)
    private native void jniSetDensity(long,float)
    246:246:public float getDensity()
    private native float jniGetDensity(long)
    256:256:public float getFriction()
    private native float jniGetFriction(long)
    266:267:public void setFriction(float)
    private native void jniSetFriction(long,float)
    276:276:public float getRestitution()
    private native float jniGetRestitution(long)
    286:287:public void setRestitution(float)
    private native void jniSetRestitution(long,float)
    301:302:public void setUserData(java.lang.Object)
    306:306:public java.lang.Object getUserData()
com.badlogic.gdx.physics.box2d.Joint:
    51:55:public com.badlogic.gdx.physics.box2d.JointDef$JointType getType()
    private native int jniGetType(long)
    65:65:public com.badlogic.gdx.physics.box2d.Body getBodyA()
    private native long jniGetBodyA(long)
    75:75:public com.badlogic.gdx.physics.box2d.Body getBodyB()
    private native long jniGetBodyB(long)
    87:90:public com.badlogic.gdx.math.Vector2 getAnchorA()
    private native void jniGetAnchorA(long,float[])
    104:107:public com.badlogic.gdx.math.Vector2 getAnchorB()
    private native void jniGetAnchorB(long,float[])
    121:124:public com.badlogic.gdx.math.Vector2 getReactionForce(float)
    private native void jniGetReactionForce(long,float,float[])
    136:136:public float getReactionTorque(float)
    private native float jniGetReactionTorque(long,float)
    155:155:public boolean isActive()
    private native boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.JointDef$JointType:
    33:33:public int getValue()
com.badlogic.gdx.physics.box2d.Manifold:
    40:44:public com.badlogic.gdx.physics.box2d.Manifold$ManifoldType getType()
    private native int jniGetType(long)
    53:53:public int getPointCount()
    private native int jniGetPointCount(long)
    62:64:public com.badlogic.gdx.math.Vector2 getLocalNormal()
    private native void jniGetLocalNormal(long,float[])
    74:76:public com.badlogic.gdx.math.Vector2 getLocalPoint()
    private native void jniGetLocalPoint(long,float[])
    86:97:public com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] getPoints()
    private native int jniGetPoint(long,float[],int)
com.badlogic.gdx.physics.box2d.MassData:
    public float mass
    public float I
com.badlogic.gdx.physics.box2d.PolygonShape:
    32:34:protected PolygonShape(long)
    44:44:public com.badlogic.gdx.physics.box2d.Shape$Type getType()
    50:56:public void set(com.badlogic.gdx.math.Vector2[])
    61:62:public void set(float[])
    67:68:public void set(float[],int,int)
    private native void jniSet(long,float[],int,int)
    109:109:public int getVertexCount()
    private native int jniGetVertexCount(long)
    123:126:public void getVertex(int,com.badlogic.gdx.math.Vector2)
    private native void jniGetVertex(long,int,float[])
com.badlogic.gdx.physics.box2d.QueryCallback:
    public abstract boolean reportFixture(com.badlogic.gdx.physics.box2d.Fixture)
com.badlogic.gdx.physics.box2d.RayCastCallback:
    public abstract float reportRayFixture(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.Shape:
    public abstract com.badlogic.gdx.physics.box2d.Shape$Type getType()
    45:45:public float getRadius()
    private native float jniGetRadius(long)
    protected static native int jniGetType(long)
    86:86:public int getChildCount()
    private native int jniGetChildCount(long)
com.badlogic.gdx.physics.box2d.Transform:
    public static final int POS_X
    public static final int POS_Y
    public static final int COS
    public static final int SIN
    41:44:public Transform(com.badlogic.gdx.math.Vector2,float)
    49:54:public com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2)
    59:59:public com.badlogic.gdx.math.Vector2 getPosition()
    65:68:public void setRotation(float)
    71:71:public float getRotation()
    77:79:public void setPosition(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.World:
    251:251:public void setDestructionListener(com.badlogic.gdx.physics.box2d.DestructionListener)
    256:258:public void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter)
    private native void setUseDefaultContactFilter(boolean)
    267:268:public void setContactListener(com.badlogic.gdx.physics.box2d.ContactListener)
    310:321:public void destroyBody(com.badlogic.gdx.physics.box2d.Body)
    private native void jniDestroyBody(long,long)
    620:621:public void clearForces()
    private native void jniClearForces(long)
    630:631:public void setWarmStarting(boolean)
    private native void jniSetWarmStarting(long,boolean)
    640:641:public void setContinuousPhysics(boolean)
    private native void jniSetContiousPhysics(long,boolean)
    650:650:public int getProxyCount()
    private native int jniGetProxyCount(long)
    660:660:public int getBodyCount()
    private native int jniGetBodyCount(long)
    670:670:public int getJointCount()
    private native int jniGetJointcount(long)
    680:680:public int getContactCount()
    private native int jniGetContactCount(long)
    690:691:public void setGravity(com.badlogic.gdx.math.Vector2)
    private native void jniSetGravity(long,float,float)
    703:706:public com.badlogic.gdx.math.Vector2 getGravity()
    private native void jniGetGravity(long,float[])
    718:718:public boolean isLocked()
    private native boolean jniIsLocked(long)
    728:729:public void setAutoClearForces(boolean)
    private native void jniSetAutoClearForces(long,boolean)
    738:738:public boolean getAutoClearForces()
    private native boolean jniGetAutoClearForces(long)
    753:755:public void QueryAABB(com.badlogic.gdx.physics.box2d.QueryCallback,float,float,float,float)
    private native void jniQueryAABB(long,float,float,float,float)
    793:814:public java.util.List getContactList()
    819:819:public java.util.Iterator getBodies()
    824:824:public java.util.Iterator getJoints()
    private native void jniGetContactList(long,long[])
    853:864:private boolean contactFilter(long,long)
    873:875:private void beginContact(long)
    878:880:private void endContact(long)
    883:886:private void preSolve(long,long)
    889:892:private void postSolve(long,long)
    895:898:private boolean reportFixture(long)
    public static native void setVelocityThreshold(float)
    public static native float getVelocityThreshold()
    933:940:private float reportRayFixture(long,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.WorldManifold:
    protected int numContactPoints
    32:32:public com.badlogic.gdx.math.Vector2 getNormal()
    38:38:public com.badlogic.gdx.math.Vector2[] getPoints()
    43:43:public int getNumberOfContactPoints()
com.badlogic.gdx.physics.box2d.joints.DistanceJoint:
    36:37:public void setLength(float)
    private native void jniSetLength(long,float)
    46:46:public float getLength()
    private native float jniGetLength(long)
    56:57:public void setFrequency(float)
    private native void jniSetFrequency(long,float)
    66:66:public float getFrequency()
    private native float jniGetFrequency(long)
    76:77:public void setDampingRatio(float)
    private native void jniSetDampingRatio(long,float)
    86:86:public float getDampingRatio()
    private native float jniGetDampingRatio(long)
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef:
    34:39:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.FrictionJoint:
    35:36:public void setMaxForce(float)
    private native void jniSetMaxForce(long,float)
    45:45:public float getMaxForce()
    private native float jniGetMaxForce(long)
    55:56:public void setMaxTorque(float)
    private native void jniSetMaxTorque(long,float)
    65:65:public float getMaxTorque()
    private native float jniGetMaxTorque(long)
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef:
    32:36:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.GearJoint:
    39:40:public void setRatio(float)
    private native void jniSetRatio(long,float)
    49:49:public float getRatio()
    private native float jniGetRatio(long)
com.badlogic.gdx.physics.box2d.joints.MouseJoint:
    38:39:public void setTarget(com.badlogic.gdx.math.Vector2)
    private native void jniSetTarget(long,float,float)
    51:54:public com.badlogic.gdx.math.Vector2 getTarget()
    private native void jniGetTarget(long,float[])
    65:66:public void setMaxForce(float)
    private native void jniSetMaxForce(long,float)
    75:75:public float getMaxForce()
    private native float jniGetMaxForce(long)
    85:86:public void setFrequency(float)
    private native void jniSetFrequency(long,float)
    95:95:public float getFrequency()
    private native float jniGetFrequency(long)
    105:106:public void setDampingRatio(float)
    private native void jniSetDampingRatio(long,float)
    115:115:public float getDampingRatio()
    private native float jniGetDampingRatio(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint:
    37:37:public float getJointTranslation()
    private native float jniGetJointTranslation(long)
    47:47:public float getJointSpeed()
    private native float jniGetJointSpeed(long)
    57:57:public boolean isLimitEnabled()
    private native boolean jniIsLimitEnabled(long)
    67:68:public void enableLimit(boolean)
    private native void jniEnableLimit(long,boolean)
    77:77:public float getLowerLimit()
    private native float jniGetLowerLimit(long)
    87:87:public float getUpperLimit()
    private native float jniGetUpperLimit(long)
    97:98:public void setLimits(float,float)
    private native void jniSetLimits(long,float,float)
    107:107:public boolean isMotorEnabled()
    private native boolean jniIsMotorEnabled(long)
    117:118:public void enableMotor(boolean)
    private native void jniEnableMotor(long,boolean)
    127:128:public void setMotorSpeed(float)
    private native void jniSetMotorSpeed(long,float)
    137:137:public float getMotorSpeed()
    private native float jniGetMotorSpeed(long)
    147:148:public void setMaxMotorForce(float)
    private native void jniSetMaxMotorForce(long,float)
    157:157:public float getMotorForce(float)
    private native float jniGetMotorForce(long,float)
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef:
    35:42:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.PulleyJoint:
    41:43:public com.badlogic.gdx.math.Vector2 getGroundAnchorA()
    private native void jniGetGroundAnchorA(long,float[])
    56:58:public com.badlogic.gdx.math.Vector2 getGroundAnchorB()
    private native void jniGetGroundAnchorB(long,float[])
    69:69:public float getLength1()
    private native float jniGetLength1(long)
    79:79:public float getLength2()
    private native float jniGetLength2(long)
    89:89:public float getRatio()
    private native float jniGetRatio(long)
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef:
    private static final float minPulleyLength
    36:46:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint:
    38:38:public float getJointAngle()
    private native float jniGetJointAngle(long)
    48:48:public float getJointSpeed()
    private native float jniGetJointSpeed(long)
    58:58:public boolean isLimitEnabled()
    private native boolean jniIsLimitEnabled(long)
    68:69:public void enableLimit(boolean)
    private native void jniEnableLimit(long,boolean)
    78:78:public float getLowerLimit()
    private native float jniGetLowerLimit(long)
    88:88:public float getUpperLimit()
    private native float jniGetUpperLimit(long)
    99:100:public void setLimits(float,float)
    private native void jniSetLimits(long,float,float)
    109:109:public boolean isMotorEnabled()
    private native boolean jniIsMotorEnabled(long)
    119:120:public void enableMotor(boolean)
    private native void jniEnableMotor(long,boolean)
    129:130:public void setMotorSpeed(float)
    private native void jniSetMotorSpeed(long,float)
    139:139:public float getMotorSpeed()
    private native float jniGetMotorSpeed(long)
    149:150:public void setMaxMotorTorque(float)
    private native void jniSetMaxMotorTorque(long,float)
    159:159:public float getMotorTorque(float)
    private native float jniGetMotorTorque(long,float)
com.badlogic.gdx.physics.box2d.joints.RopeJoint:
    38:38:public float getMaxLength()
    private native float jniGetMaxLength(long)
    48:49:public void setMaxLength(float)
    private native float jniSetMaxLength(long,float)
com.badlogic.gdx.physics.box2d.joints.WeldJoint:
    35:35:public float getReferenceAngle()
    private native float jniGetReferenceAngle(long)
com.badlogic.gdx.physics.box2d.joints.WeldJointDef:
    31:36:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.WheelJoint:
    37:37:public float getJointTranslation()
    private native float jniGetJointTranslation(long)
    47:47:public float getJointSpeed()
    private native float jniGetJointSpeed(long)
    57:57:private boolean isMotorEnabled()
    private native boolean jniIsMotorEnabled(long)
    67:68:public void enableMotor(boolean)
    private native void jniEnableMotor(long,boolean)
    77:78:public void setMotorSpeed(float)
    private native void jniSetMotorSpeed(long,float)
    87:87:public float getMotorSpeed()
    private native float jniGetMotorSpeed(long)
    97:98:public void setMaxMotorTorque(float)
    private native void jniSetMaxMotorTorque(long,float)
    106:106:public float getMaxMotorTorque()
    private native float jniGetMaxMotorTorque(long)
    116:116:public float getMotorTorque(float)
    private native float jniGetMotorTorque(long,float)
    126:127:public void setSpringFrequencyHz(float)
    private native void jniSetSpringFrequencyHz(long,float)
    135:135:public float getSpringFrequencyHz()
    private native float jniGetSpringFrequencyHz(long)
    145:146:public void setSpringDampingRatio(float)
    private native void jniSetSpringDampingRatio(long,float)
    154:154:public float getSpringDampingRatio()
    private native float jniGetSpringDampingRatio(long)
com.badlogic.gdx.physics.box2d.joints.WheelJointDef:
    33:38:public void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.Action:
    43:43:public com.badlogic.gdx.scenes.scene2d.Actor getActor()
    76:76:public com.badlogic.gdx.utils.Pool getPool()
com.badlogic.gdx.scenes.scene2d.Event:
    91:92:public void setBubbles(boolean)
    116:116:public boolean isCapture()
com.badlogic.gdx.scenes.scene2d.InputEvent:
    107:108:public void setScrollAmount(int)
com.badlogic.gdx.scenes.scene2d.Stage:
    322:339:public boolean mouseMoved(int,int)
    345:358:public boolean scrolled(int)
    418:427:public void removeTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int)
    434:435:public void cancelTouchFocus()
    476:477:public void addAction(com.badlogic.gdx.scenes.scene2d.Action)
    494:494:public boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener)
    511:513:public void clear()
    517:520:public void unfocusAll()
    605:605:public float getGutterWidth()
    611:611:public float getGutterHeight()
    656:660:public com.badlogic.gdx.math.Vector2 stageToScreenCoordinates(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.actions.Actions:
    39:42:public static com.badlogic.gdx.scenes.scene2d.actions.AddAction add(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Action)
    81:81:public static com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float)
    85:85:public static com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float)
    89:93:public static com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float,com.badlogic.gdx.math.Interpolation)
    98:98:public static com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float)
    102:102:public static com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float)
    106:110:public static com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float,com.badlogic.gdx.math.Interpolation)
    115:115:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float)
    119:119:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float)
    123:127:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float,com.badlogic.gdx.math.Interpolation)
    132:132:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float)
    136:136:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float)
    140:144:public static com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float,com.badlogic.gdx.math.Interpolation)
    149:149:public static com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float)
    153:153:public static com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float)
    157:161:public static com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float,com.badlogic.gdx.math.Interpolation)
    166:166:public static com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float)
    183:183:public static com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color)
    188:188:public static com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float)
    193:197:public static com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float,com.badlogic.gdx.math.Interpolation)
    248:248:public static com.badlogic.gdx.scenes.scene2d.actions.VisibleAction show()
    252:252:public static com.badlogic.gdx.scenes.scene2d.actions.VisibleAction hide()
    256:258:public static com.badlogic.gdx.scenes.scene2d.actions.VisibleAction visible(boolean)
    262:264:public static com.badlogic.gdx.scenes.scene2d.actions.TouchableAction touchable(com.badlogic.gdx.scenes.scene2d.Touchable)
    272:274:public static com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor(com.badlogic.gdx.scenes.scene2d.Actor)
    284:287:public static com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float,com.badlogic.gdx.scenes.scene2d.Action)
    291:293:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action)
    321:327:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    331:334:public static varargs com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action[])
    338:338:public static com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence()
    342:344:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action)
    363:368:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    372:378:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
    382:385:public static varargs com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action[])
    389:389:public static com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel()
    407:409:public static com.badlogic.gdx.scenes.scene2d.actions.RunnableAction run(java.lang.Runnable)
    413:415:public static com.badlogic.gdx.scenes.scene2d.actions.LayoutAction layout(boolean)
    419:421:public static com.badlogic.gdx.scenes.scene2d.actions.AfterAction after(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.AddAction:
    33:33:public com.badlogic.gdx.scenes.scene2d.Actor getTargetActor()
    37:38:public void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor)
    41:41:public com.badlogic.gdx.scenes.scene2d.Action getAction()
    45:46:public void setAction(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction:
    44:44:public com.badlogic.gdx.graphics.Color getColor()
    50:51:public void setColor(com.badlogic.gdx.graphics.Color)
    54:54:public float getAlpha()
com.badlogic.gdx.scenes.scene2d.actions.ColorAction:
    52:52:public com.badlogic.gdx.graphics.Color getColor()
    58:59:public void setColor(com.badlogic.gdx.graphics.Color)
    62:62:public com.badlogic.gdx.graphics.Color getEndColor()
    67:68:public void setEndColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.scenes.scene2d.actions.DelayAction:
    36:37:public void finish()
    46:46:public float getTime()
    51:52:public void setTime(float)
    55:55:public float getDuration()
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction:
    33:33:public com.badlogic.gdx.scenes.scene2d.Action getAction()
com.badlogic.gdx.scenes.scene2d.actions.FloatAction:
    32:35:public FloatAction(float,float)
    47:47:public float getValue()
    52:53:public void setValue(float)
    56:56:public float getStart()
    61:62:public void setStart(float)
    65:65:public float getEnd()
    70:71:public void setEnd(float)
com.badlogic.gdx.scenes.scene2d.actions.IntAction:
    32:35:public IntAction(int,int)
    47:47:public int getValue()
    52:53:public void setValue(int)
    56:56:public int getStart()
    61:62:public void setStart(int)
    65:65:public int getEnd()
    70:71:public void setEnd(int)
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction:
    41:41:public boolean isEnabled()
    45:46:public void setLayoutEnabled(boolean)
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction:
    34:34:public float getAmountX()
    38:39:public void setAmountX(float)
    42:42:public float getAmountY()
    46:47:public void setAmountY(float)
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction:
    40:40:public float getX()
    44:45:public void setX(float)
    48:48:public float getY()
    52:53:public void setY(float)
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction:
    63:63:public com.badlogic.gdx.utils.Array getActions()
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction:
    46:46:public com.badlogic.gdx.scenes.scene2d.Actor getRemoveActor()
    51:52:public void setRemoveActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction:
    public static final int FOREVER
    39:40:public void finish()
    54:54:public int getCount()
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction:
    29:29:public float getAmount()
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction:
    33:33:public float getRotation()
    37:38:public void setRotation(float)
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction:
    51:51:public java.lang.Runnable getRunnable()
    55:56:public void setRunnable(java.lang.Runnable)
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction:
    29:31:public void setAmount(float,float)
    34:36:public void setAmount(float)
    39:39:public float getAmountX()
    43:44:public void setAmountX(float)
    47:47:public float getAmountY()
    51:52:public void setAmountY(float)
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction:
    35:37:public void setScale(float,float)
    40:42:public void setScale(float)
    45:45:public float getX()
    49:50:public void setX(float)
    53:53:public float getY()
    57:58:public void setY(float)
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction:
    29:31:public void setAmount(float,float)
    34:34:public float getAmountWidth()
    38:39:public void setAmountWidth(float)
    42:42:public float getAmountHeight()
    46:47:public void setAmountHeight(float)
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction:
    40:40:public float getWidth()
    44:45:public void setWidth(float)
    48:48:public float getHeight()
    52:53:public void setHeight(float)
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction:
    32:34:public TemporalAction(float)
    36:39:public TemporalAction(float,com.badlogic.gdx.math.Interpolation)
    74:75:public void finish()
    90:90:public float getTime()
    95:96:public void setTime(float)
    99:99:public float getDuration()
    108:108:public com.badlogic.gdx.math.Interpolation getInterpolation()
    116:116:public boolean isReverse()
    121:122:public void setReverse(boolean)
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction:
    34:34:public com.badlogic.gdx.scenes.scene2d.Touchable getTouchable()
    38:39:public void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable)
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction:
    33:33:public boolean isVisible()
    37:38:public void setVisible(boolean)
com.badlogic.gdx.scenes.scene2d.utils.Align:
    public static final int center
    public static final int top
    public static final int bottom
    public static final int left
    public static final int right
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop:
    private int button
    45:124:public void addSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source)
    127:129:public void removeSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source)
    132:133:public void addTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target)
    136:137:public void removeTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target)
    141:142:public void setTapSquareSize(float)
    146:147:public void setButton(int)
    150:152:public void setDragActorPosition(float,float)
    155:155:public boolean isDragging()
    160:160:public com.badlogic.gdx.scenes.scene2d.Actor getDragActor()
    166:167:public void setDragTime(int)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1:
    45:45:DragAndDrop$1(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload:
    java.lang.Object object
    226:227:public void setDragActor(com.badlogic.gdx.scenes.scene2d.Actor)
    230:230:public com.badlogic.gdx.scenes.scene2d.Actor getDragActor()
    234:235:public void setValidDragActor(com.badlogic.gdx.scenes.scene2d.Actor)
    238:238:public com.badlogic.gdx.scenes.scene2d.Actor getValidDragActor()
    242:243:public void setInvalidDragActor(com.badlogic.gdx.scenes.scene2d.Actor)
    246:246:public com.badlogic.gdx.scenes.scene2d.Actor getInvalidDragActor()
    250:250:public java.lang.Object getObject()
    254:255:public void setObject(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source:
    final com.badlogic.gdx.scenes.scene2d.Actor actor
    174:177:public DragAndDrop$Source(com.badlogic.gdx.scenes.scene2d.Actor)
    187:187:public com.badlogic.gdx.scenes.scene2d.Actor getActor()
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target:
    196:202:public DragAndDrop$Target(com.badlogic.gdx.scenes.scene2d.Actor)
    215:215:public com.badlogic.gdx.scenes.scene2d.Actor getActor()
com.badlogic.gdx.scenes.scene2d.utils.DragListener:
    79:79:public boolean isDragging()
    83:84:public void setTapSquareSize(float)
    87:87:public float getTapSquareSize()
    109:109:public int getButton()
    114:115:public void setButton(int)
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener:
    34:47:public DragScrollListener(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane)
    50:54:public void setup(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1:
    37:37:DragScrollListener$1(com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener,com.badlogic.gdx.scenes.scene2d.ui.ScrollPane)
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2:
    42:42:DragScrollListener$2(com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener,com.badlogic.gdx.scenes.scene2d.ui.ScrollPane)
com.badlogic.gdx.scenes.scene2d.utils.Drawable:
    public abstract void setLeftWidth(float)
    public abstract void setRightWidth(float)
    public abstract void setTopHeight(float)
    public abstract void setBottomHeight(float)
    public abstract void setMinWidth(float)
    public abstract void setMinHeight(float)
com.badlogic.gdx.scenes.scene2d.utils.Layout:
    public abstract void layout()
    public abstract void setFillParent(boolean)
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack:
    124:130:public static com.badlogic.gdx.math.Rectangle getViewport()
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable:
    34:35:public TiledDrawable(com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable)
com.badlogic.gdx.utils.Array:
    67:68:public Array(java.lang.Class)
    74:77:public Array(com.badlogic.gdx.utils.Array)
    83:84:public Array(java.lang.Object[])
    91:94:public Array(boolean,java.lang.Object[])
    113:114:public void addAll(java.lang.Object[])
    130:132:public void set(int,java.lang.Object)
    181:189:public int lastIndexOf(java.lang.Object,boolean)
    230:256:public boolean removeAll(com.badlogic.gdx.utils.Array,boolean)
    287:288:public void shrink()
    311:312:public void sort()
    320:326:public void reverse()
    329:335:public void shuffle()
    350:354:public void truncate(int)
    358:359:public java.lang.Object random()
    403:411:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.Array$ArrayIterable:
    444:446:public Array$ArrayIterable(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.ArrayMap:
    private com.badlogic.gdx.utils.ArrayMap$Entries entries
    private com.badlogic.gdx.utils.ArrayMap$Values valuesIter
    private com.badlogic.gdx.utils.ArrayMap$Keys keysIter
    47:48:public ArrayMap(int)
    63:67:public ArrayMap(boolean,int,java.lang.Class,java.lang.Class)
    71:72:public ArrayMap(java.lang.Class,java.lang.Class)
    78:83:public ArrayMap(com.badlogic.gdx.utils.ArrayMap)
    86:91:public void put(java.lang.Object,java.lang.Object)
    94:102:public void put(java.lang.Object,java.lang.Object,int)
    105:106:public void addAll(com.badlogic.gdx.utils.ArrayMap)
    109:116:public void addAll(com.badlogic.gdx.utils.ArrayMap,int,int)
    121:130:public java.lang.Object get(java.lang.Object)
    137:146:public java.lang.Object getKey(java.lang.Object,boolean)
    150:151:public java.lang.Object getKeyAt(int)
    155:156:public java.lang.Object getValueAt(int)
    160:160:public java.lang.Object firstKey()
    164:164:public java.lang.Object firstValue()
    168:170:public void setKey(int,java.lang.Object)
    173:175:public void setValue(int,java.lang.Object)
    178:189:public void insert(int,java.lang.Object,java.lang.Object)
    192:201:public boolean containsKey(java.lang.Object)
    206:215:public boolean containsValue(java.lang.Object,boolean)
    219:227:public int indexOfKey(java.lang.Object)
    231:239:public int indexOfValue(java.lang.Object,boolean)
    243:261:public java.lang.Object removeKey(java.lang.Object)
    265:281:public boolean removeValue(java.lang.Object,boolean)
    302:302:public java.lang.Object peekKey()
    307:307:public java.lang.Object peekValue()
    311:318:public void clear()
    323:324:public void shrink()
    329:331:public void ensureCapacity(int)
    334:341:protected void resize(int)
    344:354:public void reverse()
    357:367:public void shuffle()
    372:378:public void truncate(int)
    402:406:public com.badlogic.gdx.utils.ArrayMap$Entries entries()
    412:416:public com.badlogic.gdx.utils.ArrayMap$Values values()
    422:426:public com.badlogic.gdx.utils.ArrayMap$Keys keys()
com.badlogic.gdx.utils.ArrayMap$Entries:
    434:436:public ArrayMap$Entries(com.badlogic.gdx.utils.ArrayMap)
    459:460:public void reset()
com.badlogic.gdx.utils.ArrayMap$Keys:
    498:500:public ArrayMap$Keys(com.badlogic.gdx.utils.ArrayMap)
    521:522:public void reset()
com.badlogic.gdx.utils.ArrayMap$Values:
    467:469:public ArrayMap$Values(com.badlogic.gdx.utils.ArrayMap)
    490:491:public void reset()
com.badlogic.gdx.utils.AtomicQueue:
    private final java.util.concurrent.atomic.AtomicInteger writeIndex
    private final java.util.concurrent.atomic.AtomicInteger readIndex
    private final java.util.concurrent.atomic.AtomicReferenceArray queue
    36:38:public AtomicQueue(int)
    41:41:private int next(int)
    45:51:public boolean put(java.lang.Object)
    55:60:public java.lang.Object poll()
com.badlogic.gdx.utils.Base64Coder:
    private static final java.lang.String systemLineSeparator
    72:72:public static java.lang.String encodeLines(byte[])
    84:96:public static java.lang.String encodeLines(byte[],int,int,int,java.lang.String)
    113:113:public static char[] encode(byte[],int)
    163:169:public static byte[] decodeLines(java.lang.String)
com.badlogic.gdx.utils.BinaryHeap:
    37:46:public com.badlogic.gdx.utils.BinaryHeap$Node add(com.badlogic.gdx.utils.BinaryHeap$Node)
    50:51:public com.badlogic.gdx.utils.BinaryHeap$Node peek()
    55:60:public com.badlogic.gdx.utils.BinaryHeap$Node pop()
    64:70:public void setValue(com.badlogic.gdx.utils.BinaryHeap$Node,float)
    73:88:private void up(int)
    91:133:private void down(int)
com.badlogic.gdx.utils.BinaryHeap$Node:
    float value
    int index
    154:156:public BinaryHeap$Node(float)
    159:159:public float getValue()
com.badlogic.gdx.utils.BooleanArray:
    40:41:public BooleanArray(int)
    54:59:public BooleanArray(com.badlogic.gdx.utils.BooleanArray)
    64:65:public BooleanArray(boolean[])
    72:75:public BooleanArray(boolean,boolean[])
    78:81:public void add(boolean)
    84:85:public void addAll(com.badlogic.gdx.utils.BooleanArray)
    88:91:public void addAll(com.badlogic.gdx.utils.BooleanArray,int,int)
    94:95:public void addAll(boolean[])
    98:103:public void addAll(boolean[],int,int)
    106:107:public boolean get(int)
    111:113:public void set(int,boolean)
    116:124:public void insert(int,boolean)
    127:133:public void swap(int,int)
    137:145:public boolean removeIndex(int)
    151:164:public boolean removeAll(com.badlogic.gdx.utils.BooleanArray)
    169:169:public boolean pop()
    174:174:public boolean peek()
    179:179:public boolean first()
    183:184:public void clear()
    189:190:public void shrink()
    196:198:public boolean[] ensureCapacity(int)
    202:206:protected boolean[] resize(int)
    210:216:public void reverse()
    219:225:public void shuffle()
    230:231:public void truncate(int)
    235:236:public boolean random()
    240:242:public boolean[] toArray()
    271:279:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.BufferUtils:
    65:67:public static void copy(byte[],int,java.nio.Buffer,int)
    79:81:public static void copy(short[],int,java.nio.Buffer,int)
    93:95:public static void copy(char[],int,java.nio.Buffer,int)
    107:109:public static void copy(int[],int,java.nio.Buffer,int)
    121:123:public static void copy(long[],int,java.nio.Buffer,int)
    135:137:public static void copy(float[],int,java.nio.Buffer,int)
    149:151:public static void copy(double[],int,java.nio.Buffer,int)
    163:166:public static void copy(java.nio.Buffer,java.nio.Buffer,int)
    169:184:private static int positionInBytes(java.nio.Buffer)
    188:203:private static int bytesToElements(java.nio.Buffer,int)
    207:222:private static int elementsToBytes(java.nio.Buffer,int)
    232:234:public static java.nio.DoubleBuffer newDoubleBuffer(int)
    244:246:public static java.nio.ShortBuffer newShortBuffer(int)
    250:252:public static java.nio.CharBuffer newCharBuffer(int)
    262:264:public static java.nio.LongBuffer newLongBuffer(int)
    303:303:public static long getUnsafeBufferAddress(java.nio.Buffer)
    314:318:public static java.nio.ByteBuffer newUnsafeByteBuffer(java.nio.ByteBuffer)
    325:325:public static int getAllocatedBytesUnsafe()
    private static native long getBufferAddress(java.nio.Buffer)
    public static native void clear(java.nio.ByteBuffer,int)
    private static native void copyJni(byte[],int,java.nio.Buffer,int,int)
    private static native void copyJni(char[],int,java.nio.Buffer,int,int)
    private static native void copyJni(short[],int,java.nio.Buffer,int,int)
    private static native void copyJni(int[],int,java.nio.Buffer,int,int)
    private static native void copyJni(long[],int,java.nio.Buffer,int,int)
    private static native void copyJni(float[],int,java.nio.Buffer,int,int)
    private static native void copyJni(double[],int,java.nio.Buffer,int,int)
    private static native void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.CharArray:
    38:39:public CharArray(int)
    52:57:public CharArray(com.badlogic.gdx.utils.CharArray)
    62:63:public CharArray(char[])
    70:73:public CharArray(boolean,char[])
    76:79:public void add(char)
    82:83:public void addAll(com.badlogic.gdx.utils.CharArray)
    86:89:public void addAll(com.badlogic.gdx.utils.CharArray,int,int)
    92:93:public void addAll(char[])
    96:101:public void addAll(char[],int,int)
    104:105:public char get(int)
    109:111:public void set(int,char)
    114:122:public void insert(int,char)
    125:131:public void swap(int,int)
    134:138:public boolean contains(char)
    142:145:public int indexOf(char)
    149:152:public int lastIndexOf(char)
    156:163:public boolean removeValue(char)
    168:176:public char removeIndex(int)
    182:195:public boolean removeAll(com.badlogic.gdx.utils.CharArray)
    200:200:public char pop()
    205:205:public char peek()
    210:210:public char first()
    214:215:public void clear()
    220:221:public void shrink()
    227:229:public char[] ensureCapacity(int)
    233:237:protected char[] resize(int)
    241:242:public void sort()
    245:251:public void reverse()
    254:260:public void shuffle()
    265:266:public void truncate(int)
    270:271:public char random()
    275:277:public char[] toArray()
    306:314:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.ComparableTimSort:
    private static final int MIN_MERGE
    private java.lang.Object[] a
    private static final int MIN_GALLOP
    private static final int INITIAL_TMP_STORAGE_LENGTH
    private static final boolean DEBUG
    76:117:public void doSort(java.lang.Object[],int,int)
    122:140:private ComparableTimSort(java.lang.Object[])
    148:149:static void sort(java.lang.Object[])
    152:191:static void sort(java.lang.Object[],int,int)
    206:245:private static void binarySort(java.lang.Object[],int,int,int)
    268:281:private static int countRunAndMakeAscending(java.lang.Object[],int,int)
    290:296:private static void reverseRange(java.lang.Object[],int,int)
    313:318:private static int minRunLength(int)
    326:329:private void pushRun(int,int)
    338:349:private void mergeCollapse()
    353:358:private void mergeForceCollapse()
    370:411:private void mergeAt(int)
    428:476:private static int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int)
    492:540:private static int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int)
    559:649:private void mergeLo(int,int,int,int)
    663:756:private void mergeHi(int,int,int,int)
    764:782:private java.lang.Object[] ensureCapacity(int)
    793:796:private static void rangeCheck(int,int,int)
com.badlogic.gdx.utils.DataInput:
    private char[] chars
    28:29:public DataInput(java.io.InputStream)
    33:51:public int readInt(boolean)
    57:77:public java.lang.String readString()
    81:105:private void readUtf8_slow(int,int,int)
com.badlogic.gdx.utils.DataOutput:
    26:27:public DataOutput(java.io.OutputStream)
    33:55:public int writeInt(int,boolean)
    61:79:public void writeString(java.lang.String)
    82:95:private void writeString_slow(java.lang.String,int,int)
com.badlogic.gdx.utils.DelayedRemovalArray:
    37:38:public DelayedRemovalArray(com.badlogic.gdx.utils.Array)
    41:42:public DelayedRemovalArray(boolean,int,java.lang.Class)
    45:46:public DelayedRemovalArray(boolean,int)
    49:50:public DelayedRemovalArray(boolean,java.lang.Object[])
    53:54:public DelayedRemovalArray(java.lang.Class)
    61:62:public DelayedRemovalArray(java.lang.Object[])
    105:107:public void set(int,java.lang.Object)
    130:132:public void sort()
    140:142:public void reverse()
    145:147:public void shuffle()
    150:152:public void truncate(int)
com.badlogic.gdx.utils.FloatArray:
    52:57:public FloatArray(com.badlogic.gdx.utils.FloatArray)
    62:63:public FloatArray(float[])
    70:73:public FloatArray(boolean,float[])
    82:83:public void addAll(com.badlogic.gdx.utils.FloatArray)
    86:89:public void addAll(com.badlogic.gdx.utils.FloatArray,int,int)
    92:93:public void addAll(float[])
    96:101:public void addAll(float[],int,int)
    109:111:public void set(int,float)
    114:122:public void insert(int,float)
    125:131:public void swap(int,int)
    134:138:public boolean contains(float)
    142:145:public int indexOf(float)
    149:152:public int lastIndexOf(char)
    156:163:public boolean removeValue(float)
    168:176:public float removeIndex(int)
    182:195:public boolean removeAll(com.badlogic.gdx.utils.FloatArray)
    200:200:public float pop()
    205:205:public float peek()
    210:210:public float first()
    220:221:public void shrink()
    227:229:public float[] ensureCapacity(int)
    241:242:public void sort()
    245:251:public void reverse()
    254:260:public void shuffle()
    265:266:public void truncate(int)
    270:271:public float random()
    275:277:public float[] toArray()
    306:314:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.GdxBuild:
    30:54:public static void main(java.lang.String[])
com.badlogic.gdx.utils.GwtModuleGenerator:
    34:48:private static void gatherJavaFiles(com.badlogic.gdx.files.FileHandle,java.util.Set,java.util.Map,boolean)
    51:124:public static void main(java.lang.String[])
com.badlogic.gdx.utils.IdentityMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private com.badlogic.gdx.utils.IdentityMap$Entries entries
    private com.badlogic.gdx.utils.IdentityMap$Values values
    private com.badlogic.gdx.utils.IdentityMap$Keys keys
    61:62:public IdentityMap(int)
    85:146:public java.lang.Object put(java.lang.Object,java.lang.Object)
    152:181:private void putResize(java.lang.Object,java.lang.Object)
    184:251:private void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object)
    254:266:private void putStash(java.lang.Object,java.lang.Object)
    269:278:public java.lang.Object get(java.lang.Object)
    282:291:public java.lang.Object get(java.lang.Object,java.lang.Object)
    295:298:private java.lang.Object getStash(java.lang.Object,java.lang.Object)
    302:330:public java.lang.Object remove(java.lang.Object)
    334:343:java.lang.Object removeStash(java.lang.Object)
    359:367:public void clear()
    374:386:public boolean containsValue(java.lang.Object,boolean)
    390:399:public boolean containsKey(java.lang.Object)
    403:406:private boolean containsKeyStash(java.lang.Object)
    414:426:public java.lang.Object findKey(java.lang.Object,boolean)
    432:434:public void ensureCapacity(int)
    437:458:private void resize(int)
    461:462:private int hash2(int)
    466:467:private int hash3(int)
    500:504:public com.badlogic.gdx.utils.IdentityMap$Entries entries()
    510:514:public com.badlogic.gdx.utils.IdentityMap$Values values()
    520:524:public com.badlogic.gdx.utils.IdentityMap$Keys keys()
com.badlogic.gdx.utils.IdentityMap$Entries:
    581:582:public IdentityMap$Entries(com.badlogic.gdx.utils.IdentityMap)
    577:577:public bridge synthetic void reset()
com.badlogic.gdx.utils.IdentityMap$Keys:
    641:642:public IdentityMap$Keys(com.badlogic.gdx.utils.IdentityMap)
    661:664:public com.badlogic.gdx.utils.Array toArray()
    639:639:public bridge synthetic void reset()
com.badlogic.gdx.utils.IdentityMap$MapIterator:
    542:545:public IdentityMap$MapIterator(com.badlogic.gdx.utils.IdentityMap)
    548:551:public void reset()
com.badlogic.gdx.utils.IdentityMap$Values:
    606:607:public IdentityMap$Values(com.badlogic.gdx.utils.IdentityMap)
    626:629:public com.badlogic.gdx.utils.Array toArray()
    634:636:public void toArray(com.badlogic.gdx.utils.Array)
    604:604:public bridge synthetic void reset()
com.badlogic.gdx.utils.IntArray:
    52:57:public IntArray(com.badlogic.gdx.utils.IntArray)
    62:63:public IntArray(int[])
    70:73:public IntArray(boolean,int[])
    82:83:public void addAll(com.badlogic.gdx.utils.IntArray)
    86:89:public void addAll(com.badlogic.gdx.utils.IntArray,int,int)
    92:93:public void addAll(int[])
    96:101:public void addAll(int[],int,int)
    109:111:public void set(int,int)
    125:131:public void swap(int,int)
    142:145:public int indexOf(int)
    149:152:public int lastIndexOf(int)
    156:163:public boolean removeValue(int)
    168:176:public int removeIndex(int)
    182:195:public boolean removeAll(com.badlogic.gdx.utils.IntArray)
    205:205:public int peek()
    210:210:public int first()
    214:215:public void clear()
    227:229:public int[] ensureCapacity(int)
    241:242:public void sort()
    245:251:public void reverse()
    254:260:public void shuffle()
    265:266:public void truncate(int)
    270:271:public int random()
    275:277:public int[] toArray()
    306:314:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.IntFloatMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.IntFloatMap$Entries entries
    private com.badlogic.gdx.utils.IntFloatMap$Values values
    private com.badlogic.gdx.utils.IntFloatMap$Keys keys
    64:65:public IntFloatMap(int)
    88:152:public void put(int,float)
    155:157:public void putAll(com.badlogic.gdx.utils.IntFloatMap)
    161:196:private void putResize(int,float)
    199:265:private void push(int,float,int,int,int,int,int,int)
    268:280:private void putStash(int,float)
    284:293:public float get(int,float)
    297:300:private float getStash(int,float)
    306:316:public float getAndIncrement(int,float,float)
    320:328:private float getAndIncrementStash(int,float,float)
    332:363:public float remove(int,float)
    367:376:float removeStash(int,float)
    390:395:public void clear()
    400:404:public boolean containsValue(float)
    410:414:public boolean containsValue(float,float)
    418:427:public boolean containsKey(int)
    431:434:private boolean containsKeyStash(int)
    440:444:public int findKey(float,int)
    450:452:public void ensureCapacity(int)
    455:476:private void resize(int)
    479:480:private int hash2(int)
    484:485:private int hash3(int)
    523:527:public com.badlogic.gdx.utils.IntFloatMap$Entries entries()
    533:537:public com.badlogic.gdx.utils.IntFloatMap$Values values()
    543:547:public com.badlogic.gdx.utils.IntFloatMap$Keys keys()
com.badlogic.gdx.utils.IntFloatMap$Entries:
    612:613:public IntFloatMap$Entries(com.badlogic.gdx.utils.IntFloatMap)
    608:608:public bridge synthetic void reset()
com.badlogic.gdx.utils.IntFloatMap$Keys:
    671:672:public IntFloatMap$Keys(com.badlogic.gdx.utils.IntFloatMap)
    675:675:public boolean hasNext()
    679:682:public int next()
    687:690:public com.badlogic.gdx.utils.IntArray toArray()
    669:669:public bridge synthetic void reset()
com.badlogic.gdx.utils.IntFloatMap$MapIterator:
    static final int INDEX_ILLEGAL
    static final int INDEX_ZERO
    568:571:public IntFloatMap$MapIterator(com.badlogic.gdx.utils.IntFloatMap)
    574:580:public void reset()
com.badlogic.gdx.utils.IntFloatMap$Values:
    642:643:public IntFloatMap$Values(com.badlogic.gdx.utils.IntFloatMap)
    646:646:public boolean hasNext()
    651:657:public float next()
    662:665:public com.badlogic.gdx.utils.FloatArray toArray()
    640:640:public bridge synthetic void reset()
com.badlogic.gdx.utils.IntIntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.IntIntMap$Entries entries
    private com.badlogic.gdx.utils.IntIntMap$Values values
    private com.badlogic.gdx.utils.IntIntMap$Keys keys
    65:66:public IntIntMap(int)
    89:153:public void put(int,int)
    156:158:public void putAll(com.badlogic.gdx.utils.IntIntMap)
    162:197:private void putResize(int,int)
    200:266:private void push(int,int,int,int,int,int,int,int)
    269:281:private void putStash(int,int)
    285:294:public int get(int,int)
    298:301:private int getStash(int,int)
    307:317:public int getAndIncrement(int,int,int)
    321:329:private int getAndIncrementStash(int,int,int)
    333:364:public int remove(int,int)
    368:377:int removeStash(int,int)
    391:396:public void clear()
    401:405:public boolean containsValue(int)
    409:418:public boolean containsKey(int)
    422:425:private boolean containsKeyStash(int)
    431:435:public int findKey(int,int)
    441:443:public void ensureCapacity(int)
    446:467:private void resize(int)
    470:471:private int hash2(int)
    475:476:private int hash3(int)
    514:518:public com.badlogic.gdx.utils.IntIntMap$Entries entries()
    524:528:public com.badlogic.gdx.utils.IntIntMap$Values values()
    534:538:public com.badlogic.gdx.utils.IntIntMap$Keys keys()
com.badlogic.gdx.utils.IntIntMap$Entries:
    603:604:public IntIntMap$Entries(com.badlogic.gdx.utils.IntIntMap)
    599:599:public bridge synthetic void reset()
com.badlogic.gdx.utils.IntIntMap$Keys:
    662:663:public IntIntMap$Keys(com.badlogic.gdx.utils.IntIntMap)
    666:666:public boolean hasNext()
    670:673:public int next()
    678:681:public com.badlogic.gdx.utils.IntArray toArray()
    660:660:public bridge synthetic void reset()
com.badlogic.gdx.utils.IntIntMap$MapIterator:
    static final int INDEX_ILLEGAL
    static final int INDEX_ZERO
    559:562:public IntIntMap$MapIterator(com.badlogic.gdx.utils.IntIntMap)
    565:571:public void reset()
com.badlogic.gdx.utils.IntIntMap$Values:
    633:634:public IntIntMap$Values(com.badlogic.gdx.utils.IntIntMap)
    637:637:public boolean hasNext()
    642:648:public int next()
    653:656:public com.badlogic.gdx.utils.IntArray toArray()
    631:631:public bridge synthetic void reset()
com.badlogic.gdx.utils.IntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.IntMap$Entries entries
    private com.badlogic.gdx.utils.IntMap$Values values
    private com.badlogic.gdx.utils.IntMap$Keys keys
    63:64:public IntMap(int)
    160:162:public void putAll(com.badlogic.gdx.utils.IntMap)
    302:311:public java.lang.Object get(int,java.lang.Object)
    387:397:public void clear()
    404:419:public boolean containsValue(java.lang.Object,boolean)
    447:462:public int findKey(java.lang.Object,boolean,int)
    468:470:public void ensureCapacity(int)
    541:545:public com.badlogic.gdx.utils.IntMap$Entries entries()
    551:555:public com.badlogic.gdx.utils.IntMap$Values values()
    561:565:public com.badlogic.gdx.utils.IntMap$Keys keys()
com.badlogic.gdx.utils.IntMap$Entries:
    632:633:public IntMap$Entries(com.badlogic.gdx.utils.IntMap)
    628:628:public bridge synthetic void reset()
com.badlogic.gdx.utils.IntMap$Keys:
    695:696:public IntMap$Keys(com.badlogic.gdx.utils.IntMap)
    699:702:public int next()
    707:710:public com.badlogic.gdx.utils.IntArray toArray()
    693:693:public bridge synthetic void reset()
com.badlogic.gdx.utils.IntMap$MapIterator:
    static final int INDEX_ILLEGAL
    static final int INDEX_ZERO
    586:589:public IntMap$MapIterator(com.badlogic.gdx.utils.IntMap)
    592:598:public void reset()
com.badlogic.gdx.utils.IntMap$Values:
    662:663:public IntMap$Values(com.badlogic.gdx.utils.IntMap)
    686:689:public com.badlogic.gdx.utils.Array toArray()
    660:660:public bridge synthetic void reset()
com.badlogic.gdx.utils.JsonReader:
    static final int json_start
    static final int json_first_final
    static final int json_error
    static final int json_en_object
    static final int json_en_array
    static final int json_en_main
com.badlogic.gdx.utils.JsonWriter:
    101:101:public com.badlogic.gdx.utils.JsonWriter object(java.lang.String)
com.badlogic.gdx.utils.LittleEndianInputStream:
    32:34:public LittleEndianInputStream(java.io.InputStream)
com.badlogic.gdx.utils.Logger:
    public static final int NONE
    public static final int ERROR
    public static final int INFO
    public static final int DEBUG
    36:37:public Logger(java.lang.String)
    49:50:public void debug(java.lang.String,java.lang.Exception)
    57:58:public void info(java.lang.String,java.lang.Exception)
    61:62:public void error(java.lang.String)
    72:73:public void setLevel(int)
com.badlogic.gdx.utils.LongArray:
    38:39:public LongArray(int)
    52:57:public LongArray(com.badlogic.gdx.utils.LongArray)
    62:63:public LongArray(long[])
    70:73:public LongArray(boolean,long[])
    76:79:public void add(long)
    82:83:public void addAll(com.badlogic.gdx.utils.LongArray)
    86:89:public void addAll(com.badlogic.gdx.utils.LongArray,int,int)
    92:93:public void addAll(long[])
    96:101:public void addAll(long[],int,int)
    104:105:public long get(int)
    109:111:public void set(int,long)
    114:122:public void insert(int,long)
    125:131:public void swap(int,int)
    134:138:public boolean contains(long)
    142:145:public int indexOf(long)
    149:152:public int lastIndexOf(char)
    156:163:public boolean removeValue(long)
    168:176:public long removeIndex(int)
    182:195:public boolean removeAll(com.badlogic.gdx.utils.LongArray)
    200:200:public long pop()
    205:205:public long peek()
    210:210:public long first()
    214:215:public void clear()
    220:221:public void shrink()
    227:229:public long[] ensureCapacity(int)
    233:237:protected long[] resize(int)
    241:242:public void sort()
    245:251:public void reverse()
    254:260:public void shuffle()
    265:266:public void truncate(int)
    270:271:public long random()
    275:277:public long[] toArray()
    306:314:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.LongMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.LongMap$Entries entries
    private com.badlogic.gdx.utils.LongMap$Keys keys
    160:162:public void putAll(com.badlogic.gdx.utils.LongMap)
    301:310:public java.lang.Object get(long,java.lang.Object)
    386:396:public void clear()
    401:416:public boolean containsValue(java.lang.Object,boolean)
    420:429:public boolean containsKey(long)
    433:436:private boolean containsKeyStash(long)
    444:459:public long findKey(java.lang.Object,boolean,long)
    465:467:public void ensureCapacity(int)
    533:537:public com.badlogic.gdx.utils.LongMap$Entries entries()
    553:557:public com.badlogic.gdx.utils.LongMap$Keys keys()
com.badlogic.gdx.utils.LongMap$Entries:
    624:625:public LongMap$Entries(com.badlogic.gdx.utils.LongMap)
com.badlogic.gdx.utils.LongMap$Keys:
    687:688:public LongMap$Keys(com.badlogic.gdx.utils.LongMap)
    691:694:public long next()
    699:702:public com.badlogic.gdx.utils.LongArray toArray()
com.badlogic.gdx.utils.LongMap$MapIterator:
    static final int INDEX_ILLEGAL
    static final int INDEX_ZERO
com.badlogic.gdx.utils.LongMap$Values:
    678:681:public com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.NumberUtils:
    25:25:public static int floatToRawIntBits(float)
    39:39:public static float intBitsToFloat(int)
com.badlogic.gdx.utils.ObjectIntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private com.badlogic.gdx.utils.ObjectIntMap$Entries entries
    private com.badlogic.gdx.utils.ObjectIntMap$Values values
    private com.badlogic.gdx.utils.ObjectIntMap$Keys keys
    60:61:public ObjectIntMap(int)
    144:146:public void putAll(com.badlogic.gdx.utils.ObjectIntMap)
    291:302:public int getAndIncrement(java.lang.Object,int,int)
    306:314:private int getAndIncrementStash(java.lang.Object,int,int)
    318:343:public int remove(java.lang.Object,int)
    347:356:int removeStash(java.lang.Object,int)
    380:383:public boolean containsValue(int)
    387:396:public boolean containsKey(java.lang.Object)
    400:403:private boolean containsKeyStash(java.lang.Object)
    409:412:public java.lang.Object findKey(int)
    418:420:public void ensureCapacity(int)
    486:490:public com.badlogic.gdx.utils.ObjectIntMap$Entries entries()
    496:500:public com.badlogic.gdx.utils.ObjectIntMap$Values values()
    506:510:public com.badlogic.gdx.utils.ObjectIntMap$Keys keys()
com.badlogic.gdx.utils.ObjectIntMap$Entries:
    566:567:public ObjectIntMap$Entries(com.badlogic.gdx.utils.ObjectIntMap)
    562:562:public bridge synthetic void reset()
com.badlogic.gdx.utils.ObjectIntMap$Keys:
    616:617:public ObjectIntMap$Keys(com.badlogic.gdx.utils.ObjectIntMap)
    636:639:public com.badlogic.gdx.utils.Array toArray()
    614:614:public bridge synthetic void reset()
com.badlogic.gdx.utils.ObjectIntMap$MapIterator:
    528:531:public ObjectIntMap$MapIterator(com.badlogic.gdx.utils.ObjectIntMap)
    534:537:public void reset()
com.badlogic.gdx.utils.ObjectIntMap$Values:
    591:592:public ObjectIntMap$Values(com.badlogic.gdx.utils.ObjectIntMap)
    595:595:public boolean hasNext()
    599:602:public int next()
    607:610:public com.badlogic.gdx.utils.IntArray toArray()
    589:589:public bridge synthetic void reset()
com.badlogic.gdx.utils.ObjectMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    154:156:public void putAll(com.badlogic.gdx.utils.ObjectMap)
    299:308:public java.lang.Object get(java.lang.Object,java.lang.Object)
    312:315:private java.lang.Object getStash(java.lang.Object,java.lang.Object)
    391:403:public boolean containsValue(java.lang.Object,boolean)
    449:451:public void ensureCapacity(int)
com.badlogic.gdx.utils.ObjectMap$Values:
    643:646:public com.badlogic.gdx.utils.Array toArray()
    651:653:public void toArray(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.OrderedMap:
    32:34:public OrderedMap(int)
    37:39:public OrderedMap(int,float)
com.badlogic.gdx.utils.PauseableThread:
    31:33:public PauseableThread(java.lang.Runnable)
    54:55:public void onPause()
    59:63:public void onResume()
    67:67:public boolean isPaused()
    72:74:public void stopThread()
com.badlogic.gdx.utils.PerformanceCounter:
    private static final float nano2seconds
    private long startTime
    private long lastTick
    public float current
    public boolean valid
    51:52:public PerformanceCounter(java.lang.String)
    54:58:public PerformanceCounter(java.lang.String,int)
    65:69:public void tick()
    76:88:public void tick(float)
    95:97:public void start()
    104:109:public void stop()
    115:121:public void reset()
com.badlogic.gdx.utils.PerformanceCounters:
    private static final float nano2seconds
    29:31:public com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String,int)
    35:37:public com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String)
    41:45:public void tick()
    48:50:public void tick(float)
    53:59:public com.badlogic.gdx.utils.StringBuilder toString(com.badlogic.gdx.utils.StringBuilder)
com.badlogic.gdx.utils.PooledLinkedList:
    private com.badlogic.gdx.utils.PooledLinkedList$Item head
    private com.badlogic.gdx.utils.PooledLinkedList$Item tail
    private com.badlogic.gdx.utils.PooledLinkedList$Item iter
    private com.badlogic.gdx.utils.PooledLinkedList$Item curr
    private int size
    private final com.badlogic.gdx.utils.Pool pool
    36:42:public PooledLinkedList(int)
    45:61:public void add(java.lang.Object)
    65:66:public void iter()
    72:77:public java.lang.Object next()
    82:112:public void remove()
    145:150:public void clear()
com.badlogic.gdx.utils.PooledLinkedList$1:
    final synthetic com.badlogic.gdx.utils.PooledLinkedList this$0
    37:37:PooledLinkedList$1(com.badlogic.gdx.utils.PooledLinkedList,int,int)
com.badlogic.gdx.utils.PooledLinkedList$Item:
    public java.lang.Object payload
    public com.badlogic.gdx.utils.PooledLinkedList$Item next
    public com.badlogic.gdx.utils.PooledLinkedList$Item prev
com.badlogic.gdx.utils.Pools:
    51:59:public static void freeAll(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.ReflectionPool:
    27:29:public ReflectionPool(java.lang.Class)
    37:39:public ReflectionPool(java.lang.Class,int)
com.badlogic.gdx.utils.ScreenUtils:
    40:42:public static com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture()
    56:68:public static com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture(int,int,int,int)
    78:80:public static byte[] getFrameBufferPixels(boolean)
    92:107:public static byte[] getFrameBufferPixels(int,int,int,int,boolean)
com.badlogic.gdx.utils.SerializationException:
    42:42:public boolean causedBy(java.lang.Class)
    46:49:private boolean causedBy(java.lang.Throwable,java.lang.Class)
com.badlogic.gdx.utils.SharedLibraryLoader:
    60:62:public SharedLibraryLoader(java.lang.String)
com.badlogic.gdx.utils.SnapshotArray:
    48:49:public SnapshotArray(com.badlogic.gdx.utils.Array)
    56:57:public SnapshotArray(boolean,int)
    60:61:public SnapshotArray(boolean,java.lang.Object[])
    64:65:public SnapshotArray(java.lang.Class)
    68:69:public SnapshotArray(int)
    72:73:public SnapshotArray(java.lang.Object[])
    107:109:public void set(int,java.lang.Object)
    142:144:public void sort()
    152:154:public void reverse()
    157:159:public void shuffle()
    162:164:public void truncate(int)
com.badlogic.gdx.utils.Sort:
    private com.badlogic.gdx.utils.ComparableTimSort comparableTimSort
    31:33:public void sort(com.badlogic.gdx.utils.Array)
    36:38:public void sort(java.lang.Object[])
    41:43:public void sort(java.lang.Object[],int,int)
    46:48:public void sort(com.badlogic.gdx.utils.Array,java.util.Comparator)
    51:53:public void sort(java.lang.Object[],java.util.Comparator)
com.badlogic.gdx.utils.SortedIntList:
    39:68:public java.lang.Object insert(int,java.lang.Object)
    76:86:public java.lang.Object get(int)
    99:99:public int size()
com.badlogic.gdx.utils.SortedIntList$Node:
    public java.lang.Object value
    public int index
com.badlogic.gdx.utils.SortedIntList$NodePool:
    173:178:public com.badlogic.gdx.utils.SortedIntList$Node obtain(com.badlogic.gdx.utils.SortedIntList$Node,com.badlogic.gdx.utils.SortedIntList$Node,java.lang.Object,int)
com.badlogic.gdx.utils.StringBuilder:
    static final int INITIAL_CAPACITY
    39:39:final char[] getValue()
    67:68:public StringBuilder(java.lang.CharSequence)
    70:74:public StringBuilder(com.badlogic.gdx.utils.StringBuilder)
    81:85:public StringBuilder(java.lang.String)
    169:169:public int capacity()
    185:199:final void delete0(int,int)
    203:211:final void deleteCharAt0(int)
    220:224:public void ensureCapacity(int)
    236:240:public void getChars(int,int,char[],int)
    243:251:final void insert0(int,char[])
    254:266:final void insert0(int,char[],int,int)
    270:277:final void insert0(int,char)
    280:293:final void insert0(int,java.lang.String)
    296:303:final void insert0(int,java.lang.CharSequence,int,int)
    313:324:private void move(int,int)
    327:353:final void replace0(int,int,java.lang.String)
    357:411:final void reverse0()
    419:423:public void setCharAt(int,char)
    451:459:public java.lang.String substring(int)
    510:510:public int indexOf(java.lang.String)
    522:553:public int indexOf(java.lang.String,int)
    565:565:public int lastIndexOf(java.lang.String)
    578:610:public int lastIndexOf(java.lang.String,int)
    618:623:public void trimToSize()
    634:637:public int codePointAt(int)
    649:652:public int codePointBefore(int)
    666:669:public int codePointCount(int,int)
    683:683:public int offsetByCodePoints(int,int)
    795:796:public com.badlogic.gdx.utils.StringBuilder append(double)
    885:889:public com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder,int,int)
    899:900:public com.badlogic.gdx.utils.StringBuilder appendCodePoint(int)
    911:912:public com.badlogic.gdx.utils.StringBuilder delete(int,int)
    922:923:public com.badlogic.gdx.utils.StringBuilder deleteCharAt(int)
    935:936:public com.badlogic.gdx.utils.StringBuilder insert(int,boolean)
    948:949:public com.badlogic.gdx.utils.StringBuilder insert(int,char)
    961:962:public com.badlogic.gdx.utils.StringBuilder insert(int,int)
    974:975:public com.badlogic.gdx.utils.StringBuilder insert(int,long)
    987:988:public com.badlogic.gdx.utils.StringBuilder insert(int,float)
    1000:1001:public com.badlogic.gdx.utils.StringBuilder insert(int,double)
    1013:1014:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.Object)
    1025:1026:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.String)
    1038:1039:public com.badlogic.gdx.utils.StringBuilder insert(int,char[])
    1054:1055:public com.badlogic.gdx.utils.StringBuilder insert(int,char[],int,int)
    1068:1069:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence)
    1085:1086:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence,int,int)
    1099:1100:public com.badlogic.gdx.utils.StringBuilder replace(int,int,java.lang.String)
    1107:1108:public com.badlogic.gdx.utils.StringBuilder reverse()
com.badlogic.gdx.utils.TimSort:
    private static final int MIN_MERGE
    private static final int MIN_GALLOP
    private static final int INITIAL_TMP_STORAGE_LENGTH
    private static final boolean DEBUG
    152:171:private TimSort(java.lang.Object[],java.util.Comparator)
    179:180:static void sort(java.lang.Object[],java.util.Comparator)
    183:227:static void sort(java.lang.Object[],int,int,java.util.Comparator)
com.badlogic.gdx.utils.TimeUtils:
    29:29:public static long millis()
com.badlogic.gdx.utils.Timer:
    private static final int CANCELLED
    private static final int FOREVER
    62:63:public void postTask(com.badlogic.gdx.utils.Timer$Task)
    89:92:public void stop()
    105:110:public void clear()
    148:149:public static void post(com.badlogic.gdx.utils.Timer$Task)
    166:167:public static void schedule(com.badlogic.gdx.utils.Timer$Task,float,float,int)
com.badlogic.gdx.utils.XmlReader:
    static final int xml_start
    static final int xml_first_final
    static final int xml_error
    static final int xml_en_elementBody
    static final int xml_en_main
com.badlogic.gdx.utils.XmlReader$Element:
    450:450:public com.badlogic.gdx.utils.ObjectMap getAttributes()
    455:458:public java.lang.String getAttribute(java.lang.String)
    462:465:public java.lang.String getAttribute(java.lang.String,java.lang.String)
    474:475:public int getChildCount()
    480:481:public com.badlogic.gdx.utils.XmlReader$Element getChild(int)
    498:499:public void removeChild(int)
    502:503:public void removeChild(com.badlogic.gdx.utils.XmlReader$Element)
    506:507:public void remove()
    510:510:public com.badlogic.gdx.utils.XmlReader$Element getParent()
    558:563:public com.badlogic.gdx.utils.XmlReader$Element getChildByName(java.lang.String)
    569:576:public com.badlogic.gdx.utils.XmlReader$Element getChildByNameRecursive(java.lang.String)
    582:588:public com.badlogic.gdx.utils.Array getChildrenByName(java.lang.String)
    594:596:public com.badlogic.gdx.utils.Array getChildrenByNameRecursively(java.lang.String)
    600:606:private void getChildrenByNameRecursively(java.lang.String,com.badlogic.gdx.utils.Array)
    610:610:public float getFloatAttribute(java.lang.String)
    614:616:public float getFloatAttribute(java.lang.String,float)
    621:621:public int getIntAttribute(java.lang.String)
    625:627:public int getIntAttribute(java.lang.String,int)
    632:632:public boolean getBooleanAttribute(java.lang.String)
    636:638:public boolean getBooleanAttribute(java.lang.String,boolean)
    644:646:public java.lang.String get(java.lang.String)
    652:660:public java.lang.String get(java.lang.String,java.lang.String)
    666:668:public int getInt(java.lang.String)
    674:676:public int getInt(java.lang.String,int)
    682:684:public float getFloat(java.lang.String)
    690:692:public float getFloat(java.lang.String,float)
    698:700:public boolean getBoolean(java.lang.String)
    706:708:public boolean getBoolean(java.lang.String,boolean)
com.badlogic.gdx.utils.XmlWriter:
    50:52:public XmlWriter(java.io.Writer)
    62:67:public com.badlogic.gdx.utils.XmlWriter element(java.lang.String)
    71:71:public com.badlogic.gdx.utils.XmlWriter element(java.lang.String,java.lang.Object)
    84:90:public com.badlogic.gdx.utils.XmlWriter attribute(java.lang.String,java.lang.Object)
    94:103:public com.badlogic.gdx.utils.XmlWriter text(java.lang.Object)
com.badlogic.gdx.utils.compression.CRC:
    23:24:public void Init()
    27:29:public void Update(byte[],int,int)
    32:35:public void Update(byte[])
    38:39:public void UpdateByte(int)
    42:42:public int GetDigest()
com.badlogic.gdx.utils.compression.ICodeProgress:
    public abstract void SetProgress(long,long)
com.badlogic.gdx.utils.compression.Lzma:
    62:85:public static void compress(java.io.InputStream,java.io.OutputStream)
    93:109:public static void decompress(java.io.InputStream,java.io.OutputStream)
com.badlogic.gdx.utils.compression.Lzma$CommandLine:
    public static final int kEncode
    public static final int kDecode
    public static final int kBenchmak
    public java.lang.String InFile
    public java.lang.String OutFile
com.badlogic.gdx.utils.compression.lz.BinTree:
    int _cyclicBufferPos
    int _matchMaxLen
    int[] _son
    int[] _hash
    int _hashMask
    static final int kHash2Size
    static final int kHash3Size
    static final int kBT2HashSize
    static final int kStartMaxLen
    static final int kHash3Offset
    static final int kEmptyHashValue
    static final int kMaxValForNormalize
    34:44:public void SetType(int)
    47:52:public void Init()
    55:58:public void MovePos()
    61:89:public boolean Create(int,int,int,int)
    94:197:public int GetMatches(int[])
    203:274:public void Skip(int)
    277:285:void NormalizeLinks(int[],int,int)
    288:292:void Normalize()
    295:296:public void SetCutValue(int)
com.badlogic.gdx.utils.compression.lz.InWindow:
    public byte[] _bufferBase
    java.io.InputStream _stream
    int _posLimit
    boolean _streamEndWasReached
    int _pointerToLastSafePosition
    public int _bufferOffset
    public int _blockSize
    public int _pos
    int _keepSizeBefore
    int _keepSizeAfter
    public int _streamPos
    24:34:public void MoveBlock()
    37:52:public void ReadBlock()
    56:57:void Free()
    60:69:public void Create(int,int,int)
    72:73:public void SetStream(java.io.InputStream)
    76:77:public void ReleaseStream()
    80:85:public void Init()
    88:94:public void MovePos()
    97:97:public byte GetIndexByte(int)
    102:110:public int GetMatchLen(int,int,int)
    114:114:public int GetNumAvailableBytes()
    118:122:public void ReduceOffsets(int)
com.badlogic.gdx.utils.compression.lz.OutWindow:
    byte[] _buffer
    int _pos
    int _streamPos
    java.io.OutputStream _stream
    15:19:public void Create(int)
    22:24:public void SetStream(java.io.OutputStream)
    27:29:public void ReleaseStream()
    32:36:public void Init(boolean)
    39:44:public void Flush()
    47:54:public void CopyBlock(int,int)
    57:59:public void PutByte(byte)
    62:64:public byte GetByte(int)
com.badlogic.gdx.utils.compression.lzma.Base:
    public static final int kNumRepDistances
    public static final int kNumStates
    public static final int kNumPosSlotBits
    public static final int kDicLogSizeMin
    public static final int kNumLenToPosStatesBits
    public static final int kNumLenToPosStates
    public static final int kMatchMinLen
    public static final int kNumAlignBits
    public static final int kAlignTableSize
    public static final int kAlignMask
    public static final int kStartPosModelIndex
    public static final int kEndPosModelIndex
    public static final int kNumPosModels
    public static final int kNumFullDistances
    public static final int kNumLitPosStatesBitsEncodingMax
    public static final int kNumLitContextBitsMax
    public static final int kNumPosStatesBitsMax
    public static final int kNumPosStatesMax
    public static final int kNumPosStatesBitsEncodingMax
    public static final int kNumPosStatesEncodingMax
    public static final int kNumLowLenBits
    public static final int kNumMidLenBits
    public static final int kNumHighLenBits
    public static final int kNumLowLenSymbols
    public static final int kNumMidLenSymbols
    public static final int kNumLenSymbols
    public static final int kMatchMaxLen
    14:16:public static final int StateUpdateChar(int)
    20:20:public static final int StateUpdateMatch(int)
    24:24:public static final int StateUpdateRep(int)
    28:28:public static final int StateUpdateShortRep(int)
    32:32:public static final boolean StateIsCharState(int)
    46:48:public static final int GetLenToPosState(int)
com.badlogic.gdx.utils.compression.lzma.Decoder:
    int m_PosStateMask
    151:157:boolean SetDictionarySize(int)
    161:167:boolean SetLcLpPb(int,int,int)
    171:189:void Init()
    192:276:public boolean Code(java.io.InputStream,java.io.OutputStream,long)
    280:290:public boolean SetDecoderProperties(byte[])
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder:
    33:37:public void Create(int)
    40:46:public void Init()
    49:55:public int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder,int)
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder:
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2[] m_Coders
    int m_NumPrevBits
    int m_NumPosBits
    int m_PosMask
    99:107:public void Create(int,int)
    110:113:public void Init()
    116:116:com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2 GetDecoder(int,byte)
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2:
    short[] m_Decoders
    final synthetic com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder this$1
    60:61:Decoder$LiteralDecoder$Decoder2(com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder)
    64:65:public void Init()
    68:72:public byte DecodeNormal(com.badlogic.gdx.utils.compression.rangecoder.Decoder)
    77:89:public byte DecodeWithMatchByte(com.badlogic.gdx.utils.compression.rangecoder.Decoder,byte)
com.badlogic.gdx.utils.compression.lzma.Encoder:
    public static final int EMatchFinderTypeBT2
    public static final int EMatchFinderTypeBT4
    static final int kIfinityPrice
    byte _previousByte
    static final int kDefaultDictionaryLogSize
    static final int kNumFastBytesDefault
    public static final int kNumLenSpecSymbols
    static final int kNumOpts
    int _longestMatchLength
    int _numDistancePairs
    int _additionalOffset
    int _optimumEndIndex
    int _optimumCurrentIndex
    boolean _longestMatchWasFound
    int _alignPriceCount
    long nowPos64
    boolean _finished
    java.io.InputStream _inStream
    int backRes
    public static final int kPropSize
    int _matchPriceCount
    45:47:static int GetPosSlot(int)
    51:53:static int GetPosSlot2(int)
    61:65:void BaseInit()
    345:358:void Create()
    368:369:void SetWriteEndMarkerMode(boolean)
    372:396:void Init()
    399:408:int ReadMatchDistances()
    412:416:void MovePos(int)
    419:419:int GetRepLen1Price(int,int)
    426:439:int GetPureRepPrice(int,int,int)
    443:444:int GetRepPrice(int,int,int,int)
    449:454:int GetPosLenPrice(int,int,int)
    458:483:int Backward(int)
    491:913:int GetOptimum(int)
    917:918:boolean ChangePair(int,int)
    922:936:void WriteEndMarker(int)
    939:943:void Flush(int)
    946:1078:public void CodeOneBlock(long[],long[],boolean[])
    1082:1086:void ReleaseMFStream()
    1089:1090:void SetOutStream(java.io.OutputStream)
    1093:1094:void ReleaseOutStream()
    1097:1099:void ReleaseStreams()
    1102:1120:void SetStreams(java.io.InputStream,java.io.OutputStream,long,long)
    1128:1140:public void Code(java.io.InputStream,java.io.OutputStream,long,long,com.badlogic.gdx.utils.compression.ICodeProgress)
    1148:1152:public void WriteCoderProperties(java.io.OutputStream)
    1158:1183:void FillDistancesPrices()
    1186:1189:void FillAlignPrices()
    1195:1195:public boolean SetAlgorithm(int)
    1199:1206:public boolean SetDictionarySize(int)
    1210:1212:public boolean SetNumFastBytes(int)
    1216:1223:public boolean SetMatchFinder(int)
    1227:1233:public boolean SetLcLpPb(int,int,int)
    1237:1238:public void SetEndMarkerMode(boolean)
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder:
    171:178:public void Init(int)
    182:196:public void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int)
    199:214:public void SetPrices(int,int,int[],int)
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder:
    int _tableSize
    225:226:public void SetTableSize(int)
    229:229:public int GetPrice(int,int)
    233:235:void UpdateTable(int)
    238:240:public void UpdateTables(int)
    244:246:public void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int)
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder:
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2[] m_Coders
    int m_NumPrevBits
    int m_NumPosBits
    int m_PosMask
    136:144:public void Create(int,int)
    147:150:public void Init()
    153:153:public com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2 GetSubCoder(int,byte)
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2:
    short[] m_Encoders
    final synthetic com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder this$1
    71:72:Encoder$LiteralEncoder$Encoder2(com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder)
    75:76:public void Init()
    79:85:public void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte)
    89:102:public void EncodeMatched(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte,byte)
    105:126:public int GetPrice(boolean,byte,byte)
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal:
    public int State
    public boolean Prev1IsChar
    public boolean Prev2
    public int PosPrev2
    public int BackPrev2
    public int Price
    public int PosPrev
    public int BackPrev
    public int Backs0
    public int Backs1
    public int Backs2
    public int Backs3
    270:272:public void MakeAsChar()
    275:278:public void MakeAsShortRep()
    281:281:public boolean IsShortRep()
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder:
    29:30:public void Init()
    33:36:public int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder)
    40:48:public int ReverseDecode(com.badlogic.gdx.utils.compression.rangecoder.Decoder)
    53:61:public static int ReverseDecode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Decoder,int)
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder:
    31:32:public void Init()
    35:42:public void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int)
    45:52:public void ReverseEncode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int)
    55:63:public int GetPrice(int)
    67:75:public int ReverseGetPrice(int)
    79:87:public static int ReverseGetPrice(short[],int,int,int)
    92:99:public static void ReverseEncode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int)
com.badlogic.gdx.utils.compression.rangecoder.Decoder:
    static final int kTopMask
    static final int kNumBitModelTotalBits
    static final int kBitModelTotal
    static final int kNumMoveBits
    int Range
    int Code
    java.io.InputStream Stream
    34:35:public final void SetStream(java.io.InputStream)
    38:39:public final void ReleaseStream()
    42:46:public final void Init()
    49:61:public final int DecodeDirectBits(int)
    65:83:public int DecodeBit(short[],int)
    88:90:public static void InitBitModels(short[])
com.badlogic.gdx.utils.compression.rangecoder.Encoder:
    static final int kTopMask
    static final int kNumBitModelTotalBits
    static final int kBitModelTotal
    static final int kNumMoveBits
    java.io.OutputStream Stream
    long Low
    int Range
    int _cacheSize
    int _cache
    long _position
    static final int kNumMoveReducingBits
    public static final int kNumBitPriceShiftBits
    38:39:public void SetStream(java.io.OutputStream)
    42:43:public void ReleaseStream()
    46:51:public void Init()
    54:56:public void FlushData()
    59:60:public void FlushStream()
    63:75:public void ShiftLow()
    78:86:public void EncodeDirectBits(int,int)
    89:89:public long GetProcessedSizeAdd()
    96:98:public static void InitBitModels(short[])
    101:115:public void Encode(short[],int,int)
    130:130:public static int GetPrice(int,int)
    134:134:public static int GetPrice0(int)
    138:138:public static int GetPrice1(int)
com.esotericsoftware.tablelayout.Cell:
    129:129:public boolean hasWidget()
    134:140:public com.esotericsoftware.tablelayout.Cell size(com.esotericsoftware.tablelayout.Value)
    145:151:public com.esotericsoftware.tablelayout.Cell size(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    156:157:public com.esotericsoftware.tablelayout.Cell size(float)
    162:163:public com.esotericsoftware.tablelayout.Cell size(float,float)
    196:198:public com.esotericsoftware.tablelayout.Cell minSize(com.esotericsoftware.tablelayout.Value)
    203:205:public com.esotericsoftware.tablelayout.Cell minSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    209:210:public com.esotericsoftware.tablelayout.Cell minWidth(com.esotericsoftware.tablelayout.Value)
    214:215:public com.esotericsoftware.tablelayout.Cell minHeight(com.esotericsoftware.tablelayout.Value)
    220:222:public com.esotericsoftware.tablelayout.Cell minSize(float)
    227:229:public com.esotericsoftware.tablelayout.Cell minSize(float,float)
    233:234:public com.esotericsoftware.tablelayout.Cell minWidth(float)
    238:239:public com.esotericsoftware.tablelayout.Cell minHeight(float)
    244:246:public com.esotericsoftware.tablelayout.Cell prefSize(com.esotericsoftware.tablelayout.Value)
    251:253:public com.esotericsoftware.tablelayout.Cell prefSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    257:258:public com.esotericsoftware.tablelayout.Cell prefWidth(com.esotericsoftware.tablelayout.Value)
    262:263:public com.esotericsoftware.tablelayout.Cell prefHeight(com.esotericsoftware.tablelayout.Value)
    268:270:public com.esotericsoftware.tablelayout.Cell prefSize(float,float)
    275:277:public com.esotericsoftware.tablelayout.Cell prefSize(float)
    281:282:public com.esotericsoftware.tablelayout.Cell prefWidth(float)
    286:287:public com.esotericsoftware.tablelayout.Cell prefHeight(float)
    292:294:public com.esotericsoftware.tablelayout.Cell maxSize(com.esotericsoftware.tablelayout.Value)
    299:301:public com.esotericsoftware.tablelayout.Cell maxSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    305:306:public com.esotericsoftware.tablelayout.Cell maxWidth(com.esotericsoftware.tablelayout.Value)
    310:311:public com.esotericsoftware.tablelayout.Cell maxHeight(com.esotericsoftware.tablelayout.Value)
    316:318:public com.esotericsoftware.tablelayout.Cell maxSize(float)
    323:325:public com.esotericsoftware.tablelayout.Cell maxSize(float,float)
    329:330:public com.esotericsoftware.tablelayout.Cell maxWidth(float)
    334:335:public com.esotericsoftware.tablelayout.Cell maxHeight(float)
    340:344:public com.esotericsoftware.tablelayout.Cell space(com.esotericsoftware.tablelayout.Value)
    348:352:public com.esotericsoftware.tablelayout.Cell space(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    356:357:public com.esotericsoftware.tablelayout.Cell spaceTop(com.esotericsoftware.tablelayout.Value)
    361:362:public com.esotericsoftware.tablelayout.Cell spaceLeft(com.esotericsoftware.tablelayout.Value)
    366:367:public com.esotericsoftware.tablelayout.Cell spaceBottom(com.esotericsoftware.tablelayout.Value)
    371:372:public com.esotericsoftware.tablelayout.Cell spaceRight(com.esotericsoftware.tablelayout.Value)
    387:395:public com.esotericsoftware.tablelayout.Cell space(float,float,float,float)
    424:428:public com.esotericsoftware.tablelayout.Cell pad(com.esotericsoftware.tablelayout.Value)
    432:436:public com.esotericsoftware.tablelayout.Cell pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value)
    440:441:public com.esotericsoftware.tablelayout.Cell padTop(com.esotericsoftware.tablelayout.Value)
    445:446:public com.esotericsoftware.tablelayout.Cell padLeft(com.esotericsoftware.tablelayout.Value)
    450:451:public com.esotericsoftware.tablelayout.Cell padBottom(com.esotericsoftware.tablelayout.Value)
    455:456:public com.esotericsoftware.tablelayout.Cell padRight(com.esotericsoftware.tablelayout.Value)
    517:519:public com.esotericsoftware.tablelayout.Cell fill(java.lang.Float,java.lang.Float)
    524:526:public com.esotericsoftware.tablelayout.Cell fill(boolean,boolean)
    531:533:public com.esotericsoftware.tablelayout.Cell fill(boolean)
    539:540:public com.esotericsoftware.tablelayout.Cell align(java.lang.Integer)
    573:579:public com.esotericsoftware.tablelayout.Cell bottom()
    602:603:public com.esotericsoftware.tablelayout.Cell expandX()
    608:609:public com.esotericsoftware.tablelayout.Cell expandY()
    613:615:public com.esotericsoftware.tablelayout.Cell expand(java.lang.Integer,java.lang.Integer)
    620:622:public com.esotericsoftware.tablelayout.Cell expand(boolean,boolean)
    626:627:public com.esotericsoftware.tablelayout.Cell ignore(java.lang.Boolean)
    632:633:public com.esotericsoftware.tablelayout.Cell ignore()
    647:649:public com.esotericsoftware.tablelayout.Cell uniform()
    660:661:public com.esotericsoftware.tablelayout.Cell uniformY()
    665:667:public com.esotericsoftware.tablelayout.Cell uniform(java.lang.Boolean,java.lang.Boolean)
    703:703:public int getColumn()
    707:707:public int getRow()
    712:712:public com.esotericsoftware.tablelayout.Value getMinWidthValue()
    716:716:public float getMinWidth()
    721:721:public com.esotericsoftware.tablelayout.Value getMinHeightValue()
    725:725:public float getMinHeight()
    730:730:public com.esotericsoftware.tablelayout.Value getPrefWidthValue()
    734:734:public float getPrefWidth()
    739:739:public com.esotericsoftware.tablelayout.Value getPrefHeightValue()
    743:743:public float getPrefHeight()
    748:748:public com.esotericsoftware.tablelayout.Value getMaxWidthValue()
    752:752:public float getMaxWidth()
    757:757:public com.esotericsoftware.tablelayout.Value getMaxHeightValue()
    761:761:public float getMaxHeight()
    766:766:public com.esotericsoftware.tablelayout.Value getSpaceTopValue()
    770:770:public float getSpaceTop()
    775:775:public com.esotericsoftware.tablelayout.Value getSpaceLeftValue()
    779:779:public float getSpaceLeft()
    784:784:public com.esotericsoftware.tablelayout.Value getSpaceBottomValue()
    788:788:public float getSpaceBottom()
    793:793:public com.esotericsoftware.tablelayout.Value getSpaceRightValue()
    797:797:public float getSpaceRight()
    802:802:public com.esotericsoftware.tablelayout.Value getPadTopValue()
    806:806:public float getPadTop()
    811:811:public com.esotericsoftware.tablelayout.Value getPadLeftValue()
    815:815:public float getPadLeft()
    820:820:public com.esotericsoftware.tablelayout.Value getPadBottomValue()
    824:824:public float getPadBottom()
    829:829:public com.esotericsoftware.tablelayout.Value getPadRightValue()
    833:833:public float getPadRight()
    838:838:public java.lang.Float getFillX()
    843:843:public java.lang.Float getFillY()
    848:848:public java.lang.Integer getAlign()
    853:853:public java.lang.Integer getExpandX()
    858:858:public java.lang.Integer getExpandY()
    863:863:public java.lang.Integer getColspan()
    868:868:public java.lang.Boolean getUniformX()
    873:873:public java.lang.Boolean getUniformY()
    883:883:public float getComputedPadTop()
    888:888:public float getComputedPadLeft()
    893:893:public float getComputedPadBottom()
    898:898:public float getComputedPadRight()
    902:902:public com.esotericsoftware.tablelayout.Cell row()
    906:906:public com.esotericsoftware.tablelayout.BaseTableLayout getLayout()
com.esotericsoftware.tablelayout.Value:
    172:172:public static com.esotericsoftware.tablelayout.Value percentWidth(float)
    181:181:public static com.esotericsoftware.tablelayout.Value percentHeight(float)
    190:190:public static com.esotericsoftware.tablelayout.Value percentWidth(float,java.lang.Object)
    203:203:public static com.esotericsoftware.tablelayout.Value percentHeight(float,java.lang.Object)
com.esotericsoftware.tablelayout.Value$10
com.esotericsoftware.tablelayout.Value$11
com.esotericsoftware.tablelayout.Value$8
com.esotericsoftware.tablelayout.Value$9
com.esotericsoftware.tablelayout.Value$FixedValue:
    98:99:public void set(float)
com.esotericsoftware.tablelayout.Value$TableValue
com.mazalearn.scienceengine.AbstractPlatformAdapter:
    35:36:public void showExternalURL(java.lang.String)
    39:43:private void showFileUri(com.badlogic.gdx.files.FileHandle)
    47:48:public void showInternalURL(java.lang.String)
    76:76:public com.badlogic.gdx.graphics.g2d.BitmapFont loadFont(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.mazalearn.scienceengine.AndroidPlatformAdapter:
    private static final int PAUSE_MS
    private static final java.lang.String HINDI_TTF
    private static final java.lang.String KANNADA_TTF
    63:64:public void showExternalURL(java.lang.String)
    68:72:private void showFileUri(java.lang.String,java.lang.String)
    76:77:public void showInternalURL(java.lang.String)
    199:212:public com.badlogic.gdx.graphics.g2d.BitmapFont loadFont(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    239:244:public java.lang.String getUserEmail()
com.mazalearn.scienceengine.BuildConfig
com.mazalearn.scienceengine.Installation:
    private static final java.lang.String INSTALLATION
    10:10:public Installation()
com.mazalearn.scienceengine.MainActivity:
    static final int TTS_CHECK
    89:89:java.lang.String findAndroidId()
com.mazalearn.scienceengine.Messages:
    private static final java.lang.String BUNDLE_NAME
com.mazalearn.scienceengine.NonWebPlatformAdapter:
    private static final java.lang.String BODY_DELIMITER
com.mazalearn.scienceengine.R
com.mazalearn.scienceengine.R$attr
com.mazalearn.scienceengine.R$drawable
com.mazalearn.scienceengine.R$id
com.mazalearn.scienceengine.R$layout
com.mazalearn.scienceengine.R$string
com.mazalearn.scienceengine.ScienceEngine:
    public static final java.lang.String USER
com.mazalearn.scienceengine.ScreenComponent:
    public static final java.lang.String CORE_GROUP
    public static final java.lang.String TUTOR_GROUP
    public static final java.lang.String ACTIVITY_GROUP
    public static final java.lang.String HELP_TOUR
    public static final int PIXELS_PER_M
    private static final int CANONICAL_VIEWPORT_HEIGHT
    private static final int CANONICAL_VIEWPORT_WIDTH
    private static final int CANONICAL_FONT_SIZE
    156:161:public static com.mazalearn.scienceengine.ScreenComponent valueOf(com.mazalearn.scienceengine.core.model.IComponentType)
com.mazalearn.scienceengine.Topic:
    private static final java.lang.String PRODUCT_PREFIX
    85:85:public com.mazalearn.scienceengine.Topic idToTopic(int)
com.mazalearn.scienceengine.app.dialogs.AboutDialog:
    private static final java.lang.String COPYRIGHTS_FILE
com.mazalearn.scienceengine.app.dialogs.AboutDialog$Copyright:
    java.lang.String year
    138:145:java.lang.String toString(java.lang.String)
com.mazalearn.scienceengine.app.dialogs.AppRater:
    private static final java.lang.String APP_TITLE
    private static final java.lang.String APP_PNAME
    private static final int DAYS_UNTIL_PROMPT
    private static final int LAUNCHES_UNTIL_PROMPT
    17:17:public AppRater()
com.mazalearn.scienceengine.app.dialogs.PurchaseDialog:
    private static final java.lang.String PURCHASE_FLOW
com.mazalearn.scienceengine.app.dialogs.UserHomeDialog:
    private static final int GIFT_WIDTH
    static final int GIFT_HEIGHT
    private static final int CERTIFICATE_WIDTH
    private static final int CERTIFICATE_HEIGHT
    private static final boolean ENABLE_SOCIAL
com.mazalearn.scienceengine.app.screens.ChooseTopicScreen:
    private static final int THUMBNAIL_WIDTH
    private static final int THUMBNAIL_HEIGHT
com.mazalearn.scienceengine.app.screens.LoadingScreen:
    private static final float INCREMENT
com.mazalearn.scienceengine.app.screens.OverlayImage
com.mazalearn.scienceengine.app.screens.TopicHomeScreen:
    private static final int RESOURCE_WIDTH
    public static final int THUMBNAIL_WIDTH
    public static final int THUMBNAIL_HEIGHT
    private static final int RESOURCE_INFO_HEIGHT
com.mazalearn.scienceengine.app.services.InstallProfile:
    48:48:public java.lang.String getEnterpriseName()
    52:52:public java.lang.String getEnterpriseId()
    71:72:public com.badlogic.gdx.graphics.Pixmap getEnterpriseLogo()
    84:84:public java.lang.String getInstallationName()
com.mazalearn.scienceengine.app.services.MusicManager:
    private static final float ATTENUATION
    135:135:public float getVolume()
com.mazalearn.scienceengine.app.services.PreferencesManager:
    private static final java.lang.String SERVER_PROFILE_PREFIX
    private static final java.lang.String SYNC_PROFILES
    private static final java.lang.String INSTALL_PROFILE
    private static final java.lang.String PREF_VOLUME
    private static final java.lang.String PREF_MUSIC_ENABLED
    private static final java.lang.String PREF_SPEECH_ENABLED
    private static final java.lang.String PREF_SOUND_ENABLED
    private static final java.lang.String PREFS_NAME
    private static final java.lang.String PREFS_SYNC_MODE
com.mazalearn.scienceengine.app.services.Profile:
    public static final java.lang.String GUEST
    227:231:void testPostInMessage(com.mazalearn.scienceengine.app.services.ProfileData$Social$Message)
    234:234:public java.util.List getOutbox()
    408:408:public int getLaunchCount()
com.mazalearn.scienceengine.app.services.ProfileSyncer:
    public static final long FORCED_SYNC
    21:22:public static void setTestCurrentTime(long)
    105:121:public java.util.Map doSync(java.util.Map,java.util.Map,java.util.Map,java.util.Map)
com.mazalearn.scienceengine.app.services.loaders.CircuitLoader:
    10:10:public CircuitLoader()
com.mazalearn.scienceengine.app.services.loaders.ConfigLoader:
    10:10:public ConfigLoader()
com.mazalearn.scienceengine.app.services.loaders.GroupLoader:
    9:9:public GroupLoader()
com.mazalearn.scienceengine.app.services.loaders.Trivia:
    private static final java.lang.String TRIVIA_FILE_NAME
com.mazalearn.scienceengine.app.utils.Crypter:
    private static final java.lang.String SALT
    private static final java.lang.String XLATE
    10:10:public Crypter()
    41:42:public static void setSha1Implementor(com.mazalearn.scienceengine.app.utils.Crypter$Sha1)
com.mazalearn.scienceengine.app.utils.Format:
    3:3:public Format()
com.mazalearn.scienceengine.app.utils.IPlatformAdapter:
    public abstract void showExternalURL(java.lang.String)
    public abstract void showInternalURL(java.lang.String)
    public abstract com.badlogic.gdx.graphics.g2d.BitmapFont loadFont(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
    public abstract java.lang.String getDeviceId()
com.mazalearn.scienceengine.app.utils.ImageList
com.mazalearn.scienceengine.app.utils.LevelUtil:
    11:11:public LevelUtil()
com.mazalearn.scienceengine.app.utils.ProfileMapConverter:
    11:11:public ProfileMapConverter()
com.mazalearn.scienceengine.app.utils.ScreenUtils:
    private static final int NUM_ENGINE_WHEELS
    34:34:public ScreenUtils()
    167:172:public static com.badlogic.gdx.scenes.scene2d.ui.TextButton createTextButton(java.lang.String,float,float,float,float,com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle)
com.mazalearn.scienceengine.app.utils.ServerConstants
com.mazalearn.scienceengine.billing.Base64:
    public static final boolean ENCODE
    public static final boolean DECODE
    private static final byte EQUALS_SIGN
    private static final byte NEW_LINE
    private static final byte WHITE_SPACE_ENC
    private static final byte EQUALS_SIGN_ENC
    210:234:private static byte[] encode3to4(byte[],int,int,byte[],int,byte[])
    247:247:public static java.lang.String encode(byte[])
    258:258:public static java.lang.String encodeWebSafe(byte[],boolean)
    274:286:public static java.lang.String encode(byte[],int,int,byte[],boolean)
    301:345:public static byte[] encode(byte[],int,int,byte[],int)
    431:432:public static byte[] decodeWebSafe(java.lang.String)
    445:445:public static byte[] decode(byte[])
    458:458:public static byte[] decodeWebSafe(byte[])
    489:489:public static byte[] decodeWebSafe(byte[],int,int)
com.mazalearn.scienceengine.billing.IBilling:
    public static final int REQUEST_CODE
com.mazalearn.scienceengine.billing.IabHelper:
    public static final int BILLING_RESPONSE_RESULT_OK
    public static final int BILLING_RESPONSE_RESULT_USER_CANCELED
    public static final int BILLING_RESPONSE_RESULT_BILLING_UNAVAILABLE
    public static final int BILLING_RESPONSE_RESULT_ITEM_UNAVAILABLE
    public static final int BILLING_RESPONSE_RESULT_DEVELOPER_ERROR
    public static final int BILLING_RESPONSE_RESULT_ERROR
    public static final int BILLING_RESPONSE_RESULT_ITEM_ALREADY_OWNED
    public static final int BILLING_RESPONSE_RESULT_ITEM_NOT_OWNED
    public static final int IABHELPER_ERROR_BASE
    public static final int IABHELPER_REMOTE_EXCEPTION
    public static final int IABHELPER_BAD_RESPONSE
    public static final int IABHELPER_VERIFICATION_FAILED
    public static final int IABHELPER_SEND_INTENT_FAILED
    public static final int IABHELPER_USER_CANCELLED
    public static final int IABHELPER_UNKNOWN_PURCHASE_RESPONSE
    public static final int IABHELPER_MISSING_TOKEN
    public static final int IABHELPER_UNKNOWN_ERROR
    public static final int IABHELPER_SUBSCRIPTIONS_NOT_AVAILABLE
    public static final int IABHELPER_INVALID_CONSUMPTION
    public static final java.lang.String RESPONSE_CODE
    public static final java.lang.String RESPONSE_GET_SKU_DETAILS_LIST
    public static final java.lang.String RESPONSE_BUY_INTENT
    public static final java.lang.String RESPONSE_INAPP_PURCHASE_DATA
    public static final java.lang.String RESPONSE_INAPP_SIGNATURE
    public static final java.lang.String RESPONSE_INAPP_ITEM_LIST
    public static final java.lang.String RESPONSE_INAPP_PURCHASE_DATA_LIST
    public static final java.lang.String RESPONSE_INAPP_SIGNATURE_LIST
    public static final java.lang.String INAPP_CONTINUATION_TOKEN
    public static final java.lang.String ITEM_TYPE_INAPP
    public static final java.lang.String ITEM_TYPE_SUBS
    public static final java.lang.String GET_SKU_DETAILS_ITEM_LIST
    public static final java.lang.String GET_SKU_DETAILS_ITEM_TYPE_LIST
    171:173:public void enableDebugLogging(boolean,java.lang.String)
    294:294:public boolean subscriptionsSupported()
    324:325:public void launchPurchaseFlow(android.app.Activity,java.lang.String,int,com.mazalearn.scienceengine.billing.IabHelper$OnIabPurchaseFinishedListener)
    329:330:public void launchPurchaseFlow(android.app.Activity,java.lang.String,int,com.mazalearn.scienceengine.billing.IabHelper$OnIabPurchaseFinishedListener,java.lang.String)
    334:335:public void launchSubscriptionPurchaseFlow(android.app.Activity,java.lang.String,int,com.mazalearn.scienceengine.billing.IabHelper$OnIabPurchaseFinishedListener)
    339:340:public void launchSubscriptionPurchaseFlow(android.app.Activity,java.lang.String,int,com.mazalearn.scienceengine.billing.IabHelper$OnIabPurchaseFinishedListener,java.lang.String)
    621:622:public void queryInventoryAsync(com.mazalearn.scienceengine.billing.IabHelper$QueryInventoryFinishedListener)
    639:668:void consume(com.mazalearn.scienceengine.billing.Purchase)
    706:710:public void consumeAsync(com.mazalearn.scienceengine.billing.Purchase,com.mazalearn.scienceengine.billing.IabHelper$OnConsumeFinishedListener)
    718:720:public void consumeAsync(java.util.List,com.mazalearn.scienceengine.billing.IabHelper$OnConsumeMultiFinishedListener)
    919:951:void consumeAsyncInternal(java.util.List,com.mazalearn.scienceengine.billing.IabHelper$OnConsumeFinishedListener,com.mazalearn.scienceengine.billing.IabHelper$OnConsumeMultiFinishedListener)
com.mazalearn.scienceengine.billing.IabHelper$3
com.mazalearn.scienceengine.billing.IabHelper$3$1
com.mazalearn.scienceengine.billing.IabHelper$3$2
com.mazalearn.scienceengine.billing.IabHelper$OnConsumeFinishedListener
com.mazalearn.scienceengine.billing.IabHelper$OnConsumeMultiFinishedListener
com.mazalearn.scienceengine.billing.Inventory:
    41:41:public com.mazalearn.scienceengine.billing.Purchase getPurchase(java.lang.String)
    46:46:public boolean hasPurchase(java.lang.String)
    51:51:public boolean hasDetails(java.lang.String)
    63:64:public void erasePurchase(java.lang.String)
    82:82:java.util.List getAllPurchases()
com.mazalearn.scienceengine.billing.Security:
    private static final java.lang.String TAG
    private static final java.lang.String KEY_FACTORY_ALGORITHM
    private static final java.lang.String SIGNATURE_ALGORITHM
    36:36:public Security()
    65:65:public static java.lang.String getSharedSecret()
com.mazalearn.scienceengine.billing.Security$Logger:
    51:51:public void i(java.lang.String,java.lang.String)
com.mazalearn.scienceengine.core.controller.AbstractModelConfig:
    32:33:public AbstractModelConfig(com.mazalearn.scienceengine.core.model.Science2DBody,com.mazalearn.scienceengine.core.model.IParameter,java.lang.String)
com.mazalearn.scienceengine.core.controller.AbstractScience2DController:
    105:105:public com.badlogic.gdx.scenes.scene2d.ui.Skin getSkin()
com.mazalearn.scienceengine.core.controller.CheckBoxControl
com.mazalearn.scienceengine.core.controller.CheckBoxControl$1
com.mazalearn.scienceengine.core.controller.CommandButtonControl:
    23:24:public CommandButtonControl(com.mazalearn.scienceengine.core.controller.IModelConfig,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.mazalearn.scienceengine.core.controller.IScience2DController:
    public abstract com.badlogic.gdx.scenes.scene2d.ui.Skin getSkin()
com.mazalearn.scienceengine.core.controller.RadioControl
com.mazalearn.scienceengine.core.controller.RadioControl$1
com.mazalearn.scienceengine.core.controller.SliderControl:
    private static final float DELTA
com.mazalearn.scienceengine.core.controller.ToggleButtonControl:
    22:23:public ToggleButtonControl(com.mazalearn.scienceengine.core.controller.IModelConfig,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.mazalearn.scienceengine.core.lang.Event:
    22:24:public Event(java.lang.String,java.lang.String,java.lang.String)
    27:29:public Event(java.lang.String,java.lang.String,boolean)
    58:63:public java.lang.String svalue()
    67:72:public boolean bvalue()
    76:76:public float getTime()
com.mazalearn.scienceengine.core.lang.Example
com.mazalearn.scienceengine.core.lang.Expr:
    public static final int ADD
    public static final int SUB
    public static final int MUL
    public static final int DIV
    public static final int POW
    public static final int ATAN2
    public static final int MAX
    public static final int MIN
    public static final int LT
    public static final int LE
    public static final int EQ
    public static final int NE
    public static final int GE
    public static final int GT
    public static final int AND
    public static final int OR
    public static final int ABS
    public static final int ACOS
    public static final int ASIN
    public static final int ATAN
    public static final int CEIL
    public static final int COS
    public static final int EXP
    public static final int FLOOR
    public static final int LOG
    public static final int NEG
    public static final int ROUND
    public static final int SIN
    public static final int SQRT
    public static final int TAN
    public static final int NOT
    public static final int FUNCTION
com.mazalearn.scienceengine.core.lang.Parser:
    private static final java.lang.String operatorChars
    71:71:static com.mazalearn.scienceengine.core.lang.Expr parse(java.lang.String)
    88:94:public void allow(com.mazalearn.scienceengine.core.lang.Variable)
    317:317:boolean tryCorrections()
    321:341:private boolean tryInsertions()
    345:358:private boolean tryDeletions()
    362:377:private boolean trySubstitutions()
    382:406:private com.mazalearn.scienceengine.core.lang.Token[] possibleInsertions(com.mazalearn.scienceengine.core.lang.Token)
    410:410:private com.mazalearn.scienceengine.core.lang.Token[] possibleSubstitutions(com.mazalearn.scienceengine.core.lang.Token)
com.mazalearn.scienceengine.core.lang.RegressionTest
com.mazalearn.scienceengine.core.lang.RegressionTest$1
com.mazalearn.scienceengine.core.lang.RegressionTest$2
com.mazalearn.scienceengine.core.lang.RegressionTest$3
com.mazalearn.scienceengine.core.lang.Scanner:
    27:27:public java.lang.String getInput()
    61:61:public boolean isEmpty()
    65:65:public boolean atStart()
com.mazalearn.scienceengine.core.lang.SyntaxException:
    public static final int INCOMPLETE
    public static final int BAD_FACTOR
    public static final int PREMATURE_EOF
    public static final int EXPECTED
    public static final int UNKNOWN_VARIABLE
    61:71:public java.lang.String explain()
    83:107:private void explainWhere(java.lang.StringBuffer)
    110:133:private void explainWhy(java.lang.StringBuffer)
    136:142:private void explainWhat(java.lang.StringBuffer)
    145:145:private java.lang.String tryToFix()
    149:152:private void quotify(java.lang.StringBuffer,java.lang.String)
    155:157:private java.lang.String asFarAs()
    161:161:private java.lang.String theToken()
    165:166:private boolean isLegalToken()
com.mazalearn.scienceengine.core.lang.Token:
    public static final int TT_ERROR
    public static final int TT_EOF
    public static final int TT_NUMBER
    public static final int TT_WORD
    public static final int TT_LE
    public static final int TT_NE
    public static final int TT_GE
    public static final int TT_STRING
    39:46:Token(int,double,java.lang.String,com.mazalearn.scienceengine.core.lang.Token)
com.mazalearn.scienceengine.core.model.AbstractScience2DModel:
    private static final java.lang.String NUM_REVOLUTIONS
    private static final java.lang.String ANGLE
    private static final java.lang.String ANGULAR_VELOCITY
    private static final java.lang.String VELOCITY
com.mazalearn.scienceengine.core.model.CoreComponentType:
    14:14:public java.lang.String getLocalizedName()
com.mazalearn.scienceengine.core.model.DummyBody:
    49:54:public void setConfigParameter(com.mazalearn.scienceengine.core.model.IParameter,float)
com.mazalearn.scienceengine.core.model.DummyBody$ProbeConfig:
    28:30:public void setConfigParameter(com.mazalearn.scienceengine.core.model.IParameter)
com.mazalearn.scienceengine.core.model.IBody
com.mazalearn.scienceengine.core.model.IComponentType:
    public abstract java.lang.String getLocalizedName()
com.mazalearn.scienceengine.core.model.IParameter:
    public abstract java.lang.String toString()
com.mazalearn.scienceengine.core.model.Parameter:
    25:30:public static com.mazalearn.scienceengine.core.model.Parameter valueOf(com.mazalearn.scienceengine.core.model.IComponentType)
com.mazalearn.scienceengine.core.model.Science2DBody:
    140:142:public void setPositionAndAngle(float,float,float)
    145:145:public static com.badlogic.gdx.physics.box2d.World getBox2DWorld()
    210:215:public com.mazalearn.scienceengine.core.controller.IModelConfig findConfig(com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter)
    232:232:public com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float)
    237:238:public void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture)
    242:243:public void setTransform(com.badlogic.gdx.math.Vector2,float)
    247:248:public void setTransform(float,float,float)
    252:252:public com.badlogic.gdx.physics.box2d.Transform getTransform()
    276:276:public com.badlogic.gdx.math.Vector2 getLocalCenter()
    311:312:public void applyForce(float,float,float,float)
    316:317:public void applyForceToCenter(com.badlogic.gdx.math.Vector2)
    321:322:public void applyForceToCenter(float,float)
    326:327:public void applyTorque(float)
    331:332:public void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    337:338:public void applyLinearImpulse(float,float,float,float)
    342:343:public void applyAngularImpulse(float)
    347:347:public float getMass()
    352:352:public float getInertia()
    357:357:public com.badlogic.gdx.physics.box2d.MassData getMassData()
    362:363:public void setMassData(com.badlogic.gdx.physics.box2d.MassData)
    367:368:public void resetMassData()
    377:377:public com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2)
    387:387:public com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2)
    392:392:public com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2)
    397:397:public com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2)
    402:402:public float getLinearDamping()
    407:408:public void setLinearDamping(float)
    412:412:public float getAngularDamping()
    432:433:public void setBullet(boolean)
    437:437:public boolean isBullet()
    442:443:public void setSleepingAllowed(boolean)
    447:447:public boolean isSleepingAllowed()
    452:453:public void setAwake(boolean)
    457:457:public boolean isAwake()
    472:473:public void setFixedRotation(boolean)
    477:477:public boolean isFixedRotation()
    482:482:public java.util.ArrayList getFixtureList()
    487:487:public java.util.ArrayList getJointList()
    492:492:public float getGravityScale()
    497:498:public void setGravityScale(float)
    502:502:public com.badlogic.gdx.physics.box2d.World getWorld()
    507:507:public java.lang.Object getUserData()
    512:513:public void setUserData(java.lang.Object)
com.mazalearn.scienceengine.core.view.AbstractScience2DView:
    114:114:public boolean isTutoringInProgress()
com.mazalearn.scienceengine.core.view.AnimateAction:
    12:12:public AnimateAction()
com.mazalearn.scienceengine.core.view.CoachDrawingActor:
    private static final int LINE_WIDTH
    private static final float SCALE
    private static final int WHEEL_DIA
    private static final int COACH_HEIGHT
    private static final int COACH_WIDTH
    private static final int WHEEL_OFFSET
com.mazalearn.scienceengine.core.view.DrawingActor:
    public static final int FACE_HEIGHT
    public static final int FACE_WIDTH
    130:130:public boolean hasChangedSinceSnapshot()
    182:182:public com.mazalearn.scienceengine.core.view.DrawingActor$Face getFace()
com.mazalearn.scienceengine.core.view.Helper
com.mazalearn.scienceengine.core.view.Helper$1
com.mazalearn.scienceengine.core.view.Helper$2
com.mazalearn.scienceengine.core.view.Helper$2$1
com.mazalearn.scienceengine.core.view.IScience2DView:
    public abstract boolean isTutoringInProgress()
    public abstract com.mazalearn.scienceengine.core.view.ViewControls getViewControls()
com.mazalearn.scienceengine.core.view.Parameter
com.mazalearn.scienceengine.core.view.Science2DActor:
    protected static final float TOLERANCE
    float px
    float py
    float pbx
    float pby
    float pa
    210:220:public void debugDraw(com.badlogic.gdx.graphics.g2d.SpriteBatch)
com.mazalearn.scienceengine.core.view.Science2DGestureDetector$Science2DGestureAdapter:
    private static final float TOLERANCE
com.mazalearn.scienceengine.core.view.ViewControls:
    private static final int VIEW_BUTTON_HEIGHT
    private static final int VIEW_BUTTON_WIDTH
com.mazalearn.scienceengine.designer.LevelEditor:
    private static final float THUMBNAIL_SCALE
    480:482:public boolean scrolled(int)
com.mazalearn.scienceengine.designer.PngWriter:
    private static final java.lang.String CONTENT_TYPE
    41:41:public PngWriter()
    52:52:public static java.lang.String getContentType()
com.mazalearn.scienceengine.domains.electromagnetism.model.AbstractMagnet:
    private static final float TOLERANCE
    127:129:protected void scaleSize(float)
com.mazalearn.scienceengine.domains.electromagnetism.model.Ammeter:
    public static final float CURRENT_AMPLITUDE_THRESHOLD
    private static final float MAX_NEEDLE_ANGLE
    private static final float HYSTERESIS
    private static final int SMOOTH
com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet:
    public static final float MAX_STRENGTH
    private static final float GRID_MAGNET_STRENGTH
    private static final float INTERNAL_GRID_SPACING
    private static final float EXTERNAL_NEAR_GRID_SPACING
    private static final float EXTERNAL_FAR_GRID_SPACING
    private static final java.lang.String BX_INTERNAL_RESOURCE_NAME
    private static final java.lang.String BY_INTERNAL_RESOURCE_NAME
    private static final java.lang.String BX_EXTERNAL_NEAR_RESOURCE_NAME
    private static final java.lang.String BY_EXTERNAL_NEAR_RESOURCE_NAME
    private static final java.lang.String BX_EXTERNAL_FAR_RESOURCE_NAME
    private static final java.lang.String BY_EXTERNAL_FAR_RESOURCE_NAME
    private static final float PERIPHERY_SCALE_DOWN
    private static final float MODEL_SCALE
com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet$Grid:
    private static final java.lang.String TOKEN_DELIMITER
com.mazalearn.scienceengine.domains.electromagnetism.model.Charge:
    private static final float MAX_STRENGTH
com.mazalearn.scienceengine.domains.electromagnetism.model.Clamp:
    3:3:public Clamp()
com.mazalearn.scienceengine.domains.electromagnetism.model.Compass:
    49:49:public float getBField()
com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType:
    35:35:public java.lang.String getLocalizedName()
    39:44:public static com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType valueOf(com.mazalearn.scienceengine.core.model.IComponentType)
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil:
    private static final float OUTPUT_SCALE
    128:128:public float getWidth()
    132:132:public float getHeight()
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource:
    private static final float MIN_STEPS_PER_CYCLE
    public static final float DEFAULT_MAX_CURRENT
    private static final float TOLERANCE
com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo:
    private static final float TOLERANCE
    private static final float SCALE_OUTPUT
com.mazalearn.scienceengine.domains.electromagnetism.model.ElectroMagnet:
    private static final float OUTPUT_SCALE
    private static final float TOLERANCE
    private static final int ELECTROMAGNET_LOOPS_MAX
    private static final float MAX_EMF
    public static final float DISPLAY_WIDTH
    public static final float CANONICAL_RADIUS
    private static final float COIL_WIDTH
    240:240:public float getCoilWidth()
com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter:
    private static final float X_SPACE
    private static final float Y_SPACE
    111:111:public float getBField()
com.mazalearn.scienceengine.domains.electromagnetism.model.HorseshoeMagnet:
    private static final float B_FIELD_MAGNITUDE
com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb:
    public static final double CURRENT_AMPLITUDE_THRESHOLD
com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet:
    private static final int CANONICAL_WIDTH
    private static final int CANONICAL_HEIGHT
    private static final int CANONICAL_AREA
    106:106:public float getMaxWidth()
com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$MagnetType:
    private static final float OUTPUT_SCALE
com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField:
    public static final float MAX_STRENGTH
    53:53:public float getStrength()
com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole:
    private static final float MAX_STRENGTH
com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter:
    42:47:public static com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter valueOf(com.mazalearn.scienceengine.core.model.IComponentType)
com.mazalearn.scienceengine.domains.electromagnetism.model.PickupCoil:
    private static final boolean DEBUG_CALIBRATION
    private static final float MIN_PICKUP_LOOP_RADIUS
    private static final int NUM_SAMPLE_POINTS
    private static final float TOLERANCE
    125:125:public com.badlogic.gdx.math.Vector2[] getSamplePoints()
    139:145:public void setCalibrationEmf(float)
    148:148:public double getCalibrationEmf()
com.mazalearn.scienceengine.domains.electromagnetism.model.Wire:
    private static final int OUTPUT_SCALE
    86:86:public com.badlogic.gdx.math.Vector2 getBForce()
com.mazalearn.scienceengine.domains.electromagnetism.tutor.TutorType:
    26:26:public java.lang.String getLocalizedName()
com.mazalearn.scienceengine.domains.electromagnetism.view.ChargeActor:
    protected static final float SCALE
com.mazalearn.scienceengine.domains.electromagnetism.view.CircuitActor:
    public static final java.lang.String COMPONENT_TYPE
    private static final int WIRE_WIDTH
com.mazalearn.scienceengine.domains.electromagnetism.view.CurrentCoilActor:
    private static final int NUM_FRAMES
com.mazalearn.scienceengine.domains.electromagnetism.view.DynamoActor:
    private static final int NUM_FRAMES
    private static final float COIL_OFFSET_PERCENT
com.mazalearn.scienceengine.domains.mechanics.model.ComponentType
com.mazalearn.scienceengine.domains.mechanics.model.Parameter
com.mazalearn.scienceengine.domains.mechanics.model.SimpleBody
com.mazalearn.scienceengine.domains.mechanics.view.SimpleBodyActor
com.mazalearn.scienceengine.domains.mechanics.view.SimpleBodyActor$1
com.mazalearn.scienceengine.domains.statesofmatter.StatesOfMatterController:
    private static final int N
    com.mazalearn.scienceengine.core.view.ModelControls modelControls
com.mazalearn.scienceengine.domains.statesofmatter.StatesOfMatterModel:
    private static final int BOX_HEIGHT
    private static final int BOX_WIDTH
com.mazalearn.scienceengine.domains.statesofmatter.model.AbstractMoleculeBox:
    protected static final double WALL_STIFFNESS
    protected static final double GRAVITY
    protected static final double WALL_DISTANCE_THRESHOLD
    protected static final double MIN_DISTANCE
    protected static final double MIN_DISTANCE_SQUARED
    110:110:public double getEnergy()
    138:138:protected double getGravity()
    182:197:protected double computeElasticWallForce(com.mazalearn.scienceengine.domains.statesofmatter.model.Molecule)
com.mazalearn.scienceengine.domains.statesofmatter.model.Cell
com.mazalearn.scienceengine.domains.statesofmatter.model.CellularLJMoleculeBox
com.mazalearn.scienceengine.domains.statesofmatter.model.ComponentType:
    11:11:public java.lang.String getLocalizedName()
    15:20:public static com.mazalearn.scienceengine.domains.statesofmatter.model.ComponentType valueOf(com.mazalearn.scienceengine.core.model.IComponentType)
com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox:
    public abstract void reset()
    public abstract double getEnergy()
    public abstract void setTemperature(double)
    public abstract void setHeatingLevel(com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$HeatingLevel)
com.mazalearn.scienceengine.domains.statesofmatter.model.LJMoleculeBox:
    protected static final double LJ_CUTOFF
    protected static final double LJ_CUTOFF_SQUARED
    protected static final double LJ_CUTOFF_CORRECTION
com.mazalearn.scienceengine.domains.statesofmatter.model.Molecule:
    public com.mazalearn.scienceengine.domains.statesofmatter.model.Molecule nextMoleculeInCell
com.mazalearn.scienceengine.domains.statesofmatter.model.Parameter:
    19:24:public static com.mazalearn.scienceengine.domains.statesofmatter.model.Parameter valueOf(com.mazalearn.scienceengine.core.model.IComponentType)
com.mazalearn.scienceengine.domains.statesofmatter.model.SimpleMoleculeBox
com.mazalearn.scienceengine.domains.statesofmatter.view.MoleculeBoxActor:
    91:94:public void dispose()
com.mazalearn.scienceengine.domains.waves.WaveController:
    private static final int NUM_BALLS
    private static final float ORIGIN_Y
    private static final float ORIGIN_X
com.mazalearn.scienceengine.domains.waves.WaveView:
    private static final float ORIGIN_X
com.mazalearn.scienceengine.domains.waves.model.ComponentType:
    12:12:public java.lang.String getLocalizedName()
    16:21:public static com.mazalearn.scienceengine.domains.waves.model.ComponentType valueOf(com.mazalearn.scienceengine.core.model.IComponentType)
com.mazalearn.scienceengine.domains.waves.model.Parameter:
    24:29:public static com.mazalearn.scienceengine.domains.waves.model.Parameter valueOf(com.mazalearn.scienceengine.core.model.IComponentType)
com.mazalearn.scienceengine.domains.waves.model.WaveBox:
    private static final float MASS
    private static final float ALPHA_SQUARE
    public static final float BALL_DIAMETER
com.mazalearn.scienceengine.tutor.AbstractScience2DProber:
    protected static final float TOLERANCE
    protected static final float ZERO_TOLERANCE
com.mazalearn.scienceengine.tutor.Guru:
    public static final java.lang.String ID
    public static final java.lang.String ROOT_ID
    67:67:public com.mazalearn.scienceengine.tutor.ITutor getActiveTutor()
    151:151:public com.badlogic.gdx.scenes.scene2d.ui.Skin getSkin()
com.mazalearn.scienceengine.tutor.Hinter:
    private static final int TIME_GAP_BETWEEN_HINTS
    68:68:public boolean hasHint()
com.mazalearn.scienceengine.tutor.ITutor:
    public static final int NUM_ATTEMPTS
    public static final int NUM_SUCCESSES
    public static final int PERCENT_PROGRESS
    public static final int TIME_SPENT
    public static final int FAILURE_TRACKER
    public static final int POINTS
    public static final int NUM_STATS
com.mazalearn.scienceengine.tutor.KnowledgeUnit:
    46:46:public java.lang.String getWhen()
com.mazalearn.scienceengine.tutor.McqActor:
    private static final int MAX_OPTIONS
com.mazalearn.scienceengine.tutor.TimeTracker:
    33:33:public float getActiveTime()
com.mazalearn.scienceengine.tutor.TutorGroup:
    private static final int RAPID_FIRE_MAX
    private static final int REVIEWER_MAX
com.mazalearn.scienceengine.tutor.TutorNavigator:
    private static final float TUTOR_WIDTH
    private static final float TUTOR_HEIGHT
com.mazalearn.scienceengine.tutor.TutorType:
    33:33:public java.lang.String getLocalizedName()
com.mazalearn.scienceengine.tutor.Utils:
    7:7:public Utils()
