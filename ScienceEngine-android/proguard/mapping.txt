android.annotation.SuppressLint -> a.a.a:
    java.lang.String[] value() -> a
android.annotation.TargetApi -> a.a.b:
    int value() -> a
com.android.vending.billing.IInAppBillingService -> com.android.vending.billing.IInAppBillingService:
    int isBillingSupported(int,java.lang.String,java.lang.String) -> a
    android.os.Bundle getSkuDetails(int,java.lang.String,java.lang.String,android.os.Bundle) -> a
    android.os.Bundle getBuyIntent(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    android.os.Bundle getPurchases(int,java.lang.String,java.lang.String,java.lang.String) -> a
    int consumePurchase(int,java.lang.String,java.lang.String) -> b
com.android.vending.billing.IInAppBillingService$Stub -> com.android.vending.billing.IInAppBillingService$Stub:
    java.lang.String DESCRIPTOR -> f
    int TRANSACTION_isBillingSupported -> a
    int TRANSACTION_getSkuDetails -> b
    int TRANSACTION_getBuyIntent -> c
    int TRANSACTION_getPurchases -> d
    int TRANSACTION_consumePurchase -> e
    47:54:com.android.vending.billing.IInAppBillingService asInterface(android.os.IBinder) -> a
    58:58:android.os.IBinder asBinder() -> asBinder
    62:171:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.android.vending.billing.IInAppBillingService$Stub$Proxy -> com.android.vending.billing.IInAppBillingService$Stub$Proxy:
    android.os.IBinder mRemote -> a
    182:182:android.os.IBinder asBinder() -> asBinder
    186:186:java.lang.String getInterfaceDescriptor() -> a
    199:215:int isBillingSupported(int,java.lang.String,java.lang.String) -> a
    235:263:android.os.Bundle getSkuDetails(int,java.lang.String,java.lang.String,android.os.Bundle) -> a
    297:320:android.os.Bundle getBuyIntent(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    348:370:android.os.Bundle getPurchases(int,java.lang.String,java.lang.String,java.lang.String) -> a
    383:399:int consumePurchase(int,java.lang.String,java.lang.String) -> b
com.badlogic.gdx.Application -> com.badlogic.gdx.Application:
    int LOG_NONE -> a
    int LOG_DEBUG -> b
    int LOG_INFO -> c
    int LOG_ERROR -> d
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Net getNet() -> getNet
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void setLogLevel(int) -> setLogLevel
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void exit() -> exit
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.Application$ApplicationType -> com.badlogic.gdx.Application$ApplicationType:
    com.badlogic.gdx.Application$ApplicationType Android -> a
    com.badlogic.gdx.Application$ApplicationType Desktop -> b
    com.badlogic.gdx.Application$ApplicationType Applet -> c
    com.badlogic.gdx.Application$ApplicationType WebGL -> d
    com.badlogic.gdx.Application$ApplicationType iOS -> e
    com.badlogic.gdx.Application$ApplicationType[] $VALUES -> f
    95:95:com.badlogic.gdx.Application$ApplicationType[] values() -> values
    95:95:com.badlogic.gdx.Application$ApplicationType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.ApplicationAdapter -> com.badlogic.gdx.ApplicationAdapter:
    24:24:void create() -> a
    28:28:void resize(int,int) -> a
    32:32:void render() -> b
    36:36:void pause() -> c
    40:40:void resume() -> d
    44:44:void dispose() -> e
com.badlogic.gdx.ApplicationListener -> com.badlogic.gdx.ApplicationListener:
    void create() -> a
    void resize(int,int) -> a
    void render() -> b
    void pause() -> c
    void resume() -> d
    void dispose() -> e
com.badlogic.gdx.Audio -> com.badlogic.gdx.Audio:
    com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
com.badlogic.gdx.Files -> com.badlogic.gdx.Files:
    com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
    boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    java.lang.String getLocalStoragePath() -> getLocalStoragePath
    boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.Files$FileType -> com.badlogic.gdx.Files$FileType:
    com.badlogic.gdx.Files$FileType Classpath -> a
    com.badlogic.gdx.Files$FileType Internal -> b
    com.badlogic.gdx.Files$FileType External -> c
    com.badlogic.gdx.Files$FileType Absolute -> d
    com.badlogic.gdx.Files$FileType Local -> e
    com.badlogic.gdx.Files$FileType[] $VALUES -> f
    29:29:com.badlogic.gdx.Files$FileType[] values() -> values
    29:29:com.badlogic.gdx.Files$FileType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Game -> com.badlogic.gdx.Game:
    com.badlogic.gdx.Screen screen -> a
    31:32:void dispose() -> e
    36:37:void pause() -> c
    41:42:void resume() -> d
    46:47:void render() -> b
    51:52:void resize(int,int) -> a
    59:65:void setScreen(com.badlogic.gdx.Screen) -> a
    69:69:com.badlogic.gdx.Screen getScreen() -> f
com.badlogic.gdx.Gdx -> com.badlogic.gdx.Gdx:
    com.badlogic.gdx.Application app -> a
    com.badlogic.gdx.Graphics graphics -> b
    com.badlogic.gdx.Audio audio -> c
    com.badlogic.gdx.Input input -> d
    com.badlogic.gdx.Files files -> e
    com.badlogic.gdx.Net net -> f
    com.badlogic.gdx.graphics.GLCommon gl -> g
    com.badlogic.gdx.graphics.GL10 gl10 -> h
    com.badlogic.gdx.graphics.GL11 gl11 -> i
    com.badlogic.gdx.graphics.GL20 gl20 -> j
    com.badlogic.gdx.graphics.GLU glu -> k
com.badlogic.gdx.Graphics -> com.badlogic.gdx.Graphics:
    boolean isGL11Available() -> isGL11Available
    boolean isGL20Available() -> isGL20Available
    com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    com.badlogic.gdx.graphics.GLU getGLU() -> getGLU
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    int getFramesPerSecond() -> getFramesPerSecond
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    void setVSync(boolean) -> setVSync
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.Graphics$BufferFormat -> com.badlogic.gdx.Graphics$BufferFormat:
    int r -> a
    int g -> b
    int b -> c
    int a -> d
    int depth -> e
    int stencil -> f
    int samples -> g
    boolean coverageSampling -> h
    111:111:java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$DisplayMode -> com.badlogic.gdx.Graphics$DisplayMode:
    int width -> width
    int height -> height
    int refreshRate -> refreshRate
    int bitsPerPixel -> bitsPerPixel
    84:84:java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$GraphicsType -> com.badlogic.gdx.Graphics$GraphicsType:
    com.badlogic.gdx.Graphics$GraphicsType AndroidGL -> a
    com.badlogic.gdx.Graphics$GraphicsType LWJGL -> b
    com.badlogic.gdx.Graphics$GraphicsType Angle -> c
    com.badlogic.gdx.Graphics$GraphicsType WebGL -> d
    com.badlogic.gdx.Graphics$GraphicsType iOSGL -> e
    com.badlogic.gdx.Graphics$GraphicsType[] $VALUES -> f
    63:63:com.badlogic.gdx.Graphics$GraphicsType[] values() -> values
    63:63:com.badlogic.gdx.Graphics$GraphicsType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.HttpParametersUtils -> com.badlogic.gdx.HttpParametersUtils:
    java.lang.String defaultEncoding -> a
    java.lang.String nameValueSeparator -> b
    java.lang.String parameterSeparator -> c
    22:31:java.lang.String convertHttpParameters(java.util.Map) -> a
    36:38:java.lang.String encode(java.lang.String,java.lang.String) -> a
com.badlogic.gdx.Input -> com.badlogic.gdx.Input:
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    int getX() -> getX
    int getX(int) -> getX
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getY() -> getY
    int getY(int) -> getY
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    boolean isTouched() -> isTouched
    boolean justTouched() -> justTouched
    boolean isTouched(int) -> isTouched
    boolean isButtonPressed(int) -> isButtonPressed
    boolean isKeyPressed(int) -> isKeyPressed
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void getRotationMatrix(float[]) -> getRotationMatrix
    long getCurrentEventTime() -> getCurrentEventTime
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    void setCursorPosition(int,int) -> setCursorPosition
com.badlogic.gdx.Input$Buttons -> com.badlogic.gdx.Input$Buttons:
    int LEFT -> a
    int RIGHT -> b
    int MIDDLE -> c
com.badlogic.gdx.Input$Keys -> com.badlogic.gdx.Input$Keys:
    int ANY_KEY -> a
    int NUM_0 -> b
    int NUM_1 -> c
    int NUM_2 -> d
    int NUM_3 -> e
    int NUM_4 -> f
    int NUM_5 -> g
    int NUM_6 -> h
    int NUM_7 -> i
    int NUM_8 -> j
    int NUM_9 -> k
    int A -> l
    int ALT_LEFT -> m
    int ALT_RIGHT -> n
    int APOSTROPHE -> o
    int AT -> p
    int B -> q
    int BACK -> r
    int BACKSLASH -> s
    int C -> t
    int CALL -> u
    int CAMERA -> v
    int CLEAR -> w
    int COMMA -> x
    int D -> y
    int DEL -> z
    int BACKSPACE -> A
    int FORWARD_DEL -> B
    int DPAD_CENTER -> C
    int DPAD_DOWN -> D
    int DPAD_LEFT -> E
    int DPAD_RIGHT -> F
    int DPAD_UP -> G
    int CENTER -> H
    int DOWN -> I
    int LEFT -> J
    int RIGHT -> K
    int UP -> L
    int E -> M
    int ENDCALL -> N
    int ENTER -> O
    int ENVELOPE -> P
    int EQUALS -> Q
    int EXPLORER -> R
    int F -> S
    int FOCUS -> T
    int G -> U
    int GRAVE -> V
    int H -> W
    int HEADSETHOOK -> X
    int HOME -> Y
    int I -> Z
    int J -> aa
    int K -> ab
    int L -> ac
    int LEFT_BRACKET -> ad
    int M -> ae
    int MEDIA_FAST_FORWARD -> af
    int MEDIA_NEXT -> ag
    int MEDIA_PLAY_PAUSE -> ah
    int MEDIA_PREVIOUS -> ai
    int MEDIA_REWIND -> aj
    int MEDIA_STOP -> ak
    int MENU -> al
    int MINUS -> am
    int MUTE -> an
    int N -> ao
    int NOTIFICATION -> ap
    int NUM -> aq
    int O -> ar
    int P -> as
    int PERIOD -> at
    int PLUS -> au
    int POUND -> av
    int POWER -> aw
    int Q -> ax
    int R -> ay
    int RIGHT_BRACKET -> az
    int S -> aA
    int SEARCH -> aB
    int SEMICOLON -> aC
    int SHIFT_LEFT -> aD
    int SHIFT_RIGHT -> aE
    int SLASH -> aF
    int SOFT_LEFT -> aG
    int SOFT_RIGHT -> aH
    int SPACE -> aI
    int STAR -> aJ
    int SYM -> aK
    int T -> aL
    int TAB -> aM
    int U -> aN
    int UNKNOWN -> aO
    int V -> aP
    int VOLUME_DOWN -> aQ
    int VOLUME_UP -> aR
    int W -> aS
    int X -> aT
    int Y -> aU
    int Z -> aV
    int META_ALT_LEFT_ON -> aW
    int META_ALT_ON -> aX
    int META_ALT_RIGHT_ON -> aY
    int META_SHIFT_LEFT_ON -> aZ
    int META_SHIFT_ON -> ba
    int META_SHIFT_RIGHT_ON -> bb
    int META_SYM_ON -> bc
    int CONTROL_LEFT -> bd
    int CONTROL_RIGHT -> be
    int ESCAPE -> bf
    int END -> bg
    int INSERT -> bh
    int PAGE_UP -> bi
    int PAGE_DOWN -> bj
    int PICTSYMBOLS -> bk
    int SWITCH_CHARSET -> bl
    int BUTTON_CIRCLE -> bm
    int BUTTON_A -> bn
    int BUTTON_B -> bo
    int BUTTON_C -> bp
    int BUTTON_X -> bq
    int BUTTON_Y -> br
    int BUTTON_Z -> bs
    int BUTTON_L1 -> bt
    int BUTTON_R1 -> bu
    int BUTTON_L2 -> bv
    int BUTTON_R2 -> bw
    int BUTTON_THUMBL -> bx
    int BUTTON_THUMBR -> by
    int BUTTON_START -> bz
    int BUTTON_SELECT -> bA
    int BUTTON_MODE -> bB
    int COLON -> bC
    int F1 -> bD
    int F2 -> bE
    int F3 -> bF
    int F4 -> bG
    int F5 -> bH
    int F6 -> bI
    int F7 -> bJ
    int F8 -> bK
    int F9 -> bL
    int F10 -> bM
    int F11 -> bN
    int F12 -> bO
com.badlogic.gdx.Input$Orientation -> com.badlogic.gdx.Input$Orientation:
    com.badlogic.gdx.Input$Orientation Landscape -> a
    com.badlogic.gdx.Input$Orientation Portrait -> b
    com.badlogic.gdx.Input$Orientation[] $VALUES -> c
    411:411:com.badlogic.gdx.Input$Orientation[] values() -> values
    411:411:com.badlogic.gdx.Input$Orientation valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$Peripheral -> com.badlogic.gdx.Input$Peripheral:
    com.badlogic.gdx.Input$Peripheral HardwareKeyboard -> a
    com.badlogic.gdx.Input$Peripheral OnscreenKeyboard -> b
    com.badlogic.gdx.Input$Peripheral MultitouchScreen -> c
    com.badlogic.gdx.Input$Peripheral Accelerometer -> d
    com.badlogic.gdx.Input$Peripheral Compass -> e
    com.badlogic.gdx.Input$Peripheral Vibrator -> f
    com.badlogic.gdx.Input$Peripheral[] $VALUES -> g
    230:230:com.badlogic.gdx.Input$Peripheral[] values() -> values
    230:230:com.badlogic.gdx.Input$Peripheral valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$TextInputListener -> com.badlogic.gdx.Input$TextInputListener:
    void input(java.lang.String) -> a
    void canceled() -> a
com.badlogic.gdx.InputAdapter -> com.badlogic.gdx.InputAdapter:
    24:24:boolean keyDown(int) -> a
    28:28:boolean keyUp(int) -> b
    32:32:boolean keyTyped(char) -> a
    36:36:boolean touchDown(int,int,int,int) -> a
    40:40:boolean touchUp(int,int,int,int) -> b
    44:44:boolean touchDragged(int,int,int) -> a
    49:49:boolean mouseMoved(int,int) -> a
    54:54:boolean scrolled(int) -> c
com.badlogic.gdx.InputMultiplexer -> com.badlogic.gdx.InputMultiplexer:
    com.badlogic.gdx.utils.Array processors -> a
    36:37:void addProcessor(int,com.badlogic.gdx.InputProcessor) -> a
    40:41:void removeProcessor(int) -> d
    44:45:void addProcessor(com.badlogic.gdx.InputProcessor) -> a
    48:49:void removeProcessor(com.badlogic.gdx.InputProcessor) -> b
    53:53:int size() -> a
    57:58:void clear() -> b
    61:62:void setProcessors(com.badlogic.gdx.utils.Array) -> a
    65:65:com.badlogic.gdx.utils.Array getProcessors() -> c
    69:71:boolean keyDown(int) -> a
    75:77:boolean keyUp(int) -> b
    81:83:boolean keyTyped(char) -> a
    87:89:boolean touchDown(int,int,int,int) -> a
    93:95:boolean touchUp(int,int,int,int) -> b
    99:101:boolean touchDragged(int,int,int) -> a
    106:108:boolean mouseMoved(int,int) -> a
    113:115:boolean scrolled(int) -> c
com.badlogic.gdx.InputProcessor -> com.badlogic.gdx.InputProcessor:
    boolean keyDown(int) -> a
    boolean keyUp(int) -> b
    boolean keyTyped(char) -> a
    boolean touchDown(int,int,int,int) -> a
    boolean touchUp(int,int,int,int) -> b
    boolean touchDragged(int,int,int) -> a
    boolean mouseMoved(int,int) -> a
    boolean scrolled(int) -> c
com.badlogic.gdx.LifecycleListener -> com.badlogic.gdx.LifecycleListener:
    void pause() -> a
    void resume() -> b
    void dispose() -> c
com.badlogic.gdx.Net -> com.badlogic.gdx.Net:
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints) -> newServerSocket
    com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints) -> newClientSocket
    void openURI(java.lang.String) -> openURI
com.badlogic.gdx.Net$HttpMethods -> com.badlogic.gdx.Net$HttpMethods:
    java.lang.String GET -> a
    java.lang.String POST -> b
com.badlogic.gdx.Net$HttpRequest -> com.badlogic.gdx.Net$HttpRequest:
    java.lang.String httpMethod -> a
    java.lang.String url -> b
    java.util.Map headers -> c
    int timeOut -> d
    java.lang.String content -> e
    java.io.InputStream contentStream -> f
    long contentLength -> g
    162:163:void setUrl(java.lang.String) -> a
    170:171:void setHeader(java.lang.String,java.lang.String) -> a
    178:179:void setContent(java.lang.String) -> b
    184:186:void setContent(java.io.InputStream,long) -> a
    192:193:void setTimeOut(int) -> a
    198:198:int getTimeOut() -> a
    203:203:java.lang.String getMethod() -> b
    208:208:java.lang.String getUrl() -> c
    213:213:java.lang.String getContent() -> d
    218:218:java.io.InputStream getContentStream() -> e
    223:223:long getContentLength() -> g
    228:228:java.util.Map getHeaders() -> f
com.badlogic.gdx.Net$HttpResponse -> com.badlogic.gdx.Net$HttpResponse:
    byte[] getResult() -> a
    java.lang.String getResultAsString() -> b
    java.io.InputStream getResultAsStream() -> c
    com.badlogic.gdx.Net$HttpStatus getStatus() -> d
com.badlogic.gdx.Net$HttpResponseListener -> com.badlogic.gdx.Net$HttpResponseListener:
    void handleHttpResponse$49dcdf80() -> a
    void failed$786b7c60() -> b
com.badlogic.gdx.Net$HttpStatus -> com.badlogic.gdx.Net$HttpStatus:
    int statusCode -> a
    67:67:int getStatusCode() -> a
com.badlogic.gdx.Net$Protocol -> com.badlogic.gdx.Net$Protocol:
    com.badlogic.gdx.Net$Protocol TCP -> a
    com.badlogic.gdx.Net$Protocol[] $VALUES -> b
    274:274:com.badlogic.gdx.Net$Protocol[] values() -> values
    274:274:com.badlogic.gdx.Net$Protocol valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Preferences -> com.badlogic.gdx.Preferences:
    void putBoolean(java.lang.String,boolean) -> putBoolean
    void putInteger(java.lang.String,int) -> putInteger
    void putLong(java.lang.String,long) -> putLong
    void putFloat(java.lang.String,float) -> putFloat
    void putString(java.lang.String,java.lang.String) -> putString
    void put(java.util.Map) -> put
    boolean getBoolean(java.lang.String) -> getBoolean
    int getInteger(java.lang.String) -> getInteger
    long getLong(java.lang.String) -> getLong
    float getFloat(java.lang.String) -> getFloat
    java.lang.String getString(java.lang.String) -> getString
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInteger(java.lang.String,int) -> getInteger
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Map get() -> get
    boolean contains(java.lang.String) -> contains
    void clear() -> clear
    void remove(java.lang.String) -> remove
    void flush() -> flush
com.badlogic.gdx.Screen -> com.badlogic.gdx.Screen:
    void render(float) -> a
    void resize(int,int) -> a
    void show() -> a
    void hide() -> b
    void pause() -> c
    void resume() -> d
    void dispose() -> e
com.badlogic.gdx.StreamUtils -> com.badlogic.gdx.StreamUtils:
    20:21:void copyStream(java.io.InputStream,java.io.OutputStream) -> a
    26:31:void copyStream$1ade3353(java.io.InputStream,java.io.OutputStream) -> b
com.badlogic.gdx.Version -> com.badlogic.gdx.Version:
    java.lang.String VERSION -> a
com.badlogic.gdx.assets.AssetDescriptor -> com.badlogic.gdx.assets.AssetDescriptor:
    java.lang.String fileName -> a
    java.lang.Class type -> b
    com.badlogic.gdx.assets.AssetLoaderParameters params -> c
    39:43:java.lang.String toString() -> toString
com.badlogic.gdx.assets.AssetErrorListener -> com.badlogic.gdx.assets.AssetErrorListener:
    void error$6a21af97() -> a
com.badlogic.gdx.assets.AssetLoaderParameters -> com.badlogic.gdx.assets.AssetLoaderParameters:
    com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback loadedCallback -> a
com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback -> com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback:
    void finishedLoading$190c2c84(com.badlogic.gdx.assets.AssetManager,java.lang.String) -> a
com.badlogic.gdx.assets.AssetLoadingTask -> com.badlogic.gdx.assets.AssetLoadingTask:
    com.badlogic.gdx.assets.AssetManager manager -> a
    com.badlogic.gdx.assets.AssetDescriptor assetDesc -> b
    com.badlogic.gdx.assets.loaders.AssetLoader loader -> c
    java.util.concurrent.ExecutorService threadPool -> d
    long startTime -> e
    boolean asyncDone -> f
    boolean dependenciesLoaded -> g
    com.badlogic.gdx.utils.Array dependencies -> h
    java.util.concurrent.Future depsFuture -> i
    java.util.concurrent.Future loadFuture -> j
    java.lang.Object asset -> k
    int ticks -> l
    boolean cancel -> m
    65:80:java.lang.Void call() -> c
    90:96:boolean update() -> a
    100:114:void handleSyncLoader() -> d
    117:150:void handleAsyncLoader() -> e
    153:153:java.lang.Object getAsset() -> b
    36:36:java.lang.Object call() -> call
com.badlogic.gdx.assets.AssetManager -> com.badlogic.gdx.assets.AssetManager:
    com.badlogic.gdx.utils.ObjectMap assets -> a
    com.badlogic.gdx.utils.ObjectMap assetTypes -> b
    com.badlogic.gdx.utils.ObjectMap assetDependencies -> c
    com.badlogic.gdx.utils.ObjectMap loaders -> d
    com.badlogic.gdx.utils.Array loadQueue -> e
    java.util.concurrent.ExecutorService threadPool -> f
    java.util.Stack tasks -> g
    com.badlogic.gdx.assets.AssetErrorListener listener -> h
    int loaded -> i
    int toLoad -> j
    com.badlogic.gdx.utils.Logger log -> k
    102:109:java.lang.Object get(java.lang.String) -> d
    116:122:java.lang.Object get(java.lang.String,java.lang.Class) -> a
    129:185:void unload(java.lang.String) -> a
    190:196:boolean containsAsset(java.lang.Object) -> b
    202:209:java.lang.String getAssetFileName(java.lang.Object) -> a
    215:216:boolean isLoaded(java.lang.String) -> b
    222:226:boolean isLoaded(java.lang.String,java.lang.Class) -> c
    233:234:void load(java.lang.String,java.lang.Class) -> b
    241:279:void load(java.lang.String,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    284:285:void load(com.badlogic.gdx.assets.AssetDescriptor) -> a
    290:300:void disposeDependencies(java.lang.String) -> e
    306:317:boolean update() -> a
    326:331:boolean update(int) -> a
    336:340:void finishLoading() -> b
    344:364:void injectDependency(java.lang.String,com.badlogic.gdx.assets.AssetDescriptor) -> a
    369:384:void nextTask() -> e
    389:392:void addTask(com.badlogic.gdx.assets.AssetDescriptor) -> b
    397:430:boolean updateTask() -> f
    435:444:void incrementRefCountedDependencies(java.lang.String) -> f
    449:471:void handleTaskError(java.lang.Throwable) -> a
    479:483:void setLoader(java.lang.Class,com.badlogic.gdx.assets.loaders.AssetLoader) -> a
    487:487:int getLoadedAssets() -> c
    492:492:int getQueuedAssets() -> d
    497:498:float getProgress() -> g
    504:505:void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener) -> a
    509:517:void dispose() -> dispose
    521:559:void clear() -> h
    563:563:com.badlogic.gdx.utils.Logger getLogger() -> i
    569:571:int getReferenceCount(java.lang.String) -> c
    577:580:void setReferenceCount(java.lang.String,int) -> a
    584:608:java.lang.String getDiagnostics() -> j
    613:613:com.badlogic.gdx.utils.Array getAssetNames() -> k
    618:618:com.badlogic.gdx.utils.Array getDependencies(java.lang.String) -> g
    623:623:java.lang.Class getAssetType(java.lang.String) -> h
com.badlogic.gdx.assets.AssetManager$1 -> com.badlogic.gdx.assets.AssetManager$1:
    com.badlogic.gdx.assets.AssetManager this$0 -> a
    92:94:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.badlogic.gdx.assets.RefCountedContainer -> com.badlogic.gdx.assets.RefCountedContainer:
    java.lang.Object object -> a
    int refCount -> b
    29:30:void incRefCount() -> a
    33:34:void decRefCount() -> b
    37:37:int getRefCount() -> c
    41:42:void setRefCount(int) -> a
    45:45:java.lang.Object getObject$659effca() -> d
    49:50:void setObject(java.lang.Object) -> a
com.badlogic.gdx.assets.loaders.AssetLoader -> com.badlogic.gdx.assets.loaders.AssetLoader:
    com.badlogic.gdx.assets.loaders.FileHandleResolver resolver -> a
    42:42:com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader -> com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader:
    void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.BitmapFontLoader -> com.badlogic.gdx.assets.loaders.BitmapFontLoader:
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> a
    43:51:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> a
    56:56:void loadAsync$7f698807() -> a
    60:63:com.badlogic.gdx.graphics.g2d.BitmapFont loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> a
    34:34:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    34:34:void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    34:34:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter -> com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter:
    boolean flip -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter minFitler -> c
    com.badlogic.gdx.graphics.Texture$TextureFilter maxFilter -> d
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData bitmapFontData -> e
com.badlogic.gdx.assets.loaders.FileHandleResolver -> com.badlogic.gdx.assets.loaders.FileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
com.badlogic.gdx.assets.loaders.MusicLoader -> com.badlogic.gdx.assets.loaders.MusicLoader:
    35:35:com.badlogic.gdx.audio.Music load$28f9e48c(java.lang.String) -> b
    40:40:com.badlogic.gdx.utils.Array getDependencies$338dea27() -> a
    28:28:java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    28:28:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter -> com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter:
com.badlogic.gdx.assets.loaders.PixmapLoader -> com.badlogic.gdx.assets.loaders.PixmapLoader:
    com.badlogic.gdx.graphics.Pixmap pixmap -> a
    36:38:void loadAsync$2cb840d9(java.lang.String) -> b
    42:42:com.badlogic.gdx.graphics.Pixmap loadSync$1b9cdff9() -> a
    47:47:com.badlogic.gdx.utils.Array getDependencies$4c58bcf1() -> b
    27:27:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    27:27:void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    27:27:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter -> com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter:
com.badlogic.gdx.assets.loaders.SkinLoader -> com.badlogic.gdx.assets.loaders.SkinLoader:
    39:44:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> a
    49:49:void loadAsync$5ad129a7() -> a
    54:59:com.badlogic.gdx.scenes.scene2d.ui.Skin loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> a
    32:32:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    32:32:void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    32:32:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter -> com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter:
    java.lang.String textureAtlasPath -> b
com.badlogic.gdx.assets.loaders.SoundLoader -> com.badlogic.gdx.assets.loaders.SoundLoader:
    35:35:com.badlogic.gdx.audio.Sound load$73e4a8a(java.lang.String) -> b
    40:40:com.badlogic.gdx.utils.Array getDependencies$4b6001d3() -> a
    28:28:java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    28:28:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter -> com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter:
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader -> com.badlogic.gdx.assets.loaders.SynchronousAssetLoader:
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TextureAtlasLoader -> com.badlogic.gdx.assets.loaders.TextureAtlasLoader:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData data -> a
    43:48:com.badlogic.gdx.graphics.g2d.TextureAtlas load$650c4c2(com.badlogic.gdx.assets.AssetManager) -> a
    53:72:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter) -> a
    34:34:java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    34:34:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter -> com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter:
    boolean flip -> b
com.badlogic.gdx.assets.loaders.TextureLoader -> com.badlogic.gdx.assets.loaders.TextureLoader:
    com.badlogic.gdx.graphics.TextureData data -> a
    com.badlogic.gdx.graphics.Texture texture -> b
    49:76:void loadAsync$3517772d(java.lang.String,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> a
    80:90:com.badlogic.gdx.graphics.Texture loadSync$1c89116b(com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> a
    95:95:com.badlogic.gdx.utils.Array getDependencies$36d95cbb() -> a
    39:39:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    39:39:void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    39:39:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter -> com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter:
    com.badlogic.gdx.graphics.Pixmap$Format format -> b
    boolean genMipMaps -> c
    com.badlogic.gdx.graphics.Texture texture -> d
    com.badlogic.gdx.graphics.TextureData textureData -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> f
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> g
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapU -> h
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapV -> i
com.badlogic.gdx.assets.loaders.TileAtlasLoader -> com.badlogic.gdx.assets.loaders.TileAtlasLoader:
    45:47:void loadAsync$589198f1(java.lang.String,com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter) -> a
    51:53:com.badlogic.gdx.graphics.g2d.tiled.TileAtlas loadSync$5c4c8b04(java.lang.String,com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter) -> b
    58:62:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter) -> c
    28:28:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    28:28:void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    28:28:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter -> com.badlogic.gdx.assets.loaders.TileAtlasLoader$TileAtlasParameter:
    java.lang.String tileMapFile -> b
    java.lang.String inputDirectory -> c
com.badlogic.gdx.assets.loaders.TileMapRendererLoader -> com.badlogic.gdx.assets.loaders.TileMapRendererLoader:
    65:66:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.loaders.TileMapRendererLoader$TileMapParameter) -> a
    71:76:com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer load$2ac3cdcd(java.lang.String,com.badlogic.gdx.assets.loaders.TileMapRendererLoader$TileMapParameter) -> b
    30:30:java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    30:30:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TileMapRendererLoader$TileMapParameter -> com.badlogic.gdx.assets.loaders.TileMapRendererLoader$TileMapParameter:
    java.lang.String imageDirectory -> b
    int tilesPerBlockX -> c
    int tilesPerBlockY -> d
    float unitsPerTileX -> e
    float unitsPerTileY -> f
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver:
    26:26:com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver:
    26:26:com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver -> com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver:
    com.badlogic.gdx.assets.loaders.FileHandleResolver baseResolver -> a
    com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[] descriptors -> b
    46:50:com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> a
    54:54:java.lang.String resolve(com.badlogic.gdx.files.FileHandle,java.lang.String) -> a
    58:76:com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution choose(com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[]) -> a
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution -> com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution:
    int portraitWidth -> a
    int portraitHeight -> b
    java.lang.String suffix -> c
com.badlogic.gdx.audio.AudioDevice -> com.badlogic.gdx.audio.AudioDevice:
    boolean isMono() -> isMono
    void writeSamples(short[],int,int) -> writeSamples
    void writeSamples(float[],int,int) -> writeSamples
    int getLatency() -> getLatency
    void dispose() -> dispose
    void setVolume(float) -> setVolume
com.badlogic.gdx.audio.AudioRecorder -> com.badlogic.gdx.audio.AudioRecorder:
    void read(short[],int,int) -> read
    void dispose() -> dispose
com.badlogic.gdx.audio.Music -> com.badlogic.gdx.audio.Music:
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    boolean isPlaying() -> isPlaying
    void setLooping(boolean) -> setLooping
    boolean isLooping() -> isLooping
    void setVolume(float) -> setVolume
    float getPosition() -> getPosition
    void dispose() -> dispose
com.badlogic.gdx.audio.Sound -> com.badlogic.gdx.audio.Sound:
    long play() -> play
    long play(float) -> play
    long play(float,float,float) -> play
    long loop() -> loop
    long loop(float) -> loop
    long loop(float,float,float) -> loop
    void stop() -> stop
    void dispose() -> dispose
    void stop(long) -> stop
    void setLooping(long,boolean) -> setLooping
    void setPitch(long,float) -> setPitch
    void setVolume(long,float) -> setVolume
    void setPan(long,float,float) -> setPan
    void setPriority(long,int) -> setPriority
com.badlogic.gdx.backends.android.AndroidApplication -> com.badlogic.gdx.backends.android.AndroidApplication:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    87:90:void initialize(com.badlogic.gdx.ApplicationListener,boolean) -> initialize
    103:129:void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    132:135:android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    139:143:void createWakeLock(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> createWakeLock
    146:158:void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> hideStatusBar
    172:174:android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean) -> initializeForView
    191:209:android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    214:237:void onPause() -> onPause
    241:261:void onResume() -> onResume
    265:266:void onDestroy() -> onDestroy
    271:271:com.badlogic.gdx.Audio getAudio() -> getAudio
    277:277:com.badlogic.gdx.Files getFiles() -> getFiles
    283:283:com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    289:289:com.badlogic.gdx.Input getInput() -> getInput
    294:294:com.badlogic.gdx.Net getNet() -> getNet
    300:300:com.badlogic.gdx.Application$ApplicationType getType() -> getType
    306:306:int getVersion() -> getVersion
    311:311:long getJavaHeap() -> getJavaHeap
    316:316:long getNativeHeap() -> getNativeHeap
    321:321:com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    328:331:com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    336:339:void postRunnable(java.lang.Runnable) -> postRunnable
    344:348:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    352:358:void exit() -> exit
    362:365:void debug(java.lang.String,java.lang.String) -> debug
    369:372:void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    376:377:void log(java.lang.String,java.lang.String) -> log
    381:382:void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    386:387:void error(java.lang.String,java.lang.String) -> error
    391:392:void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    396:397:void setLogLevel(int) -> setLogLevel
    401:403:void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    408:410:void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.backends.android.AndroidApplication$1 -> com.badlogic.gdx.backends.android.AndroidApplication$1:
    com.badlogic.gdx.backends.android.AndroidApplication this$0 -> this$0
    355:356:void run() -> run
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration -> com.badlogic.gdx.backends.android.AndroidApplicationConfiguration:
    boolean useGL20 -> useGL20
    int r -> r
    int g -> g
    int b -> b
    int a -> a
    int depth -> depth
    int stencil -> stencil
    int numSamples -> numSamples
    boolean useAccelerometer -> useAccelerometer
    boolean useCompass -> useCompass
    int touchSleepTime -> touchSleepTime
    boolean useWakelock -> useWakelock
    boolean hideStatusBar -> hideStatusBar
    int maxSimultaneousSounds -> maxSimultaneousSounds
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    boolean getTouchEventsForLiveWallpaper -> getTouchEventsForLiveWallpaper
com.badlogic.gdx.backends.android.AndroidAudio -> com.badlogic.gdx.backends.android.AndroidAudio:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    java.util.List musics -> musics
    56:65:void pause() -> pause
    69:73:void resume() -> resume
    79:79:com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    85:114:com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
    123:138:com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    146:146:com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    151:159:void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidAudioDevice -> com.badlogic.gdx.backends.android.AndroidAudioDevice:
    android.media.AudioTrack track -> track
    short[] buffer -> buffer
    boolean isMono -> isMono
    int latency -> latency
    53:55:void dispose() -> dispose
    59:59:boolean isMono() -> isMono
    64:67:void writeSamples(short[],int,int) -> writeSamples
    71:85:void writeSamples(float[],int,int) -> writeSamples
    89:89:int getLatency() -> getLatency
    94:95:void setVolume(float) -> setVolume
com.badlogic.gdx.backends.android.AndroidAudioRecorder -> com.badlogic.gdx.backends.android.AndroidAudioRecorder:
    android.media.AudioRecord recorder -> recorder
    44:46:void dispose() -> dispose
    50:54:void read(short[],int,int) -> read
com.badlogic.gdx.backends.android.AndroidClipboard -> com.badlogic.gdx.backends.android.AndroidClipboard:
    android.content.Context context -> context
    java.lang.String contents -> contents
    35:35:java.lang.String getContents() -> getContents
    40:41:void setContents(java.lang.String) -> setContents
com.badlogic.gdx.backends.android.AndroidDaydream -> com.badlogic.gdx.backends.android.AndroidDaydream:
    com.badlogic.gdx.backends.android.AndroidGraphicsDaydream graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    86:89:void initialize(com.badlogic.gdx.ApplicationListener,boolean) -> initialize
    102:123:void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    126:129:android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    133:137:void createWakeLock(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> createWakeLock
    140:152:void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> hideStatusBar
    166:168:android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean) -> initializeForView
    185:203:android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    208:229:void onDreamingStopped() -> onDreamingStopped
    233:253:void onDreamingStarted() -> onDreamingStarted
    257:258:void onDetachedFromWindow() -> onDetachedFromWindow
    263:263:com.badlogic.gdx.Audio getAudio() -> getAudio
    269:269:com.badlogic.gdx.Files getFiles() -> getFiles
    275:275:com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    281:281:com.badlogic.gdx.Input getInput() -> getInput
    286:286:com.badlogic.gdx.Net getNet() -> getNet
    292:292:com.badlogic.gdx.Application$ApplicationType getType() -> getType
    298:298:int getVersion() -> getVersion
    303:303:long getJavaHeap() -> getJavaHeap
    308:308:long getNativeHeap() -> getNativeHeap
    313:313:com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    320:323:com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    328:331:void postRunnable(java.lang.Runnable) -> postRunnable
    336:340:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    344:350:void exit() -> exit
    354:357:void debug(java.lang.String,java.lang.String) -> debug
    361:364:void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    368:369:void log(java.lang.String,java.lang.String) -> log
    373:374:void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    378:379:void error(java.lang.String,java.lang.String) -> error
    383:384:void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    388:389:void setLogLevel(int) -> setLogLevel
    393:395:void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    400:402:void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.backends.android.AndroidDaydream$1 -> com.badlogic.gdx.backends.android.AndroidDaydream$1:
    com.badlogic.gdx.backends.android.AndroidDaydream this$0 -> this$0
    347:348:void run() -> run
com.badlogic.gdx.backends.android.AndroidFileHandle -> com.badlogic.gdx.backends.android.AndroidFileHandle:
    android.content.res.AssetManager assets -> assets
    46:48:com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    52:54:com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    58:65:com.badlogic.gdx.files.FileHandle parent() -> parent
    69:76:java.io.InputStream read() -> read
    80:91:com.badlogic.gdx.files.FileHandle[] list() -> list
    95:116:com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    120:127:boolean isDirectory() -> isDirectory
    131:145:boolean exists() -> exists
    149:155:long length() -> length
    159:159:long lastModified() -> lastModified
com.badlogic.gdx.backends.android.AndroidFiles -> com.badlogic.gdx.backends.android.AndroidFiles:
    java.lang.String sdcard -> sdcard
    java.lang.String localpath -> localpath
    android.content.res.AssetManager assets -> assets
    45:45:com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    50:50:com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    55:55:com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    60:60:com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    65:65:com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    70:71:com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    76:76:java.lang.String getExternalStoragePath() -> getExternalStoragePath
    81:81:boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    86:86:java.lang.String getLocalStoragePath() -> getLocalStoragePath
    91:91:boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.backends.android.AndroidGL10 -> com.badlogic.gdx.backends.android.AndroidGL10:
    javax.microedition.khronos.opengles.GL10 gl -> gl
    36:37:void glActiveTexture(int) -> glActiveTexture
    41:42:void glAlphaFunc(int,float) -> glAlphaFunc
    46:47:void glBindTexture(int,int) -> glBindTexture
    51:52:void glBlendFunc(int,int) -> glBlendFunc
    56:57:void glClear(int) -> glClear
    61:62:void glClearColor(float,float,float,float) -> glClearColor
    66:67:void glClearDepthf(float) -> glClearDepthf
    71:72:void glClearStencil(int) -> glClearStencil
    76:77:void glClientActiveTexture(int) -> glClientActiveTexture
    81:82:void glColor4f(float,float,float,float) -> glColor4f
    86:87:void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    91:92:void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    97:98:void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    103:104:void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    108:109:void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    113:114:void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    118:119:void glCullFace(int) -> glCullFace
    123:124:void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    128:129:void glDepthFunc(int) -> glDepthFunc
    133:134:void glDepthMask(boolean) -> glDepthMask
    138:139:void glDepthRangef(float,float) -> glDepthRangef
    143:144:void glDisable(int) -> glDisable
    148:149:void glDisableClientState(int) -> glDisableClientState
    153:154:void glDrawArrays(int,int,int) -> glDrawArrays
    158:159:void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    163:164:void glEnable(int) -> glEnable
    168:169:void glEnableClientState(int) -> glEnableClientState
    173:174:void glFinish() -> glFinish
    178:179:void glFlush() -> glFlush
    183:184:void glFogf(int,float) -> glFogf
    188:189:void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    193:194:void glFrontFace(int) -> glFrontFace
    198:199:void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    203:204:void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    208:208:int glGetError() -> glGetError
    213:214:void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    218:218:java.lang.String glGetString(int) -> glGetString
    223:224:void glHint(int,int) -> glHint
    228:229:void glLightModelf(int,float) -> glLightModelf
    233:234:void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    238:239:void glLightf(int,int,float) -> glLightf
    243:244:void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    248:249:void glLineWidth(float) -> glLineWidth
    253:254:void glLoadIdentity() -> glLoadIdentity
    258:259:void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    263:264:void glLogicOp(int) -> glLogicOp
    268:269:void glMaterialf(int,int,float) -> glMaterialf
    273:274:void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    278:279:void glMatrixMode(int) -> glMatrixMode
    283:284:void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    288:289:void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    293:294:void glNormal3f(float,float,float) -> glNormal3f
    298:299:void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    303:304:void glOrthof(float,float,float,float,float,float) -> glOrthof
    308:309:void glPixelStorei(int,int) -> glPixelStorei
    313:314:void glPointSize(float) -> glPointSize
    318:319:void glPolygonOffset(float,float) -> glPolygonOffset
    323:324:void glPopMatrix() -> glPopMatrix
    328:329:void glPushMatrix() -> glPushMatrix
    333:334:void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    338:339:void glRotatef(float,float,float,float) -> glRotatef
    343:344:void glSampleCoverage(float,boolean) -> glSampleCoverage
    348:349:void glScalef(float,float,float) -> glScalef
    353:354:void glScissor(int,int,int,int) -> glScissor
    358:359:void glShadeModel(int) -> glShadeModel
    363:364:void glStencilFunc(int,int,int) -> glStencilFunc
    368:369:void glStencilMask(int) -> glStencilMask
    373:374:void glStencilOp(int,int,int) -> glStencilOp
    378:379:void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    383:384:void glTexEnvf(int,int,float) -> glTexEnvf
    388:389:void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    394:395:void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    399:400:void glTexParameterf(int,int,float) -> glTexParameterf
    405:406:void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    410:411:void glTranslatef(float,float,float) -> glTranslatef
    415:416:void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    420:421:void glViewport(int,int,int,int) -> glViewport
    425:426:void glDeleteTextures(int,int[],int) -> glDeleteTextures
    430:431:void glFogfv(int,float[],int) -> glFogfv
    435:436:void glGenTextures(int,int[],int) -> glGenTextures
    440:441:void glGetIntegerv(int,int[],int) -> glGetIntegerv
    445:446:void glLightModelfv(int,float[],int) -> glLightModelfv
    450:451:void glLightfv(int,int,float[],int) -> glLightfv
    455:456:void glLoadMatrixf(float[],int) -> glLoadMatrixf
    460:461:void glMaterialfv(int,int,float[],int) -> glMaterialfv
    465:466:void glMultMatrixf(float[],int) -> glMultMatrixf
    470:471:void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    476:476:void glPolygonMode(int,int) -> glPolygonMode
com.badlogic.gdx.backends.android.AndroidGL11 -> com.badlogic.gdx.backends.android.AndroidGL11:
    javax.microedition.khronos.opengles.GL11 gl -> gl
    40:41:void glBindBuffer(int,int) -> glBindBuffer
    45:46:void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    50:51:void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    55:56:void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    60:61:void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    65:66:void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    70:71:void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    75:76:void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    80:81:void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    85:86:void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    90:91:void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    95:96:void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    100:101:void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    105:106:void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    110:111:void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    115:116:void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    120:121:void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    125:125:boolean glIsBuffer(int) -> glIsBuffer
    130:130:boolean glIsEnabled(int) -> glIsEnabled
    135:135:boolean glIsTexture(int) -> glIsTexture
    140:141:void glPointParameterf(int,float) -> glPointParameterf
    145:146:void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    150:151:void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    155:156:void glTexEnvi(int,int,int) -> glTexEnvi
    160:161:void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    165:166:void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    170:171:void glTexParameteri(int,int,int) -> glTexParameteri
    175:176:void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    180:181:void glClipPlanef(int,float[],int) -> glClipPlanef
    185:186:void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    190:191:void glGenBuffers(int,int[],int) -> glGenBuffers
    195:196:void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    200:201:void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    205:206:void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    210:211:void glGetFloatv(int,float[],int) -> glGetFloatv
    215:216:void glGetLightfv(int,int,float[],int) -> glGetLightfv
    220:221:void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    225:226:void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    230:231:void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    235:236:void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    240:241:void glPointParameterfv(int,float[],int) -> glPointParameterfv
    245:246:void glTexEnviv(int,int,int[],int) -> glTexEnviv
    250:251:void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    255:256:void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    260:261:void glColorPointer(int,int,int,int) -> glColorPointer
    265:266:void glNormalPointer(int,int,int) -> glNormalPointer
    270:271:void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    275:276:void glVertexPointer(int,int,int,int) -> glVertexPointer
    280:281:void glDrawElements(int,int,int,int) -> glDrawElements
com.badlogic.gdx.backends.android.AndroidGL20 -> com.badlogic.gdx.backends.android.AndroidGL20:
    void init() -> init
    void glActiveTexture(int) -> glActiveTexture
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBindTexture(int,int) -> glBindTexture
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFunc(int,int) -> glBlendFunc
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompileShader(int) -> glCompileShader
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glCullFace(int) -> glCullFace
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDetachShader(int,int) -> glDetachShader
    void glDisable(int) -> glDisable
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glFrontFace(int) -> glFrontFace
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    int glGetError() -> glGetError
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String) -> glGetShaderSource
    java.lang.String glGetString(int) -> glGetString
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    void glHint(int,int) -> glHint
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLineWidth(float) -> glLineWidth
    void glLinkProgram(int) -> glLinkProgram
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScissor(int,int,int,int) -> glScissor
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMask(int) -> glStencilMask
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOp(int,int,int) -> glStencilOp
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.backends.android.AndroidGLU -> com.badlogic.gdx.backends.android.AndroidGLU:
    27:28:void gluLookAt(com.badlogic.gdx.graphics.GL10,float,float,float,float,float,float,float,float,float) -> gluLookAt
    32:33:void gluOrtho2D(com.badlogic.gdx.graphics.GL10,float,float,float,float) -> gluOrtho2D
    37:38:void gluPerspective(com.badlogic.gdx.graphics.GL10,float,float,float,float) -> gluPerspective
    43:45:boolean gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int) -> gluProject
    51:53:boolean gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int) -> gluUnProject
com.badlogic.gdx.backends.android.AndroidGraphics -> com.badlogic.gdx.backends.android.AndroidGraphics:
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidApplication app -> app
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    com.badlogic.gdx.graphics.GLU glu -> glu
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    103:119:void setPreserveContext(android.view.View) -> setPreserveContext
    122:159:android.view.View createGLSurfaceView(android.app.Activity,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    165:165:android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    170:178:void updatePpi() -> updatePpi
    181:195:boolean checkGL20() -> checkGL20
    201:201:com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    207:207:com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    213:213:com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    219:219:int getHeight() -> getHeight
    225:225:int getWidth() -> getWidth
    231:231:boolean isGL11Available() -> isGL11Available
    237:237:boolean isGL20Available() -> isGL20Available
    241:241:boolean isPowerOfTwo(int) -> isPowerOfTwo
    250:283:void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    287:299:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    303:325:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    328:347:void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    352:355:int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    361:364:void resume() -> resume
    368:379:void pause() -> pause
    383:394:void destroy() -> destroy
    399:491:void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    496:496:float getDeltaTime() -> getDeltaTime
    501:501:float getRawDeltaTime() -> getRawDeltaTime
    507:507:com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    513:513:int getFramesPerSecond() -> getFramesPerSecond
    517:526:void clearManagedCaches() -> clearManagedCaches
    529:529:android.view.View getView() -> getView
    535:535:com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    540:540:float getPpiX() -> getPpiX
    545:545:float getPpiY() -> getPpiY
    550:550:float getPpcX() -> getPpcX
    555:555:float getPpcY() -> getPpcY
    560:560:float getDensity() -> getDensity
    565:565:com.badlogic.gdx.graphics.GLU getGLU() -> getGLU
    570:570:boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    575:575:boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    580:580:com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    585:585:boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    591:591:void setTitle(java.lang.String) -> setTitle
    601:603:com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    608:608:com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    613:613:void setVSync(boolean) -> setVSync
    617:618:boolean supportsExtension(java.lang.String) -> supportsExtension
    623:630:void setContinuousRendering(boolean) -> setContinuousRendering
    633:633:boolean isContinuousRendering() -> isContinuousRendering
    638:642:void requestRendering() -> requestRendering
    646:646:boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.backends.android.AndroidGraphics$1 -> com.badlogic.gdx.backends.android.AndroidGraphics$1:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy val$resolutionStrategy -> val$resolutionStrategy
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
    141:144:void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream -> com.badlogic.gdx.backends.android.AndroidGraphicsDaydream:
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidDaydream app -> app
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    com.badlogic.gdx.graphics.GLU glu -> glu
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    118:134:void setPreserveContext(android.view.View) -> setPreserveContext
    137:174:android.view.View createGLSurfaceView(android.service.dreams.DreamService,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    180:180:android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    185:193:void updatePpi() -> updatePpi
    196:210:boolean checkGL20() -> checkGL20
    216:216:com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    222:222:com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    228:228:com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    234:234:int getHeight() -> getHeight
    240:240:int getWidth() -> getWidth
    246:246:boolean isGL11Available() -> isGL11Available
    252:252:boolean isGL20Available() -> isGL20Available
    256:256:boolean isPowerOfTwo(int) -> isPowerOfTwo
    265:298:void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    302:314:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    318:340:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    343:362:void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    367:370:int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    376:379:void resume() -> resume
    383:394:void pause() -> pause
    398:409:void destroy() -> destroy
    414:506:void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    511:511:float getDeltaTime() -> getDeltaTime
    516:516:float getRawDeltaTime() -> getRawDeltaTime
    522:522:com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    528:528:int getFramesPerSecond() -> getFramesPerSecond
    532:541:void clearManagedCaches() -> clearManagedCaches
    544:544:android.view.View getView() -> getView
    550:550:com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    555:555:float getPpiX() -> getPpiX
    560:560:float getPpiY() -> getPpiY
    565:565:float getPpcX() -> getPpcX
    570:570:float getPpcY() -> getPpcY
    575:575:float getDensity() -> getDensity
    580:580:com.badlogic.gdx.graphics.GLU getGLU() -> getGLU
    585:585:boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    590:590:boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    595:595:com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    600:600:boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    606:606:void setTitle(java.lang.String) -> setTitle
    616:618:com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    623:623:com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    628:628:void setVSync(boolean) -> setVSync
    632:633:boolean supportsExtension(java.lang.String) -> supportsExtension
    638:645:void setContinuousRendering(boolean) -> setContinuousRendering
    648:648:boolean isContinuousRendering() -> isContinuousRendering
    653:657:void requestRendering() -> requestRendering
    661:661:boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$1 -> com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$1:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy val$resolutionStrategy -> val$resolutionStrategy
    com.badlogic.gdx.backends.android.AndroidGraphicsDaydream this$0 -> this$0
    156:159:void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphicsDaydream this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW view -> view
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper app -> app
    int width -> width
    int height -> height
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    com.badlogic.gdx.graphics.GLU glu -> glu
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    101:115:boolean checkGL20() -> checkGL20
    120:120:com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    125:125:com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    130:130:com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    135:135:int getHeight() -> getHeight
    140:140:int getWidth() -> getWidth
    145:145:boolean isGL11Available() -> isGL11Available
    150:150:boolean isGL20Available() -> isGL20Available
    154:173:void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    176:179:int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    183:186:void resume() -> resume
    190:201:void pause() -> pause
    205:216:void destroy() -> destroy
    222:222:float getDeltaTime() -> getDeltaTime
    227:227:float getRawDeltaTime() -> getRawDeltaTime
    233:233:com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    239:239:int getFramesPerSecond() -> getFramesPerSecond
    245:245:com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    250:250:float getPpiX() -> getPpiX
    255:255:float getPpiY() -> getPpiY
    260:260:float getPpcX() -> getPpcX
    265:265:float getPpcY() -> getPpcY
    270:270:boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    275:275:boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    281:281:void setTitle(java.lang.String) -> setTitle
    291:291:com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    296:296:void setVSync(boolean) -> setVSync
    300:301:boolean supportsExtension(java.lang.String) -> supportsExtension
    305:305:boolean isContinuousRendering() -> isContinuousRendering
    310:310:boolean isFullscreen() -> isFullscreen
    322:344:com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidLiveWallpaper,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    349:349:android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    372:382:void updatePpi() -> updatePpi
    394:430:void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    434:439:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    443:468:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    492:579:void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    582:591:void clearManagedCaches() -> clearManagedCaches
    594:594:com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW getView() -> getView
    599:599:com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    604:604:com.badlogic.gdx.graphics.GLU getGLU() -> getGLU
    609:609:float getDensity() -> getDensity
    614:619:com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    624:624:boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    629:634:void setContinuousRendering(boolean) -> setContinuousRendering
    638:642:void requestRendering() -> requestRendering
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidInput -> com.badlogic.gdx.backends.android.AndroidInput:
    com.badlogic.gdx.utils.Pool usedKeyEvents -> usedKeyEvents
    com.badlogic.gdx.utils.Pool usedTouchEvents -> usedTouchEvents
    java.util.ArrayList keyListeners -> keyListeners
    java.util.ArrayList keyEvents -> keyEvents
    java.util.ArrayList touchEvents -> touchEvents
    int[] touchX -> touchX
    int[] touchY -> touchY
    int[] deltaX -> deltaX
    int[] deltaY -> deltaY
    boolean[] touched -> touched
    int[] realId -> realId
    boolean hasMultitouch -> hasMultitouch
    com.badlogic.gdx.utils.IntMap keys -> keys
    android.hardware.SensorManager manager -> manager
    boolean accelerometerAvailable -> accelerometerAvailable
    float[] accelerometerValues -> accelerometerValues
    java.lang.String text -> text
    com.badlogic.gdx.Input$TextInputListener textListener -> textListener
    android.os.Handler handle -> handle
    com.badlogic.gdx.Application app -> app
    android.content.Context context -> context
    com.badlogic.gdx.backends.android.AndroidTouchHandler touchHandler -> touchHandler
    int sleepTime -> sleepTime
    boolean catchBack -> catchBack
    boolean catchMenu -> catchMenu
    android.os.Vibrator vibrator -> vibrator
    boolean compassAvailable -> compassAvailable
    boolean keyboardAvailable -> keyboardAvailable
    float[] magneticFieldValues -> magneticFieldValues
    float azimuth -> azimuth
    float pitch -> pitch
    float roll -> roll
    float inclination -> inclination
    boolean justTouched -> justTouched
    com.badlogic.gdx.InputProcessor processor -> processor
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    long currentEventTimeStamp -> currentEventTimeStamp
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard -> onscreenKeyboard
    android.hardware.SensorEventListener accelerometerListener -> accelerometerListener
    android.hardware.SensorEventListener compassListener -> compassListener
    boolean requestFocus -> requestFocus
    float[] R -> R
    float[] orientation -> orientation
    174:174:float getAccelerometerX() -> getAccelerometerX
    179:179:float getAccelerometerY() -> getAccelerometerY
    184:184:float getAccelerometerZ() -> getAccelerometerZ
    189:231:void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    234:266:void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    270:272:int getX() -> getX
    277:279:int getY() -> getY
    284:286:int getX(int) -> getX
    291:293:int getY(int) -> getY
    297:299:boolean isTouched(int) -> isTouched
    304:309:boolean isKeyPressed(int) -> isKeyPressed
    314:316:boolean isTouched() -> isTouched
    320:322:void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    326:389:void processEvents() -> processEvents
    396:411:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    418:419:void onTap(int,int) -> onTap
    425:426:void onDrop(int,int) -> onDrop
    429:447:void postTap(int,int) -> postTap
    451:506:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    512:525:void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    529:530:void setCatchBackKey(boolean) -> setCatchBackKey
    534:535:void setCatchMenuKey(boolean) -> setCatchMenuKey
    539:540:void vibrate(int) -> vibrate
    544:545:void vibrate(long[],int) -> vibrate
    549:550:void cancelVibrate() -> cancelVibrate
    554:554:boolean justTouched() -> justTouched
    559:562:boolean isButtonPressed(int) -> isButtonPressed
    569:575:void updateOrientation() -> updateOrientation
    583:584:void getRotationMatrix(float[]) -> getRotationMatrix
    588:591:float getAzimuth() -> getAzimuth
    596:599:float getPitch() -> getPitch
    604:607:float getRoll() -> getRoll
    611:639:void registerSensorListeners() -> registerSensorListeners
    642:654:void unregisterSensorListeners() -> unregisterSensorListeners
    658:658:com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    663:669:boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    673:681:int getFreePointerIndex() -> getFreePointerIndex
    685:695:int lookUpPointerIndex(int) -> lookUpPointerIndex
    700:718:int getRotation() -> getRotation
    724:724:com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    729:729:void setCursorCatched(boolean) -> setCursorCatched
    733:733:boolean isCursorCatched() -> isCursorCatched
    738:738:int getDeltaX() -> getDeltaX
    743:743:int getDeltaX(int) -> getDeltaX
    748:748:int getDeltaY() -> getDeltaY
    753:753:int getDeltaY(int) -> getDeltaY
    758:758:void setCursorPosition(int,int) -> setCursorPosition
    762:762:long getCurrentEventTime() -> getCurrentEventTime
    766:767:void addKeyListener(android.view.View$OnKeyListener) -> addKeyListener
com.badlogic.gdx.backends.android.AndroidInput$1 -> com.badlogic.gdx.backends.android.AndroidInput$1:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    81:81:com.badlogic.gdx.backends.android.AndroidInput$KeyEvent newObject() -> newObject
    79:79:java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$2 -> com.badlogic.gdx.backends.android.AndroidInput$2:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    87:87:com.badlogic.gdx.backends.android.AndroidInput$TouchEvent newObject() -> newObject
    85:85:java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$3 -> com.badlogic.gdx.backends.android.AndroidInput$3:
    java.lang.String val$title -> val$title
    java.lang.String val$text -> val$text
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    191:229:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1:
    android.widget.EditText val$input -> val$input
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    199:205:void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$1 this$2 -> this$2
    202:203:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$2 -> com.badlogic.gdx.backends.android.AndroidInput$3$2:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    209:215:void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$2 this$2 -> this$2
    212:213:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$3 -> com.badlogic.gdx.backends.android.AndroidInput$3$3:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    220:226:void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$3$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$3$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$3 this$2 -> this$2
    223:224:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4 -> com.badlogic.gdx.backends.android.AndroidInput$4:
    java.lang.String val$title -> val$title
    java.lang.String val$placeholder -> val$placeholder
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    236:264:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$1:
    android.widget.EditText val$input -> val$input
    com.badlogic.gdx.backends.android.AndroidInput$4 this$1 -> this$1
    244:250:void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$4$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$4$1 this$2 -> this$2
    247:248:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4$2 -> com.badlogic.gdx.backends.android.AndroidInput$4$2:
    com.badlogic.gdx.backends.android.AndroidInput$4 this$1 -> this$1
    255:261:void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$4$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$4$2 this$2 -> this$2
    258:259:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$5 -> com.badlogic.gdx.backends.android.AndroidInput$5:
    boolean val$visible -> val$visible
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    514:523:void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent -> com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    long timeStamp -> timeStamp
    int type -> type
    int keyCode -> keyCode
    char keyChar -> keyChar
com.badlogic.gdx.backends.android.AndroidInput$SensorListener -> com.badlogic.gdx.backends.android.AndroidInput$SensorListener:
    float[] accelerometerValues -> accelerometerValues
    float[] magneticFieldValues -> magneticFieldValues
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    786:786:void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    790:802:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent -> com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    long timeStamp -> timeStamp
    int type -> type
    int x -> x
    int y -> y
    int pointer -> pointer
com.badlogic.gdx.backends.android.AndroidInputFactory -> com.badlogic.gdx.backends.android.AndroidInputFactory:
    18:32:com.badlogic.gdx.backends.android.AndroidInput newAndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> newAndroidInput
com.badlogic.gdx.backends.android.AndroidInputThreePlus -> com.badlogic.gdx.backends.android.AndroidInputThreePlus:
    java.util.ArrayList genericMotionListeners -> genericMotionListeners
    33:35:boolean onGenericMotion(android.view.View,android.view.MotionEvent) -> onGenericMotion
    39:40:void addGenericMotionListener(android.view.View$OnGenericMotionListener) -> addGenericMotionListener
com.badlogic.gdx.backends.android.AndroidLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidLiveWallpaper:
    android.service.wallpaper.WallpaperService service -> service
    android.service.wallpaper.WallpaperService$Engine engine -> engine
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    85:96:void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    99:102:void onPause() -> onPause
    105:118:void onResume() -> onResume
    121:123:void onDestroy() -> onDestroy
    126:126:android.service.wallpaper.WallpaperService getService() -> getService
    130:130:android.service.wallpaper.WallpaperService$Engine getEngine() -> getEngine
    134:134:com.badlogic.gdx.ApplicationListener getListener() -> getListener
    139:141:void postRunnable(java.lang.Runnable) -> postRunnable
    146:146:com.badlogic.gdx.Audio getAudio() -> getAudio
    151:151:com.badlogic.gdx.Files getFiles() -> getFiles
    156:156:com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    161:161:com.badlogic.gdx.Input getInput() -> getInput
    166:166:com.badlogic.gdx.Net getNet() -> getNet
    171:171:com.badlogic.gdx.Application$ApplicationType getType() -> getType
    176:176:int getVersion() -> getVersion
    181:181:long getJavaHeap() -> getJavaHeap
    186:186:long getNativeHeap() -> getNativeHeap
    191:191:com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    198:201:com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    206:209:void debug(java.lang.String,java.lang.String) -> debug
    213:216:void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    220:221:void log(java.lang.String,java.lang.String) -> log
    225:226:void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    230:231:void error(java.lang.String,java.lang.String) -> error
    235:236:void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    240:241:void setLogLevel(int) -> setLogLevel
    246:246:void exit() -> exit
    250:252:void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    257:259:void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    int runningEngines -> runningEngines
    40:42:void onCreate() -> onCreate
    46:46:android.service.wallpaper.WallpaperService$Engine onCreateEngine() -> onCreateEngine
    com.badlogic.gdx.ApplicationListener createListener(boolean) -> createListener
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration createConfig() -> createConfig
    void offsetChange(com.badlogic.gdx.ApplicationListener,float,float,float,float,int,int) -> offsetChange
    73:75:void onDestroy() -> onDestroy
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine:
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper app -> app
    com.badlogic.gdx.ApplicationListener listener -> listener
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW view -> view
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService this$0 -> this$0
    90:100:android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean) -> onCommand
    105:116:void onCreate(android.view.SurfaceHolder) -> onCreate
    120:127:void onDestroy() -> onDestroy
    130:133:void onPause() -> onPause
    136:139:void onResume() -> onResume
    143:146:void onSurfaceChanged(android.view.SurfaceHolder,int,int,int) -> onSurfaceChanged
    150:152:void onSurfaceCreated(android.view.SurfaceHolder) -> onSurfaceCreated
    156:158:void onSurfaceDestroyed(android.view.SurfaceHolder) -> onSurfaceDestroyed
    162:171:void onVisibilityChanged(boolean) -> onVisibilityChanged
    175:176:void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    182:193:void onOffsetsChanged(float,float,float,float,int,int) -> onOffsetsChanged
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1 -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1:
    float val$xOffset -> val$xOffset
    float val$yOffset -> val$yOffset
    float val$xOffsetStep -> val$xOffsetStep
    float val$yOffsetStep -> val$yOffsetStep
    int val$xPixelOffset -> val$xPixelOffset
    int val$yPixelOffset -> val$yPixelOffset
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1 -> this$1
    189:190:void run() -> run
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler -> com.badlogic.gdx.backends.android.AndroidMultiTouchHandler:
    31:91:void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    94:112:void logAction(int,int) -> logAction
    115:122:void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> postTouchEvent
    125:125:boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidMusic -> com.badlogic.gdx.backends.android.AndroidMusic:
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    android.media.MediaPlayer player -> player
    boolean isPrepared -> isPrepared
    boolean wasPlaying -> wasPlaying
    39:49:void dispose() -> dispose
    55:55:boolean isLooping() -> isLooping
    60:60:boolean isPlaying() -> isPlaying
    65:66:void pause() -> pause
    70:83:void play() -> play
    87:88:void setLooping(boolean) -> setLooping
    92:93:void setVolume(float) -> setVolume
    97:102:void stop() -> stop
    105:105:float getPosition() -> getPosition
com.badlogic.gdx.backends.android.AndroidNet -> com.badlogic.gdx.backends.android.AndroidNet:
    com.badlogic.gdx.backends.android.AndroidApplication app -> app
    com.badlogic.gdx.net.NetJavaImpl netJavaImpl -> netJavaImpl
    77:78:void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    82:82:com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints) -> newServerSocket
    87:87:com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints) -> newClientSocket
    92:99:void openURI(java.lang.String) -> openURI
com.badlogic.gdx.backends.android.AndroidNet$1 -> com.badlogic.gdx.backends.android.AndroidNet$1:
    android.net.Uri val$uri -> val$uri
    com.badlogic.gdx.backends.android.AndroidNet this$0 -> this$0
    96:97:void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard:
    android.content.Context context -> context
    android.os.Handler handler -> handler
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    android.app.Dialog dialog -> dialog
    android.widget.TextView textView -> textView
    66:83:android.app.Dialog createDialog() -> createDialog
    87:118:android.widget.TextView createView(android.content.Context) -> createView
    122:167:void setVisible(boolean) -> setVisible
    306:306:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    311:311:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1:
    android.text.Editable editable -> editable
    92:92:boolean getDefaultEditable() -> getDefaultEditable
    97:97:android.text.Editable getEditableText() -> getEditableText
    102:102:android.text.method.MovementMethod getDefaultMovementMethod() -> getDefaultMovementMethod
    107:108:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    113:114:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard this$0 -> this$0
    130:160:void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    136:139:void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2:
    int[] screenloc -> screenloc
    int keyboardHeight -> keyboardHeight
    boolean keyboardShowing -> keyboardShowing
    android.view.View val$content -> val$content
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    150:157:boolean onPreDraw() -> onPreDraw
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable:
    173:174:char charAt(int) -> charAt
    179:180:int length() -> length
    185:186:java.lang.CharSequence subSequence(int,int) -> subSequence
    191:192:void getChars(int,int,char[],int) -> getChars
    196:197:void removeSpan(java.lang.Object) -> removeSpan
    201:202:void setSpan(java.lang.Object,int,int,int) -> setSpan
    206:207:int getSpanEnd(java.lang.Object) -> getSpanEnd
    212:213:int getSpanFlags(java.lang.Object) -> getSpanFlags
    218:219:int getSpanStart(java.lang.Object) -> getSpanStart
    224:225:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    230:231:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    236:237:android.text.Editable append(java.lang.CharSequence) -> append
    242:243:android.text.Editable append(char) -> append
    248:249:android.text.Editable append(java.lang.CharSequence,int,int) -> append
    254:255:void clear() -> clear
    259:260:void clearSpans() -> clearSpans
    264:265:android.text.Editable delete(int,int) -> delete
    270:271:android.text.InputFilter[] getFilters() -> getFilters
    276:277:android.text.Editable insert(int,java.lang.CharSequence) -> insert
    282:283:android.text.Editable insert(int,java.lang.CharSequence,int,int) -> insert
    288:289:android.text.Editable replace(int,int,java.lang.CharSequence) -> replace
    294:295:android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    300:301:void setFilters(android.text.InputFilter[]) -> setFilters
    169:169:java.lang.Appendable append(char) -> append
    169:169:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    169:169:java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.backends.android.AndroidPreferences -> com.badlogic.gdx.backends.android.AndroidPreferences:
    android.content.SharedPreferences sharedPrefs -> sharedPrefs
    android.content.SharedPreferences$Editor editor -> editor
    37:39:void putBoolean(java.lang.String,boolean) -> putBoolean
    43:45:void putInteger(java.lang.String,int) -> putInteger
    49:51:void putLong(java.lang.String,long) -> putLong
    55:57:void putFloat(java.lang.String,float) -> putFloat
    61:63:void putString(java.lang.String,java.lang.String) -> putString
    67:75:void put(java.util.Map) -> put
    79:79:boolean getBoolean(java.lang.String) -> getBoolean
    84:84:int getInteger(java.lang.String) -> getInteger
    89:89:long getLong(java.lang.String) -> getLong
    94:94:float getFloat(java.lang.String) -> getFloat
    99:99:java.lang.String getString(java.lang.String) -> getString
    104:104:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    109:109:int getInteger(java.lang.String,int) -> getInteger
    114:114:long getLong(java.lang.String,long) -> getLong
    119:119:float getFloat(java.lang.String,float) -> getFloat
    124:124:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    129:129:java.util.Map get() -> get
    134:134:boolean contains(java.lang.String) -> contains
    139:141:void clear() -> clear
    145:149:void flush() -> flush
    153:155:void remove(java.lang.String) -> remove
    158:161:void edit() -> edit
com.badlogic.gdx.backends.android.AndroidServerSocket -> com.badlogic.gdx.backends.android.AndroidServerSocket:
    com.badlogic.gdx.Net$Protocol protocol -> protocol
    java.net.ServerSocket server -> server
    74:74:com.badlogic.gdx.Net$Protocol getProtocol() -> getProtocol
    80:83:com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints) -> accept
    89:98:void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidSingleTouchHandler -> com.badlogic.gdx.backends.android.AndroidSingleTouchHandler:
    30:59:void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    62:72:void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> postTouchEvent
    75:75:boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidSocket -> com.badlogic.gdx.backends.android.AndroidSocket:
    java.net.Socket socket -> socket
    65:81:void applyHints(com.badlogic.gdx.net.SocketHints) -> applyHints
    85:89:boolean isConnected() -> isConnected
    96:99:java.io.InputStream getInputStream() -> getInputStream
    106:109:java.io.OutputStream getOutputStream() -> getOutputStream
    115:124:void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidSound -> com.badlogic.gdx.backends.android.AndroidSound:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    int soundId -> soundId
    com.badlogic.gdx.utils.IntArray streamIds -> streamIds
    39:40:void dispose() -> dispose
    44:44:long play() -> play
    49:52:long play(float) -> play
    56:58:void stop() -> stop
    62:63:void stop(long) -> stop
    67:68:void setPitch(long,float) -> setPitch
    72:73:void setVolume(long,float) -> setVolume
    77:77:long loop() -> loop
    82:85:long loop(float) -> loop
    90:91:void setLooping(long,boolean) -> setLooping
    95:105:void setPan(long,float,float) -> setPan
    109:119:long play(float,float,float) -> play
    124:134:long loop(float,float,float) -> loop
    139:140:void setPriority(long,int) -> setPriority
com.badlogic.gdx.backends.android.AndroidTouchHandler -> com.badlogic.gdx.backends.android.AndroidTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.InputProcessorLW -> com.badlogic.gdx.backends.android.InputProcessorLW:
    void touchDrop(int,int) -> touchDrop
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView -> com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    39:41:void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceViewLW -> com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceViewLW:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper -> com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper:
    javax.microedition.khronos.egl.EGL10 mEgl10 -> mEgl10
    java.io.Writer mLog -> mLog
    boolean mLogArgumentNames -> mLogArgumentNames
    boolean mCheckError -> mCheckError
    int mArgCount -> mArgCount
    42:53:boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[]) -> eglChooseConfig
    57:66:boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object) -> eglCopyBuffers
    70:80:javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[]) -> eglCreateContext
    84:93:javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[]) -> eglCreatePbufferSurface
    97:107:javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[]) -> eglCreatePixmapSurface
    111:121:javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[]) -> eglCreateWindowSurface
    125:133:boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> eglDestroyContext
    137:145:boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> eglDestroySurface
    149:158:boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[]) -> eglGetConfigAttrib
    162:172:boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[]) -> eglGetConfigs
    176:183:javax.microedition.khronos.egl.EGLContext eglGetCurrentContext() -> eglGetCurrentContext
    187:194:javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay() -> eglGetCurrentDisplay
    198:206:javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int) -> eglGetCurrentSurface
    210:218:javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object) -> eglGetDisplay
    222:228:int eglGetError() -> eglGetError
    232:239:boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[]) -> eglInitialize
    243:252:boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext) -> eglMakeCurrent
    256:265:boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[]) -> eglQueryContext
    269:276:java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int) -> eglQueryString
    280:289:boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[]) -> eglQuerySurface
    293:300:boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> eglSwapBuffers
    304:310:boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay) -> eglTerminate
    314:319:boolean eglWaitGL() -> eglWaitGL
    323:330:boolean eglWaitNative(int,java.lang.Object) -> eglWaitNative
    335:342:void checkError() -> checkError
    345:346:void logLine(java.lang.String) -> logLine
    350:354:void log(java.lang.String) -> log
    357:359:void begin(java.lang.String) -> begin
    362:369:void arg(java.lang.String,java.lang.String) -> arg
    372:374:void end() -> end
    378:382:void flush() -> flush
    385:386:void arg(java.lang.String,int) -> arg
    389:390:void arg(java.lang.String,java.lang.Object) -> arg
    393:400:void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay) -> arg
    403:408:void arg(java.lang.String,javax.microedition.khronos.egl.EGLContext) -> arg
    411:416:void arg(java.lang.String,javax.microedition.khronos.egl.EGLSurface) -> arg
    419:421:void returns(java.lang.String) -> returns
    424:425:void returns(int) -> returns
    428:429:void returns(boolean) -> returns
    432:433:void returns(java.lang.Object) -> returns
    436:439:java.lang.String toString(java.lang.Object) -> toString
    444:449:void arg(java.lang.String,int[]) -> arg
    452:457:void arg(java.lang.String,java.lang.Object[]) -> arg
    460:474:java.lang.String toString(int,int[],int) -> toString
    478:492:java.lang.String toString(int,java.lang.Object[],int) -> toString
    496:496:java.lang.String getHex(int) -> getHex
    500:532:java.lang.String getErrorString(int) -> getErrorString
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy:
    27:30:com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy:
    int width -> width
    int height -> height
    31:31:com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView:
    boolean LOG_THREADS -> LOG_THREADS
    boolean LOG_SURFACE -> LOG_SURFACE
    boolean LOG_RENDERER -> LOG_RENDERER
    boolean DRAW_TWICE_AFTER_SIZE_CHANGED -> DRAW_TWICE_AFTER_SIZE_CHANGED
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager sGLThreadManager -> sGLThreadManager
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    176:178:void init() -> init
    189:190:void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper) -> setGLWrapper
    198:199:void setDebugFlags(int) -> setDebugFlags
    204:204:int getDebugFlags() -> getDebugFlags
    231:243:void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    252:254:void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory) -> setEGLContextFactory
    262:264:void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory) -> setEGLWindowSurfaceFactory
    274:276:void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    288:289:void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    299:300:void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    315:316:void setRenderMode(int) -> setRenderMode
    323:323:int getRenderMode() -> getRenderMode
    330:331:void requestRender() -> requestRender
    336:337:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    343:344:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    349:350:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    355:356:void onPause() -> onPause
    362:363:void onResume() -> onResume
    369:370:void queueEvent(java.lang.Runnable) -> queueEvent
    376:378:void onDetachedFromWindow() -> onDetachedFromWindow
    1041:1044:void checkRenderThreadState() -> checkRenderThreadState
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    455:470:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    495:513:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    518:521:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory:
    420:420:javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    424:425:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory:
    441:441:javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    445:446:void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView this$0 -> this$0
    558:581:void start() -> start
    590:631:javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    637:643:boolean swap() -> swap
    647:652:void destroySurface() -> destroySurface
    655:663:void finish() -> finish
    666:666:void throwEglException(java.lang.String) -> throwEglException
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread:
    boolean mShouldExit -> mShouldExit
    boolean mExited -> mExited
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    boolean mWaitingForSurface -> mWaitingForSurface
    boolean mHaveEgl -> mHaveEgl
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    boolean mRenderComplete -> mRenderComplete
    java.util.ArrayList mEventQueue -> mEventQueue
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper mEglHelper -> mEglHelper
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView this$0 -> this$0
    693:703:void run() -> run
    711:717:void stopEglLocked() -> stopEglLocked
    720:866:void guardedRun() -> guardedRun
    871:877:void setRenderMode(int) -> setRenderMode
    881:883:int getRenderMode() -> getRenderMode
    887:890:void requestRender() -> requestRender
    894:900:void surfaceCreated() -> surfaceCreated
    904:917:void surfaceDestroyed() -> surfaceDestroyed
    921:924:void onPause() -> onPause
    928:932:void onResume() -> onResume
    936:955:void onWindowResize(int,int) -> onWindowResize
    961:971:void requestExitAndWait() -> requestExitAndWait
    977:983:void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread mEglOwner -> mEglOwner
    1052:1057:void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> threadExiting
    1066:1071:boolean tryAcquireEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> tryAcquireEglSurfaceLocked
    1078:1082:void releaseEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> releaseEglSurfaceLocked
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    1010:1011:void close() -> close
    1015:1016:void flush() -> flush
    1020:1028:void write(char[],int,int) -> write
    1031:1035:void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW:
    java.lang.String TAG -> TAG
    boolean LOG_VIEW -> LOG_VIEW
    boolean LOG_THREADS -> LOG_THREADS
    boolean LOG_SURFACE -> LOG_SURFACE
    boolean LOG_RENDERER -> LOG_RENDERER
    boolean DRAW_TWICE_AFTER_SIZE_CHANGED -> DRAW_TWICE_AFTER_SIZE_CHANGED
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    android.service.wallpaper.WallpaperService$Engine engine -> engine
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager sGLThreadManager -> sGLThreadManager
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    200:203:void init() -> init
    206:206:android.view.SurfaceHolder getHolder() -> getHolder
    222:223:void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper) -> setGLWrapper
    233:234:void setDebugFlags(int) -> setDebugFlags
    241:241:int getDebugFlags() -> getDebugFlags
    270:282:void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    293:295:void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory) -> setEGLContextFactory
    305:307:void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory) -> setEGLWindowSurfaceFactory
    319:321:void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    335:336:void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    349:350:void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    367:368:void setRenderMode(int) -> setRenderMode
    377:377:int getRenderMode() -> getRenderMode
    386:387:void requestRender() -> requestRender
    399:400:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    413:414:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    426:427:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    439:440:void onPause() -> onPause
    453:454:void onResume() -> onResume
    462:463:void queueEvent(java.lang.Runnable) -> queueEvent
    471:472:void onDestroy() -> onDestroy
    1195:1198:void checkRenderThreadState() -> checkRenderThreadState
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    584:599:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    623:641:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    646:649:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultContextFactory:
    520:520:javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    524:525:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultWindowSurfaceFactory:
    554:569:javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    573:574:void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW this$0 -> this$0
    693:716:void start() -> start
    725:766:javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    774:780:boolean swap() -> swap
    784:789:void destroySurface() -> destroySurface
    792:800:void finish() -> finish
    803:803:void throwEglException(java.lang.String) -> throwEglException
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread:
    boolean mShouldExit -> mShouldExit
    boolean mExited -> mExited
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    boolean mWaitingForSurface -> mWaitingForSurface
    boolean mHaveEgl -> mHaveEgl
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    boolean mRenderComplete -> mRenderComplete
    java.util.ArrayList mEventQueue -> mEventQueue
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper mEglHelper -> mEglHelper
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW this$0 -> this$0
    832:842:void run() -> run
    850:856:void stopEglLocked() -> stopEglLocked
    859:1005:void guardedRun() -> guardedRun
    1010:1016:void setRenderMode(int) -> setRenderMode
    1020:1022:int getRenderMode() -> getRenderMode
    1026:1029:void requestRender() -> requestRender
    1033:1039:void surfaceCreated() -> surfaceCreated
    1043:1056:void surfaceDestroyed() -> surfaceDestroyed
    1060:1066:void onPause() -> onPause
    1070:1077:void onResume() -> onResume
    1081:1105:void onWindowResize(int,int) -> onWindowResize
    1111:1124:void requestExitAndWait() -> requestExitAndWait
    1132:1138:void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread mEglOwner -> mEglOwner
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW this$0 -> this$0
    1206:1211:void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread) -> threadExiting
    1220:1225:boolean tryAcquireEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread) -> tryAcquireEglSurfaceLocked
    1232:1236:void releaseEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread) -> releaseEglSurfaceLocked
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    1164:1165:void close() -> close
    1168:1169:void flush() -> flush
    1172:1180:void write(char[],int,int) -> write
    1183:1189:void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper -> com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper:
    int CONFIG_CHECK_GL_ERROR -> CONFIG_CHECK_GL_ERROR
    int CONFIG_CHECK_THREAD -> CONFIG_CHECK_THREAD
    int CONFIG_LOG_ARGUMENT_NAMES -> CONFIG_LOG_ARGUMENT_NAMES
    int ERROR_WRONG_THREAD -> ERROR_WRONG_THREAD
    56:63:javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer) -> wrap
    72:75:javax.microedition.khronos.egl.EGL wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper:
    boolean mCheckError -> mCheckError
    boolean mCheckThread -> mCheckThread
    java.lang.Thread mOurThread -> mOurThread
    38:48:void checkThread() -> checkThread
    51:57:void checkError() -> checkError
    63:66:void glActiveTexture(int) -> glActiveTexture
    69:72:void glAlphaFunc(int,float) -> glAlphaFunc
    75:78:void glAlphaFuncx(int,int) -> glAlphaFuncx
    81:84:void glBindTexture(int,int) -> glBindTexture
    87:90:void glBlendFunc(int,int) -> glBlendFunc
    93:96:void glClear(int) -> glClear
    99:102:void glClearColor(float,float,float,float) -> glClearColor
    105:108:void glClearColorx(int,int,int,int) -> glClearColorx
    111:114:void glClearDepthf(float) -> glClearDepthf
    117:120:void glClearDepthx(int) -> glClearDepthx
    123:126:void glClearStencil(int) -> glClearStencil
    129:132:void glClientActiveTexture(int) -> glClientActiveTexture
    135:138:void glColor4f(float,float,float,float) -> glColor4f
    141:144:void glColor4x(int,int,int,int) -> glColor4x
    147:150:void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    153:156:void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    160:163:void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    167:170:void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    173:176:void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    179:182:void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    185:188:void glCullFace(int) -> glCullFace
    191:194:void glDeleteTextures(int,int[],int) -> glDeleteTextures
    197:200:void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    203:206:void glDepthFunc(int) -> glDepthFunc
    209:212:void glDepthMask(boolean) -> glDepthMask
    215:218:void glDepthRangef(float,float) -> glDepthRangef
    221:224:void glDepthRangex(int,int) -> glDepthRangex
    227:230:void glDisable(int) -> glDisable
    233:236:void glDisableClientState(int) -> glDisableClientState
    239:242:void glDrawArrays(int,int,int) -> glDrawArrays
    245:248:void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    251:254:void glEnable(int) -> glEnable
    257:260:void glEnableClientState(int) -> glEnableClientState
    263:266:void glFinish() -> glFinish
    269:272:void glFlush() -> glFlush
    275:278:void glFogf(int,float) -> glFogf
    281:284:void glFogfv(int,float[],int) -> glFogfv
    287:290:void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    293:296:void glFogx(int,int) -> glFogx
    299:302:void glFogxv(int,int[],int) -> glFogxv
    305:308:void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    311:314:void glFrontFace(int) -> glFrontFace
    317:320:void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    323:326:void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    329:332:void glGenTextures(int,int[],int) -> glGenTextures
    335:338:void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    341:343:int glGetError() -> glGetError
    347:350:void glGetIntegerv(int,int[],int) -> glGetIntegerv
    353:356:void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    359:362:java.lang.String glGetString(int) -> glGetString
    366:369:void glHint(int,int) -> glHint
    372:375:void glLightModelf(int,float) -> glLightModelf
    378:381:void glLightModelfv(int,float[],int) -> glLightModelfv
    384:387:void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    390:393:void glLightModelx(int,int) -> glLightModelx
    396:399:void glLightModelxv(int,int[],int) -> glLightModelxv
    402:405:void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    408:411:void glLightf(int,int,float) -> glLightf
    414:417:void glLightfv(int,int,float[],int) -> glLightfv
    420:423:void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    426:429:void glLightx(int,int,int) -> glLightx
    432:435:void glLightxv(int,int,int[],int) -> glLightxv
    438:441:void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    444:447:void glLineWidth(float) -> glLineWidth
    450:453:void glLineWidthx(int) -> glLineWidthx
    456:459:void glLoadIdentity() -> glLoadIdentity
    462:465:void glLoadMatrixf(float[],int) -> glLoadMatrixf
    468:471:void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    474:477:void glLoadMatrixx(int[],int) -> glLoadMatrixx
    480:483:void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    486:489:void glLogicOp(int) -> glLogicOp
    492:495:void glMaterialf(int,int,float) -> glMaterialf
    498:501:void glMaterialfv(int,int,float[],int) -> glMaterialfv
    504:507:void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    510:513:void glMaterialx(int,int,int) -> glMaterialx
    516:519:void glMaterialxv(int,int,int[],int) -> glMaterialxv
    522:525:void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    528:531:void glMatrixMode(int) -> glMatrixMode
    534:537:void glMultMatrixf(float[],int) -> glMultMatrixf
    540:543:void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    546:549:void glMultMatrixx(int[],int) -> glMultMatrixx
    552:555:void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    558:561:void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    564:567:void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    570:573:void glNormal3f(float,float,float) -> glNormal3f
    576:579:void glNormal3x(int,int,int) -> glNormal3x
    582:585:void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    588:591:void glOrthof(float,float,float,float,float,float) -> glOrthof
    594:597:void glOrthox(int,int,int,int,int,int) -> glOrthox
    600:603:void glPixelStorei(int,int) -> glPixelStorei
    606:609:void glPointSize(float) -> glPointSize
    612:615:void glPointSizex(int) -> glPointSizex
    618:621:void glPolygonOffset(float,float) -> glPolygonOffset
    624:627:void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    630:633:void glPopMatrix() -> glPopMatrix
    636:639:void glPushMatrix() -> glPushMatrix
    642:645:void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    648:651:void glRotatef(float,float,float,float) -> glRotatef
    654:657:void glRotatex(int,int,int,int) -> glRotatex
    660:663:void glSampleCoverage(float,boolean) -> glSampleCoverage
    666:669:void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    672:675:void glScalef(float,float,float) -> glScalef
    678:681:void glScalex(int,int,int) -> glScalex
    684:687:void glScissor(int,int,int,int) -> glScissor
    690:693:void glShadeModel(int) -> glShadeModel
    696:699:void glStencilFunc(int,int,int) -> glStencilFunc
    702:705:void glStencilMask(int) -> glStencilMask
    708:711:void glStencilOp(int,int,int) -> glStencilOp
    714:717:void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    720:723:void glTexEnvf(int,int,float) -> glTexEnvf
    726:729:void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    732:735:void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    738:741:void glTexEnvx(int,int,int) -> glTexEnvx
    744:747:void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    750:753:void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    757:760:void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    763:766:void glTexParameterf(int,int,float) -> glTexParameterf
    769:772:void glTexParameterx(int,int,int) -> glTexParameterx
    775:778:void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    781:784:void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    788:791:void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    794:797:void glTranslatef(float,float,float) -> glTranslatef
    800:803:void glTranslatex(int,int,int) -> glTranslatex
    806:809:void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    812:815:void glViewport(int,int,int,int) -> glViewport
    818:821:void glClipPlanef(int,float[],int) -> glClipPlanef
    824:827:void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    830:833:void glClipPlanex(int,int[],int) -> glClipPlanex
    836:839:void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    844:847:void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    850:853:void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    856:859:void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    862:865:void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    868:871:void glDrawTexivOES(int[],int) -> glDrawTexivOES
    874:877:void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    880:883:void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    886:889:void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    892:895:void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    898:901:void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    904:907:void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    910:913:void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    916:919:int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    923:926:int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
com.badlogic.gdx.backends.android.surfaceview.GLException -> com.badlogic.gdx.backends.android.surfaceview.GLException:
    int mError -> mError
    32:36:java.lang.String getErrorString(int) -> getErrorString
    40:40:int getError() -> getError
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper:
    int FORMAT_INT -> FORMAT_INT
    int FORMAT_FLOAT -> FORMAT_FLOAT
    int FORMAT_FIXED -> FORMAT_FIXED
    java.io.Writer mLog -> mLog
    boolean mLogArgumentNames -> mLogArgumentNames
    int mArgCount -> mArgCount
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mColorPointer -> mColorPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mNormalPointer -> mNormalPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mTexCoordPointer -> mTexCoordPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mVertexPointer -> mVertexPointer
    boolean mColorArrayEnabled -> mColorArrayEnabled
    boolean mNormalArrayEnabled -> mNormalArrayEnabled
    boolean mTextureCoordArrayEnabled -> mTextureCoordArrayEnabled
    boolean mVertexArrayEnabled -> mVertexArrayEnabled
    java.lang.StringBuilder mStringBuilder -> mStringBuilder
    45:49:void checkError() -> checkError
    52:53:void logLine(java.lang.String) -> logLine
    57:61:void log(java.lang.String) -> log
    64:66:void begin(java.lang.String) -> begin
    69:76:void arg(java.lang.String,java.lang.String) -> arg
    79:81:void end() -> end
    85:89:void flush() -> flush
    92:93:void arg(java.lang.String,boolean) -> arg
    96:97:void arg(java.lang.String,int) -> arg
    100:101:void arg(java.lang.String,float) -> arg
    104:106:void returns(java.lang.String) -> returns
    109:110:void returns(int) -> returns
    113:114:void arg(java.lang.String,int,int[],int) -> arg
    117:118:void arg(java.lang.String,int,short[],int) -> arg
    121:122:void arg(java.lang.String,int,float[],int) -> arg
    125:136:void formattedAppend(java.lang.StringBuilder,int,int) -> formattedAppend
    139:153:java.lang.String toString(int,int,int[],int) -> toString
    157:171:java.lang.String toString(int,short[],int) -> toString
    175:189:java.lang.String toString(int,float[],int) -> toString
    193:199:java.lang.String toString(int,java.nio.FloatBuffer) -> toString
    203:211:java.lang.String toString(int,int,java.nio.IntBuffer) -> toString
    215:221:java.lang.String toString(int,java.nio.ShortBuffer) -> toString
    225:226:void arg(java.lang.String,int,java.nio.FloatBuffer) -> arg
    229:230:void arg(java.lang.String,int,java.nio.IntBuffer) -> arg
    233:234:void arg(java.lang.String,int,java.nio.ShortBuffer) -> arg
    237:241:void argPointer(int,int,int,java.nio.Buffer) -> argPointer
    244:244:java.lang.String getHex(int) -> getHex
    248:264:java.lang.String getErrorString(int) -> getErrorString
    269:294:java.lang.String getClearBufferMask(int) -> getClearBufferMask
    298:323:java.lang.String getFactor(int) -> getFactor
    328:334:java.lang.String getShadeModel(int) -> getShadeModel
    339:343:java.lang.String getTextureTarget(int) -> getTextureTarget
    348:352:java.lang.String getTextureEnvTarget(int) -> getTextureEnvTarget
    357:363:java.lang.String getTextureEnvPName(int) -> getTextureEnvPName
    368:374:int getTextureEnvParamCount(int) -> getTextureEnvParamCount
    379:398:java.lang.String getTextureEnvParamName(float) -> getTextureEnvParamName
    402:410:java.lang.String getMatrixMode(int) -> getMatrixMode
    415:425:java.lang.String getClientState(int) -> getClientState
    430:496:java.lang.String getCap(int) -> getCap
    501:515:java.lang.String getTexturePName(int) -> getTexturePName
    520:543:java.lang.String getTextureParamName(float) -> getTextureParamName
    547:559:java.lang.String getFogPName(int) -> getFogPName
    564:576:int getFogParamCount(int) -> getFogParamCount
    581:597:java.lang.String getBeginMode(int) -> getBeginMode
    602:608:java.lang.String getIndexType(int) -> getIndexType
    613:667:java.lang.String getIntegerStateName(int) -> getIntegerStateName
    672:729:int getIntegerStateSize(int) -> getIntegerStateSize
    734:741:int getIntegerStateFormat(int) -> getIntegerStateFormat
    746:760:java.lang.String getHintTarget(int) -> getHintTarget
    765:773:java.lang.String getHintMode(int) -> getHintMode
    778:782:java.lang.String getFaceName(int) -> getFaceName
    787:801:java.lang.String getMaterialPName(int) -> getMaterialPName
    806:820:int getMaterialParamCount(int) -> getMaterialParamCount
    825:828:java.lang.String getLightName(int) -> getLightName
    832:854:java.lang.String getLightPName(int) -> getLightPName
    859:881:int getLightParamCount(int) -> getLightParamCount
    886:892:java.lang.String getLightModelPName(int) -> getLightModelPName
    897:903:int getLightModelParamCount(int) -> getLightModelParamCount
    908:920:java.lang.String getPointerTypeName(int) -> getPointerTypeName
    925:1017:java.nio.ByteBuffer toByteBuffer(int,java.nio.Buffer) -> toByteBuffer
    1021:1045:char[] toCharIndices(int,int,java.nio.Buffer) -> toCharIndices
    1055:1115:void doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int) -> doArrayElement
    1118:1128:void doElement(java.lang.StringBuilder,int,int) -> doElement
    1131:1135:void bindArrays() -> bindArrays
    1138:1142:void unbindArrays() -> unbindArrays
    1145:1148:void startLogIndices() -> startLogIndices
    1151:1153:void endLogIndices() -> endLogIndices
    1159:1164:void glActiveTexture(int) -> glActiveTexture
    1167:1173:void glAlphaFunc(int,float) -> glAlphaFunc
    1176:1182:void glAlphaFuncx(int,int) -> glAlphaFuncx
    1185:1191:void glBindTexture(int,int) -> glBindTexture
    1194:1201:void glBlendFunc(int,int) -> glBlendFunc
    1204:1210:void glClear(int) -> glClear
    1213:1222:void glClearColor(float,float,float,float) -> glClearColor
    1225:1234:void glClearColorx(int,int,int,int) -> glClearColorx
    1237:1243:void glClearDepthf(float) -> glClearDepthf
    1246:1252:void glClearDepthx(int) -> glClearDepthx
    1255:1261:void glClearStencil(int) -> glClearStencil
    1264:1270:void glClientActiveTexture(int) -> glClientActiveTexture
    1273:1282:void glColor4f(float,float,float,float) -> glColor4f
    1285:1294:void glColor4x(int,int,int,int) -> glColor4x
    1297:1306:void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    1309:1316:void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    1320:1333:void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    1337:1351:void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    1354:1367:void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    1370:1383:void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    1386:1392:void glCullFace(int) -> glCullFace
    1395:1403:void glDeleteTextures(int,int[],int) -> glDeleteTextures
    1406:1413:void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    1416:1422:void glDepthFunc(int) -> glDepthFunc
    1425:1431:void glDepthMask(boolean) -> glDepthMask
    1434:1441:void glDepthRangef(float,float) -> glDepthRangef
    1444:1451:void glDepthRangex(int,int) -> glDepthRangex
    1454:1460:void glDisable(int) -> glDisable
    1463:1483:void glDisableClientState(int) -> glDisableClientState
    1486:1499:void glDrawArrays(int,int,int) -> glDrawArrays
    1502:1517:void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    1520:1526:void glEnable(int) -> glEnable
    1529:1549:void glEnableClientState(int) -> glEnableClientState
    1552:1557:void glFinish() -> glFinish
    1560:1565:void glFlush() -> glFlush
    1568:1575:void glFogf(int,float) -> glFogf
    1578:1586:void glFogfv(int,float[],int) -> glFogfv
    1589:1596:void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    1599:1606:void glFogx(int,int) -> glFogx
    1609:1617:void glFogxv(int,int[],int) -> glFogxv
    1620:1627:void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    1630:1636:void glFrontFace(int) -> glFrontFace
    1639:1650:void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    1653:1664:void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    1667:1677:void glGenTextures(int,int[],int) -> glGenTextures
    1680:1689:void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    1692:1698:int glGetError() -> glGetError
    1702:1712:void glGetIntegerv(int,int[],int) -> glGetIntegerv
    1715:1724:void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    1727:1735:java.lang.String glGetString(int) -> glGetString
    1739:1746:void glHint(int,int) -> glHint
    1749:1756:void glLightModelf(int,float) -> glLightModelf
    1759:1767:void glLightModelfv(int,float[],int) -> glLightModelfv
    1770:1777:void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    1780:1787:void glLightModelx(int,int) -> glLightModelx
    1790:1798:void glLightModelxv(int,int[],int) -> glLightModelxv
    1801:1808:void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    1811:1819:void glLightf(int,int,float) -> glLightf
    1822:1831:void glLightfv(int,int,float[],int) -> glLightfv
    1834:1842:void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    1845:1853:void glLightx(int,int,int) -> glLightx
    1856:1865:void glLightxv(int,int,int[],int) -> glLightxv
    1868:1876:void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    1879:1885:void glLineWidth(float) -> glLineWidth
    1888:1894:void glLineWidthx(int) -> glLineWidthx
    1897:1902:void glLoadIdentity() -> glLoadIdentity
    1905:1912:void glLoadMatrixf(float[],int) -> glLoadMatrixf
    1915:1921:void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    1924:1931:void glLoadMatrixx(int[],int) -> glLoadMatrixx
    1934:1940:void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    1943:1949:void glLogicOp(int) -> glLogicOp
    1952:1960:void glMaterialf(int,int,float) -> glMaterialf
    1963:1972:void glMaterialfv(int,int,float[],int) -> glMaterialfv
    1975:1983:void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    1986:1994:void glMaterialx(int,int,int) -> glMaterialx
    1997:2006:void glMaterialxv(int,int,int[],int) -> glMaterialxv
    2009:2017:void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    2020:2026:void glMatrixMode(int) -> glMatrixMode
    2029:2036:void glMultMatrixf(float[],int) -> glMultMatrixf
    2039:2045:void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    2048:2055:void glMultMatrixx(int[],int) -> glMultMatrixx
    2058:2064:void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    2067:2077:void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    2080:2090:void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    2093:2101:void glNormal3f(float,float,float) -> glNormal3f
    2104:2112:void glNormal3x(int,int,int) -> glNormal3x
    2115:2124:void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    2127:2138:void glOrthof(float,float,float,float,float,float) -> glOrthof
    2141:2152:void glOrthox(int,int,int,int,int,int) -> glOrthox
    2155:2162:void glPixelStorei(int,int) -> glPixelStorei
    2165:2171:void glPointSize(float) -> glPointSize
    2174:2180:void glPointSizex(int) -> glPointSizex
    2183:2189:void glPolygonOffset(float,float) -> glPolygonOffset
    2192:2199:void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    2202:2207:void glPopMatrix() -> glPopMatrix
    2210:2215:void glPushMatrix() -> glPushMatrix
    2218:2230:void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    2233:2242:void glRotatef(float,float,float,float) -> glRotatef
    2245:2254:void glRotatex(int,int,int,int) -> glRotatex
    2257:2264:void glSampleCoverage(float,boolean) -> glSampleCoverage
    2267:2274:void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    2277:2285:void glScalef(float,float,float) -> glScalef
    2288:2296:void glScalex(int,int,int) -> glScalex
    2299:2308:void glScissor(int,int,int,int) -> glScissor
    2311:2317:void glShadeModel(int) -> glShadeModel
    2320:2328:void glStencilFunc(int,int,int) -> glStencilFunc
    2331:2337:void glStencilMask(int) -> glStencilMask
    2340:2348:void glStencilOp(int,int,int) -> glStencilOp
    2351:2358:void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    2361:2369:void glTexEnvf(int,int,float) -> glTexEnvf
    2372:2381:void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    2384:2392:void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    2395:2403:void glTexEnvx(int,int,int) -> glTexEnvx
    2406:2415:void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    2418:2426:void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    2430:2444:void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    2447:2455:void glTexParameterf(int,int,float) -> glTexParameterf
    2458:2466:void glTexParameterx(int,int,int) -> glTexParameterx
    2469:2477:void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    2480:2488:void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    2492:2505:void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    2508:2515:void glTranslatef(float,float,float) -> glTranslatef
    2518:2525:void glTranslatex(int,int,int) -> glTranslatex
    2528:2534:void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    2537:2545:void glViewport(int,int,int,int) -> glViewport
    2548:2555:void glClipPlanef(int,float[],int) -> glClipPlanef
    2558:2564:void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    2567:2574:void glClipPlanex(int,int[],int) -> glClipPlanex
    2577:2583:void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    2588:2597:void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    2600:2606:void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    2609:2614:void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    2617:2626:void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    2629:2635:void glDrawTexivOES(int[],int) -> glDrawTexivOES
    2638:2643:void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    2646:2655:void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    2658:2664:void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    2667:2672:void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    2675:2684:void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    2687:2693:void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    2696:2701:void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    2704:2712:int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    2716:2724:int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
    2730:2730:void glBindBuffer(int,int) -> glBindBuffer
    2734:2734:void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    2738:2738:void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    2742:2742:void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    2746:2746:void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    2750:2750:void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    2754:2754:void glGenBuffers(int,int[],int) -> glGenBuffers
    2758:2758:void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    2762:2762:void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    2766:2766:void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    2770:2770:void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    2774:2774:void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    2778:2778:void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    2782:2782:void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    2786:2786:void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    2790:2790:void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    2794:2794:void glGetFixedv(int,int[],int) -> glGetFixedv
    2798:2798:void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    2802:2802:void glGetFloatv(int,float[],int) -> glGetFloatv
    2806:2806:void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    2810:2810:void glGetLightfv(int,int,float[],int) -> glGetLightfv
    2814:2814:void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    2818:2818:void glGetLightxv(int,int,int[],int) -> glGetLightxv
    2822:2822:void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    2826:2826:void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    2830:2830:void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    2834:2834:void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    2838:2838:void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    2842:2842:void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    2846:2846:void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    2850:2850:void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    2854:2854:void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    2858:2858:void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    2862:2862:void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    2866:2866:void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    2870:2870:void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    2874:2874:void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    2878:2878:void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    2882:2882:boolean glIsBuffer(int) -> glIsBuffer
    2886:2886:boolean glIsEnabled(int) -> glIsEnabled
    2890:2890:boolean glIsTexture(int) -> glIsTexture
    2894:2894:void glPointParameterf(int,float) -> glPointParameterf
    2898:2898:void glPointParameterfv(int,float[],int) -> glPointParameterfv
    2902:2902:void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    2906:2906:void glPointParameterx(int,int) -> glPointParameterx
    2910:2910:void glPointParameterxv(int,int[],int) -> glPointParameterxv
    2914:2914:void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    2918:2918:void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    2922:2922:void glTexEnvi(int,int,int) -> glTexEnvi
    2926:2926:void glTexEnviv(int,int,int[],int) -> glTexEnviv
    2930:2930:void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    2934:2934:void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    2938:2938:void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    2942:2942:void glTexParameteri(int,int,int) -> glTexParameteri
    2946:2946:void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    2950:2950:void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo -> com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo:
    int mSize -> mSize
    int mType -> mType
    int mStride -> mStride
    java.nio.Buffer mPointer -> mPointer
    java.nio.ByteBuffer mTempByteBuffer -> mTempByteBuffer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper this$0 -> this$0
    2971:2983:int sizeof(int) -> sizeof
    2988:2988:int getStride() -> getStride
    2992:2993:void bindByteBuffer() -> bindByteBuffer
    2996:2997:void unbindByteBuffer() -> unbindByteBuffer
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    58:60:void onMeasure(int,int) -> onMeasure
    69:86:void init(boolean,int,int) -> init
    107:110:void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    136:157:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    161:176:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    181:184:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    188:194:void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    197:228:void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    92:97:javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    101:102:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    66:84:void init(boolean,int,int) -> init
    109:112:void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    138:159:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    163:178:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    183:186:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    190:196:void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    199:230:void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    93:98:javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    102:103:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake:
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    java.lang.Object sEglLock -> sEglLock
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    int mRenderMode -> mRenderMode
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    int mSurfaceWidth -> mSurfaceWidth
    int mSurfaceHeight -> mSurfaceHeight
    boolean mHasSurface -> mHasSurface
    176:178:void onMeasure(int,int) -> onMeasure
    183:187:void init() -> init
    198:199:void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper) -> setGLWrapper
    207:208:void setDebugFlags(int) -> setDebugFlags
    213:213:int getDebugFlags() -> getDebugFlags
    240:245:void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    255:259:void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    271:272:void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    282:283:void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    298:302:void setRenderMode(int) -> setRenderMode
    309:309:int getRenderMode() -> getRenderMode
    316:320:void requestRender() -> requestRender
    325:329:void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    335:339:void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    344:349:void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    354:357:void onPause() -> onPause
    363:376:void onResume() -> onResume
    382:385:void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    420:435:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    460:476:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    481:484:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> this$0
    521:541:void start() -> start
    550:580:javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    586:592:boolean swap() -> swap
    596:609:void finish() -> finish
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread:
    boolean mDone -> mDone
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    java.util.ArrayList mEventQueue -> mEventQueue
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper mEglHelper -> mEglHelper
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> this$0
    645:650:void run() -> run
    655:726:void guardedRun() -> guardedRun
    729:741:boolean needToWait() -> needToWait
    745:753:void setRenderMode(int) -> setRenderMode
    757:759:int getRenderMode() -> getRenderMode
    763:766:void requestRender() -> requestRender
    770:773:void surfaceCreated() -> surfaceCreated
    777:780:void surfaceDestroyed() -> surfaceDestroyed
    784:786:void onPause() -> onPause
    790:793:void onResume() -> onResume
    797:802:void onWindowResize(int,int) -> onWindowResize
    808:817:void requestExitAndWait() -> requestExitAndWait
    822:824:void queueEvent(java.lang.Runnable) -> queueEvent
    828:834:java.lang.Runnable getEvent() -> getEvent
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    854:855:void close() -> close
    859:860:void flush() -> flush
    864:872:void write(char[],int,int) -> write
    875:879:void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase -> com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase:
    javax.microedition.khronos.opengles.GL10 mgl -> mgl
    javax.microedition.khronos.opengles.GL10Ext mgl10Ext -> mgl10Ext
    javax.microedition.khronos.opengles.GL11 mgl11 -> mgl11
    javax.microedition.khronos.opengles.GL11Ext mgl11Ext -> mgl11Ext
    javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack -> mgl11ExtensionPack
    54:54:void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    59:59:void glColorPointer(int,int,int,int) -> glColorPointer
    63:63:void glNormalPointer(int,int,int) -> glNormalPointer
    67:67:void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    71:71:void glVertexPointer(int,int,int,int) -> glVertexPointer
    75:75:void glDrawElements(int,int,int,int) -> glDrawElements
    79:79:void glBindBuffer(int,int) -> glBindBuffer
    83:83:void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    87:87:void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    91:91:void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    95:95:void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    99:99:void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    103:103:void glGenBuffers(int,int[],int) -> glGenBuffers
    107:107:void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    111:111:void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    115:115:void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    119:119:void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    123:123:void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    127:127:void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    131:131:void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    135:135:void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    139:139:void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    143:143:void glGetFixedv(int,int[],int) -> glGetFixedv
    147:147:void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    151:151:void glGetFloatv(int,float[],int) -> glGetFloatv
    155:155:void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    159:159:void glGetLightfv(int,int,float[],int) -> glGetLightfv
    163:163:void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    167:167:void glGetLightxv(int,int,int[],int) -> glGetLightxv
    171:171:void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    175:175:void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    179:179:void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    183:183:void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    187:187:void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    191:191:void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    195:195:void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    199:199:void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    203:203:void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    207:207:void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    211:211:void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    215:215:void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    219:219:void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    223:223:void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    227:227:void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    231:231:boolean glIsBuffer(int) -> glIsBuffer
    235:235:boolean glIsEnabled(int) -> glIsEnabled
    239:239:boolean glIsTexture(int) -> glIsTexture
    243:243:void glPointParameterf(int,float) -> glPointParameterf
    247:247:void glPointParameterfv(int,float[],int) -> glPointParameterfv
    251:251:void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    255:255:void glPointParameterx(int,int) -> glPointParameterx
    259:259:void glPointParameterxv(int,int[],int) -> glPointParameterxv
    263:263:void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    267:267:void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    271:271:void glTexEnvi(int,int,int) -> glTexEnvi
    275:275:void glTexEnviv(int,int,int[],int) -> glTexEnviv
    279:279:void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    283:283:void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    287:287:void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    291:291:void glTexParameteri(int,int,int) -> glTexParameteri
    295:295:void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    299:299:void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
    305:305:void glCurrentPaletteMatrixOES(int) -> glCurrentPaletteMatrixOES
    309:309:void glLoadPaletteFromModelViewMatrixOES() -> glLoadPaletteFromModelViewMatrixOES
    313:313:void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer) -> glMatrixIndexPointerOES
    317:317:void glMatrixIndexPointerOES(int,int,int,int) -> glMatrixIndexPointerOES
    321:321:void glWeightPointerOES(int,int,int,java.nio.Buffer) -> glWeightPointerOES
    325:325:void glWeightPointerOES(int,int,int,int) -> glWeightPointerOES
    331:331:void glBindFramebufferOES(int,int) -> glBindFramebufferOES
    335:335:void glBindRenderbufferOES(int,int) -> glBindRenderbufferOES
    339:339:void glBlendEquation(int) -> glBlendEquation
    343:343:void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    347:347:void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    351:351:int glCheckFramebufferStatusOES(int) -> glCheckFramebufferStatusOES
    355:355:void glCompressedTexImage2D(int,int,int,int,int,int,int) -> glCompressedTexImage2D
    359:359:void glDeleteFramebuffersOES(int,int[],int) -> glDeleteFramebuffersOES
    363:363:void glDeleteFramebuffersOES(int,java.nio.IntBuffer) -> glDeleteFramebuffersOES
    367:367:void glDeleteRenderbuffersOES(int,int[],int) -> glDeleteRenderbuffersOES
    371:371:void glDeleteRenderbuffersOES(int,java.nio.IntBuffer) -> glDeleteRenderbuffersOES
    375:375:void glFramebufferRenderbufferOES(int,int,int,int) -> glFramebufferRenderbufferOES
    379:379:void glFramebufferTexture2DOES(int,int,int,int,int) -> glFramebufferTexture2DOES
    383:383:void glGenerateMipmapOES(int) -> glGenerateMipmapOES
    387:387:void glGenFramebuffersOES(int,int[],int) -> glGenFramebuffersOES
    391:391:void glGenFramebuffersOES(int,java.nio.IntBuffer) -> glGenFramebuffersOES
    395:395:void glGenRenderbuffersOES(int,int[],int) -> glGenRenderbuffersOES
    399:399:void glGenRenderbuffersOES(int,java.nio.IntBuffer) -> glGenRenderbuffersOES
    403:403:void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int) -> glGetFramebufferAttachmentParameterivOES
    407:407:void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameterivOES
    411:411:void glGetRenderbufferParameterivOES(int,int,int[],int) -> glGetRenderbufferParameterivOES
    415:415:void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameterivOES
    419:419:void glGetTexGenfv(int,int,float[],int) -> glGetTexGenfv
    423:423:void glGetTexGenfv(int,int,java.nio.FloatBuffer) -> glGetTexGenfv
    427:427:void glGetTexGeniv(int,int,int[],int) -> glGetTexGeniv
    431:431:void glGetTexGeniv(int,int,java.nio.IntBuffer) -> glGetTexGeniv
    435:435:void glGetTexGenxv(int,int,int[],int) -> glGetTexGenxv
    439:439:void glGetTexGenxv(int,int,java.nio.IntBuffer) -> glGetTexGenxv
    443:443:boolean glIsFramebufferOES(int) -> glIsFramebufferOES
    447:447:boolean glIsRenderbufferOES(int) -> glIsRenderbufferOES
    451:451:void glRenderbufferStorageOES(int,int,int,int) -> glRenderbufferStorageOES
    455:455:void glTexGenf(int,int,float) -> glTexGenf
    459:459:void glTexGenfv(int,int,float[],int) -> glTexGenfv
    463:463:void glTexGenfv(int,int,java.nio.FloatBuffer) -> glTexGenfv
    467:467:void glTexGeni(int,int,int) -> glTexGeni
    471:471:void glTexGeniv(int,int,int[],int) -> glTexGeniv
    475:475:void glTexGeniv(int,int,java.nio.IntBuffer) -> glTexGeniv
    479:479:void glTexGenx(int,int,int) -> glTexGenx
    483:483:void glTexGenxv(int,int,int[],int) -> glTexGenxv
    487:487:void glTexGenxv(int,int,java.nio.IntBuffer) -> glTexGenxv
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int EGL_COVERAGE_BUFFERS_NV -> EGL_COVERAGE_BUFFERS_NV
    int EGL_COVERAGE_SAMPLES_NV -> EGL_COVERAGE_SAMPLES_NV
    java.lang.String TAG -> TAG
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int mNumSamples -> mNumSamples
    boolean mUseGL20 -> mUseGL20
    int[] mConfigAttribs -> mConfigAttribs
    int[] mValue -> mValue
    65:85:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    89:152:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    156:159:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    163:169:void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    172:207:void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy:
    float ratio -> ratio
    40:56:com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension:
    int width -> width
    int height -> height
com.badlogic.gdx.files.FileHandle -> com.badlogic.gdx.files.FileHandle:
    java.io.File file -> file
    com.badlogic.gdx.Files$FileType type -> type
    78:78:java.lang.String path() -> path
    83:83:java.lang.String name() -> name
    87:90:java.lang.String extension() -> extension
    95:98:java.lang.String nameWithoutExtension() -> nameWithoutExtension
    104:107:java.lang.String pathWithoutExtension() -> pathWithoutExtension
    111:111:com.badlogic.gdx.Files$FileType type() -> type
    117:118:java.io.File file() -> file
    124:135:java.io.InputStream read() -> read
    142:142:java.io.BufferedInputStream read(int) -> read
    148:148:java.io.Reader reader() -> reader
    155:157:java.io.Reader reader(java.lang.String) -> reader
    164:164:java.io.BufferedReader reader(int) -> reader
    171:173:java.io.BufferedReader reader(int,java.lang.String) -> reader
    180:180:java.lang.String readString() -> readString
    186:209:java.lang.String readString(java.lang.String) -> readString
    215:249:byte[] readBytes() -> readBytes
    258:274:int readBytes(byte[],int,int) -> readBytes
    282:290:java.io.OutputStream write(boolean) -> write
    300:319:void write(java.io.InputStream,boolean) -> write
    329:329:java.io.Writer writer(boolean) -> writer
    338:350:java.io.Writer writer(boolean,java.lang.String) -> writer
    359:360:void writeString(java.lang.String,boolean) -> writeString
    368:378:void writeString(java.lang.String,boolean,java.lang.String) -> writeString
    387:396:void writeBytes(byte[],boolean) -> writeBytes
    405:414:void writeBytes(byte[],int,int,boolean) -> writeBytes
    423:429:com.badlogic.gdx.files.FileHandle[] list() -> list
    437:453:com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    460:461:boolean isDirectory() -> isDirectory
    468:469:com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    476:477:com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    481:488:com.badlogic.gdx.files.FileHandle parent() -> parent
    493:496:void mkdirs() -> mkdirs
    501:508:boolean exists() -> exists
    514:516:boolean delete() -> delete
    522:524:boolean deleteDirectory() -> deleteDirectory
    530:531:void emptyDirectory() -> emptyDirectory
    536:539:void emptyDirectory(boolean) -> emptyDirectory
    550:564:void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    570:574:void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
    579:592:long length() -> length
    599:599:long lastModified() -> lastModified
    603:603:java.lang.String toString() -> toString
    608:610:com.badlogic.gdx.files.FileHandle tempFile(java.lang.String) -> tempFile
    616:621:com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String) -> tempDirectory
    626:639:void emptyDirectory(java.io.File,boolean) -> emptyDirectory
    642:643:boolean deleteDirectory(java.io.File) -> deleteDirectory
    648:650:void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyFile
    656:666:void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyDirectory
com.badlogic.gdx.files.FileHandle$1 -> com.badlogic.gdx.files.FileHandle$1:
    int[] $SwitchMap$com$badlogic$gdx$Files$FileType -> a
com.badlogic.gdx.files.FileHandleStream -> com.badlogic.gdx.files.FileHandleStream:
    34:34:boolean isDirectory() -> isDirectory
    38:38:long length() -> length
    42:42:boolean exists() -> exists
    46:46:com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    50:50:com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    54:54:com.badlogic.gdx.files.FileHandle parent() -> parent
    58:58:java.io.InputStream read() -> read
    62:62:java.io.OutputStream write(boolean) -> write
    66:66:com.badlogic.gdx.files.FileHandle[] list() -> list
    70:70:void mkdirs() -> mkdirs
    74:74:boolean delete() -> delete
    78:78:boolean deleteDirectory() -> deleteDirectory
    82:82:void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    86:86:void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
com.badlogic.gdx.graphics.Camera -> com.badlogic.gdx.graphics.Camera:
    com.badlogic.gdx.math.Vector3 position -> a
    com.badlogic.gdx.math.Vector3 direction -> b
    com.badlogic.gdx.math.Vector3 up -> c
    com.badlogic.gdx.math.Matrix4 projection -> d
    com.badlogic.gdx.math.Matrix4 view -> e
    com.badlogic.gdx.math.Matrix4 combined -> f
    com.badlogic.gdx.math.Matrix4 invProjectionView -> g
    float near -> h
    float far -> i
    float viewportWidth -> j
    float viewportHeight -> k
    com.badlogic.gdx.math.Frustum frustum -> l
    com.badlogic.gdx.math.Matrix4 tmpMat -> o
    com.badlogic.gdx.math.Vector3 tmpVec -> p
    com.badlogic.gdx.math.Vector3 right -> m
    com.badlogic.gdx.math.collision.Ray ray -> n
    void update() -> a
    void update$1385ff() -> b
    77:81:void apply(com.badlogic.gdx.graphics.GL10) -> a
    88:89:void lookAt$483d242b() -> c
    96:98:void normalizeUp() -> d
    108:109:void rotate(float,float,float,float) -> a
    117:120:void rotate(com.badlogic.gdx.math.Vector3,float) -> a
    129:135:void rotateAround(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> a
    142:143:void translate(float,float,float) -> a
    148:149:void translate(com.badlogic.gdx.math.Vector3) -> c
    165:173:void unproject$649c6b07(com.badlogic.gdx.math.Vector3,float,float) -> a
    184:185:void unproject(com.badlogic.gdx.math.Vector3) -> a
    194:195:void project(com.badlogic.gdx.math.Vector3) -> b
    211:215:void project$649c6b07(com.badlogic.gdx.math.Vector3,float,float) -> b
    227:230:com.badlogic.gdx.math.collision.Ray getPickRay$5acfe6a4(float,float,float,float) -> b
    241:241:com.badlogic.gdx.math.collision.Ray getPickRay(float,float) -> a
com.badlogic.gdx.graphics.Color -> com.badlogic.gdx.graphics.Color:
    com.badlogic.gdx.graphics.Color CLEAR -> a
    com.badlogic.gdx.graphics.Color WHITE -> b
    com.badlogic.gdx.graphics.Color BLACK -> c
    com.badlogic.gdx.graphics.Color RED -> d
    com.badlogic.gdx.graphics.Color GREEN -> e
    com.badlogic.gdx.graphics.Color BLUE -> f
    com.badlogic.gdx.graphics.Color LIGHT_GRAY -> g
    com.badlogic.gdx.graphics.Color GRAY -> h
    com.badlogic.gdx.graphics.Color DARK_GRAY -> i
    com.badlogic.gdx.graphics.Color PINK -> j
    com.badlogic.gdx.graphics.Color ORANGE -> k
    com.badlogic.gdx.graphics.Color YELLOW -> l
    com.badlogic.gdx.graphics.Color MAGENTA -> m
    com.badlogic.gdx.graphics.Color CYAN -> n
    com.badlogic.gdx.graphics.Color tmp -> o
    float r -> p
    float g -> q
    float b -> r
    float a -> s
    75:80:com.badlogic.gdx.graphics.Color set(com.badlogic.gdx.graphics.Color) -> a
    88:93:com.badlogic.gdx.graphics.Color mul(com.badlogic.gdx.graphics.Color) -> b
    101:106:com.badlogic.gdx.graphics.Color mul(float) -> a
    114:119:com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color) -> d
    127:132:com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color) -> e
    136:151:void clamp() -> b
    154:158:void set(float,float,float,float) -> a
    162:165:boolean equals(java.lang.Object) -> equals
    170:174:int hashCode() -> hashCode
    181:182:float toFloatBits() -> a
    188:189:int toIntBits() -> c
    194:198:java.lang.String toString() -> toString
    204:208:com.badlogic.gdx.graphics.Color valueOf(java.lang.String) -> a
    220:222:float toFloatBits(int,int,int,int) -> a
    229:230:float toFloatBits(float,float,float,float) -> b
    241:241:int toIntBits(int,int,int,int) -> b
    245:245:int alpha(float) -> b
    249:249:int luminanceAlpha(float,float) -> a
    253:253:int rgb565(float,float,float) -> a
    257:257:int rgba4444(float,float,float,float) -> d
    261:261:int rgb888(float,float,float) -> b
    265:265:int rgba8888(float,float,float,float) -> c
    269:269:int rgb565(com.badlogic.gdx.graphics.Color) -> f
    273:273:int rgba4444(com.badlogic.gdx.graphics.Color) -> g
    277:277:int rgb888(com.badlogic.gdx.graphics.Color) -> h
    281:281:int rgba8888(com.badlogic.gdx.graphics.Color) -> c
    290:293:void rgb565ToColor(com.badlogic.gdx.graphics.Color,int) -> a
    301:305:void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int) -> b
    313:316:void rgb888ToColor(com.badlogic.gdx.graphics.Color,int) -> c
    324:328:void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int) -> d
    334:334:com.badlogic.gdx.graphics.Color tmp() -> d
    339:339:com.badlogic.gdx.graphics.Color cpy() -> e
com.badlogic.gdx.graphics.FPSLogger -> com.badlogic.gdx.graphics.FPSLogger:
    long startTime -> a
    34:38:void log() -> a
com.badlogic.gdx.graphics.GL10 -> com.badlogic.gdx.graphics.GL10:
    int GL_OES_VERSION_1_0 -> a
    int GL_OES_read_format -> b
    int GL_OES_compressed_paletted_texture -> c
    int GL_DEPTH_BUFFER_BIT -> d
    int GL_STENCIL_BUFFER_BIT -> e
    int GL_COLOR_BUFFER_BIT -> f
    int GL_FALSE -> g
    int GL_TRUE -> h
    int GL_POINTS -> i
    int GL_LINES -> j
    int GL_LINE_LOOP -> k
    int GL_LINE_STRIP -> l
    int GL_TRIANGLES -> m
    int GL_TRIANGLE_STRIP -> n
    int GL_TRIANGLE_FAN -> o
    int GL_NEVER -> p
    int GL_LESS -> q
    int GL_EQUAL -> r
    int GL_LEQUAL -> s
    int GL_GREATER -> t
    int GL_NOTEQUAL -> u
    int GL_GEQUAL -> v
    int GL_ALWAYS -> w
    int GL_ZERO -> x
    int GL_ONE -> y
    int GL_SRC_COLOR -> z
    int GL_ONE_MINUS_SRC_COLOR -> A
    int GL_SRC_ALPHA -> B
    int GL_ONE_MINUS_SRC_ALPHA -> C
    int GL_DST_ALPHA -> D
    int GL_ONE_MINUS_DST_ALPHA -> E
    int GL_DST_COLOR -> F
    int GL_ONE_MINUS_DST_COLOR -> G
    int GL_SRC_ALPHA_SATURATE -> H
    int GL_FRONT -> I
    int GL_BACK -> J
    int GL_FRONT_AND_BACK -> K
    int GL_FOG -> L
    int GL_LIGHTING -> M
    int GL_TEXTURE_2D -> N
    int GL_CULL_FACE -> O
    int GL_ALPHA_TEST -> P
    int GL_BLEND -> Q
    int GL_COLOR_LOGIC_OP -> R
    int GL_DITHER -> S
    int GL_STENCIL_TEST -> T
    int GL_DEPTH_TEST -> U
    int GL_POINT_SMOOTH -> V
    int GL_LINE_SMOOTH -> W
    int GL_SCISSOR_TEST -> X
    int GL_COLOR_MATERIAL -> Y
    int GL_NORMALIZE -> Z
    int GL_RESCALE_NORMAL -> aa
    int GL_POLYGON_OFFSET_FILL -> ab
    int GL_VERTEX_ARRAY -> ac
    int GL_NORMAL_ARRAY -> ad
    int GL_COLOR_ARRAY -> ae
    int GL_TEXTURE_COORD_ARRAY -> af
    int GL_MULTISAMPLE -> ag
    int GL_SAMPLE_ALPHA_TO_COVERAGE -> ah
    int GL_SAMPLE_ALPHA_TO_ONE -> ai
    int GL_SAMPLE_COVERAGE -> aj
    int GL_NO_ERROR -> ak
    int GL_INVALID_ENUM -> al
    int GL_INVALID_VALUE -> am
    int GL_INVALID_OPERATION -> an
    int GL_STACK_OVERFLOW -> ao
    int GL_STACK_UNDERFLOW -> ap
    int GL_OUT_OF_MEMORY -> aq
    int GL_EXP -> ar
    int GL_EXP2 -> as
    int GL_FOG_DENSITY -> at
    int GL_FOG_START -> au
    int GL_FOG_END -> av
    int GL_FOG_MODE -> aw
    int GL_FOG_COLOR -> ax
    int GL_CW -> ay
    int GL_CCW -> az
    int GL_SMOOTH_POINT_SIZE_RANGE -> aA
    int GL_SMOOTH_LINE_WIDTH_RANGE -> aB
    int GL_ALIASED_POINT_SIZE_RANGE -> aC
    int GL_ALIASED_LINE_WIDTH_RANGE -> aD
    int GL_IMPLEMENTATION_COLOR_READ_TYPE_OES -> aE
    int GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES -> aF
    int GL_MAX_LIGHTS -> aG
    int GL_MAX_TEXTURE_SIZE -> aH
    int GL_MAX_MODELVIEW_STACK_DEPTH -> aI
    int GL_MAX_PROJECTION_STACK_DEPTH -> aJ
    int GL_MAX_TEXTURE_STACK_DEPTH -> aK
    int GL_MAX_VIEWPORT_DIMS -> aL
    int GL_MAX_ELEMENTS_VERTICES -> aM
    int GL_MAX_ELEMENTS_INDICES -> aN
    int GL_MAX_TEXTURE_UNITS -> aO
    int GL_NUM_COMPRESSED_TEXTURE_FORMATS -> aP
    int GL_COMPRESSED_TEXTURE_FORMATS -> aQ
    int GL_SUBPIXEL_BITS -> aR
    int GL_RED_BITS -> aS
    int GL_GREEN_BITS -> aT
    int GL_BLUE_BITS -> aU
    int GL_ALPHA_BITS -> aV
    int GL_DEPTH_BITS -> aW
    int GL_STENCIL_BITS -> aX
    int GL_DONT_CARE -> aY
    int GL_FASTEST -> aZ
    int GL_NICEST -> ba
    int GL_PERSPECTIVE_CORRECTION_HINT -> bb
    int GL_POINT_SMOOTH_HINT -> bc
    int GL_LINE_SMOOTH_HINT -> bd
    int GL_POLYGON_SMOOTH_HINT -> be
    int GL_FOG_HINT -> bf
    int GL_LIGHT_MODEL_AMBIENT -> bg
    int GL_LIGHT_MODEL_TWO_SIDE -> bh
    int GL_AMBIENT -> bi
    int GL_DIFFUSE -> bj
    int GL_SPECULAR -> bk
    int GL_POSITION -> bl
    int GL_SPOT_DIRECTION -> bm
    int GL_SPOT_EXPONENT -> bn
    int GL_SPOT_CUTOFF -> bo
    int GL_CONSTANT_ATTENUATION -> bp
    int GL_LINEAR_ATTENUATION -> bq
    int GL_QUADRATIC_ATTENUATION -> br
    int GL_BYTE -> bs
    int GL_UNSIGNED_BYTE -> bt
    int GL_SHORT -> bu
    int GL_UNSIGNED_SHORT -> bv
    int GL_FLOAT -> bw
    int GL_CLEAR -> bx
    int GL_AND -> by
    int GL_AND_REVERSE -> bz
    int GL_COPY -> bA
    int GL_AND_INVERTED -> bB
    int GL_NOOP -> bC
    int GL_XOR -> bD
    int GL_OR -> bE
    int GL_NOR -> bF
    int GL_EQUIV -> bG
    int GL_INVERT -> bH
    int GL_OR_REVERSE -> bI
    int GL_COPY_INVERTED -> bJ
    int GL_OR_INVERTED -> bK
    int GL_NAND -> bL
    int GL_SET -> bM
    int GL_EMISSION -> bN
    int GL_SHININESS -> bO
    int GL_AMBIENT_AND_DIFFUSE -> bP
    int GL_MODELVIEW -> bQ
    int GL_PROJECTION -> bR
    int GL_TEXTURE -> bS
    int GL_ALPHA -> bT
    int GL_RGB -> bU
    int GL_RGBA -> bV
    int GL_LUMINANCE -> bW
    int GL_LUMINANCE_ALPHA -> bX
    int GL_UNPACK_ALIGNMENT -> bY
    int GL_PACK_ALIGNMENT -> bZ
    int GL_UNSIGNED_SHORT_4_4_4_4 -> ca
    int GL_UNSIGNED_SHORT_5_5_5_1 -> cb
    int GL_UNSIGNED_SHORT_5_6_5 -> cc
    int GL_FLAT -> cd
    int GL_SMOOTH -> ce
    int GL_KEEP -> cf
    int GL_REPLACE -> cg
    int GL_INCR -> ch
    int GL_DECR -> ci
    int GL_VENDOR -> cj
    int GL_RENDERER -> ck
    int GL_VERSION -> cl
    int GL_EXTENSIONS -> cm
    int GL_MODULATE -> cn
    int GL_DECAL -> co
    int GL_ADD -> cp
    int GL_TEXTURE_ENV_MODE -> cq
    int GL_TEXTURE_ENV_COLOR -> cr
    int GL_TEXTURE_ENV -> cs
    int GL_NEAREST -> ct
    int GL_LINEAR -> cu
    int GL_NEAREST_MIPMAP_NEAREST -> cv
    int GL_LINEAR_MIPMAP_NEAREST -> cw
    int GL_NEAREST_MIPMAP_LINEAR -> cx
    int GL_LINEAR_MIPMAP_LINEAR -> cy
    int GL_TEXTURE_MAG_FILTER -> cz
    int GL_TEXTURE_MIN_FILTER -> cA
    int GL_TEXTURE_WRAP_S -> cB
    int GL_TEXTURE_WRAP_T -> cC
    int GL_TEXTURE0 -> cD
    int GL_TEXTURE1 -> cE
    int GL_TEXTURE2 -> cF
    int GL_TEXTURE3 -> cG
    int GL_TEXTURE4 -> cH
    int GL_TEXTURE5 -> cI
    int GL_TEXTURE6 -> cJ
    int GL_TEXTURE7 -> cK
    int GL_TEXTURE8 -> cL
    int GL_TEXTURE9 -> cM
    int GL_TEXTURE10 -> cN
    int GL_TEXTURE11 -> cO
    int GL_TEXTURE12 -> cP
    int GL_TEXTURE13 -> cQ
    int GL_TEXTURE14 -> cR
    int GL_TEXTURE15 -> cS
    int GL_TEXTURE16 -> cT
    int GL_TEXTURE17 -> cU
    int GL_TEXTURE18 -> cV
    int GL_TEXTURE19 -> cW
    int GL_TEXTURE20 -> cX
    int GL_TEXTURE21 -> cY
    int GL_TEXTURE22 -> cZ
    int GL_TEXTURE23 -> da
    int GL_TEXTURE24 -> db
    int GL_TEXTURE25 -> dc
    int GL_TEXTURE26 -> dd
    int GL_TEXTURE27 -> de
    int GL_TEXTURE28 -> df
    int GL_TEXTURE29 -> dg
    int GL_TEXTURE30 -> dh
    int GL_TEXTURE31 -> di
    int GL_REPEAT -> dj
    int GL_CLAMP_TO_EDGE -> dk
    int GL_PALETTE4_RGB8_OES -> dl
    int GL_PALETTE4_RGBA8_OES -> dm
    int GL_PALETTE4_R5_G6_B5_OES -> dn
    int GL_PALETTE4_RGBA4_OES -> do
    int GL_PALETTE4_RGB5_A1_OES -> dp
    int GL_PALETTE8_RGB8_OES -> dq
    int GL_PALETTE8_RGBA8_OES -> dr
    int GL_PALETTE8_R5_G6_B5_OES -> ds
    int GL_PALETTE8_RGBA4_OES -> dt
    int GL_PALETTE8_RGB5_A1_OES -> du
    int GL_LIGHT0 -> dv
    int GL_LIGHT1 -> dw
    int GL_LIGHT2 -> dx
    int GL_LIGHT3 -> dy
    int GL_LIGHT4 -> dz
    int GL_LIGHT5 -> dA
    int GL_LIGHT6 -> dB
    int GL_LIGHT7 -> dC
    int GL_POINT -> dD
    int GL_LINE -> dE
    int GL_FILL -> dF
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDisableClientState(int) -> glDisableClientState
    void glEnableClientState(int) -> glEnableClientState
    void glFogf(int,float) -> glFogf
    void glFogfv(int,float[],int) -> glFogfv
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glPointSize(float) -> glPointSize
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glRotatef(float,float,float,float) -> glRotatef
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScalef(float,float,float) -> glScalef
    void glShadeModel(int) -> glShadeModel
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTranslatef(float,float,float) -> glTranslatef
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glPolygonMode(int,int) -> glPolygonMode
com.badlogic.gdx.graphics.GL11 -> com.badlogic.gdx.graphics.GL11:
    int GL_OES_VERSION_1_0 -> dG
    int GL_MAX_ELEMENTS_VERTICES -> dH
    int GL_MAX_ELEMENTS_INDICES -> dI
    int GL_POLYGON_SMOOTH_HINT -> dJ
    int GL_VERSION_ES_CM_1_0 -> dK
    int GL_VERSION_ES_CL_1_0 -> dL
    int GL_VERSION_ES_CM_1_1 -> dM
    int GL_VERSION_ES_CL_1_1 -> dN
    int GL_CLIP_PLANE0 -> dO
    int GL_CLIP_PLANE1 -> dP
    int GL_CLIP_PLANE2 -> dQ
    int GL_CLIP_PLANE3 -> dR
    int GL_CLIP_PLANE4 -> dS
    int GL_CLIP_PLANE5 -> dT
    int GL_CURRENT_COLOR -> dU
    int GL_CURRENT_NORMAL -> dV
    int GL_CURRENT_TEXTURE_COORDS -> dW
    int GL_POINT_SIZE -> dX
    int GL_POINT_SIZE_MIN -> dY
    int GL_POINT_SIZE_MAX -> dZ
    int GL_POINT_FADE_THRESHOLD_SIZE -> ea
    int GL_POINT_DISTANCE_ATTENUATION -> eb
    int GL_LINE_WIDTH -> ec
    int GL_CULL_FACE_MODE -> ed
    int GL_FRONT_FACE -> ee
    int GL_SHADE_MODEL -> ef
    int GL_DEPTH_RANGE -> eg
    int GL_DEPTH_WRITEMASK -> eh
    int GL_DEPTH_CLEAR_VALUE -> ei
    int GL_DEPTH_FUNC -> ej
    int GL_STENCIL_CLEAR_VALUE -> ek
    int GL_STENCIL_FUNC -> el
    int GL_STENCIL_VALUE_MASK -> em
    int GL_STENCIL_FAIL -> en
    int GL_STENCIL_PASS_DEPTH_FAIL -> eo
    int GL_STENCIL_PASS_DEPTH_PASS -> ep
    int GL_STENCIL_REF -> eq
    int GL_STENCIL_WRITEMASK -> er
    int GL_MATRIX_MODE -> es
    int GL_VIEWPORT -> et
    int GL_MODELVIEW_STACK_DEPTH -> eu
    int GL_PROJECTION_STACK_DEPTH -> ev
    int GL_TEXTURE_STACK_DEPTH -> ew
    int GL_MODELVIEW_MATRIX -> ex
    int GL_PROJECTION_MATRIX -> ey
    int GL_TEXTURE_MATRIX -> ez
    int GL_ALPHA_TEST_FUNC -> eA
    int GL_ALPHA_TEST_REF -> eB
    int GL_BLEND_DST -> eC
    int GL_BLEND_SRC -> eD
    int GL_LOGIC_OP_MODE -> eE
    int GL_SCISSOR_BOX -> eF
    int GL_COLOR_CLEAR_VALUE -> eG
    int GL_COLOR_WRITEMASK -> eH
    int GL_MAX_CLIP_PLANES -> eI
    int GL_POLYGON_OFFSET_UNITS -> eJ
    int GL_POLYGON_OFFSET_FACTOR -> eK
    int GL_TEXTURE_BINDING_2D -> eL
    int GL_VERTEX_ARRAY_SIZE -> eM
    int GL_VERTEX_ARRAY_TYPE -> eN
    int GL_VERTEX_ARRAY_STRIDE -> eO
    int GL_NORMAL_ARRAY_TYPE -> eP
    int GL_NORMAL_ARRAY_STRIDE -> eQ
    int GL_COLOR_ARRAY_SIZE -> eR
    int GL_COLOR_ARRAY_TYPE -> eS
    int GL_COLOR_ARRAY_STRIDE -> eT
    int GL_TEXTURE_COORD_ARRAY_SIZE -> eU
    int GL_TEXTURE_COORD_ARRAY_TYPE -> eV
    int GL_TEXTURE_COORD_ARRAY_STRIDE -> eW
    int GL_VERTEX_ARRAY_POINTER -> eX
    int GL_NORMAL_ARRAY_POINTER -> eY
    int GL_COLOR_ARRAY_POINTER -> eZ
    int GL_TEXTURE_COORD_ARRAY_POINTER -> fa
    int GL_SAMPLE_BUFFERS -> fb
    int GL_SAMPLES -> fc
    int GL_SAMPLE_COVERAGE_VALUE -> fd
    int GL_SAMPLE_COVERAGE_INVERT -> fe
    int GL_GENERATE_MIPMAP_HINT -> ff
    int GL_GENERATE_MIPMAP -> fg
    int GL_ACTIVE_TEXTURE -> fh
    int GL_CLIENT_ACTIVE_TEXTURE -> fi
    int GL_ARRAY_BUFFER -> fj
    int GL_ELEMENT_ARRAY_BUFFER -> fk
    int GL_ARRAY_BUFFER_BINDING -> fl
    int GL_ELEMENT_ARRAY_BUFFER_BINDING -> fm
    int GL_VERTEX_ARRAY_BUFFER_BINDING -> fn
    int GL_NORMAL_ARRAY_BUFFER_BINDING -> fo
    int GL_COLOR_ARRAY_BUFFER_BINDING -> fp
    int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING -> fq
    int GL_STATIC_DRAW -> fr
    int GL_DYNAMIC_DRAW -> fs
    int GL_BUFFER_SIZE -> ft
    int GL_BUFFER_USAGE -> fu
    int GL_SUBTRACT -> fv
    int GL_COMBINE -> fw
    int GL_COMBINE_RGB -> fx
    int GL_COMBINE_ALPHA -> fy
    int GL_RGB_SCALE -> fz
    int GL_ADD_SIGNED -> fA
    int GL_INTERPOLATE -> fB
    int GL_CONSTANT -> fC
    int GL_PRIMARY_COLOR -> fD
    int GL_PREVIOUS -> fE
    int GL_OPERAND0_RGB -> fF
    int GL_OPERAND1_RGB -> fG
    int GL_OPERAND2_RGB -> fH
    int GL_OPERAND0_ALPHA -> fI
    int GL_OPERAND1_ALPHA -> fJ
    int GL_OPERAND2_ALPHA -> fK
    int GL_ALPHA_SCALE -> fL
    int GL_SRC0_RGB -> fM
    int GL_SRC1_RGB -> fN
    int GL_SRC2_RGB -> fO
    int GL_SRC0_ALPHA -> fP
    int GL_SRC1_ALPHA -> fQ
    int GL_SRC2_ALPHA -> fR
    int GL_DOT3_RGB -> fS
    int GL_DOT3_RGBA -> fT
    int GL_POINT_SIZE_ARRAY_OES -> fU
    int GL_POINT_SIZE_ARRAY_TYPE_OES -> fV
    int GL_POINT_SIZE_ARRAY_STRIDE_OES -> fW
    int GL_POINT_SIZE_ARRAY_POINTER_OES -> fX
    int GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES -> fY
    int GL_POINT_SPRITE_OES -> fZ
    int GL_COORD_REPLACE_OES -> ga
    int GL_OES_point_size_array -> gb
    int GL_OES_point_sprite -> gc
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
com.badlogic.gdx.graphics.GL20 -> com.badlogic.gdx.graphics.GL20:
    int GL_ES_VERSION_2_0 -> a
    int GL_DEPTH_BUFFER_BIT -> b
    int GL_STENCIL_BUFFER_BIT -> c
    int GL_COLOR_BUFFER_BIT -> d
    int GL_FALSE -> e
    int GL_TRUE -> f
    int GL_POINTS -> g
    int GL_LINES -> h
    int GL_LINE_LOOP -> i
    int GL_LINE_STRIP -> j
    int GL_TRIANGLES -> k
    int GL_TRIANGLE_STRIP -> l
    int GL_TRIANGLE_FAN -> m
    int GL_ZERO -> n
    int GL_ONE -> o
    int GL_SRC_COLOR -> p
    int GL_ONE_MINUS_SRC_COLOR -> q
    int GL_SRC_ALPHA -> r
    int GL_ONE_MINUS_SRC_ALPHA -> s
    int GL_DST_ALPHA -> t
    int GL_ONE_MINUS_DST_ALPHA -> u
    int GL_DST_COLOR -> v
    int GL_ONE_MINUS_DST_COLOR -> w
    int GL_SRC_ALPHA_SATURATE -> x
    int GL_FUNC_ADD -> y
    int GL_BLEND_EQUATION -> z
    int GL_BLEND_EQUATION_RGB -> A
    int GL_BLEND_EQUATION_ALPHA -> B
    int GL_FUNC_SUBTRACT -> C
    int GL_FUNC_REVERSE_SUBTRACT -> D
    int GL_BLEND_DST_RGB -> E
    int GL_BLEND_SRC_RGB -> F
    int GL_BLEND_DST_ALPHA -> G
    int GL_BLEND_SRC_ALPHA -> H
    int GL_CONSTANT_COLOR -> I
    int GL_ONE_MINUS_CONSTANT_COLOR -> J
    int GL_CONSTANT_ALPHA -> K
    int GL_ONE_MINUS_CONSTANT_ALPHA -> L
    int GL_BLEND_COLOR -> M
    int GL_ARRAY_BUFFER -> N
    int GL_ELEMENT_ARRAY_BUFFER -> O
    int GL_ARRAY_BUFFER_BINDING -> P
    int GL_ELEMENT_ARRAY_BUFFER_BINDING -> Q
    int GL_STREAM_DRAW -> R
    int GL_STATIC_DRAW -> S
    int GL_DYNAMIC_DRAW -> T
    int GL_BUFFER_SIZE -> U
    int GL_BUFFER_USAGE -> V
    int GL_CURRENT_VERTEX_ATTRIB -> W
    int GL_FRONT -> X
    int GL_BACK -> Y
    int GL_FRONT_AND_BACK -> Z
    int GL_TEXTURE_2D -> aa
    int GL_CULL_FACE -> ab
    int GL_BLEND -> ac
    int GL_DITHER -> ad
    int GL_STENCIL_TEST -> ae
    int GL_DEPTH_TEST -> af
    int GL_SCISSOR_TEST -> ag
    int GL_POLYGON_OFFSET_FILL -> ah
    int GL_SAMPLE_ALPHA_TO_COVERAGE -> ai
    int GL_SAMPLE_COVERAGE -> aj
    int GL_NO_ERROR -> ak
    int GL_INVALID_ENUM -> al
    int GL_INVALID_VALUE -> am
    int GL_INVALID_OPERATION -> an
    int GL_OUT_OF_MEMORY -> ao
    int GL_CW -> ap
    int GL_CCW -> aq
    int GL_LINE_WIDTH -> ar
    int GL_ALIASED_POINT_SIZE_RANGE -> as
    int GL_ALIASED_LINE_WIDTH_RANGE -> at
    int GL_CULL_FACE_MODE -> au
    int GL_FRONT_FACE -> av
    int GL_DEPTH_RANGE -> aw
    int GL_DEPTH_WRITEMASK -> ax
    int GL_DEPTH_CLEAR_VALUE -> ay
    int GL_DEPTH_FUNC -> az
    int GL_STENCIL_CLEAR_VALUE -> aA
    int GL_STENCIL_FUNC -> aB
    int GL_STENCIL_FAIL -> aC
    int GL_STENCIL_PASS_DEPTH_FAIL -> aD
    int GL_STENCIL_PASS_DEPTH_PASS -> aE
    int GL_STENCIL_REF -> aF
    int GL_STENCIL_VALUE_MASK -> aG
    int GL_STENCIL_WRITEMASK -> aH
    int GL_STENCIL_BACK_FUNC -> aI
    int GL_STENCIL_BACK_FAIL -> aJ
    int GL_STENCIL_BACK_PASS_DEPTH_FAIL -> aK
    int GL_STENCIL_BACK_PASS_DEPTH_PASS -> aL
    int GL_STENCIL_BACK_REF -> aM
    int GL_STENCIL_BACK_VALUE_MASK -> aN
    int GL_STENCIL_BACK_WRITEMASK -> aO
    int GL_VIEWPORT -> aP
    int GL_SCISSOR_BOX -> aQ
    int GL_COLOR_CLEAR_VALUE -> aR
    int GL_COLOR_WRITEMASK -> aS
    int GL_UNPACK_ALIGNMENT -> aT
    int GL_PACK_ALIGNMENT -> aU
    int GL_MAX_TEXTURE_SIZE -> aV
    int GL_MAX_TEXTURE_UNITS -> aW
    int GL_MAX_VIEWPORT_DIMS -> aX
    int GL_SUBPIXEL_BITS -> aY
    int GL_RED_BITS -> aZ
    int GL_GREEN_BITS -> ba
    int GL_BLUE_BITS -> bb
    int GL_ALPHA_BITS -> bc
    int GL_DEPTH_BITS -> bd
    int GL_STENCIL_BITS -> be
    int GL_POLYGON_OFFSET_UNITS -> bf
    int GL_POLYGON_OFFSET_FACTOR -> bg
    int GL_TEXTURE_BINDING_2D -> bh
    int GL_SAMPLE_BUFFERS -> bi
    int GL_SAMPLES -> bj
    int GL_SAMPLE_COVERAGE_VALUE -> bk
    int GL_SAMPLE_COVERAGE_INVERT -> bl
    int GL_NUM_COMPRESSED_TEXTURE_FORMATS -> bm
    int GL_COMPRESSED_TEXTURE_FORMATS -> bn
    int GL_DONT_CARE -> bo
    int GL_FASTEST -> bp
    int GL_NICEST -> bq
    int GL_GENERATE_MIPMAP_HINT -> br
    int GL_BYTE -> bs
    int GL_UNSIGNED_BYTE -> bt
    int GL_SHORT -> bu
    int GL_UNSIGNED_SHORT -> bv
    int GL_INT -> bw
    int GL_UNSIGNED_INT -> bx
    int GL_FLOAT -> by
    int GL_FIXED -> bz
    int GL_DEPTH_COMPONENT -> bA
    int GL_ALPHA -> bB
    int GL_RGB -> bC
    int GL_RGBA -> bD
    int GL_LUMINANCE -> bE
    int GL_LUMINANCE_ALPHA -> bF
    int GL_UNSIGNED_SHORT_4_4_4_4 -> bG
    int GL_UNSIGNED_SHORT_5_5_5_1 -> bH
    int GL_UNSIGNED_SHORT_5_6_5 -> bI
    int GL_FRAGMENT_SHADER -> bJ
    int GL_VERTEX_SHADER -> bK
    int GL_MAX_VERTEX_ATTRIBS -> bL
    int GL_MAX_VERTEX_UNIFORM_VECTORS -> bM
    int GL_MAX_VARYING_VECTORS -> bN
    int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS -> bO
    int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS -> bP
    int GL_MAX_TEXTURE_IMAGE_UNITS -> bQ
    int GL_MAX_FRAGMENT_UNIFORM_VECTORS -> bR
    int GL_SHADER_TYPE -> bS
    int GL_DELETE_STATUS -> bT
    int GL_LINK_STATUS -> bU
    int GL_VALIDATE_STATUS -> bV
    int GL_ATTACHED_SHADERS -> bW
    int GL_ACTIVE_UNIFORMS -> bX
    int GL_ACTIVE_UNIFORM_MAX_LENGTH -> bY
    int GL_ACTIVE_ATTRIBUTES -> bZ
    int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH -> ca
    int GL_SHADING_LANGUAGE_VERSION -> cb
    int GL_CURRENT_PROGRAM -> cc
    int GL_NEVER -> cd
    int GL_LESS -> ce
    int GL_EQUAL -> cf
    int GL_LEQUAL -> cg
    int GL_GREATER -> ch
    int GL_NOTEQUAL -> ci
    int GL_GEQUAL -> cj
    int GL_ALWAYS -> ck
    int GL_KEEP -> cl
    int GL_REPLACE -> cm
    int GL_INCR -> cn
    int GL_DECR -> co
    int GL_INVERT -> cp
    int GL_INCR_WRAP -> cq
    int GL_DECR_WRAP -> cr
    int GL_VENDOR -> cs
    int GL_RENDERER -> ct
    int GL_VERSION -> cu
    int GL_EXTENSIONS -> cv
    int GL_NEAREST -> cw
    int GL_LINEAR -> cx
    int GL_NEAREST_MIPMAP_NEAREST -> cy
    int GL_LINEAR_MIPMAP_NEAREST -> cz
    int GL_NEAREST_MIPMAP_LINEAR -> cA
    int GL_LINEAR_MIPMAP_LINEAR -> cB
    int GL_TEXTURE_MAG_FILTER -> cC
    int GL_TEXTURE_MIN_FILTER -> cD
    int GL_TEXTURE_WRAP_S -> cE
    int GL_TEXTURE_WRAP_T -> cF
    int GL_TEXTURE -> cG
    int GL_TEXTURE_CUBE_MAP -> cH
    int GL_TEXTURE_BINDING_CUBE_MAP -> cI
    int GL_TEXTURE_CUBE_MAP_POSITIVE_X -> cJ
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_X -> cK
    int GL_TEXTURE_CUBE_MAP_POSITIVE_Y -> cL
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y -> cM
    int GL_TEXTURE_CUBE_MAP_POSITIVE_Z -> cN
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z -> cO
    int GL_MAX_CUBE_MAP_TEXTURE_SIZE -> cP
    int GL_TEXTURE0 -> cQ
    int GL_TEXTURE1 -> cR
    int GL_TEXTURE2 -> cS
    int GL_TEXTURE3 -> cT
    int GL_TEXTURE4 -> cU
    int GL_TEXTURE5 -> cV
    int GL_TEXTURE6 -> cW
    int GL_TEXTURE7 -> cX
    int GL_TEXTURE8 -> cY
    int GL_TEXTURE9 -> cZ
    int GL_TEXTURE10 -> da
    int GL_TEXTURE11 -> db
    int GL_TEXTURE12 -> dc
    int GL_TEXTURE13 -> dd
    int GL_TEXTURE14 -> de
    int GL_TEXTURE15 -> df
    int GL_TEXTURE16 -> dg
    int GL_TEXTURE17 -> dh
    int GL_TEXTURE18 -> di
    int GL_TEXTURE19 -> dj
    int GL_TEXTURE20 -> dk
    int GL_TEXTURE21 -> dl
    int GL_TEXTURE22 -> dm
    int GL_TEXTURE23 -> dn
    int GL_TEXTURE24 -> do
    int GL_TEXTURE25 -> dp
    int GL_TEXTURE26 -> dq
    int GL_TEXTURE27 -> dr
    int GL_TEXTURE28 -> ds
    int GL_TEXTURE29 -> dt
    int GL_TEXTURE30 -> du
    int GL_TEXTURE31 -> dv
    int GL_ACTIVE_TEXTURE -> dw
    int GL_REPEAT -> dx
    int GL_CLAMP_TO_EDGE -> dy
    int GL_MIRRORED_REPEAT -> dz
    int GL_FLOAT_VEC2 -> dA
    int GL_FLOAT_VEC3 -> dB
    int GL_FLOAT_VEC4 -> dC
    int GL_INT_VEC2 -> dD
    int GL_INT_VEC3 -> dE
    int GL_INT_VEC4 -> dF
    int GL_BOOL -> dG
    int GL_BOOL_VEC2 -> dH
    int GL_BOOL_VEC3 -> dI
    int GL_BOOL_VEC4 -> dJ
    int GL_FLOAT_MAT2 -> dK
    int GL_FLOAT_MAT3 -> dL
    int GL_FLOAT_MAT4 -> dM
    int GL_SAMPLER_2D -> dN
    int GL_SAMPLER_CUBE -> dO
    int GL_VERTEX_ATTRIB_ARRAY_ENABLED -> dP
    int GL_VERTEX_ATTRIB_ARRAY_SIZE -> dQ
    int GL_VERTEX_ATTRIB_ARRAY_STRIDE -> dR
    int GL_VERTEX_ATTRIB_ARRAY_TYPE -> dS
    int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED -> dT
    int GL_VERTEX_ATTRIB_ARRAY_POINTER -> dU
    int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING -> dV
    int GL_IMPLEMENTATION_COLOR_READ_TYPE -> dW
    int GL_IMPLEMENTATION_COLOR_READ_FORMAT -> dX
    int GL_COMPILE_STATUS -> dY
    int GL_INFO_LOG_LENGTH -> dZ
    int GL_SHADER_SOURCE_LENGTH -> ea
    int GL_SHADER_COMPILER -> eb
    int GL_SHADER_BINARY_FORMATS -> ec
    int GL_NUM_SHADER_BINARY_FORMATS -> ed
    int GL_LOW_FLOAT -> ee
    int GL_MEDIUM_FLOAT -> ef
    int GL_HIGH_FLOAT -> eg
    int GL_LOW_INT -> eh
    int GL_MEDIUM_INT -> ei
    int GL_HIGH_INT -> ej
    int GL_FRAMEBUFFER -> ek
    int GL_RENDERBUFFER -> el
    int GL_RGBA4 -> em
    int GL_RGB5_A1 -> en
    int GL_RGB565 -> eo
    int GL_DEPTH_COMPONENT16 -> ep
    int GL_STENCIL_INDEX -> eq
    int GL_STENCIL_INDEX8 -> er
    int GL_RENDERBUFFER_WIDTH -> es
    int GL_RENDERBUFFER_HEIGHT -> et
    int GL_RENDERBUFFER_INTERNAL_FORMAT -> eu
    int GL_RENDERBUFFER_RED_SIZE -> ev
    int GL_RENDERBUFFER_GREEN_SIZE -> ew
    int GL_RENDERBUFFER_BLUE_SIZE -> ex
    int GL_RENDERBUFFER_ALPHA_SIZE -> ey
    int GL_RENDERBUFFER_DEPTH_SIZE -> ez
    int GL_RENDERBUFFER_STENCIL_SIZE -> eA
    int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE -> eB
    int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME -> eC
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL -> eD
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE -> eE
    int GL_COLOR_ATTACHMENT0 -> eF
    int GL_DEPTH_ATTACHMENT -> eG
    int GL_STENCIL_ATTACHMENT -> eH
    int GL_NONE -> eI
    int GL_FRAMEBUFFER_COMPLETE -> eJ
    int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT -> eK
    int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT -> eL
    int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS -> eM
    int GL_FRAMEBUFFER_UNSUPPORTED -> eN
    int GL_FRAMEBUFFER_BINDING -> eO
    int GL_RENDERBUFFER_BINDING -> eP
    int GL_MAX_RENDERBUFFER_SIZE -> eQ
    int GL_INVALID_FRAMEBUFFER_OPERATION -> eR
    int GL_VERTEX_PROGRAM_POINT_SIZE -> eS
    int GL_COVERAGE_BUFFER_BIT_NV -> eT
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDetachShader(int,int) -> glDetachShader
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String) -> glGetShaderSource
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLinkProgram(int) -> glLinkProgram
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
com.badlogic.gdx.graphics.GLCommon -> com.badlogic.gdx.graphics.GLCommon:
    int GL_GENERATE_MIPMAP -> gd
    int GL_TEXTURE_MAX_ANISOTROPY_EXT -> ge
    int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT -> gf
    void glActiveTexture(int) -> glActiveTexture
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFrontFace(int) -> glFrontFace
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLineWidth(float) -> glLineWidth
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glScissor(int,int,int,int) -> glScissor
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.graphics.GLU -> com.badlogic.gdx.graphics.GLU:
    void gluLookAt(com.badlogic.gdx.graphics.GL10,float,float,float,float,float,float,float,float,float) -> gluLookAt
    void gluOrtho2D(com.badlogic.gdx.graphics.GL10,float,float,float,float) -> gluOrtho2D
    void gluPerspective(com.badlogic.gdx.graphics.GL10,float,float,float,float) -> gluPerspective
    boolean gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int) -> gluProject
    boolean gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int) -> gluUnProject
com.badlogic.gdx.graphics.Mesh -> com.badlogic.gdx.graphics.Mesh:
    java.util.Map meshes -> a
    boolean forceVBO -> b
    com.badlogic.gdx.graphics.glutils.VertexData vertices -> c
    com.badlogic.gdx.graphics.glutils.IndexData indices -> d
    boolean autoBind -> e
    boolean isVertexArray -> f
    163:187:com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.math.Matrix4[]) -> a
    198:198:com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[]) -> a
    211:252:com.badlogic.gdx.graphics.Mesh create$d50af5c(boolean,com.badlogic.gdx.graphics.Mesh[]) -> b
    260:261:void setVertices(float[]) -> a
    270:271:void setVertices$1cc109a0(float[],int) -> a
    276:277:void getVertices(float[]) -> b
    283:284:void getVertices(int,float[]) -> a
    291:292:void getVertices(int,int,float[]) -> a
    301:315:void getVertices(int,int,float[],int) -> a
    321:322:void setIndices(short[]) -> a
    330:331:void setIndices(short[],int,int) -> a
    336:337:void getIndices(short[]) -> b
    343:350:void getIndices(short[],int) -> a
    354:354:int getNumIndices() -> a
    359:359:int getNumVertices() -> b
    364:364:int getMaxVertices() -> c
    369:369:int getMaxIndices() -> d
    374:374:int getVertexSize() -> e
    384:385:void setAutoBind$1385ff() -> f
    390:393:void bind() -> g
    398:401:void unbind() -> h
    408:412:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    419:425:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    438:439:void render(int) -> a
    455:479:void render(int,int,int) -> a
    501:502:void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> a
    528:554:void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int) -> a
    558:561:void dispose() -> dispose
    568:573:com.badlogic.gdx.graphics.VertexAttribute getVertexAttribute(int) -> b
    578:578:com.badlogic.gdx.graphics.VertexAttributes getVertexAttributes() -> i
    583:583:java.nio.FloatBuffer getVerticesBuffer() -> j
    591:593:com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox() -> m
    601:631:void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
    635:635:java.nio.ShortBuffer getIndicesBuffer() -> k
    639:643:void addManagedMesh(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Mesh) -> a
    648:656:void invalidateAllMeshes(com.badlogic.gdx.Application) -> a
    660:661:void clearAllMeshes(com.badlogic.gdx.Application) -> b
    664:672:java.lang.String getManagedStatus() -> l
    682:717:void scale(float,float,float) -> a
    725:726:void transform(com.badlogic.gdx.math.Matrix4) -> a
    730:742:void transform$a96d63c(com.badlogic.gdx.math.Matrix4,int) -> a
    755:789:void transform(com.badlogic.gdx.math.Matrix4,float[],int,int,int,int,int) -> a
    801:884:com.badlogic.gdx.graphics.Mesh copy$6ce8aecd(boolean) -> a
    892:892:com.badlogic.gdx.graphics.Mesh copy(boolean) -> b
com.badlogic.gdx.graphics.Mesh$VertexDataType -> com.badlogic.gdx.graphics.Mesh$VertexDataType:
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexArray -> a
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObject -> b
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectSubData -> c
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] $VALUES -> d
    71:71:com.badlogic.gdx.graphics.Mesh$VertexDataType[] values() -> values
    71:71:com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.OrthographicCamera -> com.badlogic.gdx.graphics.OrthographicCamera:
    float zoom -> o
    com.badlogic.gdx.math.Vector3 tmp -> p
    62:82:void findDirectionForIsoView$483d2f6e(float) -> a
    85:96:float calculateAngle(float) -> b
    100:104:com.badlogic.gdx.math.Vector3 calculateDirection(float) -> c
    111:112:void update() -> a
    116:127:void update$1385ff() -> b
    133:134:void setToOrtho(boolean) -> a
    142:150:void setToOrtho(boolean,float,float) -> a
    155:156:void rotate(float) -> d
    162:163:void translate(float,float) -> a
    168:169:void translate(com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.graphics.PerspectiveCamera -> com.badlogic.gdx.graphics.PerspectiveCamera:
    float fieldOfView -> o
    com.badlogic.gdx.math.Vector3 tmp -> p
    49:50:void update() -> a
    54:65:void update$1385ff() -> b
com.badlogic.gdx.graphics.Pixmap -> com.badlogic.gdx.graphics.Pixmap:
    com.badlogic.gdx.graphics.Pixmap$Blending blending -> c
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap pixmap -> a
    int color -> b
    boolean disposed -> d
    98:100:void setBlending(com.badlogic.gdx.graphics.Pixmap$Blending) -> a
    106:107:void setFilter(com.badlogic.gdx.graphics.Pixmap$Filter) -> a
    153:154:void setColor$13462e() -> a
    163:164:void setColor(float,float,float,float) -> a
    169:170:void setColor(com.badlogic.gdx.graphics.Color) -> a
    174:175:void fill() -> b
    191:192:void drawLine(int,int,int,int) -> b
    202:203:void drawRectangle(int,int,int,int) -> c
    211:212:void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int) -> a
    224:225:void drawPixmap$23690701(com.badlogic.gdx.graphics.Pixmap,int,int,int,int) -> a
    242:243:void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int,int,int) -> a
    253:254:void fillRectangle(int,int,int,int) -> a
    262:263:void drawCircle(int,int,int) -> b
    271:272:void fillCircle(int,int,int) -> a
    280:280:int getPixel(int,int) -> a
    285:285:int getWidth() -> c
    290:290:int getHeight() -> d
    295:298:void dispose() -> dispose
    305:306:void drawPixel(int,int) -> c
    314:315:void drawPixel$4868d30e(int,int) -> b
    321:321:int getGLFormat() -> e
    328:328:int getGLInternalFormat() -> f
    335:335:int getGLType() -> g
    344:345:java.nio.ByteBuffer getPixels() -> h
    350:350:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    355:355:com.badlogic.gdx.graphics.Pixmap$Blending getBlending() -> j
com.badlogic.gdx.graphics.Pixmap$Blending -> com.badlogic.gdx.graphics.Pixmap$Blending:
    com.badlogic.gdx.graphics.Pixmap$Blending None -> a
    com.badlogic.gdx.graphics.Pixmap$Blending SourceOver -> b
    com.badlogic.gdx.graphics.Pixmap$Blending[] $VALUES -> c
    76:76:com.badlogic.gdx.graphics.Pixmap$Blending[] values() -> values
    76:76:com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Filter -> com.badlogic.gdx.graphics.Pixmap$Filter:
    com.badlogic.gdx.graphics.Pixmap$Filter NearestNeighbour -> a
    com.badlogic.gdx.graphics.Pixmap$Filter BiLinear -> b
    com.badlogic.gdx.graphics.Pixmap$Filter[] $VALUES -> c
    83:83:com.badlogic.gdx.graphics.Pixmap$Filter[] values() -> values
    83:83:com.badlogic.gdx.graphics.Pixmap$Filter valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Format -> com.badlogic.gdx.graphics.Pixmap$Format:
    com.badlogic.gdx.graphics.Pixmap$Format Alpha -> a
    com.badlogic.gdx.graphics.Pixmap$Format Intensity -> b
    com.badlogic.gdx.graphics.Pixmap$Format LuminanceAlpha -> c
    com.badlogic.gdx.graphics.Pixmap$Format RGB565 -> d
    com.badlogic.gdx.graphics.Pixmap$Format RGBA4444 -> e
    com.badlogic.gdx.graphics.Pixmap$Format RGB888 -> f
    com.badlogic.gdx.graphics.Pixmap$Format RGBA8888 -> g
    com.badlogic.gdx.graphics.Pixmap$Format[] $VALUES -> h
    49:49:com.badlogic.gdx.graphics.Pixmap$Format[] values() -> values
    49:49:com.badlogic.gdx.graphics.Pixmap$Format valueOf(java.lang.String) -> valueOf
    53:60:int toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format) -> a
    64:70:com.badlogic.gdx.graphics.Pixmap$Format fromGdx2DPixmapFormat(int) -> a
com.badlogic.gdx.graphics.PixmapIO -> com.badlogic.gdx.graphics.PixmapIO:
    41:42:void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> b
    48:48:com.badlogic.gdx.graphics.Pixmap readCIM(com.badlogic.gdx.files.FileHandle) -> a
    55:57:void writePNG(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> a
com.badlogic.gdx.graphics.PixmapIO$CIM -> com.badlogic.gdx.graphics.PixmapIO$CIM:
    int BUFFER_SIZE -> a
    byte[] writeBuffer -> b
    byte[] readBuffer -> c
    68:105:void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> a
    110:141:com.badlogic.gdx.graphics.Pixmap read(com.badlogic.gdx.files.FileHandle) -> a
com.badlogic.gdx.graphics.PixmapIO$PNG -> com.badlogic.gdx.graphics.PixmapIO$PNG:
    int[] crcTable -> a
    int ZLIB_BLOCK_SIZE -> b
    157:167:byte[] write(com.badlogic.gdx.graphics.Pixmap) -> a
    171:180:byte[] createHeaderChunk(int,int) -> a
    184:206:byte[] createDataChunk(com.badlogic.gdx.graphics.Pixmap) -> b
    210:210:byte[] createTrailerChunk() -> a
    214:233:byte[] toChunk(java.lang.String,byte[]) -> a
    237:244:void createCRCTable() -> b
    247:250:int updateCRC(int,byte[]) -> a
    259:278:byte[] toZLIB(byte[]) -> a
    283:290:void writeUncompressedDeflateBlock(java.io.DataOutputStream,boolean,byte[],int,char) -> a
    293:300:int calcADLER32(byte[]) -> b
com.badlogic.gdx.graphics.Texture -> com.badlogic.gdx.graphics.Texture:
    boolean enforcePotImages -> h
    com.badlogic.gdx.assets.AssetManager assetManager -> i
    java.util.Map managedTextures -> a
    java.nio.IntBuffer buffer -> j
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> c
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> d
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> e
    int glHandle -> f
    com.badlogic.gdx.graphics.TextureData data -> g
    158:161:void create(com.badlogic.gdx.graphics.TextureData) -> b
    164:167:int createGLHandle() -> k
    171:199:void load(com.badlogic.gdx.graphics.TextureData) -> a
    202:230:void uploadImageData(com.badlogic.gdx.graphics.Pixmap) -> b
    235:238:void reload() -> l
    243:244:void bind() -> a
    250:252:void bind(int) -> a
    261:266:void draw$34373841(com.badlogic.gdx.graphics.Pixmap) -> a
    270:270:int getWidth() -> b
    275:275:int getHeight() -> c
    279:279:com.badlogic.gdx.graphics.Texture$TextureFilter getMinFilter() -> d
    283:283:com.badlogic.gdx.graphics.Texture$TextureFilter getMagFilter() -> e
    287:287:com.badlogic.gdx.graphics.Texture$TextureWrap getUWrap() -> f
    291:291:com.badlogic.gdx.graphics.Texture$TextureWrap getVWrap() -> g
    295:295:com.badlogic.gdx.graphics.TextureData getTextureData() -> h
    300:300:boolean isManaged() -> m
    304:304:int getTextureObjectHandle() -> i
    312:317:void setWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> a
    320:325:void setFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> a
    333:340:void dispose() -> dispose
    344:345:void setEnforcePotImages(boolean) -> a
    348:352:void addManagedTexture(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Texture) -> a
    356:357:void clearAllTextures(com.badlogic.gdx.Application) -> a
    361:417:void invalidateAllTextures(com.badlogic.gdx.Application) -> b
    424:425:void setAssetManager(com.badlogic.gdx.assets.AssetManager) -> a
    428:435:java.lang.String getManagedStatus() -> j
    440:440:int getNumManagedTextures() -> n
com.badlogic.gdx.graphics.Texture$1 -> com.badlogic.gdx.graphics.Texture$1:
    int val$refCount -> a
    404:405:void finishedLoading$190c2c84(com.badlogic.gdx.assets.AssetManager,java.lang.String) -> a
com.badlogic.gdx.graphics.Texture$TextureFilter -> com.badlogic.gdx.graphics.Texture$TextureFilter:
    com.badlogic.gdx.graphics.Texture$TextureFilter Nearest -> a
    com.badlogic.gdx.graphics.Texture$TextureFilter Linear -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMap -> c
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestNearest -> d
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearNearest -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestLinear -> f
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearLinear -> g
    int glEnum -> glEnum
    com.badlogic.gdx.graphics.Texture$TextureFilter[] $VALUES -> h
    74:74:com.badlogic.gdx.graphics.Texture$TextureFilter[] values() -> values
    74:74:com.badlogic.gdx.graphics.Texture$TextureFilter valueOf(java.lang.String) -> valueOf
    86:86:boolean isMipMap() -> a
    90:90:int getGLEnum() -> b
com.badlogic.gdx.graphics.Texture$TextureWrap -> com.badlogic.gdx.graphics.Texture$TextureWrap:
    com.badlogic.gdx.graphics.Texture$TextureWrap MirroredRepeat -> a
    com.badlogic.gdx.graphics.Texture$TextureWrap ClampToEdge -> b
    com.badlogic.gdx.graphics.Texture$TextureWrap Repeat -> c
    int glEnum -> glEnum
    com.badlogic.gdx.graphics.Texture$TextureWrap[] $VALUES -> d
    94:94:com.badlogic.gdx.graphics.Texture$TextureWrap[] values() -> values
    94:94:com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String) -> valueOf
    104:104:int getGLEnum() -> a
com.badlogic.gdx.graphics.TextureData -> com.badlogic.gdx.graphics.TextureData:
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    boolean isPrepared() -> b
    void prepare() -> c
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    boolean disposePixmap() -> e
    void consumeCompressedData() -> f
    int getWidth() -> g
    int getHeight() -> h
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    boolean useMipMaps() -> j
    boolean isManaged() -> k
com.badlogic.gdx.graphics.TextureData$TextureDataType -> com.badlogic.gdx.graphics.TextureData$TextureDataType:
    com.badlogic.gdx.graphics.TextureData$TextureDataType Pixmap -> a
    com.badlogic.gdx.graphics.TextureData$TextureDataType Compressed -> b
    com.badlogic.gdx.graphics.TextureData$TextureDataType Float -> c
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] $VALUES -> d
    41:41:com.badlogic.gdx.graphics.TextureData$TextureDataType[] values() -> values
    41:41:com.badlogic.gdx.graphics.TextureData$TextureDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.TextureDict -> com.badlogic.gdx.graphics.TextureDict:
    com.badlogic.gdx.utils.ObjectMap sDictionary -> a
    41:41:com.badlogic.gdx.graphics.TextureRef loadTexture(java.lang.String) -> b
    53:65:com.badlogic.gdx.graphics.TextureRef loadTexture(java.lang.String,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> a
    72:73:void removeTexture(java.lang.String) -> a
    77:81:void unloadAll() -> a
com.badlogic.gdx.graphics.TextureRef -> com.badlogic.gdx.graphics.TextureRef:
    java.lang.String Name -> a
    int mRefCount -> b
    com.badlogic.gdx.graphics.Texture mTexture -> c
    40:41:void addRef() -> a
    46:52:int unload() -> c
    56:57:void dispose() -> b
    61:62:void bind() -> d
    67:67:com.badlogic.gdx.graphics.Texture get() -> e
com.badlogic.gdx.graphics.VertexAttribute -> com.badlogic.gdx.graphics.VertexAttribute:
    int usage -> a
    int numComponents -> b
    int offset -> c
    java.lang.String alias -> d
    51:51:com.badlogic.gdx.graphics.VertexAttribute Position() -> a
    55:55:com.badlogic.gdx.graphics.VertexAttribute TexCoords(int) -> a
    59:59:com.badlogic.gdx.graphics.VertexAttribute Normal() -> b
    63:63:com.badlogic.gdx.graphics.VertexAttribute Color() -> c
    67:67:com.badlogic.gdx.graphics.VertexAttribute ColorUnpacked() -> d
    73:77:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.VertexAttributes -> com.badlogic.gdx.graphics.VertexAttributes:
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> b
    int vertexSize -> a
    59:61:int getOffset(int) -> b
    67:70:com.badlogic.gdx.graphics.VertexAttribute findByUsage(int) -> c
    74:84:int calculateOffsets() -> b
    88:112:void checkValidity() -> c
    116:116:int size() -> a
    122:122:com.badlogic.gdx.graphics.VertexAttribute get(int) -> a
    126:141:java.lang.String toString() -> toString
    146:152:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.VertexAttributes$Usage -> com.badlogic.gdx.graphics.VertexAttributes$Usage:
    int Position -> a
    int Color -> b
    int ColorPacked -> c
    int Normal -> d
    int TextureCoordinates -> e
    int Generic -> f
com.badlogic.gdx.graphics.g2d.Animation -> com.badlogic.gdx.graphics.g2d.Animation:
    int NORMAL -> a
    int REVERSED -> b
    int LOOP -> c
    int LOOP_REVERSED -> d
    int LOOP_PINGPONG -> e
    int LOOP_RANDOM -> f
    com.badlogic.gdx.graphics.g2d.TextureRegion[] keyFrames -> g
    float frameDuration -> h
    float animationDuration -> i
    int playMode -> j
    95:107:com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float,boolean) -> a
    117:118:com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float) -> a
    125:159:int getKeyFrameIndex(float) -> b
    167:168:void setPlayMode(int) -> a
    174:176:boolean isAnimationFinished(float) -> c
com.badlogic.gdx.graphics.g2d.BitmapFont -> com.badlogic.gdx.graphics.g2d.BitmapFont:
    int LOG2_PAGE_SIZE -> e
    int PAGE_SIZE -> f
    int PAGES -> g
    char[] xChars -> a
    char[] capChars -> b
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> c
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> d
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> h
    boolean flipped -> i
    boolean integer -> j
    boolean ownsTexture -> k
    135:200:void load(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData) -> a
    205:208:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float) -> a
    214:217:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,int,int) -> a
    223:226:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float) -> b
    233:236:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> a
    243:246:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float) -> a
    254:257:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> b
    263:263:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence) -> a
    269:269:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> a
    275:275:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int) -> a
    283:304:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> a
    310:310:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence) -> b
    316:329:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> b
    335:335:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float) -> a
    342:384:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> a
    392:430:void computeGlyphAdvancesAndPositions(java.lang.CharSequence,com.badlogic.gdx.utils.FloatArray,com.badlogic.gdx.utils.FloatArray) -> a
    436:466:int computeVisibleGlyphs(java.lang.CharSequence,int,int,float) -> a
    470:471:void setColor(float) -> a
    474:475:void setColor(com.badlogic.gdx.graphics.Color) -> a
    478:479:void setColor(float,float,float,float) -> a
    484:484:com.badlogic.gdx.graphics.Color getColor() -> a
    488:500:void setScale(float,float) -> a
    507:508:void setScale(float) -> b
    512:513:void scale(float) -> c
    516:516:float getScaleX() -> b
    520:520:float getScaleY() -> c
    524:524:com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> d
    529:529:float getLineHeight() -> i
    534:534:float getSpaceWidth() -> j
    539:539:float getXHeight() -> k
    545:545:float getCapHeight() -> e
    550:550:float getAscent() -> l
    556:556:float getDescent() -> f
    561:561:boolean isFlipped() -> g
    566:567:void dispose() -> dispose
    572:585:void setFixedWidthGlyphs(java.lang.CharSequence) -> c
    589:589:boolean containsCharacter(char) -> a
    594:596:void setUseIntegerPositions(boolean) -> a
    600:600:boolean usesIntegerPositions() -> h
    604:604:com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData() -> m
    611:611:boolean ownsTexture() -> n
    621:622:void setOwnsTexture(boolean) -> b
    650:653:int indexOf$4d218b0e(java.lang.CharSequence,int) -> a
    657:664:boolean isWhitespace(char) -> b
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData -> com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData:
    java.lang.String imagePath -> a
    com.badlogic.gdx.files.FileHandle fontFile -> b
    boolean flipped -> c
    float lineHeight -> d
    float capHeight -> e
    float ascent -> f
    float descent -> g
    float down -> h
    float scaleX -> i
    float scaleY -> j
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph[][] glyphs -> k
    float spaceWidth -> l
    float xHeight -> m
    844:847:void setGlyph(int,com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph) -> a
    850:857:com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getFirstGlyph() -> b
    861:863:com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getGlyph(char) -> a
    867:867:java.lang.String getImagePath() -> a
    871:871:com.badlogic.gdx.files.FileHandle getFontFile() -> c
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph -> com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph:
    int srcX -> a
    int srcY -> b
    int width -> c
    int height -> d
    float u -> e
    float v -> f
    float u2 -> g
    float v2 -> h
    int xoffset -> i
    int yoffset -> j
    int xadvance -> k
    byte[][] kerning -> l
    634:638:int getKerning(char) -> a
    642:646:void setKerning(int,int) -> a
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment -> com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment:
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment LEFT -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment CENTER -> b
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment RIGHT -> c
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] $VALUES -> d
    685:685:com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] values() -> values
    685:685:com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds -> com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds:
    float width -> a
    float height -> b
    680:682:void set(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> a
com.badlogic.gdx.graphics.g2d.BitmapFontCache -> com.badlogic.gdx.graphics.g2d.BitmapFontCache:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> a
    float[] vertices -> b
    int idx -> c
    float x -> d
    float y -> e
    float color -> f
    com.badlogic.gdx.graphics.Color tempColor -> g
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds textBounds -> h
    boolean integer -> i
    boolean fallbackMode -> j
    com.badlogic.gdx.graphics.g2d.BitmapFont fallbackFont -> k
    com.badlogic.gdx.graphics.g2d.harfbuzz.ComplexScriptLayout complexScriptLayout -> l
    67:68:void setPosition(float,float) -> a
    74:86:void translate(float,float) -> b
    89:94:void setColor(float) -> a
    97:103:void setColor(com.badlogic.gdx.graphics.Color) -> a
    106:113:void setColor(float,float,float,float) -> a
    118:122:void setColor(com.badlogic.gdx.graphics.Color,int,int) -> a
    125:127:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    130:141:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    144:151:com.badlogic.gdx.graphics.Color getColor() -> a
    156:159:void clear() -> b
    162:168:void require(int) -> a
    171:242:float addToCache(java.lang.CharSequence,float,float,int,int) -> b
    246:249:boolean isAsciiText(java.lang.CharSequence,int,int) -> a
    255:263:java.util.List getGlyphsAfterShaping(java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData) -> a
    270:270:boolean isComplexScriptLayoutEnabled() -> e
    279:285:void setComplexScriptLayout(java.lang.String,java.lang.String) -> a
    293:294:void setFallbackFont(com.badlogic.gdx.graphics.g2d.BitmapFont) -> a
    297:339:void addGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph,float,float,float,float) -> a
    344:345:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float) -> a
    351:352:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float,int,int) -> c
    358:358:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float) -> b
    368:371:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float,int,int) -> a
    377:378:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText$30738de0(java.lang.CharSequence) -> a
    384:385:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> a
    391:391:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float) -> c
    401:428:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> b
    435:436:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float) -> a
    443:444:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> c
    451:451:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float) -> b
    461:515:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> d
    521:521:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds() -> c
    526:526:float getX() -> f
    531:531:float getY() -> g
    535:535:com.badlogic.gdx.graphics.g2d.BitmapFont getFont() -> d
    541:542:void setUseIntegerPositions(boolean) -> a
    546:546:boolean usesIntegerPositions() -> h
    550:550:float[] getVertices() -> i
com.badlogic.gdx.graphics.g2d.FreeTypeComplexFontGenerator -> com.badlogic.gdx.graphics.g2d.FreeTypeComplexFontGenerator:
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library library -> a
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face face -> b
    79:80:com.badlogic.gdx.graphics.g2d.BitmapFont generateFont$7679de7d(int) -> a
    88:88:com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(int) -> b
    95:95:com.badlogic.gdx.graphics.g2d.FreeTypeComplexFontGenerator$FreeTypeBitmapFontData generateData(int) -> c
    105:183:com.badlogic.gdx.graphics.g2d.FreeTypeComplexFontGenerator$FreeTypeBitmapFontData generateData$3aa7335d(int) -> d
    189:191:void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.FreeTypeComplexFontGenerator$FreeTypeBitmapFontData -> com.badlogic.gdx.graphics.g2d.FreeTypeComplexFontGenerator$FreeTypeBitmapFontData:
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> n
    201:201:com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> b
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap -> com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    int GDX2D_FORMAT_ALPHA -> a
    int GDX2D_FORMAT_LUMINANCE_ALPHA -> b
    int GDX2D_FORMAT_RGB888 -> c
    int GDX2D_FORMAT_RGBA8888 -> d
    int GDX2D_FORMAT_RGB565 -> e
    int GDX2D_FORMAT_RGBA4444 -> f
    int GDX2D_SCALE_NEAREST -> g
    int GDX2D_SCALE_LINEAR -> h
    int GDX2D_BLEND_NONE -> i
    int GDX2D_BLEND_SRC_OVER -> j
    long basePtr -> k
    int width -> l
    int height -> m
    int format -> n
    java.nio.ByteBuffer pixelPtr -> o
    long[] nativeData -> p
    103:104:void dispose() -> dispose
    107:108:void clear(int) -> a
    111:112:void setPixel(int,int,int) -> a
    115:115:int getPixel(int,int) -> a
    119:120:void drawLine(int,int,int,int,int) -> a
    123:124:void drawRect(int,int,int,int,int) -> b
    127:128:void drawCircle(int,int,int,int) -> a
    131:132:void fillRect(int,int,int,int,int) -> c
    135:136:void fillCircle(int,int,int,int) -> b
    139:140:void drawPixmap$1d45ff80(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int) -> a
    144:145:void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int,int,int) -> a
    149:151:com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int) -> a
    157:159:com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int) -> b
    164:164:java.nio.ByteBuffer getPixels() -> a
    168:168:int getHeight() -> b
    172:172:int getWidth() -> c
    176:176:int getFormat() -> d
    180:192:int getGLInternalFormat() -> e
    197:197:int getGLFormat() -> f
    201:212:int getGLType() -> g
    217:231:java.lang.String getFormatString() -> h
    java.nio.ByteBuffer load(long[],byte[],int,int,int) -> load
    java.nio.ByteBuffer newPixmap(long[],int,int,int) -> newPixmap
    void free(long) -> free
    void clear(long,int) -> clear
    void setPixel(long,int,int,int) -> setPixel
    int getPixel(long,int,int) -> getPixel
    void drawLine(long,int,int,int,int,int) -> drawLine
    void drawRect(long,int,int,int,int,int) -> drawRect
    void drawCircle(long,int,int,int,int) -> drawCircle
    void fillRect(long,int,int,int,int,int) -> fillRect
    void fillCircle(long,int,int,int,int) -> fillCircle
    void drawPixmap(long,long,int,int,int,int,int,int,int,int) -> drawPixmap
    void setBlend(int) -> setBlend
    void setScale(int) -> setScale
    java.lang.String getFailureReason() -> getFailureReason
com.badlogic.gdx.graphics.g2d.NinePatch -> com.badlogic.gdx.graphics.g2d.NinePatch:
    int TOP_LEFT -> a
    int TOP_CENTER -> b
    int TOP_RIGHT -> c
    int MIDDLE_LEFT -> d
    int MIDDLE_CENTER -> e
    int MIDDLE_RIGHT -> f
    int BOTTOM_LEFT -> g
    int BOTTOM_CENTER -> h
    int BOTTOM_RIGHT -> i
    com.badlogic.gdx.graphics.Color tempColor -> j
    com.badlogic.gdx.graphics.Texture texture -> k
    int bottomLeft -> l
    int bottomCenter -> m
    int bottomRight -> n
    int middleLeft -> o
    int middleCenter -> p
    int middleRight -> q
    int topLeft -> r
    int topCenter -> s
    int topRight -> t
    float leftWidth -> u
    float rightWidth -> v
    float middleWidth -> w
    float middleHeight -> x
    float topHeight -> y
    float bottomHeight -> z
    float[] vertices -> A
    int idx -> B
    com.badlogic.gdx.graphics.Color color -> C
    int padLeft -> D
    int padRight -> E
    int padTop -> F
    int padBottom -> G
    192:244:void load(com.badlogic.gdx.graphics.g2d.TextureRegion[]) -> a
    247:275:int add(com.badlogic.gdx.graphics.g2d.TextureRegion,float) -> a
    279:297:void set(int,float,float,float,float,float) -> a
    300:318:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
    321:322:void setColor(com.badlogic.gdx.graphics.Color) -> a
    325:325:com.badlogic.gdx.graphics.Color getColor() -> g
    329:329:float getLeftWidth() -> h
    333:334:void setLeftWidth(float) -> a
    337:337:float getRightWidth() -> i
    341:342:void setRightWidth(float) -> b
    345:345:float getTopHeight() -> j
    349:350:void setTopHeight(float) -> c
    353:353:float getBottomHeight() -> k
    357:358:void setBottomHeight(float) -> d
    361:361:float getMiddleWidth() -> l
    365:366:void setMiddleWidth(float) -> e
    369:369:float getMiddleHeight() -> m
    373:374:void setMiddleHeight(float) -> f
    377:377:float getTotalWidth() -> a
    381:381:float getTotalHeight() -> b
    385:389:void setPadding(int,int,int,int) -> a
    393:394:float getPadLeft() -> c
    398:399:void setPadLeft(int) -> a
    403:404:float getPadRight() -> d
    408:409:void setPadRight(int) -> b
    413:414:float getPadTop() -> e
    418:419:void setPadTop(int) -> c
    423:424:float getPadBottom() -> f
    428:429:void setPadBottom(int) -> d
    432:432:com.badlogic.gdx.graphics.Texture getTexture() -> n
com.badlogic.gdx.graphics.g2d.ParticleEffect -> com.badlogic.gdx.graphics.g2d.ParticleEffect:
    com.badlogic.gdx.utils.Array emitters -> a
    49:51:void start() -> b
    54:56:void reset() -> a
    59:61:void update(float) -> a
    64:66:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    69:71:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    74:76:void allowCompletion() -> c
    79:83:boolean isComplete() -> d
    87:93:void setDuration(int) -> a
    96:98:void setPosition(float,float) -> a
    101:103:void setFlip(boolean,boolean) -> a
    106:108:void flipY() -> e
    111:111:com.badlogic.gdx.utils.Array getEmitters() -> f
    116:120:com.badlogic.gdx.graphics.g2d.ParticleEmitter findEmitter(java.lang.String) -> a
    124:141:void save(java.io.File) -> a
    146:148:void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> a
    151:153:void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureAtlas) -> a
    156:175:void loadEmitters(com.badlogic.gdx.files.FileHandle) -> a
    180:191:void loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas) -> a
    194:201:void loadEmitterImages(com.badlogic.gdx.files.FileHandle) -> b
    204:204:com.badlogic.gdx.graphics.Texture loadTexture(com.badlogic.gdx.files.FileHandle) -> c
    209:213:void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.ParticleEffectPool -> com.badlogic.gdx.graphics.g2d.ParticleEffectPool:
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect -> a
    31:31:com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect newObject() -> a
    35:37:com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect obtain() -> b
    22:22:java.lang.Object obtain() -> obtain
    22:22:java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect -> com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect:
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool this$0 -> a
    49:50:void reset() -> a
    53:54:void free() -> b
com.badlogic.gdx.graphics.g2d.ParticleEmitter -> com.badlogic.gdx.graphics.g2d.ParticleEmitter:
    int UPDATE_SCALE -> c
    int UPDATE_ANGLE -> d
    int UPDATE_ROTATION -> e
    int UPDATE_VELOCITY -> f
    int UPDATE_WIND -> g
    int UPDATE_GRAVITY -> h
    int UPDATE_TINT -> i
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue delayValue -> j
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeOffsetValue -> k
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue durationValue -> l
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeValue -> m
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue emissionValue -> n
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue scaleValue -> o
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue rotationValue -> p
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue velocityValue -> q
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue angleValue -> r
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue windValue -> s
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue gravityValue -> t
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue transparencyValue -> u
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue tintValue -> v
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue xOffsetValue -> w
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue yOffsetValue -> x
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnWidthValue -> y
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnHeightValue -> z
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue spawnShapeValue -> A
    float accumulator -> B
    com.badlogic.gdx.graphics.g2d.Sprite sprite -> C
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle[] particles -> D
    int minParticleCount -> E
    int maxParticleCount -> F
    float x -> G
    float y -> H
    java.lang.String name -> I
    java.lang.String imagePath -> J
    int activeCount -> K
    boolean[] active -> L
    boolean firstUpdate -> M
    boolean flipX -> N
    boolean flipY -> O
    int updateFlags -> P
    boolean allowCompletion -> Q
    int emission -> R
    int emissionDiff -> S
    int emissionDelta -> T
    int lifeOffset -> U
    int lifeOffsetDiff -> V
    int life -> W
    int lifeDiff -> X
    float spawnWidth -> Y
    float spawnWidthDiff -> Z
    float spawnHeight -> aa
    float spawnHeightDiff -> ab
    float duration -> a
    float durationTimer -> b
    float delay -> ac
    float delayTimer -> ad
    boolean attached -> ae
    boolean continuous -> af
    boolean aligned -> ag
    boolean behind -> ah
    boolean additive -> ai
    126:134:void initialize() -> j
    137:141:void setMaxParticleCount(int) -> a
    144:155:void addParticle() -> k
    158:174:void addParticles(int) -> b
    177:222:void update(float) -> a
    225:236:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    241:299:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    302:305:void start() -> a
    308:311:void reset() -> b
    314:348:void restart() -> l
    351:351:com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite) -> a
    355:497:void activateParticle(int) -> c
    500:553:boolean updateParticle(com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle,float,int) -> a
    557:566:void setPosition(float,float) -> a
    569:580:void setSprite(com.badlogic.gdx.graphics.g2d.Sprite) -> b
    585:587:void allowCompletion() -> c
    590:590:com.badlogic.gdx.graphics.g2d.Sprite getSprite() -> d
    594:594:java.lang.String getName() -> e
    598:599:void setName(java.lang.String) -> b
    602:602:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLife() -> m
    606:606:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getScale() -> n
    610:610:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getRotation() -> o
    614:614:com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue getTint() -> p
    618:618:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getVelocity() -> q
    622:622:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getWind() -> r
    626:626:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getGravity() -> s
    630:630:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getAngle() -> t
    634:634:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getEmission() -> u
    638:638:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getTransparency() -> v
    642:642:com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDuration() -> w
    646:646:com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDelay() -> x
    650:650:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLifeOffset() -> y
    654:654:com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getXOffsetValue() -> z
    658:658:com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getYOffsetValue() -> A
    662:662:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnWidth() -> B
    666:666:com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnHeight() -> C
    670:670:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue getSpawnShape() -> D
    674:674:boolean isAttached() -> E
    678:679:void setAttached(boolean) -> a
    682:682:boolean isContinuous() -> F
    686:687:void setContinuous$1385ff() -> f
    690:690:boolean isAligned() -> G
    694:695:void setAligned(boolean) -> b
    698:698:boolean isAdditive() -> H
    702:703:void setAdditive(boolean) -> c
    706:706:boolean isBehind() -> I
    710:711:void setBehind(boolean) -> d
    714:714:int getMinParticleCount() -> J
    718:719:void setMinParticleCount(int) -> d
    722:722:int getMaxParticleCount() -> K
    726:727:boolean isComplete() -> g
    731:732:float getPercentComplete() -> L
    736:736:float getX() -> M
    740:740:float getY() -> N
    744:744:int getActiveCount() -> O
    748:748:java.lang.String getImagePath() -> h
    752:753:void setImagePath(java.lang.String) -> a
    756:763:void setFlip(boolean,boolean) -> a
    766:779:void flipY() -> i
    782:828:void save(java.io.Writer) -> a
    832:880:void load(java.io.BufferedReader) -> a
    885:887:java.lang.String readString(java.io.BufferedReader,java.lang.String) -> a
    891:891:boolean readBoolean(java.io.BufferedReader,java.lang.String) -> b
    895:895:int readInt(java.io.BufferedReader,java.lang.String) -> c
    899:899:float readFloat(java.io.BufferedReader,java.lang.String) -> d
com.badlogic.gdx.graphics.g2d.ParticleEmitter$1 -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$1:
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide -> a
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape -> b
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue:
    float[] temp -> d
    float[] colors -> e
    float[] timeline -> a
    1172:1172:float[] getTimeline() -> b
    1176:1177:void setTimeline(float[]) -> a
    1180:1180:float[] getColors() -> c
    1184:1185:void setColors(float[]) -> b
    1188:1215:float[] getColor(float) -> a
    1219:1227:void save(java.io.Writer) -> a
    1230:1238:void load(java.io.BufferedReader) -> a
    1241:1246:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue:
    float value -> a
    963:963:float getValue() -> b
    967:968:void setValue(float) -> a
    971:974:void save(java.io.Writer) -> a
    977:980:void load(java.io.BufferedReader) -> a
    983:985:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle:
    int life -> a
    int currentLife -> b
    float scale -> c
    float scaleDiff -> d
    float rotation -> e
    float rotationDiff -> f
    float velocity -> g
    float velocityDiff -> h
    float angle -> i
    float angleDiff -> j
    float angleCos -> k
    float angleSin -> l
    float transparency -> m
    float transparencyDiff -> n
    float wind -> o
    float windDiff -> p
    float gravity -> q
    float gravityDiff -> r
    float[] tint -> s
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue:
    boolean active -> b
    boolean alwaysActive -> c
    924:925:void setAlwaysActive$1385ff() -> a
    928:928:boolean isAlwaysActive() -> b
    932:932:boolean isActive() -> c
    936:937:void setActive(boolean) -> a
    940:944:void save(java.io.Writer) -> a
    947:951:void load(java.io.BufferedReader) -> a
    954:956:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue:
    float lowMin -> a
    float lowMax -> d
    992:992:float newLowValue() -> b
    996:998:void setLow(float) -> a
    1001:1003:void setLow(float,float) -> a
    1006:1006:float getLowMin() -> c
    1010:1011:void setLowMin(float) -> b
    1014:1014:float getLowMax() -> d
    1018:1019:void setLowMax(float) -> c
    1022:1026:void save(java.io.Writer) -> a
    1029:1033:void load(java.io.BufferedReader) -> a
    1036:1039:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue:
    float[] scaling -> d
    float[] timeline -> a
    float highMin -> e
    float highMax -> f
    boolean relative -> g
    1049:1049:float newHighValue() -> e
    1053:1055:void setHigh(float) -> b
    1058:1060:void setHigh(float,float) -> b
    1063:1063:float getHighMin() -> f
    1067:1068:void setHighMin(float) -> c
    1071:1071:float getHighMax() -> g
    1075:1076:void setHighMax(float) -> d
    1079:1079:float[] getScaling() -> i
    1083:1084:void setScaling(float[]) -> a
    1087:1087:float[] getTimeline() -> j
    1091:1092:void setTimeline(float[]) -> b
    1095:1095:boolean isRelative() -> h
    1099:1100:void setRelative(boolean) -> a
    1103:1118:float getScale(float) -> a
    1122:1133:void save(java.io.Writer) -> a
    1136:1147:void load(java.io.BufferedReader) -> a
    1150:1158:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide both -> a
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide top -> b
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide bottom -> c
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] $VALUES -> d
    1310:1310:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] values() -> values
    1310:1310:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape point -> a
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape line -> b
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape square -> c
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape ellipse -> d
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] $VALUES -> e
    1306:1306:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] values() -> values
    1306:1306:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape shape -> a
    boolean edges -> d
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide side -> e
    1255:1255:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape getShape() -> b
    1259:1260:void setShape(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape) -> a
    1263:1263:boolean isEdges() -> c
    1267:1268:void setEdges(boolean) -> a
    1271:1271:com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide getSide() -> d
    1275:1276:void setSide(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide) -> a
    1279:1286:void save(java.io.Writer) -> a
    1289:1296:void load(java.io.BufferedReader) -> a
    1299:1303:void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D -> com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D:
    com.badlogic.gdx.physics.box2d.World world -> c
    com.badlogic.gdx.math.Vector2 startPoint -> d
    com.badlogic.gdx.math.Vector2 endPoint -> e
    boolean particleCollided -> f
    float normalAngle -> g
    float EPSILON -> i
    com.badlogic.gdx.physics.box2d.RayCastCallback rayCallBack -> h
    86:86:com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$1 -> com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$1:
    com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D this$0 -> a
    48:50:float reportRayFixture$5d5164df(com.badlogic.gdx.math.Vector2,float) -> a
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$ParticleBox2D -> com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$ParticleBox2D:
    com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D this$0 -> t
    103:126:void translate(float,float) -> a
com.badlogic.gdx.graphics.g2d.PixmapPacker -> com.badlogic.gdx.graphics.g2d.PixmapPacker:
    int pageWidth -> a
    int pageHeight -> b
    com.badlogic.gdx.graphics.Pixmap$Format pageFormat -> c
    int padding -> d
    boolean duplicateBorder -> e
    com.badlogic.gdx.utils.Array pages -> f
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page currPage -> g
    boolean disposed -> h
    156:203:com.badlogic.gdx.math.Rectangle pack(java.lang.String,com.badlogic.gdx.graphics.Pixmap) -> a
    207:213:void newPage() -> a
    216:258:com.badlogic.gdx.graphics.g2d.PixmapPacker$Node insert(com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,com.badlogic.gdx.math.Rectangle) -> a
    264:264:com.badlogic.gdx.utils.Array getPages() -> b
    270:274:com.badlogic.gdx.math.Rectangle getRect(java.lang.String) -> a
    280:284:com.badlogic.gdx.graphics.g2d.PixmapPacker$Page getPage(java.lang.String) -> b
    292:296:void dispose() -> dispose
    303:323:com.badlogic.gdx.graphics.g2d.TextureAtlas generateTextureAtlas$7b1f7798(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> a
    331:365:void updateTextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> a
    368:368:int getPageWidth() -> c
    372:372:int getPageHeight() -> d
    376:376:int getPadding() -> e
    380:380:boolean duplicateBoarder() -> f
com.badlogic.gdx.graphics.g2d.PixmapPacker$1 -> com.badlogic.gdx.graphics.g2d.PixmapPacker$1:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> h
    309:311:void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.PixmapPacker$2 -> com.badlogic.gdx.graphics.g2d.PixmapPacker$2:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> h
    337:339:void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.PixmapPacker$ManagedPixmapTextureData -> com.badlogic.gdx.graphics.g2d.PixmapPacker$ManagedPixmapTextureData:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> a
    390:390:boolean isManaged() -> k
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node -> com.badlogic.gdx.graphics.g2d.PixmapPacker$Node:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node leftChild -> a
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node rightChild -> b
    com.badlogic.gdx.math.Rectangle rect -> c
    java.lang.String leaveName -> d
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page -> com.badlogic.gdx.graphics.g2d.PixmapPacker$Page:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node root -> a
    com.badlogic.gdx.utils.OrderedMap rects -> b
    com.badlogic.gdx.graphics.Pixmap image -> c
    com.badlogic.gdx.graphics.Texture texture -> d
    com.badlogic.gdx.utils.Array addedRects -> e
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> f
    114:114:com.badlogic.gdx.graphics.Pixmap getPixmap() -> a
com.badlogic.gdx.graphics.g2d.PolygonRegion -> com.badlogic.gdx.graphics.g2d.PolygonRegion:
    float[] texCoords -> a
    float[] localVertices -> b
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> c
    94:128:void loadPolygonDefinition(com.badlogic.gdx.files.FileHandle) -> a
    136:144:float[] calculateAtlasTexCoords(float[]) -> a
    149:149:float[] getLocalVertices() -> a
    154:154:float[] getTextureCoords() -> b
    159:159:com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> c
com.badlogic.gdx.graphics.g2d.PolygonSprite -> com.badlogic.gdx.graphics.g2d.PolygonSprite:
    com.badlogic.gdx.graphics.g2d.PolygonRegion region -> a
    float x -> b
    float y -> c
    float width -> d
    float height -> e
    float scaleX -> f
    float scaleY -> g
    float rotation -> h
    float originX -> i
    float originY -> j
    float[] vertices -> k
    boolean dirty -> l
    com.badlogic.gdx.math.Rectangle bounds -> m
    com.badlogic.gdx.graphics.Color color -> n
    51:66:void set(com.badlogic.gdx.graphics.g2d.PolygonSprite) -> a
    71:77:void setBounds(float,float,float,float) -> a
    83:87:void setSize(float,float) -> a
    93:94:void setPosition(float,float) -> b
    100:101:void setX(float) -> a
    107:108:void setY(float) -> b
    113:121:void translateX(float) -> c
    126:134:void translateY(float) -> d
    139:149:void translate(float,float) -> c
    152:158:void setColor(com.badlogic.gdx.graphics.Color) -> a
    161:167:void setColor$4098370b() -> a
    171:174:void setOrigin(float,float) -> d
    177:179:void setRotation(float) -> e
    183:185:void rotate(float) -> f
    188:191:void setScale(float) -> g
    194:197:void setScale(float,float) -> e
    201:204:void scale(float) -> h
    208:246:float[] getVertices() -> b
    255:274:com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> c
    278:279:void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch) -> a
    282:289:void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch,float) -> a
    292:292:float getX() -> d
    296:296:float getY() -> e
    300:300:float getWidth() -> f
    304:304:float getHeight() -> g
    308:308:float getOriginX() -> h
    312:312:float getOriginY() -> i
    316:316:float getRotation() -> j
    320:320:float getScaleX() -> k
    324:324:float getScaleY() -> l
    330:336:com.badlogic.gdx.graphics.Color getColor() -> m
    340:355:void setRegion(com.badlogic.gdx.graphics.g2d.PolygonRegion) -> a
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch -> com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch:
    com.badlogic.gdx.graphics.Mesh mesh -> e
    com.badlogic.gdx.graphics.Mesh[] buffers -> f
    com.badlogic.gdx.graphics.Texture lastTexture -> g
    int idx -> h
    int currBufferIdx -> i
    float[] vertices -> j
    com.badlogic.gdx.math.Matrix4 transformMatrix -> k
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> l
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> m
    boolean drawing -> n
    boolean blendingDisabled -> o
    int blendSrcFunc -> p
    int blendDstFunc -> q
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> r
    boolean ownsShader -> s
    float color -> a
    com.badlogic.gdx.graphics.Color tempColor -> t
    int renderCalls -> b
    int totalRenderCalls -> c
    int maxVerticesInBatch -> d
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> u
    193:222:com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> a
    230:247:void begin() -> b
    252:270:void end() -> c
    274:275:void setColor(com.badlogic.gdx.graphics.Color) -> a
    279:281:void setColor(float,float,float,float) -> a
    286:287:void setColor(float) -> a
    291:297:com.badlogic.gdx.graphics.Color getColor() -> d
    302:303:void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float) -> a
    307:329:void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float) -> a
    337:383:void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float,float,float,float,float,float) -> a
    388:403:void draw$52637079(com.badlogic.gdx.graphics.g2d.PolygonRegion,float[],int) -> a
    407:408:void flush() -> e
    411:441:void renderMesh() -> f
    445:447:void disableBlending() -> g
    451:453:void enableBlending() -> h
    460:463:void setBlendFunction(int,int) -> a
    467:470:void dispose() -> i
    476:476:com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> j
    483:483:com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> k
    491:494:void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> a
    501:504:void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> b
    507:525:void setupMatrices() -> l
    528:530:void switchTexture(com.badlogic.gdx.graphics.Texture) -> a
    547:562:void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    566:566:boolean isBlendingEnabled() -> m
com.badlogic.gdx.graphics.g2d.Sprite -> com.badlogic.gdx.graphics.g2d.Sprite:
    int VERTEX_SIZE -> u
    int SPRITE_SIZE -> v
    float[] vertices -> w
    com.badlogic.gdx.graphics.Color color -> a
    float x -> b
    float y -> c
    float width -> x
    float height -> y
    float originX -> d
    float originY -> e
    float rotation -> f
    float scaleX -> g
    float scaleY -> h
    boolean dirty -> i
    com.badlogic.gdx.math.Rectangle bounds -> j
    103:121:void set(com.badlogic.gdx.graphics.g2d.Sprite) -> a
    126:149:void setBounds(float,float,float,float) -> a
    155:176:void setSize(float,float) -> b
    182:183:void setPosition(float,float) -> c
    189:190:void setX(float) -> g
    196:197:void setY(float) -> h
    202:211:void translateX(float) -> i
    216:225:void translateY(float) -> j
    230:247:void translate(float,float) -> a
    250:256:void setColor(com.badlogic.gdx.graphics.Color) -> a
    259:266:void setColor(float,float,float,float) -> b
    269:274:void setColor(float) -> k
    278:281:void setOrigin(float,float) -> d
    284:286:void setRotation(float) -> a
    290:292:void rotate(float) -> l
    297:324:void rotate90(boolean) -> a
    327:330:void setScale(float) -> b
    333:336:void setScale(float,float) -> f
    340:343:void scale(float) -> m
    347:411:float[] getVertices() -> a
    420:448:com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> r
    452:453:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    456:463:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    466:466:float getX() -> b
    470:470:float getY() -> c
    474:474:float getWidth() -> d
    478:478:float getHeight() -> e
    482:482:float getOriginX() -> f
    486:486:float getOriginY() -> g
    490:490:float getRotation() -> s
    494:494:float getScaleX() -> t
    498:498:float getScaleY() -> u
    504:511:com.badlogic.gdx.graphics.Color getColor() -> h
    515:529:void setRegion(float,float,float,float) -> c
    532:535:void setU(float) -> c
    538:541:void setV(float) -> d
    544:547:void setU2(float) -> e
    550:553:void setV2(float) -> f
    556:574:void flip(boolean,boolean) -> a
    577:598:void scroll(float,float) -> e
com.badlogic.gdx.graphics.g2d.SpriteBatch -> com.badlogic.gdx.graphics.g2d.SpriteBatch:
    com.badlogic.gdx.graphics.Mesh mesh -> y
    com.badlogic.gdx.graphics.Mesh[] buffers -> z
    com.badlogic.gdx.graphics.Texture lastTexture -> A
    float invTexWidth -> B
    float invTexHeight -> C
    int idx -> D
    int currBufferIdx -> E
    float[] vertices -> F
    com.badlogic.gdx.math.Matrix4 transformMatrix -> G
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> H
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> I
    boolean drawing -> J
    boolean blendingDisabled -> K
    int blendSrcFunc -> L
    int blendDstFunc -> M
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> N
    boolean ownsShader -> O
    float color -> a
    com.badlogic.gdx.graphics.Color tempColor -> P
    int renderCalls -> b
    int totalRenderCalls -> c
    int maxSpritesInBatch -> d
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> Q
    int X1 -> e
    int Y1 -> f
    int C1 -> g
    int U1 -> h
    int V1 -> i
    int X2 -> j
    int Y2 -> k
    int C2 -> l
    int U2 -> m
    int V2 -> n
    int X3 -> o
    int Y3 -> p
    int C3 -> q
    int U3 -> r
    int V3 -> s
    int X4 -> t
    int Y4 -> u
    int C4 -> v
    int U4 -> w
    int V4 -> x
    207:236:com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> g
    244:261:void begin() -> a
    266:284:void end() -> b
    288:289:void setColor(com.badlogic.gdx.graphics.Color) -> a
    293:295:void setColor(float,float,float,float) -> a
    300:301:void setColor(float) -> a
    305:311:com.badlogic.gdx.graphics.Color getColor() -> c
    338:458:void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> a
    477:525:void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> a
    538:574:void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> a
    586:618:void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float) -> a
    625:657:void draw(com.badlogic.gdx.graphics.Texture,float,float) -> a
    661:698:void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float) -> a
    703:726:void draw$1647d9c(com.badlogic.gdx.graphics.Texture,float[],int) -> a
    730:731:void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> a
    735:773:void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> a
    781:891:void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> a
    901:1027:void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean) -> a
    1031:1032:void flush() -> d
    1035:1067:void renderMesh() -> h
    1071:1074:void disableBlending() -> i
    1078:1081:void enableBlending() -> j
    1088:1091:void setBlendFunction$255f295(int) -> a
    1095:1098:void dispose() -> dispose
    1104:1104:com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> e
    1111:1111:com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> f
    1119:1122:void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> a
    1129:1132:void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> b
    1135:1151:void setupMatrices() -> k
    1154:1158:void switchTexture(com.badlogic.gdx.graphics.Texture) -> a
    1173:1188:void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    1192:1192:boolean isBlendingEnabled() -> l
com.badlogic.gdx.graphics.g2d.SpriteCache -> com.badlogic.gdx.graphics.g2d.SpriteCache:
    float[] tempVertices -> a
    com.badlogic.gdx.graphics.Mesh mesh -> b
    boolean drawing -> c
    com.badlogic.gdx.math.Matrix4 transformMatrix -> d
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> e
    java.util.ArrayList caches -> f
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> g
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> h
    com.badlogic.gdx.graphics.g2d.SpriteCache$Cache currentCache -> i
    java.util.ArrayList textures -> j
    java.util.ArrayList counts -> k
    float color -> l
    com.badlogic.gdx.graphics.Color tempColor -> m
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> n
    132:133:void setColor(com.badlogic.gdx.graphics.Color) -> a
    137:139:void setColor(float,float,float,float) -> a
    144:145:void setColor(float) -> a
    148:154:com.badlogic.gdx.graphics.Color getColor() -> g
    159:164:void beginCache() -> a
    170:179:void beginCache(int) -> b
    183:224:int endCache() -> b
    229:231:void clear() -> h
    237:249:void add$1647d9c(com.badlogic.gdx.graphics.Texture,float[],int) -> a
    253:301:void add(com.badlogic.gdx.graphics.Texture,float,float) -> a
    306:354:void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,float,float,float,float,float) -> a
    358:412:void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> a
    418:483:void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> a
    490:627:void add$15780067(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int) -> a
    631:632:void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> a
    636:688:void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> a
    695:818:void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> a
    822:833:void add(com.badlogic.gdx.graphics.g2d.Sprite) -> a
    837:871:void begin() -> c
    875:889:void end() -> d
    893:918:void draw(int) -> a
    924:959:void draw(int,int,int) -> a
    963:965:void dispose() -> dispose
    968:968:com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> e
    972:974:void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> a
    977:977:com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> f
    981:983:void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> b
    1000:1026:com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> i
    1039:1040:void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache -> com.badlogic.gdx.graphics.g2d.SpriteCache$Cache:
    int id -> a
    int offset -> b
    int maxCount -> c
    int textureCount -> d
    com.badlogic.gdx.graphics.Texture[] textures -> e
    int[] counts -> f
com.badlogic.gdx.graphics.g2d.TextureAtlas -> com.badlogic.gdx.graphics.g2d.TextureAtlas:
    java.lang.String[] tuple -> a
    java.util.HashSet textures -> c
    com.badlogic.gdx.utils.Array regions -> d
    java.util.Comparator indexComparator -> b
    230:263:void load(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData) -> a
    267:274:com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.Texture,int,int,int,int) -> a
    279:279:com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    285:285:com.badlogic.gdx.utils.Array getRegions() -> a
    292:294:com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String) -> a
    301:307:com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int) -> a
    313:318:com.badlogic.gdx.utils.Array findRegions(java.lang.String) -> b
    325:328:com.badlogic.gdx.utils.Array createSprites() -> b
    336:338:com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String) -> c
    346:352:com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int) -> b
    360:365:com.badlogic.gdx.utils.Array createSprites(java.lang.String) -> d
    369:378:com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion) -> a
    386:396:com.badlogic.gdx.graphics.g2d.NinePatch createPatch(java.lang.String) -> e
    401:401:java.util.Set getTextures() -> c
    407:410:void dispose() -> dispose
    423:426:java.lang.String readValue(java.io.BufferedReader) -> a
    431:445:int readTuple(java.io.BufferedReader) -> b
com.badlogic.gdx.graphics.g2d.TextureAtlas$1 -> com.badlogic.gdx.graphics.g2d.TextureAtlas$1:
    414:418:int compare(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region,com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region) -> a
    412:412:int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion -> com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion:
    int index -> a
    java.lang.String name -> b
    float offsetX -> c
    float offsetY -> d
    int packedWidth -> e
    int packedHeight -> f
    int originalWidth -> g
    int originalHeight -> h
    boolean rotate -> i
    int[] splits -> j
    int[] pads -> k
    511:514:void flip(boolean,boolean) -> a
    519:519:float getRotatedPackedWidth() -> a
    525:525:float getRotatedPackedHeight() -> b
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite -> com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion region -> a
    float originalOffsetX -> b
    float originalOffsetY -> c
    559:560:void setPosition(float,float) -> c
    563:570:void setBounds(float,float,float,float) -> a
    573:574:void setSize(float,float) -> b
    577:578:void setOrigin(float,float) -> d
    583:604:void flip(boolean,boolean) -> a
    608:629:void rotate90(boolean) -> a
    632:632:float getX() -> b
    636:636:float getY() -> c
    640:640:float getOriginX() -> f
    644:644:float getOriginY() -> g
    648:648:float getWidth() -> d
    652:652:float getHeight() -> e
    656:656:float getWidthRatio() -> r
    660:660:float getHeightRatio() -> s
    664:664:com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion getAtlasRegion() -> t
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData:
    com.badlogic.gdx.utils.Array pages -> a
    com.badlogic.gdx.utils.Array regions -> b
    187:187:com.badlogic.gdx.utils.Array getPages() -> a
    191:191:com.badlogic.gdx.utils.Array getRegions() -> b
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page:
    com.badlogic.gdx.files.FileHandle textureFile -> a
    com.badlogic.gdx.graphics.Texture texture -> b
    boolean useMipMaps -> c
    com.badlogic.gdx.graphics.Pixmap$Format format -> d
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> f
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> g
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> h
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page page -> a
    int index -> b
    java.lang.String name -> c
    float offsetX -> d
    float offsetY -> e
    int originalWidth -> f
    int originalHeight -> g
    boolean rotate -> h
    int left -> i
    int top -> j
    int width -> k
    int height -> l
    boolean flip -> m
    int[] splits -> n
    int[] pads -> o
com.badlogic.gdx.graphics.g2d.TextureRegion -> com.badlogic.gdx.graphics.g2d.TextureRegion:
    com.badlogic.gdx.graphics.Texture texture -> z
    float u -> A
    float v -> B
    float u2 -> C
    float v2 -> D
    int regionWidth -> E
    int regionHeight -> F
    75:77:void setRegion(com.badlogic.gdx.graphics.Texture) -> b
    82:87:void setRegion(int,int,int,int) -> a
    90:96:void setRegion(float,float,float,float) -> c
    100:102:void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    106:108:void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int) -> a
    111:111:com.badlogic.gdx.graphics.Texture getTexture() -> i
    115:116:void setTexture(com.badlogic.gdx.graphics.Texture) -> a
    119:119:float getU() -> j
    123:125:void setU(float) -> c
    128:128:float getV() -> k
    132:134:void setV(float) -> d
    137:137:float getU2() -> l
    141:143:void setU2(float) -> e
    146:146:float getV2() -> m
    150:152:void setV2(float) -> f
    155:155:int getRegionX() -> n
    159:160:void setRegionX(int) -> a
    163:163:int getRegionY() -> o
    167:168:void setRegionY(int) -> b
    172:172:int getRegionWidth() -> p
    176:177:void setRegionWidth(int) -> c
    181:181:int getRegionHeight() -> q
    185:186:void setRegionHeight(int) -> d
    189:199:void flip(boolean,boolean) -> a
    202:202:boolean isFlipX() -> a
    206:206:boolean isFlipY() -> b
    214:224:void scroll(float,float) -> e
    234:251:com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(int,int) -> a
    263:264:com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int) -> a
com.badlogic.gdx.graphics.g2d.freetype.FreeType -> com.badlogic.gdx.graphics.g2d.freetype.FreeType:
    int FT_PIXEL_MODE_NONE -> a
    int FT_PIXEL_MODE_MONO -> b
    int FT_PIXEL_MODE_GRAY -> c
    int FT_PIXEL_MODE_GRAY2 -> d
    int FT_PIXEL_MODE_GRAY4 -> e
    int FT_PIXEL_MODE_LCD -> f
    int FT_PIXEL_MODE_LCD_V -> g
    int FT_ENCODING_NONE -> h
    int FT_ENCODING_MS_SYMBOL -> i
    int FT_ENCODING_UNICODE -> j
    int FT_ENCODING_SJIS -> k
    int FT_ENCODING_GB2312 -> l
    int FT_ENCODING_BIG5 -> m
    int FT_ENCODING_WANSUNG -> n
    int FT_ENCODING_JOHAB -> o
    int FT_ENCODING_ADOBE_STANDARD -> p
    int FT_ENCODING_ADOBE_EXPERT -> q
    int FT_ENCODING_ADOBE_CUSTOM -> r
    int FT_ENCODING_ADOBE_LATIN_1 -> s
    int FT_ENCODING_OLD_LATIN_2 -> t
    int FT_ENCODING_APPLE_ROMAN -> u
    int FT_FACE_FLAG_SCALABLE -> v
    int FT_FACE_FLAG_FIXED_SIZES -> w
    int FT_FACE_FLAG_FIXED_WIDTH -> x
    int FT_FACE_FLAG_SFNT -> y
    int FT_FACE_FLAG_HORIZONTAL -> z
    int FT_FACE_FLAG_VERTICAL -> A
    int FT_FACE_FLAG_KERNING -> B
    int FT_FACE_FLAG_FAST_GLYPHS -> C
    int FT_FACE_FLAG_MULTIPLE_MASTERS -> D
    int FT_FACE_FLAG_GLYPH_NAMES -> E
    int FT_FACE_FLAG_EXTERNAL_STREAM -> F
    int FT_FACE_FLAG_HINTER -> G
    int FT_FACE_FLAG_CID_KEYED -> H
    int FT_FACE_FLAG_TRICKY -> I
    int FT_STYLE_FLAG_ITALIC -> J
    int FT_STYLE_FLAG_BOLD -> K
    int FT_LOAD_DEFAULT -> L
    int FT_LOAD_NO_SCALE -> M
    int FT_LOAD_NO_HINTING -> N
    int FT_LOAD_RENDER -> O
    int FT_LOAD_NO_BITMAP -> P
    int FT_LOAD_VERTICAL_LAYOUT -> Q
    int FT_LOAD_FORCE_AUTOHINT -> R
    int FT_LOAD_CROP_BITMAP -> S
    int FT_LOAD_PEDANTIC -> T
    int FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH -> U
    int FT_LOAD_NO_RECURSE -> V
    int FT_LOAD_IGNORE_TRANSFORM -> W
    int FT_LOAD_MONOCHROME -> X
    int FT_LOAD_LINEAR_DESIGN -> Y
    int FT_LOAD_NO_AUTOHINT -> Z
    int FT_RENDER_MODE_NORMAL -> aa
    int FT_RENDER_MODE_LIGHT -> ab
    int FT_RENDER_MODE_MONO -> ac
    int FT_RENDER_MODE_LCD -> ad
    int FT_RENDER_MODE_LCD_V -> ae
    int FT_RENDER_MODE_MAX -> af
    int FT_KERNING_DEFAULT -> ag
    int FT_KERNING_UNFITTED -> ah
    int FT_KERNING_UNSCALED -> ai
    477:477:int encode(char,char,char,char) -> a
    541:544:com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library initFreeType() -> a
    long initFreeTypeJni() -> initFreeTypeJni
    555:559:void doneFreeType(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library) -> a
    void doneFreeType(long) -> doneFreeType
    566:567:com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face newFace$5556e409(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library,com.badlogic.gdx.files.FileHandle) -> a
    571:580:com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face newMemoryFace(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library,byte[],int,int) -> a
    long newMemoryFace(long,java.nio.ByteBuffer,int,int) -> newMemoryFace
    592:598:void doneFace(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face) -> a
    void doneFace(long) -> doneFace
    605:605:boolean selectSize(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int) -> c
    boolean selectSize(long,int) -> selectSize
    613:613:boolean setCharSize(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int,int,int) -> a
    boolean setCharSize(long,int,int,int,int) -> setCharSize
    621:621:boolean setPixelSizes$5b494498(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int) -> a
    boolean setPixelSizes(long,int,int) -> setPixelSizes
    629:629:boolean loadGlyph(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int) -> a
    boolean loadGlyph(long,int,int) -> loadGlyph
    637:637:boolean loadChar(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int) -> b
    boolean loadChar(long,int,int) -> loadChar
    645:645:boolean renderGlyph(com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot,int) -> a
    boolean renderGlyph(long,int) -> renderGlyph
    653:653:boolean hasKerning(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face) -> b
    boolean hasKerning(long) -> hasKerning
    661:661:int getKerning$ddfc0e2(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int) -> c
    int getKerning(long,int,int,int) -> getKerning
    672:672:int getCharIndex(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int) -> b
    int getCharIndex(long,int) -> getCharIndex
    680:681:int toInt(int) -> a
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap:
    327:327:int getRows() -> a
    int getRows(long) -> getRows
    335:335:int getWidth() -> b
    int getWidth(long) -> getWidth
    343:343:int getPitch() -> c
    int getPitch(long) -> getPitch
    351:358:java.nio.ByteBuffer getBuffer() -> d
    365:373:com.badlogic.gdx.graphics.Pixmap getPixmap(com.badlogic.gdx.graphics.Pixmap$Format) -> a
    java.nio.ByteBuffer getBuffer(long) -> getBuffer
    382:382:int getNumGray() -> e
    int getNumGray(long) -> getNumGray
    390:390:int getPixelMode() -> f
    int getPixelMode(long) -> getPixelMode
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face:
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library library -> a
    62:62:int getFaceFlags() -> e
    int getFaceFlags(long) -> getFaceFlags
    70:70:int getStyleFlags() -> f
    int getStyleFlags(long) -> getStyleFlags
    78:78:int getNumGlyphs() -> a
    int getNumGlyphs(long) -> getNumGlyphs
    86:86:int getAscender() -> g
    int getAscender(long) -> getAscender
    94:94:int getDescender() -> h
    int getDescender(long) -> getDescender
    102:102:int getHeight() -> i
    int getHeight(long) -> getHeight
    110:110:int getMaxAdvanceWidth() -> b
    int getMaxAdvanceWidth(long) -> getMaxAdvanceWidth
    118:118:int getMaxAdvanceHeight() -> j
    int getMaxAdvanceHeight(long) -> getMaxAdvanceHeight
    126:126:int getUnderlinePosition() -> k
    int getUnderlinePosition(long) -> getUnderlinePosition
    134:134:int getUnderlineThickness() -> l
    int getUnderlineThickness(long) -> getUnderlineThickness
    142:142:com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot getGlyph() -> c
    long getGlyph(long) -> getGlyph
    150:150:com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size getSize() -> d
    long getSize(long) -> getSize
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics:
    404:404:int getWidth() -> c
    int getWidth(long) -> getWidth
    412:412:int getHeight() -> a
    int getHeight(long) -> getHeight
    420:420:int getHoriBearingX() -> d
    int getHoriBearingX(long) -> getHoriBearingX
    428:428:int getHoriBearingY() -> e
    int getHoriBearingY(long) -> getHoriBearingY
    436:436:int getHoriAdvance() -> b
    int getHoriAdvance(long) -> getHoriAdvance
    444:444:int getVertBearingX() -> f
    int getVertBearingX(long) -> getVertBearingX
    452:452:int getVertBearingY() -> g
    int getVertBearingY(long) -> getVertBearingY
    460:460:int getVertAdvance() -> h
    int getVertAdvance(long) -> getVertAdvance
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot:
    248:248:com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics getMetrics() -> a
    long getMetrics(long) -> getMetrics
    256:256:int getLinearHoriAdvance() -> e
    int getLinearHoriAdvance(long) -> getLinearHoriAdvance
    264:264:int getLinearVertAdvance() -> f
    int getLinearVertAdvance(long) -> getLinearVertAdvance
    272:272:int getAdvanceX() -> g
    int getAdvanceX(long) -> getAdvanceX
    280:280:int getAdvanceY() -> h
    int getAdvanceY(long) -> getAdvanceY
    288:288:int getFormat() -> i
    int getFormat(long) -> getFormat
    296:296:com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap getBitmap() -> b
    long getBitmap(long) -> getBitmap
    305:305:int getBitmapLeft() -> c
    int getBitmapLeft(long) -> getBitmapLeft
    313:313:int getBitmapTop() -> d
    int getBitmapTop(long) -> getBitmapTop
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library:
    com.badlogic.gdx.utils.LongMap fontData -> a
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Pointer -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Pointer:
    long address -> b
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size:
    164:164:com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics getMetrics() -> a
    long getMetrics(long) -> getMetrics
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics:
    178:178:int getXppem() -> d
    int getXppem(long) -> getXppem
    186:186:int getYppem() -> e
    int getYppem(long) -> getYppem
    194:194:int getXScale() -> f
    int getXscale(long) -> getXscale
    202:202:int getYscale() -> g
    int getYscale(long) -> getYscale
    210:210:int getAscender() -> a
    int getAscender(long) -> getAscender
    218:218:int getDescender() -> b
    int getDescender(long) -> getDescender
    226:226:int getHeight() -> c
    int getHeight(long) -> getHeight
    234:234:int getMaxAdvance() -> h
    int getMaxAdvance(long) -> getMaxAdvance
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator -> com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator:
    java.lang.String DEFAULT_CHARS -> a
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library library -> b
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face face -> c
    78:79:com.badlogic.gdx.graphics.g2d.BitmapFont generateFont$6ca4df4d(int,java.lang.String) -> a
    87:87:com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(int) -> a
    95:99:int scaleForPixelHeight(int) -> b
    111:150:com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap generateGlyphAndBitmap(int,int,boolean) -> a
    157:157:com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(int) -> c
    167:259:com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData$52532dae(int,java.lang.String) -> b
    265:267:void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData -> com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData:
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> n
    277:277:com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> b
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap -> com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap:
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph glyph -> a
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap bitmap -> b
    com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator this$0 -> c
com.badlogic.gdx.graphics.g2d.freetype.FreetypeBuild -> com.badlogic.gdx.graphics.g2d.freetype.FreetypeBuild:
    28:122:void main$3231c38a() -> a
com.badlogic.gdx.graphics.g2d.harfbuzz.ComplexScriptLayout -> com.badlogic.gdx.graphics.g2d.harfbuzz.ComplexScriptLayout:
    java.lang.String fontLanguage -> a
    java.lang.String loadedLanguage -> b
    java.lang.String fontFilePath -> c
    int[] jniGetGlyphsForText(java.lang.String) -> jniGetGlyphsForText
    void jniInitialize(java.lang.String,java.lang.String) -> jniInitialize
    22:23:int[] getGlyphsAfterShaping(java.lang.CharSequence,int,int) -> a
    27:43:void setLanguage(java.lang.String,java.lang.String) -> a
com.badlogic.gdx.graphics.g2d.tiled.SimpleTileAtlas -> com.badlogic.gdx.graphics.g2d.tiled.SimpleTileAtlas:
    67:76:com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int,int,int,int,int) -> a
com.badlogic.gdx.graphics.g2d.tiled.TileAtlas -> com.badlogic.gdx.graphics.g2d.tiled.TileAtlas:
    com.badlogic.gdx.utils.IntMap regionsMap -> a
    java.util.HashSet textures -> b
    64:64:com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(int) -> a
    71:75:void dispose() -> dispose
    78:83:java.lang.String removeExtension(java.lang.String) -> a
    89:100:java.lang.String removePath(java.lang.String) -> b
    105:121:com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> a
    128:131:void flipRegions(boolean,boolean) -> a
com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer -> com.badlogic.gdx.graphics.g2d.tiled.TileMapRenderer:
    com.badlogic.gdx.graphics.g2d.SpriteCache cache -> d
    int[][][] normalCacheId -> e
    int[][][] blendedCacheId -> f
    com.badlogic.gdx.graphics.g2d.tiled.TileAtlas atlas -> g
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap map -> h
    int mapHeightUnits -> i
    int mapWidthUnits -> j
    int tileWidth -> k
    int tileHeight -> l
    float unitsPerTileX -> m
    float unitsPerTileY -> n
    int tilesPerBlockX -> o
    int tilesPerBlockY -> p
    float unitsPerBlockX -> q
    float unitsPerBlockY -> r
    int[] allLayers -> s
    boolean isSimpleTileAtlas -> t
    com.badlogic.gdx.utils.IntArray blendedTiles -> u
    int FLAG_FLIP_X -> v
    int FLAG_FLIP_Y -> w
    int FLAG_ROTATE -> x
    int MASK_CLEAR -> y
    com.badlogic.gdx.math.Vector3 tmp -> a
    float overdrawX -> b
    float overdrawY -> c
    int initialRow -> z
    int initialCol -> A
    int currentRow -> B
    int currentCol -> C
    int lastRow -> D
    int lastCol -> E
    int currentLayer -> F
    181:240:void init(int[][][],com.badlogic.gdx.graphics.g2d.tiled.TileAtlas,int,int,float,float,com.badlogic.gdx.utils.IntArray,int,int,com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    248:342:int addBlock(int[][],int,int,boolean) -> a
    348:349:void render() -> a
    354:355:void render$4098370b(float,float) -> a
    360:361:void render(com.badlogic.gdx.graphics.OrthographicCamera) -> a
    370:374:void render(com.badlogic.gdx.graphics.OrthographicCamera,int[]) -> a
    394:431:void render(float,float,float,float,int[]) -> a
    434:444:int getLayerWidthInBlocks(int,int) -> a
    448:458:int getLayerHeightInBlocks(int) -> a
    462:462:com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> b
    466:466:com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> c
    472:472:int getRow(int) -> b
    478:478:int getCol(int) -> c
    484:484:int getInitialRow() -> d
    490:490:int getInitialCol() -> e
    496:496:int getLastRow() -> f
    502:502:int getLastCol() -> g
    506:506:float getUnitsPerTileX() -> h
    510:510:float getUnitsPerTileY() -> i
    514:514:int getMapHeightUnits() -> j
    518:518:int getMapWidthUnits() -> k
    522:526:int parseIntWithDefault(java.lang.String,int) -> a
    533:534:void dispose() -> dispose
    537:537:com.badlogic.gdx.graphics.g2d.tiled.TiledMap getMap() -> l
    541:541:com.badlogic.gdx.graphics.g2d.tiled.TileAtlas getAtlas() -> m
    545:551:com.badlogic.gdx.utils.IntArray createFromCSV(java.lang.String) -> a
com.badlogic.gdx.graphics.g2d.tiled.TileSet -> com.badlogic.gdx.graphics.g2d.tiled.TileSet:
    int firstgid -> a
    int tileWidth -> b
    int tileHeight -> c
    int margin -> d
    int spacing -> e
    java.lang.String imageName -> f
    java.lang.String name -> g
com.badlogic.gdx.graphics.g2d.tiled.TiledLayer -> com.badlogic.gdx.graphics.g2d.tiled.TiledLayer:
    java.lang.String name -> a
    java.util.HashMap properties -> b
    int[][] tiles -> c
    35:36:int getWidth() -> a
    40:40:int getHeight() -> b
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader -> com.badlogic.gdx.graphics.g2d.tiled.TiledLoader:
    37:37:com.badlogic.gdx.graphics.g2d.tiled.TiledMap createMap(java.lang.String) -> a
    43:43:com.badlogic.gdx.graphics.g2d.tiled.TiledMap createMap(com.badlogic.gdx.files.FileHandle) -> a
    52:535:com.badlogic.gdx.graphics.g2d.tiled.TiledMap createMap(com.badlogic.gdx.files.FileHandle,java.lang.String) -> a
    539:539:int unsignedByteToInt(byte) -> a
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1 -> com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1:
    java.util.Stack currBranch -> a
    boolean awaitingData -> b
    com.badlogic.gdx.graphics.g2d.tiled.TiledLayer currLayer -> c
    int currLayerWidth -> d
    int currLayerHeight -> e
    com.badlogic.gdx.graphics.g2d.tiled.TileSet currTileSet -> f
    com.badlogic.gdx.graphics.g2d.tiled.TiledObjectGroup currObjectGroup -> g
    com.badlogic.gdx.graphics.g2d.tiled.TiledObject currObject -> h
    int currTile -> i
    com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline polyline -> j
    com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline polygon -> k
    com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Property currProperty -> l
    java.lang.String encoding -> m
    java.lang.String dataString -> n
    java.lang.String compression -> o
    byte[] data -> p
    int dataCounter -> q
    int row -> r
    int col -> s
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap val$map -> t
    95:138:void open(java.lang.String) -> a
    142:327:void attribute(java.lang.String,java.lang.String) -> a
    331:334:void text(java.lang.String) -> b
    338:416:void close() -> a
    419:433:void putPolyLine(com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline) -> a
    437:461:void putProperty(com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Property) -> a
    464:470:void fromCSV() -> b
    473:481:void arrangeData() -> c
    484:500:void unZlib() -> d
    503:523:void unGZip() -> e
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline -> com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Polyline:
    java.lang.String name -> a
    java.lang.String points -> b
    com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1 this$0 -> c
com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Property -> com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1$Property:
    java.lang.String parentType -> a
    java.lang.String name -> b
    java.lang.String value -> c
    com.badlogic.gdx.graphics.g2d.tiled.TiledLoader$1 this$0 -> d
com.badlogic.gdx.graphics.g2d.tiled.TiledMap -> com.badlogic.gdx.graphics.g2d.tiled.TiledMap:
    java.util.ArrayList layers -> a
    java.util.ArrayList objectGroups -> b
    java.util.ArrayList tileSets -> c
    java.util.HashMap properties -> d
    java.util.ArrayList tileProperties -> k
    com.badlogic.gdx.files.FileHandle tmxFile -> e
    java.lang.String orientation -> f
    int width -> g
    int height -> h
    int tileWidth -> i
    int tileHeight -> j
    44:56:void setTileProperty(int,java.lang.String,java.lang.String) -> a
    63:69:java.lang.String getTileProperty(int,java.lang.String) -> a
com.badlogic.gdx.graphics.g2d.tiled.TiledMap$TileProperty -> com.badlogic.gdx.graphics.g2d.tiled.TiledMap$TileProperty:
    int id -> a
    java.util.HashMap propertyMap -> b
    com.badlogic.gdx.graphics.g2d.tiled.TiledMap this$0 -> c
com.badlogic.gdx.graphics.g2d.tiled.TiledObject -> com.badlogic.gdx.graphics.g2d.tiled.TiledObject:
    java.lang.String name -> a
    java.lang.String type -> b
    int x -> c
    int y -> d
    int width -> e
    int height -> f
    int gid -> g
    java.util.HashMap properties -> h
    java.lang.String polyline -> i
    java.lang.String polygon -> j
com.badlogic.gdx.graphics.g2d.tiled.TiledObjectGroup -> com.badlogic.gdx.graphics.g2d.tiled.TiledObjectGroup:
    int width -> a
    int height -> b
    java.lang.String name -> c
    java.util.HashMap properties -> d
    java.util.ArrayList objects -> e
com.badlogic.gdx.graphics.g3d.AnimatedModelInstance -> com.badlogic.gdx.graphics.g3d.AnimatedModelInstance:
    java.lang.String getAnimation() -> a
    float getAnimationTime() -> b
    boolean isLooping() -> c
com.badlogic.gdx.graphics.g3d.AnimatedModelNode -> com.badlogic.gdx.graphics.g3d.AnimatedModelNode:
    java.lang.String animation -> a
    float time -> b
    boolean looping -> c
    36:36:java.lang.String getAnimation() -> a
    41:41:float getAnimationTime() -> b
    46:46:boolean isLooping() -> c
    50:66:com.badlogic.gdx.graphics.g3d.AnimatedModelNode copy() -> i
    21:21:com.badlogic.gdx.graphics.g3d.StillModelNode copy() -> d
com.badlogic.gdx.graphics.g3d.ModelLoaderHints -> com.badlogic.gdx.graphics.g3d.ModelLoaderHints:
    boolean flipV -> a
com.badlogic.gdx.graphics.g3d.ModelRenderer -> com.badlogic.gdx.graphics.g3d.ModelRenderer:
    void begin() -> a
    void draw$6fa1be4f() -> b
    void draw$12cfa77a() -> c
    void end() -> d
com.badlogic.gdx.graphics.g3d.StillModelInstance -> com.badlogic.gdx.graphics.g3d.StillModelInstance:
    com.badlogic.gdx.math.Matrix4 getTransform() -> e
    com.badlogic.gdx.math.Vector3 getSortCenter() -> f
    float getBoundingSphereRadius() -> g
    com.badlogic.gdx.graphics.g3d.materials.Material[] getMaterials() -> h
com.badlogic.gdx.graphics.g3d.StillModelNode -> com.badlogic.gdx.graphics.g3d.StillModelNode:
    float[] vec3 -> a
    com.badlogic.gdx.math.Vector3 origin -> d
    com.badlogic.gdx.math.Vector3 transformedPosition -> e
    com.badlogic.gdx.math.Matrix4 matrix -> f
    com.badlogic.gdx.graphics.g3d.materials.Material[] materials -> g
    float radius -> h
    43:43:com.badlogic.gdx.math.Matrix4 getTransform() -> e
    48:55:com.badlogic.gdx.math.Vector3 getSortCenter() -> f
    60:60:com.badlogic.gdx.graphics.g3d.materials.Material[] getMaterials() -> h
    65:65:float getBoundingSphereRadius() -> g
    69:82:com.badlogic.gdx.graphics.g3d.StillModelNode copy() -> d
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy:
    int GROUP_OPAQUE -> f
    int GROUP_BLEND -> g
    com.badlogic.gdx.utils.Pool arrayPool -> a
    com.badlogic.gdx.utils.Array usedArrays -> b
    com.badlogic.gdx.utils.ObjectMap materialGroups -> c
    com.badlogic.gdx.graphics.Camera camera -> d
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> e
    java.util.Comparator cameraSorter -> h
    117:118:void setCamera(com.badlogic.gdx.graphics.Camera) -> a
    121:121:com.badlogic.gdx.graphics.Camera getCamera() -> d
    126:126:int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> a
    131:156:void beforeGroup(int,com.badlogic.gdx.utils.Array) -> a
    160:163:void afterGroup(int) -> a
    167:179:void beforeGroups() -> a
    183:188:void afterGroups() -> b
    191:219:void createDefaultShader() -> e
    223:223:com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader$2b182f6b() -> c
    228:229:void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1 -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1:
    com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy this$0 -> a
    88:88:com.badlogic.gdx.utils.Array newObject() -> a
    85:85:java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2 -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2:
    com.badlogic.gdx.graphics.Camera val$camera -> a
    102:104:int compare(com.badlogic.gdx.graphics.g3d.decals.Decal,com.badlogic.gdx.graphics.g3d.decals.Decal) -> a
    99:99:int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.decals.Decal -> com.badlogic.gdx.graphics.g3d.decals.Decal:
    int VERTEX_SIZE -> N
    int SIZE -> a
    com.badlogic.gdx.math.Vector3 tmp -> O
    com.badlogic.gdx.math.Vector3 tmp2 -> P
    int value -> b
    float[] vertices -> c
    com.badlogic.gdx.math.Vector3 position -> d
    com.badlogic.gdx.math.Quaternion rotation -> e
    com.badlogic.gdx.math.Vector2 scale -> f
    com.badlogic.gdx.math.Vector2 transformationOffset -> g
    com.badlogic.gdx.math.Vector2 dimensions -> h
    com.badlogic.gdx.graphics.g3d.decals.DecalMaterial material -> i
    boolean updated -> j
    com.badlogic.gdx.math.Vector3 dir -> k
    int X1 -> l
    int Y1 -> m
    int Z1 -> n
    int C1 -> o
    int U1 -> p
    int V1 -> q
    int X2 -> r
    int Y2 -> s
    int Z2 -> t
    int C2 -> u
    int U2 -> v
    int V2 -> w
    int X3 -> x
    int Y3 -> y
    int Z3 -> z
    int C3 -> A
    int U3 -> B
    int V3 -> C
    int X4 -> D
    int Y4 -> E
    int Z4 -> F
    int C4 -> G
    int U4 -> H
    int V4 -> I
    com.badlogic.gdx.math.Quaternion rotator -> J
    com.badlogic.gdx.math.Vector3 X_AXIS -> K
    com.badlogic.gdx.math.Vector3 Y_AXIS -> L
    com.badlogic.gdx.math.Vector3 Z_AXIS -> M
    69:75:void setColor$4098370b() -> d
    81:83:void setRotationX(float) -> a
    89:91:void setRotationY(float) -> b
    97:99:void setRotationZ(float) -> c
    105:108:void rotateX(float) -> d
    114:117:void rotateY(float) -> e
    123:126:void rotateZ(float) -> f
    132:136:void setRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    142:142:com.badlogic.gdx.math.Quaternion getRotation() -> e
    149:151:void translateX(float) -> g
    157:159:void setX(float) -> h
    163:163:float getX() -> f
    170:172:void translateY(float) -> i
    178:180:void setY(float) -> j
    184:184:float getY() -> g
    191:193:void translateZ(float) -> k
    199:201:void setZ(float) -> l
    205:205:float getZ() -> a
    214:216:void translate(float,float,float) -> a
    224:226:void setPosition(float,float,float) -> b
    232:232:com.badlogic.gdx.math.Vector3 getPosition() -> h
    239:241:void setScaleX(float) -> m
    245:245:float getScaleX() -> i
    252:254:void setScaleY(float) -> n
    258:258:float getScaleY() -> j
    266:268:void setScale(float,float) -> a
    274:276:void setScale(float) -> o
    282:284:void setWidth(float) -> p
    288:288:float getWidth() -> k
    295:297:void setHeight(float) -> q
    301:301:float getHeight() -> l
    309:311:void setDimensions(float,float) -> b
    318:318:float[] getVertices() -> m
    323:327:void update() -> b
    341:436:void transformVertices() -> n
    440:463:void resetVertices() -> o
    467:480:void updateUVs() -> p
    486:488:void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    492:492:com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> q
    500:502:void setBlending(int,int) -> a
    505:505:com.badlogic.gdx.graphics.g3d.decals.DecalMaterial getMaterial() -> c
    514:516:void lookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> b
    554:554:com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion) -> b
    564:564:com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion,boolean) -> a
    578:578:com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    589:589:com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean) -> a
    602:608:com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,int,int) -> a
com.badlogic.gdx.graphics.g3d.decals.DecalBatch -> com.badlogic.gdx.graphics.g3d.decals.DecalBatch:
    int DEFAULT_SIZE -> a
    float[] vertices -> b
    com.badlogic.gdx.graphics.Mesh mesh -> c
    com.badlogic.gdx.utils.SortedIntList groupList -> d
    com.badlogic.gdx.graphics.g3d.decals.GroupStrategy groupStrategy -> e
    com.badlogic.gdx.utils.Pool groupPool -> f
    com.badlogic.gdx.utils.Array usedGroups -> g
    81:82:void setGroupStrategy(com.badlogic.gdx.graphics.g3d.decals.GroupStrategy) -> a
    88:105:void initialize$13462e() -> a
    109:109:int getSize() -> b
    116:126:void add(com.badlogic.gdx.graphics.g3d.decals.Decal) -> a
    130:132:void flush() -> c
    136:144:void render() -> d
    151:175:void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,com.badlogic.gdx.utils.Array) -> a
    181:187:void flush(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> a
    191:194:void clear() -> e
    199:202:void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1 -> com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1:
    com.badlogic.gdx.graphics.g3d.decals.DecalBatch this$0 -> a
    59:59:com.badlogic.gdx.utils.Array newObject() -> a
    56:56:java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial -> com.badlogic.gdx.graphics.g3d.decals.DecalMaterial:
    int NO_BLEND -> a
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> b
    int srcBlendFactor -> c
    int dstBlendFactor -> d
    31:35:void set() -> a
    39:39:boolean isOpaque() -> b
    43:43:int getSrcBlendFactor() -> c
    47:47:int getDstBlendFactor() -> d
    52:56:boolean equals(java.lang.Object) -> equals
    63:66:int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy:
    int GROUP_OPAQUE -> a
    int GROUP_BLEND -> b
    78:78:int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> a
    83:86:void beforeGroup(int,com.badlogic.gdx.utils.Array) -> a
    90:93:void afterGroup(int) -> a
    97:98:void beforeGroups() -> a
    102:103:void afterGroups() -> b
    107:107:com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader$2b182f6b() -> c
com.badlogic.gdx.graphics.g3d.decals.GroupPlug -> com.badlogic.gdx.graphics.g3d.decals.GroupPlug:
    void beforeGroup$7143f505() -> a
    void afterGroup() -> b
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.GroupStrategy:
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader$2b182f6b() -> c
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> a
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> a
    void afterGroup(int) -> a
    void beforeGroups() -> a
    void afterGroups() -> b
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy:
    com.badlogic.gdx.utils.IntMap plugs -> a
    29:30:void beforeGroup(int,com.badlogic.gdx.utils.Array) -> a
    34:35:void afterGroup(int) -> a
    41:42:void plugIn(com.badlogic.gdx.graphics.g3d.decals.GroupPlug,int) -> a
    48:48:com.badlogic.gdx.graphics.g3d.decals.GroupPlug unPlug(int) -> b
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy:
    com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator comparator -> a
    int GROUP_OPAQUE -> b
    int GROUP_BLEND -> c
    76:76:int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> a
    81:90:void beforeGroup(int,com.badlogic.gdx.utils.Array) -> a
    94:98:void afterGroup(int) -> a
    102:103:void beforeGroups() -> a
    107:108:void afterGroups() -> b
    120:120:com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader$2b182f6b() -> c
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator -> com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator:
    com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy this$0 -> a
    113:114:int compare(com.badlogic.gdx.graphics.g3d.decals.Decal,com.badlogic.gdx.graphics.g3d.decals.Decal) -> a
    110:110:int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.loaders.KeyframedModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.KeyframedModelLoader:
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
com.badlogic.gdx.graphics.g3d.loaders.ModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.ModelLoader:
    com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
com.badlogic.gdx.graphics.g3d.loaders.ModelLoaderRegistry -> com.badlogic.gdx.graphics.g3d.loaders.ModelLoaderRegistry:
    java.util.Map loaders -> a
    java.util.Map defaultHints -> b
    74:87:void registerLoader(java.lang.String,com.badlogic.gdx.graphics.g3d.loaders.ModelLoader,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
    95:123:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle) -> a
    133:158:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
    167:197:com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(com.badlogic.gdx.files.FileHandle) -> b
    207:234:com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
    244:274:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(com.badlogic.gdx.files.FileHandle) -> c
    285:312:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> c
    321:351:com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel loadSkeletonModel(com.badlogic.gdx.files.FileHandle) -> d
    361:388:com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel loadSkeletonModel$16dcfc52(com.badlogic.gdx.files.FileHandle) -> e
com.badlogic.gdx.graphics.g3d.loaders.SkeletonModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.SkeletonModelLoader:
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel load$16dcfc52(com.badlogic.gdx.files.FileHandle) -> a
com.badlogic.gdx.graphics.g3d.loaders.StillModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.StillModelLoader:
    com.badlogic.gdx.graphics.g3d.model.still.StillModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dConstants -> com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dConstants:
    byte MAJOR_VERSION -> a
    byte MINOR_VERSION -> b
    int G3D_ROOT -> c
    int VERSION_INFO -> d
    int STILL_MODEL -> e
    int STILL_SUBMESH -> f
    int KEYFRAMED_MODEL -> g
    int KEYFRAMED_SUBMESH -> h
    int KEYFRAMED_ANIMATION -> i
    int KEYFRAMED_FRAME -> j
    int SKELETON_MODEL -> k
    int SKELETON_SUBMESH -> l
    int SKELETON_ANIMATIONS -> m
    int SKELETON_ANIMATION -> n
    int SKELETON -> o
    int SKELETON_HIERARCHY -> p
    int SKELETON_JOINT -> q
    int SKELETON_KEYFRAME -> r
    int VERTEX_LIST -> s
    int INDEX_LIST -> t
    int VERTEX_ATTRIBUTES -> u
    int VERTEX_ATTRIBUTE -> v
    int BONE_WEIGHTS -> w
    int BONE_WEIGHT -> x
    int BONE_ASSIGNMENTS -> y
    int BONE_ASSIGNMENT -> z
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader -> com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader:
    50:124:com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(com.badlogic.gdx.files.FileHandle) -> a
    129:234:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(com.badlogic.gdx.files.FileHandle) -> b
    239:399:com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel loadSkeletonModel(com.badlogic.gdx.files.FileHandle) -> c
    404:425:com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint readSkeletonJoint(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk) -> a
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dKeyframedModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dKeyframedModelLoader:
    438:438:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
    435:435:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dSkeletonModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dSkeletonModelLoader:
    445:445:com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel load$16dcfc52(com.badlogic.gdx.files.FileHandle) -> a
    442:442:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dStillModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dLoader$G3dStillModelLoader:
    431:431:com.badlogic.gdx.graphics.g3d.model.still.StillModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
    428:428:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader -> com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader:
    int lineNum -> a
    java.lang.String line -> b
    51:51:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(com.badlogic.gdx.files.FileHandle,boolean) -> a
    55:55:com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(com.badlogic.gdx.files.FileHandle,boolean) -> b
    62:76:com.badlogic.gdx.graphics.g3d.model.still.StillModel loadStillModel(java.io.InputStream,boolean) -> a
    82:122:com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh readStillSubMesh(java.io.BufferedReader,boolean) -> a
    126:141:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel loadKeyframedModel(java.io.InputStream,boolean) -> b
    147:203:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh readMesh(java.io.BufferedReader,boolean) -> b
    207:226:float[] buildVertices(int,boolean,com.badlogic.gdx.utils.Array) -> a
    230:237:com.badlogic.gdx.graphics.VertexAttribute[] createVertexAttributes(boolean,int) -> a
    241:248:com.badlogic.gdx.utils.FloatArray readUVSet(java.io.BufferedReader,int,boolean) -> a
    252:271:com.badlogic.gdx.utils.IntArray readFaces(java.io.BufferedReader) -> a
    275:279:short[] convertToShortArray(com.badlogic.gdx.utils.IntArray) -> a
    283:284:float readFloat(java.io.BufferedReader) -> b
    288:289:int readInt(java.io.BufferedReader) -> c
    293:294:java.lang.String readString(java.io.BufferedReader) -> d
    298:305:void readFloatArray(java.io.BufferedReader,com.badlogic.gdx.utils.FloatArray) -> a
    308:314:int readFloatArray(java.io.BufferedReader,float[],int) -> a
    318:324:void readIntArray(java.io.BufferedReader,com.badlogic.gdx.utils.IntArray) -> a
    327:328:java.lang.String read(java.io.BufferedReader) -> e
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader$G3dtKeyframedModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader$G3dtKeyframedModelLoader:
    342:342:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
    339:339:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader$G3dtStillModelLoader -> com.badlogic.gdx.graphics.g3d.loaders.g3d.G3dtLoader$G3dtStillModelLoader:
    335:335:com.badlogic.gdx.graphics.g3d.model.still.StillModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
    331:331:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader -> com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader:
    219:219:com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk readChunks(java.io.InputStream) -> a
    223:225:com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk loadChunks$4cce7835(java.io.InputStream) -> b
    229:240:com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk loadChunk(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.CountingDataInputStream,byte[]) -> a
    244:256:byte[] readStream(java.io.InputStream,int) -> a
    263:264:void printChunks(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk) -> a
    267:324:void printChunks(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk,int) -> a
    327:330:java.lang.String rep(java.lang.String,int) -> a
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk -> com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk:
    int id -> a
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk parent -> b
    com.badlogic.gdx.utils.Array children -> c
    java.io.ByteArrayInputStream payload -> d
    byte[] payloadBytes -> e
    int offset -> f
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.CountingDataInputStream in -> g
    51:51:int getId() -> a
    55:55:com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk getParent() -> j
    59:59:com.badlogic.gdx.utils.Array getChildren() -> b
    64:66:int readByte() -> c
    72:74:short readShort() -> k
    80:82:int readInt() -> d
    88:90:long readLong() -> l
    96:98:float readFloat() -> e
    104:106:double readDouble() -> m
    112:119:byte[] readBytes() -> n
    125:132:short[] readShorts() -> f
    138:145:int[] readInts() -> g
    151:158:long[] readLongs() -> o
    164:171:float[] readFloats() -> h
    177:184:double[] readDoubles() -> p
    190:195:java.lang.String readString() -> i
    200:204:com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk getChild(int) -> a
    208:214:com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkReader$Chunk[] getChildren(int) -> b
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter -> com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter:
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk root -> a
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk currChunk -> b
    57:60:void newChunk(int) -> a
    63:64:void endChunk() -> a
    68:72:void writeByte(int) -> b
    76:80:void writeShort(short) -> a
    84:88:void writeInt(int) -> c
    92:96:void writeLong(long) -> a
    100:104:void writeFloat(float) -> a
    108:112:void writeDouble(double) -> a
    116:121:void writeString(java.lang.String) -> a
    124:125:void writeToStream(java.io.OutputStream) -> a
    129:141:void writeToStream(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk,java.io.DataOutputStream) -> a
    145:151:void writeBytes(byte[]) -> a
    155:161:void writeShorts(short[]) -> a
    165:171:void writeInts(int[]) -> a
    175:181:void writeLongs(long[]) -> a
    185:191:void writeFloats(float[]) -> a
    195:201:void writeDoubles(double[]) -> a
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk -> com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk:
    int id -> a
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter$Chunk parent -> b
    com.badlogic.gdx.utils.Array children -> c
    java.io.ByteArrayOutputStream payload -> d
    java.io.DataOutputStream out -> e
    com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter this$0 -> f
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.CountingDataInputStream -> com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.CountingDataInputStream:
    int readBytes -> a
    java.io.DataInputStream in -> b
    33:33:int getReadBytes() -> a
    38:40:void readFully(byte[]) -> readFully
    44:46:void readFully(byte[],int,int) -> readFully
    50:52:int skipBytes(int) -> skipBytes
    57:58:boolean readBoolean() -> readBoolean
    63:64:byte readByte() -> readByte
    69:70:int readUnsignedByte() -> readUnsignedByte
    75:76:short readShort() -> readShort
    81:82:int readUnsignedShort() -> readUnsignedShort
    87:88:char readChar() -> readChar
    93:94:int readInt() -> readInt
    99:100:long readLong() -> readLong
    105:106:float readFloat() -> readFloat
    111:112:double readDouble() -> readDouble
    117:117:java.lang.String readLine() -> readLine
    122:122:java.lang.String readUTF() -> readUTF
com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.G3dExporter -> com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.G3dExporter:
    40:110:void export(com.badlogic.gdx.graphics.g3d.model.still.StillModel,com.badlogic.gdx.files.FileHandle) -> a
    113:206:void export(com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel,com.badlogic.gdx.files.FileHandle) -> a
    209:345:void export(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel,com.badlogic.gdx.files.FileHandle) -> a
    348:364:void writeSkeletonJoint(com.badlogic.gdx.graphics.g3d.loaders.g3d.chunks.ChunkWriter,com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint) -> a
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame -> com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame:
    float[] vertices -> a
    int[] normalIndices -> b
    java.lang.String name -> c
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header -> com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header:
    int ident -> a
    int version -> b
    int skinWidth -> c
    int skinHeight -> d
    int frameSize -> e
    int numSkins -> f
    int numVertices -> g
    int numTexCoords -> h
    int numTriangles -> i
    int numGLCommands -> j
    int numFrames -> k
    int offsetSkin -> l
    int offsetTexCoords -> m
    int offsetTriangles -> n
    int offsetFrames -> o
    int offsetGLCommands -> p
    int offsetEnd -> q
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader -> com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader:
    byte[] charBuffer -> a
    43:47:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
    51:58:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(com.badlogic.gdx.files.FileHandle,float) -> a
    65:75:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel load(java.io.InputStream,float) -> a
    81:220:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel buildModel(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle[],float[],com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame[],float) -> a
    224:236:float[] buildTexCoords(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle[],float[]) -> a
    240:249:short[] buildIndices(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle[]) -> a
    253:263:com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame[] loadFrames(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,byte[]) -> a
    269:300:com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Frame loadFrame(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,com.badlogic.gdx.utils.LittleEndianInputStream) -> a
    304:321:com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle[] loadTriangles(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,byte[]) -> b
    325:338:float[] loadTexCoords(com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header,byte[]) -> c
    342:365:com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Header loadHeader(byte[]) -> a
    369:378:byte[] loadBytes(java.io.InputStream) -> a
    41:41:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader$MD2LoaderHints -> com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader$MD2LoaderHints:
    float frameDuration -> b
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader$VertexIndices -> com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader$VertexIndices:
    short vIdx -> a
    short tIdx -> b
    short nIdx -> c
    com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Loader this$0 -> d
    390:394:int hashCode() -> hashCode
    399:405:boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Normals -> com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Normals:
    float[][] normals -> a
com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle -> com.badlogic.gdx.graphics.g3d.loaders.md2.MD2Triangle:
    short[] vertices -> a
    short[] texCoords -> b
com.badlogic.gdx.graphics.g3d.loaders.wavefront.MtlLoader -> com.badlogic.gdx.graphics.g3d.loaders.wavefront.MtlLoader:
    java.util.ArrayList materials -> a
    com.badlogic.gdx.assets.AssetManager assetManager -> b
    com.badlogic.gdx.graphics.Texture emptyTexture -> c
    312:384:void load(java.lang.String,com.badlogic.gdx.files.FileHandle) -> a
    388:392:com.badlogic.gdx.graphics.g3d.materials.Material getMaterial(java.lang.String) -> a
com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader -> com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader:
    com.badlogic.gdx.utils.FloatArray verts -> a
    com.badlogic.gdx.utils.FloatArray norms -> b
    com.badlogic.gdx.utils.FloatArray uvs -> c
    java.util.ArrayList groups -> d
    66:66:com.badlogic.gdx.graphics.g3d.model.still.StillModel loadObj(com.badlogic.gdx.files.FileHandle) -> a
    74:74:com.badlogic.gdx.graphics.g3d.model.still.StillModel loadObj(com.badlogic.gdx.files.FileHandle,boolean) -> a
    86:245:com.badlogic.gdx.graphics.g3d.model.still.StillModel loadObj(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean) -> a
    251:256:com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader$Group setActiveGroup(java.lang.String) -> a
    260:265:int getIndex(java.lang.String,int) -> a
    288:288:com.badlogic.gdx.graphics.g3d.model.still.StillModel load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> a
    49:49:com.badlogic.gdx.graphics.g3d.model.Model load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.ModelLoaderHints) -> b
com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader$Group -> com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader$Group:
    java.lang.String name -> a
    java.lang.String materialName -> b
    java.util.ArrayList faces -> c
    int numFaces -> d
    boolean hasNorms -> e
    boolean hasUVs -> f
    com.badlogic.gdx.graphics.g3d.materials.Material mat -> g
    com.badlogic.gdx.graphics.g3d.loaders.wavefront.ObjLoader this$0 -> h
com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute -> com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute:
    java.lang.String translucent -> a
    int blendSrcFunc -> b
    int blendDstFunc -> c
    com.badlogic.gdx.utils.Pool pool -> d
    49:50:void bind() -> a
    54:55:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    59:59:com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute copy() -> b
    64:68:void set(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute) -> a
    79:81:com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute pooledCopy() -> c
    86:87:void free() -> d
com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute$1 -> com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute$1:
    73:73:com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute newObject() -> a
    70:70:java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.materials.ColorAttribute -> com.badlogic.gdx.graphics.g3d.materials.ColorAttribute:
    java.lang.String diffuse -> a
    java.lang.String specular -> b
    java.lang.String emissive -> c
    java.lang.String rim -> d
    java.lang.String fog -> e
    com.badlogic.gdx.graphics.Color color -> f
    com.badlogic.gdx.utils.Pool pool -> i
    50:55:void bind() -> a
    59:60:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    64:64:com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute copy() -> b
    69:76:void set(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute) -> a
    87:89:com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute pooledCopy() -> c
    94:95:void free() -> d
com.badlogic.gdx.graphics.g3d.materials.ColorAttribute$1 -> com.badlogic.gdx.graphics.g3d.materials.ColorAttribute$1:
    81:81:com.badlogic.gdx.graphics.g3d.materials.ColorAttribute newObject() -> a
    78:78:java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.materials.Material -> com.badlogic.gdx.graphics.g3d.materials.Material:
    java.lang.String name -> a
    com.badlogic.gdx.utils.Array attributes -> e
    boolean needBlending -> b
    boolean hasTexture -> c
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> d
    52:60:void checkAttributes() -> d
    63:66:void bind() -> a
    69:72:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    75:75:java.lang.String getName() -> b
    79:86:void addAttribute(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute[]) -> a
    89:92:void removeAttribute(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute[]) -> b
    95:97:void clearAttributes() -> e
    100:102:com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute getAttribute(int) -> a
    106:106:int getNumberOfAttributes() -> f
    128:134:com.badlogic.gdx.graphics.g3d.materials.Material copy() -> c
    139:143:int hashCode() -> hashCode
    148:159:boolean equals(java.lang.Object) -> equals
    163:182:boolean shaderEquals(com.badlogic.gdx.graphics.g3d.materials.Material) -> a
    186:194:void setPooled(com.badlogic.gdx.graphics.g3d.materials.Material) -> b
    197:197:boolean isNeedBlending() -> g
    201:201:boolean hasTexture() -> h
    205:205:com.badlogic.gdx.graphics.glutils.ShaderProgram getShader() -> i
    209:210:void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    213:214:void resetShader() -> j
    218:218:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute -> com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute:
    java.lang.String FLAG -> a
    java.lang.String name -> g
    boolean isPooled -> h
    void bind() -> a
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute copy() -> b
    com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute pooledCopy() -> c
    void free() -> d
    void set(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute) -> a
    48:48:java.lang.String getShaderFlag() -> e
com.badlogic.gdx.graphics.g3d.materials.TextureAttribute -> com.badlogic.gdx.graphics.g3d.materials.TextureAttribute:
    int MAX_TEXTURE_UNITS -> a
    java.lang.String diffuseTexture -> b
    java.lang.String lightmapTexture -> c
    java.lang.String specularTexture -> d
    com.badlogic.gdx.graphics.Texture texture -> e
    int unit -> f
    int minFilter -> i
    int magFilter -> j
    int uWrap -> k
    int vWrap -> l
    com.badlogic.gdx.utils.Pool pool -> m
    66:71:void bind() -> a
    75:81:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    85:85:com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute copy() -> b
    90:98:void set(com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute) -> a
    102:105:boolean texturePortionEquals(com.badlogic.gdx.graphics.g3d.materials.TextureAttribute) -> a
    119:121:com.badlogic.gdx.graphics.g3d.materials.MaterialAttribute pooledCopy() -> c
    126:127:void free() -> d
com.badlogic.gdx.graphics.g3d.materials.TextureAttribute$1 -> com.badlogic.gdx.graphics.g3d.materials.TextureAttribute$1:
    113:113:com.badlogic.gdx.graphics.g3d.materials.TextureAttribute newObject() -> a
    110:110:java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.model.AnimatedModel -> com.badlogic.gdx.graphics.g3d.model.AnimatedModel:
    void setAnimation$44bc7153(java.lang.String) -> a
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String) -> b
    com.badlogic.gdx.graphics.g3d.model.Animation[] getAnimations() -> a
com.badlogic.gdx.graphics.g3d.model.Animation -> com.badlogic.gdx.graphics.g3d.model.Animation:
    java.lang.String name -> a
    float totalDuration -> b
com.badlogic.gdx.graphics.g3d.model.Model -> com.badlogic.gdx.graphics.g3d.model.Model:
    void render() -> b
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    com.badlogic.gdx.graphics.g3d.model.Model getSubModel(java.lang.String[]) -> a
    com.badlogic.gdx.graphics.g3d.model.SubMesh getSubMesh(java.lang.String) -> c
    com.badlogic.gdx.graphics.g3d.model.SubMesh[] getSubMeshes() -> c
    void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
    void setMaterials(com.badlogic.gdx.graphics.g3d.materials.Material[]) -> a
    void setMaterial(com.badlogic.gdx.graphics.g3d.materials.Material) -> a
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.model.SubMesh -> com.badlogic.gdx.graphics.g3d.model.SubMesh:
    java.lang.String name -> a
    com.badlogic.gdx.graphics.g3d.materials.Material material -> b
    int primitiveType -> c
    com.badlogic.gdx.graphics.Mesh mesh -> d
    void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
    47:47:com.badlogic.gdx.graphics.Mesh getMesh() -> a
    51:52:void setMesh(com.badlogic.gdx.graphics.Mesh) -> a
com.badlogic.gdx.graphics.g3d.model.keyframe.Keyframe -> com.badlogic.gdx.graphics.g3d.model.keyframe.Keyframe:
    float timeStamp -> a
    float[] vertices -> b
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation -> com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation:
    float frameDuration -> c
    com.badlogic.gdx.graphics.g3d.model.keyframe.Keyframe[] keyframes -> d
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel -> com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedModel:
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh[] subMeshes -> a
    com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation[] animations -> b
    com.badlogic.gdx.math.collision.BoundingBox tmpBox -> c
    46:65:void checkValidity() -> e
    69:77:void render() -> b
    81:89:void render(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    93:99:void setMaterials(com.badlogic.gdx.graphics.g3d.materials.Material[]) -> a
    103:107:void setMaterial(com.badlogic.gdx.graphics.g3d.materials.Material) -> a
    111:115:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh getSubMesh(java.lang.String) -> d
    120:120:com.badlogic.gdx.graphics.g3d.model.SubMesh[] getSubMeshes() -> c
    125:165:void setAnimation$44bc7153(java.lang.String) -> a
    169:169:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation getAnimation(java.lang.String) -> e
    174:174:com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedAnimation[] getAnimations() -> d
    180:180:com.badlogic.gdx.graphics.g3d.model.Model getSubModel(java.lang.String[]) -> a
    187:192:void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
    196:199:void dispose() -> dispose
    29:29:com.badlogic.gdx.graphics.g3d.model.Animation[] getAnimations() -> a
    29:29:com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String) -> b
    29:29:com.badlogic.gdx.graphics.g3d.model.SubMesh getSubMesh(java.lang.String) -> c
com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh -> com.badlogic.gdx.graphics.g3d.model.keyframe.KeyframedSubMesh:
    float[] blendedVertices -> e
    int animatedComponents -> f
    com.badlogic.gdx.utils.ObjectMap animations -> g
    41:42:void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
com.badlogic.gdx.graphics.g3d.model.skeleton.Skeleton -> com.badlogic.gdx.graphics.g3d.model.skeleton.Skeleton:
    com.badlogic.gdx.utils.Array hierarchy -> a
    com.badlogic.gdx.utils.Array jointNames -> b
    java.util.Map namesToIndices -> c
    com.badlogic.gdx.utils.Array bindPoseJoints -> d
    com.badlogic.gdx.utils.Array animPoseJoints -> e
    com.badlogic.gdx.utils.Array offsetMatrices -> f
    com.badlogic.gdx.utils.Array sceneMatrices -> g
    com.badlogic.gdx.utils.Array combinedMatrices -> h
    com.badlogic.gdx.utils.ObjectMap animations -> i
    com.badlogic.gdx.math.Matrix4 IDENTITY -> j
    com.badlogic.gdx.math.Matrix4 rotMatrix -> k
    53:66:void buildFromHierarchy() -> a
    69:92:void recursiveFill(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint) -> a
    95:98:void calculateOffsetMatrices() -> c
    101:116:void calculateMatrices(com.badlogic.gdx.utils.Array) -> a
    119:151:void setAnimation$505d0a5f(java.lang.String) -> a
    154:155:void setBindPose() -> b
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation -> com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation:
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonKeyframe[][] perJointkeyFrames -> c
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint -> com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint:
    java.lang.String name -> a
    int index -> b
    int parentIndex -> c
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonJoint parent -> d
    com.badlogic.gdx.utils.Array children -> e
    com.badlogic.gdx.math.Vector3 position -> f
    com.badlogic.gdx.math.Quaternion rotation -> g
    com.badlogic.gdx.math.Vector3 scale -> h
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonKeyframe -> com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonKeyframe:
    float timeStamp -> a
    int parentIndex -> b
    com.badlogic.gdx.math.Vector3 position -> c
    com.badlogic.gdx.math.Vector3 scale -> d
    com.badlogic.gdx.math.Quaternion rotation -> e
    30:30:java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel -> com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel:
    com.badlogic.gdx.graphics.g3d.model.skeleton.Skeleton skeleton -> a
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh[] subMeshes -> b
    com.badlogic.gdx.math.Vector3 v -> c
    com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation[] animations -> d
    com.badlogic.gdx.math.collision.BoundingBox tmpBox -> e
    45:49:void setBindPose() -> d
    53:57:void setAnimation$44bc7153(java.lang.String) -> a
    62:117:void skin(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh,com.badlogic.gdx.utils.Array) -> a
    121:131:void render() -> b
    135:145:void render(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    149:155:void setMaterials(com.badlogic.gdx.graphics.g3d.materials.Material[]) -> a
    159:163:void setMaterial(com.badlogic.gdx.graphics.g3d.materials.Material) -> a
    167:171:com.badlogic.gdx.graphics.g3d.model.SubMesh getSubMesh(java.lang.String) -> c
    176:176:com.badlogic.gdx.graphics.g3d.model.SubMesh[] getSubMeshes() -> c
    181:181:com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation getAnimation(java.lang.String) -> d
    189:196:com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonAnimation[] getAnimations() -> e
    202:202:com.badlogic.gdx.graphics.g3d.model.Model getSubModel(java.lang.String[]) -> a
    209:214:void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
    218:221:void dispose() -> dispose
    30:30:com.badlogic.gdx.graphics.g3d.model.Animation[] getAnimations() -> a
    30:30:com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String) -> b
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModelGpuSkinned -> com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModelGpuSkinned:
    java.lang.String BoneIndexAttribue -> e
    java.lang.String BoneWeightAttribue -> f
    38:43:com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel CreateFromSkeletonModel(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonModel) -> a
    47:50:void setupGpuSkin() -> d
    53:115:void setupGpuSkin(com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh) -> a
    119:120:void setAnimation$44bc7153(java.lang.String) -> a
com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh -> com.badlogic.gdx.graphics.g3d.model.skeleton.SkeletonSubMesh:
    short[] indices -> e
    float[] vertices -> f
    float[] skinnedVertices -> g
    int[][] boneAssignments -> h
    float[][] boneWeights -> i
    38:39:void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
    42:43:void setVertices(float[]) -> a
    46:47:void setIndices(short[]) -> a
com.badlogic.gdx.graphics.g3d.model.still.StillModel -> com.badlogic.gdx.graphics.g3d.model.still.StillModel:
    com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh[] subMeshes -> a
    com.badlogic.gdx.math.collision.BoundingBox tmpBox -> b
    39:49:void render() -> b
    53:63:void render(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    67:72:com.badlogic.gdx.graphics.g3d.model.Model getSubModel(java.lang.String[]) -> a
    77:80:com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh getSubMesh(java.lang.String) -> a
    85:85:com.badlogic.gdx.graphics.g3d.model.SubMesh[] getSubMeshes() -> c
    90:96:void setMaterials(com.badlogic.gdx.graphics.g3d.materials.Material[]) -> a
    100:104:void setMaterial(com.badlogic.gdx.graphics.g3d.materials.Material) -> a
    110:115:void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
    119:122:void dispose() -> dispose
    27:27:com.badlogic.gdx.graphics.g3d.model.SubMesh getSubMesh(java.lang.String) -> c
com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh -> com.badlogic.gdx.graphics.g3d.model.still.StillSubMesh:
    36:37:void getBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
com.badlogic.gdx.graphics.glutils.ETC1 -> com.badlogic.gdx.graphics.glutils.ETC1:
    int PKM_HEADER_SIZE -> a
    int ETC1_RGB8_OES -> b
    138:140:int getPixelSize(com.badlogic.gdx.graphics.Pixmap$Format) -> a
    147:150:com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap) -> a
    158:161:com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap) -> b
    170:187:com.badlogic.gdx.graphics.Pixmap decodeImage(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,com.badlogic.gdx.graphics.Pixmap$Format) -> a
    int getCompressedDataSize(int,int) -> getCompressedDataSize
    void formatHeader(java.nio.ByteBuffer,int,int,int) -> formatHeader
    int getWidthPKM(java.nio.ByteBuffer,int) -> getWidthPKM
    int getHeightPKM(java.nio.ByteBuffer,int) -> getHeightPKM
    boolean isValidPKM(java.nio.ByteBuffer,int) -> isValidPKM
    void decodeImage(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int) -> decodeImage
    java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int) -> encodeImage
    java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int) -> encodeImagePKM
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data -> com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data:
    int width -> a
    int height -> b
    java.nio.ByteBuffer compressedData -> c
    int dataOffset -> d
    89:89:boolean hasPKMHeader() -> a
    95:119:void write(com.badlogic.gdx.files.FileHandle) -> a
    123:124:void dispose() -> dispose
    127:132:java.lang.String toString() -> toString
com.badlogic.gdx.graphics.glutils.ETC1TextureData -> com.badlogic.gdx.graphics.glutils.ETC1TextureData:
    com.badlogic.gdx.files.FileHandle file -> a
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data data -> b
    boolean useMipMaps -> c
    int width -> d
    int height -> e
    boolean isPrepared -> f
    53:53:com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    58:58:boolean isPrepared() -> b
    63:71:void prepare() -> c
    75:92:void consumeCompressedData() -> f
    96:96:com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    101:101:boolean disposePixmap() -> e
    106:106:int getWidth() -> g
    111:111:int getHeight() -> h
    116:116:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    121:121:boolean useMipMaps() -> j
    126:126:boolean isManaged() -> k
com.badlogic.gdx.graphics.glutils.FileTextureData -> com.badlogic.gdx.graphics.glutils.FileTextureData:
    boolean copyToPOT -> a
    com.badlogic.gdx.files.FileHandle file -> b
    int width -> c
    int height -> d
    com.badlogic.gdx.graphics.Pixmap$Format format -> e
    com.badlogic.gdx.graphics.Pixmap pixmap -> f
    boolean useMipMaps -> g
    boolean isPrepared -> h
    54:54:boolean isPrepared() -> b
    59:70:void prepare() -> c
    73:85:com.badlogic.gdx.graphics.Pixmap ensurePot(com.badlogic.gdx.graphics.Pixmap) -> a
    90:94:com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    99:99:boolean disposePixmap() -> e
    104:104:int getWidth() -> g
    109:109:int getHeight() -> h
    114:114:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    119:119:boolean useMipMaps() -> j
    124:124:boolean isManaged() -> k
    128:128:com.badlogic.gdx.files.FileHandle getFileHandle() -> l
    133:133:com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    138:138:void consumeCompressedData() -> f
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer -> com.badlogic.gdx.graphics.glutils.FloatFrameBuffer:
    46:55:void setupTexture() -> a
com.badlogic.gdx.graphics.glutils.FloatTextureData -> com.badlogic.gdx.graphics.glutils.FloatTextureData:
    int width -> a
    int height -> b
    boolean isPrepared -> c
    java.nio.FloatBuffer buffer -> d
    51:51:com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    56:56:boolean isPrepared() -> b
    61:64:void prepare() -> c
    68:88:void consumeCompressedData() -> f
    92:92:com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    97:97:boolean disposePixmap() -> e
    102:102:int getWidth() -> g
    107:107:int getHeight() -> h
    112:112:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    117:117:boolean useMipMaps() -> j
    122:122:boolean isManaged() -> k
com.badlogic.gdx.graphics.glutils.FrameBuffer -> com.badlogic.gdx.graphics.glutils.FrameBuffer:
    java.util.Map buffers -> f
    com.badlogic.gdx.graphics.Texture colorTexture -> a
    int defaultFramebufferHandle -> g
    boolean defaultFramebufferHandleInitialized -> h
    int framebufferHandle -> i
    int depthbufferHandle -> j
    int width -> b
    int height -> c
    boolean hasDepth -> d
    com.badlogic.gdx.graphics.Pixmap$Format format -> e
    106:109:void setupTexture() -> a
    112:183:void build() -> c
    187:204:void dispose() -> dispose
    208:210:void begin() -> d
    214:216:void end() -> e
    219:223:void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.FrameBuffer) -> a
    228:235:void invalidateAllFrameBuffers(com.badlogic.gdx.Application) -> a
    238:239:void clearAllFrameBuffers(com.badlogic.gdx.Application) -> b
    242:250:java.lang.String getManagedStatus() -> b
    255:255:com.badlogic.gdx.graphics.Texture getColorBufferTexture() -> f
    260:260:int getHeight() -> g
    265:265:int getWidth() -> h
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer -> com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer:
    void begin(com.badlogic.gdx.math.Matrix4,int) -> a
    void color(float,float,float,float) -> a
    void texCoord(float,float) -> a
    void normal(float,float,float) -> a
    void vertex(float,float,float) -> b
    void end() -> a
    int getNumVertices() -> b
    int getMaxVertices() -> c
    void dispose() -> d
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10 -> com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10:
    int primitiveType -> a
    float[] positions -> b
    java.nio.FloatBuffer positionsBuffer -> c
    float[] colors -> d
    java.nio.FloatBuffer colorsBuffer -> e
    float[] normals -> f
    java.nio.FloatBuffer normalsBuffer -> g
    float[] texCoords -> h
    java.nio.FloatBuffer texCoordsBuffer -> i
    int idxPos -> j
    int idxCols -> k
    int idxNors -> l
    int idxTexCoords -> m
    boolean hasCols -> n
    boolean hasNors -> o
    boolean hasTexCoords -> p
    int maxVertices -> q
    int numVertices -> r
    94:100:void begin(com.badlogic.gdx.math.Matrix4,int) -> a
    107:116:void begin(int) -> a
    124:129:void color(float,float,float,float) -> a
    136:140:void normal(float,float,float) -> a
    146:149:void texCoord(float,float) -> a
    158:166:void vertex(float,float,float) -> b
    169:169:int getNumVertices() -> b
    173:173:int getMaxVertices() -> c
    178:213:void end() -> a
    216:217:void vertex(com.badlogic.gdx.math.Vector3) -> a
    221:221:void dispose() -> d
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20 -> com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20:
    int primitiveType -> a
    int vertexIdx -> b
    int numSetTexCoords -> c
    int maxVertices -> d
    int numVertices -> e
    com.badlogic.gdx.graphics.Mesh mesh -> f
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> g
    boolean ownsShader -> h
    int numTexCoords -> i
    int vertexSize -> j
    int normalOffset -> k
    int colorOffset -> l
    int texCoordOffset -> m
    com.badlogic.gdx.math.Matrix4 projModelView -> n
    float[] vertices -> o
    76:86:com.badlogic.gdx.graphics.VertexAttribute[] buildVertexAttributes(boolean,boolean,int) -> a
    90:93:void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    96:98:void begin(com.badlogic.gdx.math.Matrix4,int) -> a
    101:102:void color(float,float,float,float) -> a
    105:109:void texCoord(float,float) -> a
    112:116:void normal(float,float,float) -> a
    119:127:void vertex(float,float,float) -> b
    130:142:void end() -> a
    145:145:int getNumVertices() -> b
    150:150:int getMaxVertices() -> c
    154:156:void dispose() -> d
    159:183:java.lang.String createVertexShader(boolean,boolean,int) -> b
    187:209:java.lang.String createFragmentShader$5fca6e8e(boolean,int) -> a
    214:216:com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader(boolean,boolean,int) -> c
com.badlogic.gdx.graphics.glutils.IndexArray -> com.badlogic.gdx.graphics.glutils.IndexArray:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    43:43:int getNumIndices() -> a
    48:48:int getNumMaxIndices() -> b
    64:69:void setIndices(short[],int,int) -> a
    78:78:java.nio.ShortBuffer getBuffer() -> c
    83:83:void bind() -> d
    87:87:void unbind() -> e
    91:91:void invalidate() -> f
    95:96:void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObject -> com.badlogic.gdx.graphics.glutils.IndexBufferObject:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int bufferHandle -> d
    boolean isDirect -> e
    boolean isDirty -> f
    boolean isBound -> g
    int usage -> h
    96:103:int createBufferObject() -> g
    109:109:int getNumIndices() -> a
    114:114:int getNumMaxIndices() -> b
    130:147:void setIndices(short[],int,int) -> a
    156:157:java.nio.ShortBuffer getBuffer() -> c
    162:182:void bind() -> d
    186:192:void unbind() -> e
    196:198:void invalidate() -> f
    202:220:void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int bufferHandle -> d
    boolean isDirect -> e
    boolean isDirty -> f
    boolean isBound -> g
    int usage -> h
    96:110:int createBufferObject() -> g
    115:115:int getNumIndices() -> a
    120:120:int getNumMaxIndices() -> b
    136:158:void setIndices(short[],int,int) -> a
    167:168:java.nio.ShortBuffer getBuffer() -> c
    173:197:void bind() -> d
    201:207:void unbind() -> e
    211:213:void invalidate() -> f
    217:234:void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexData -> com.badlogic.gdx.graphics.glutils.IndexData:
    int getNumIndices() -> a
    int getNumMaxIndices() -> b
    void setIndices(short[],int,int) -> a
    java.nio.ShortBuffer getBuffer() -> c
    void bind() -> d
    void unbind() -> e
    void invalidate() -> f
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.MipMapGenerator -> com.badlogic.gdx.graphics.glutils.MipMapGenerator:
    boolean useHWMipMap -> a
    33:34:void setUseHardwareMipMap(boolean) -> a
    41:54:void generateMipMap(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> a
    57:61:void generateMipMapGLES20(com.badlogic.gdx.graphics.Pixmap,boolean) -> a
    64:81:void generateMipMapDesktop(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> b
    84:107:void generateMipMapCPU(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> c
com.badlogic.gdx.graphics.glutils.PixmapTextureData -> com.badlogic.gdx.graphics.glutils.PixmapTextureData:
    com.badlogic.gdx.graphics.Pixmap pixmap -> b
    com.badlogic.gdx.graphics.Pixmap$Format format -> c
    boolean useMipMaps -> d
    boolean disposePixmap -> e
    39:39:boolean disposePixmap() -> e
    44:44:com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    49:49:int getWidth() -> g
    54:54:int getHeight() -> h
    59:59:com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    64:64:boolean useMipMaps() -> j
    69:69:boolean isManaged() -> k
    74:74:com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    79:79:void consumeCompressedData() -> f
    84:84:boolean isPrepared() -> b
    89:89:void prepare() -> c
com.badlogic.gdx.graphics.glutils.ShaderProgram -> com.badlogic.gdx.graphics.glutils.ShaderProgram:
    java.lang.String POSITION_ATTRIBUTE -> a
    java.lang.String NORMAL_ATTRIBUTE -> b
    java.lang.String COLOR_ATTRIBUTE -> c
    java.lang.String TEXCOORD_ATTRIBUTE -> d
    java.lang.String TANGENT_ATTRIBUTE -> e
    java.lang.String BINORMAL_ATTRIBUTE -> f
    boolean pedantic -> g
    com.badlogic.gdx.utils.ObjectMap shaders -> k
    java.lang.String log -> l
    boolean isCompiled -> m
    com.badlogic.gdx.utils.ObjectIntMap uniforms -> n
    com.badlogic.gdx.utils.ObjectIntMap uniformTypes -> o
    java.lang.String[] uniformNames -> p
    com.badlogic.gdx.utils.ObjectIntMap attributes -> q
    com.badlogic.gdx.utils.ObjectIntMap attributeTypes -> r
    java.lang.String[] attributeNames -> s
    int program -> t
    int vertexShaderHandle -> u
    int fragmentShaderHandle -> v
    java.nio.FloatBuffer matrix -> w
    java.lang.String vertexShaderSource -> x
    java.lang.String fragmentShaderSource -> y
    boolean invalidated -> z
    java.nio.ByteBuffer buffer -> A
    java.nio.FloatBuffer floatBuffer -> B
    java.nio.IntBuffer intBuffer -> C
    int refCount -> D
    java.nio.IntBuffer intbuf -> h
    java.nio.IntBuffer params -> i
    java.nio.IntBuffer type -> j
    173:188:void compileShaders(java.lang.String,java.lang.String) -> a
    191:212:int loadShader(int,java.lang.String) -> a
    216:239:int linkProgram() -> f
    247:255:java.lang.String getLog() -> a
    261:261:boolean isCompiled() -> b
    265:273:int fetchAttributeLocation(java.lang.String) -> c
    277:286:int fetchUniformLocation(java.lang.String) -> d
    295:299:void setUniformi(java.lang.String,int) -> a
    302:305:void setUniformi(int,int) -> a
    314:318:void setUniformi(java.lang.String,int,int) -> a
    321:324:void setUniformi(int,int,int) -> a
    334:338:void setUniformi(java.lang.String,int,int,int) -> a
    341:344:void setUniformi(int,int,int,int) -> a
    355:359:void setUniformi(java.lang.String,int,int,int,int) -> a
    362:365:void setUniformi(int,int,int,int,int) -> a
    373:377:void setUniformf(java.lang.String,float) -> a
    380:383:void setUniformf(int,float) -> a
    392:396:void setUniformf(java.lang.String,float,float) -> a
    399:402:void setUniformf(int,float,float) -> a
    412:416:void setUniformf(java.lang.String,float,float,float) -> a
    419:422:void setUniformf(int,float,float,float) -> a
    433:437:void setUniformf(java.lang.String,float,float,float,float) -> a
    440:443:void setUniformf(int,float,float,float,float) -> a
    446:453:void setUniform1fv(java.lang.String,float[],int,int) -> a
    456:462:void setUniform1fv(int,float[],int,int) -> a
    465:472:void setUniform2fv(java.lang.String,float[],int,int) -> b
    475:481:void setUniform2fv(int,float[],int,int) -> b
    484:491:void setUniform3fv(java.lang.String,float[],int,int) -> c
    494:500:void setUniform3fv(int,float[],int,int) -> c
    503:510:void setUniform4fv(java.lang.String,float[],int,int) -> d
    513:519:void setUniform4fv(int,float[],int,int) -> d
    527:528:void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4) -> a
    537:543:void setUniformMatrix$307b9b7a(java.lang.String,com.badlogic.gdx.math.Matrix4) -> b
    546:547:void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4) -> a
    550:555:void setUniformMatrix$62f94c57(int,com.badlogic.gdx.math.Matrix4) -> b
    563:564:void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3) -> a
    573:580:void setUniformMatrix$306d83f9(java.lang.String,com.badlogic.gdx.math.Matrix3) -> b
    583:584:void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3) -> a
    587:593:void setUniformMatrix$630763d8(int,com.badlogic.gdx.math.Matrix3) -> b
    602:607:void setUniformMatrix4fv(java.lang.String,java.nio.FloatBuffer,int,boolean) -> a
    615:616:void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2) -> a
    619:620:void setUniformf(int,com.badlogic.gdx.math.Vector2) -> a
    628:629:void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3) -> a
    632:633:void setUniformf(int,com.badlogic.gdx.math.Vector3) -> a
    641:642:void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color) -> a
    645:646:void setUniformf(int,com.badlogic.gdx.graphics.Color) -> a
    659:664:void setVertexAttribute(java.lang.String,int,int,boolean,int,java.nio.Buffer) -> a
    667:670:void setVertexAttribute(int,int,int,boolean,int,java.nio.Buffer) -> a
    683:688:void setVertexAttribute(java.lang.String,int,int,boolean,int,int) -> a
    691:694:void setVertexAttribute(int,int,int,boolean,int,int) -> a
    699:702:void begin() -> c
    707:709:void end() -> d
    713:719:void dispose() -> dispose
    725:730:void disableVertexAttribute(java.lang.String) -> a
    733:736:void disableVertexAttribute(int) -> a
    742:747:void enableVertexAttribute(java.lang.String) -> b
    750:753:void enableVertexAttribute(int) -> b
    756:760:void checkManaged() -> g
    763:767:void addManagedShader(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    772:781:void invalidateAllShaderPrograms(com.badlogic.gdx.Application) -> a
    784:785:void clearAllShaderPrograms(com.badlogic.gdx.Application) -> b
    788:796:java.lang.String getManagedStatus() -> e
    807:810:void setAttributef(java.lang.String,float,float,float,float) -> b
    813:818:void ensureBufferCapacity(int) -> c
    824:840:void fetchUniforms() -> h
    843:859:void fetchAttributes() -> i
    864:864:boolean hasAttribute(java.lang.String) -> e
    870:874:int getAttributeType(java.lang.String) -> f
    880:884:int getAttributeLocation(java.lang.String) -> g
    890:890:boolean hasUniform(java.lang.String) -> h
    896:900:int getUniformType(java.lang.String) -> i
    906:910:int getUniformLocation(java.lang.String) -> j
    915:915:java.lang.String[] getAttributes() -> j
    920:920:java.lang.String[] getUniforms() -> k
com.badlogic.gdx.graphics.glutils.ShapeRenderer -> com.badlogic.gdx.graphics.glutils.ShapeRenderer:
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer renderer -> a
    boolean matrixDirty -> b
    com.badlogic.gdx.math.Matrix4 projView -> c
    com.badlogic.gdx.math.Matrix4 transform -> d
    com.badlogic.gdx.math.Matrix4 combined -> e
    com.badlogic.gdx.math.Matrix4 tmp -> f
    com.badlogic.gdx.graphics.Color color -> g
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType currType -> h
    130:131:void setColor(com.badlogic.gdx.graphics.Color) -> a
    139:140:void setColor(float,float,float,float) -> a
    145:147:void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> a
    150:152:void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> b
    156:158:void identity() -> a
    165:167:void translate$483d242b(float,float) -> a
    175:177:void rotate$4098370b(float) -> a
    184:186:void scale(float,float,float) -> b
    197:205:void begin(com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType) -> a
    212:217:void point$483d242b(float,float) -> b
    227:234:void line$7b59a84b(float,float,float,float) -> b
    242:249:void line(float,float,float,float) -> c
    254:263:void curve(float,float,float,float,float,float,float,float) -> a
    267:315:void curve(float,float,float,float,float,float,float,float,int) -> a
    324:346:void rect(float,float,float,float) -> d
    355:371:void filledRect(float,float,float,float) -> e
    381:397:void filledRect(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> a
    406:470:void box(float,float,float,float,float,float) -> a
    474:475:void circle(float,float,float) -> c
    478:504:void circle(float,float,float,int) -> a
    508:509:void filledCircle(float,float,float) -> a
    512:543:void filledCircle(float,float,float,int) -> b
    546:563:void triangle(float,float,float,float,float,float) -> b
    566:575:void filledTriangle$7b59a84b(float,float,float,float,float) -> a
    578:579:void cone(float,float,float,float,float) -> b
    582:610:void cone(float,float,float,float,float,int) -> a
    615:616:void filledCone(float,float,float,float,float) -> c
    619:656:void filledCone(float,float,float,float,float,int) -> b
    659:663:void checkDirty() -> d
    666:670:void checkFlush(int) -> a
    674:676:void end() -> b
    679:682:void flush() -> e
    686:686:com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType getCurrentType() -> f
    690:691:void dispose() -> c
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType -> com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType:
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Point -> a
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Line -> b
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Rectangle -> c
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType FilledRectangle -> d
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Box -> e
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Circle -> f
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType FilledCircle -> g
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Triangle -> h
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType FilledTriangle -> i
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Cone -> j
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType FilledCone -> k
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Curve -> l
    int glType -> glType
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] $VALUES -> m
    79:79:com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] values() -> values
    79:79:com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType valueOf(java.lang.String) -> valueOf
    101:101:int getGlType() -> a
com.badlogic.gdx.graphics.glutils.VertexArray -> com.badlogic.gdx.graphics.glutils.VertexArray:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> a
    java.nio.FloatBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    boolean isBound -> d
    71:72:void dispose() -> dispose
    77:77:java.nio.FloatBuffer getBuffer() -> a
    83:83:int getNumVertices() -> b
    88:88:int getNumMaxVertices() -> c
    94:97:void setVertices$1cc109a0(float[],int) -> a
    101:146:void bind() -> d
    150:178:void unbind() -> e
    181:197:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    203:210:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    214:214:com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> f
com.badlogic.gdx.graphics.glutils.VertexBufferObject -> com.badlogic.gdx.graphics.glutils.VertexBufferObject:
    java.nio.IntBuffer tmpHandle -> a
    com.badlogic.gdx.graphics.VertexAttributes attributes -> b
    java.nio.FloatBuffer buffer -> c
    java.nio.ByteBuffer byteBuffer -> d
    int bufferHandle -> e
    boolean isStatic -> f
    int usage -> g
    boolean isDirty -> h
    boolean isBound -> i
    94:98:int createBufferObject() -> h
    104:104:com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> f
    110:110:int getNumVertices() -> b
    115:115:int getNumMaxVertices() -> c
    121:122:java.nio.FloatBuffer getBuffer() -> a
    128:143:void setVertices$1cc109a0(float[],int) -> a
    148:196:void bind() -> d
    202:225:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    230:259:void unbind() -> e
    265:273:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    277:279:void invalidate() -> g
    284:302:void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData:
    java.nio.IntBuffer tmpHandle -> a
    com.badlogic.gdx.graphics.VertexAttributes attributes -> b
    java.nio.FloatBuffer buffer -> c
    java.nio.ByteBuffer byteBuffer -> d
    int bufferHandle -> e
    boolean isDirect -> f
    boolean isStatic -> g
    int usage -> h
    boolean isDirty -> i
    boolean isBound -> j
    95:106:int createBufferObject() -> g
    112:112:com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> f
    118:118:int getNumVertices() -> b
    123:123:int getNumMaxVertices() -> c
    129:130:java.nio.FloatBuffer getBuffer() -> a
    136:159:void setVertices$1cc109a0(float[],int) -> a
    164:214:void bind() -> d
    220:245:void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    250:279:void unbind() -> e
    285:293:void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    297:299:void invalidate() -> h
    304:321:void dispose() -> dispose
    326:326:int getBufferHandle() -> i
com.badlogic.gdx.graphics.glutils.VertexData -> com.badlogic.gdx.graphics.glutils.VertexData:
    int getNumVertices() -> b
    int getNumMaxVertices() -> c
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> f
    void setVertices$1cc109a0(float[],int) -> a
    java.nio.FloatBuffer getBuffer() -> a
    void bind() -> d
    void unbind() -> e
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    void dispose() -> dispose
com.badlogic.gdx.input.GestureDetector -> com.badlogic.gdx.input.GestureDetector:
    com.badlogic.gdx.input.GestureDetector$GestureListener listener -> a
    float tapSquareSize -> d
    long tapCountInterval -> e
    float longPressSeconds -> f
    long maxFlingDelay -> g
    boolean inTapSquare -> h
    int tapCount -> i
    long lastTapTime -> j
    float lastTapX -> k
    float lastTapY -> l
    int lastTapButton -> m
    int lastTapPointer -> n
    boolean longPressFired -> b
    boolean pinching -> o
    boolean panning -> p
    com.badlogic.gdx.input.GestureDetector$VelocityTracker tracker -> q
    float tapSquareCenterX -> r
    float tapSquareCenterY -> s
    long gestureStartTime -> t
    com.badlogic.gdx.math.Vector2 pointer1 -> c
    com.badlogic.gdx.math.Vector2 pointer2 -> u
    com.badlogic.gdx.math.Vector2 initialPointer1 -> v
    com.badlogic.gdx.math.Vector2 initialPointer2 -> w
    com.badlogic.gdx.utils.Timer$Task longPressTask -> x
    86:86:boolean touchDown(int,int,int,int) -> a
    90:121:boolean touchDown$4096cea7(float,float,int) -> a
    126:126:boolean touchDragged(int,int,int) -> a
    130:161:boolean touchDragged(float,float,int) -> b
    166:166:boolean touchUp(int,int,int,int) -> b
    170:211:boolean touchUp(float,float,int,int) -> a
    216:216:boolean isLongPressed() -> b
    222:223:boolean isLongPressed(float) -> a
    227:227:boolean isPanning() -> a
    231:234:void reset() -> c
    237:237:boolean isWithinTapSquare(float,float,float,float) -> a
    242:243:void invalidateTapSquare() -> d
    246:247:void setTapSquareSize(int) -> d
    251:252:void setTapCountInterval(float) -> b
    255:256:void setLongPressSeconds(float) -> c
    259:260:void setMaxFlingDelay(long) -> a
com.badlogic.gdx.input.GestureDetector$1 -> com.badlogic.gdx.input.GestureDetector$1:
    com.badlogic.gdx.input.GestureDetector this$0 -> a
    57:58:void run() -> run
com.badlogic.gdx.input.GestureDetector$GestureAdapter -> com.badlogic.gdx.input.GestureDetector$GestureAdapter:
    311:311:boolean touchDown$4096cea7() -> a
    316:316:boolean tap(float,float,int,int) -> a
    321:321:boolean longPress(float,float) -> a
    326:326:boolean fling(float,float,int) -> a
    331:331:boolean pan(float,float,float,float) -> a
    336:336:boolean zoom(float,float) -> b
    341:341:boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.input.GestureDetector$GestureListener -> com.badlogic.gdx.input.GestureDetector$GestureListener:
    boolean touchDown$4096cea7() -> a
    boolean tap(float,float,int,int) -> a
    boolean longPress(float,float) -> a
    boolean fling(float,float,int) -> a
    boolean pan(float,float,float,float) -> a
    boolean zoom(float,float) -> b
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.input.GestureDetector$VelocityTracker -> com.badlogic.gdx.input.GestureDetector$VelocityTracker:
    int sampleSize -> a
    float lastX -> b
    float lastY -> c
    float deltaX -> d
    float deltaY -> e
    long lastTime -> f
    int numSamples -> g
    float[] meanX -> h
    float[] meanY -> i
    long[] meanTime -> j
    356:367:void start(float,float,long) -> a
    370:382:void update(float,float,long) -> b
    385:388:float getVelocityX() -> a
    392:395:float getVelocityY() -> b
    399:404:float getAverage(float[],int) -> a
    408:414:long getAverage(long[],int) -> a
    418:424:float getSum(float[],int) -> b
com.badlogic.gdx.input.RemoteInput -> com.badlogic.gdx.input.RemoteInput:
    int DEFAULT_PORT -> a
    java.net.ServerSocket serverSocket -> i
    float[] accel -> j
    float[] compass -> k
    boolean multiTouch -> l
    float remoteWidth -> m
    float remoteHeight -> n
    java.util.Set keys -> b
    int[] touchX -> c
    int[] touchY -> d
    boolean[] isTouched -> e
    boolean justTouched -> f
    com.badlogic.gdx.InputProcessor processor -> g
    int port -> o
    java.lang.String[] ips -> h
    180:252:void run() -> run
    258:258:float getAccelerometerX() -> getAccelerometerX
    263:263:float getAccelerometerY() -> getAccelerometerY
    268:268:float getAccelerometerZ() -> getAccelerometerZ
    273:273:int getX() -> getX
    278:278:int getX(int) -> getX
    283:283:int getY() -> getY
    288:288:int getY(int) -> getY
    293:293:boolean isTouched() -> isTouched
    298:298:boolean justTouched() -> justTouched
    303:303:boolean isTouched(int) -> isTouched
    308:311:boolean isButtonPressed(int) -> isButtonPressed
    316:316:boolean isKeyPressed(int) -> isKeyPressed
    321:322:void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    326:327:void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    331:331:void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    336:336:void vibrate(int) -> vibrate
    341:341:void vibrate(long[],int) -> vibrate
    346:346:void cancelVibrate() -> cancelVibrate
    350:350:float getAzimuth() -> getAzimuth
    355:355:float getPitch() -> getPitch
    360:360:float getRoll() -> getRoll
    366:366:void setCatchBackKey(boolean) -> setCatchBackKey
    370:371:void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    375:375:com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    380:380:java.lang.String[] getIPs() -> a
    385:388:boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    393:393:int getRotation() -> getRotation
    398:398:com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    404:404:void setCursorCatched(boolean) -> setCursorCatched
    408:408:boolean isCursorCatched() -> isCursorCatched
    414:414:int getDeltaX() -> getDeltaX
    419:419:int getDeltaX(int) -> getDeltaX
    424:424:int getDeltaY() -> getDeltaY
    429:429:int getDeltaY(int) -> getDeltaY
    434:434:void setCursorPosition(int,int) -> setCursorPosition
    440:440:void setCatchMenuKey(boolean) -> setCatchMenuKey
    445:445:long getCurrentEventTime() -> getCurrentEventTime
    452:452:void getRotationMatrix(float[]) -> getRotationMatrix
com.badlogic.gdx.input.RemoteInput$EventTrigger -> com.badlogic.gdx.input.RemoteInput$EventTrigger:
    com.badlogic.gdx.input.RemoteInput$TouchEvent touchEvent -> a
    com.badlogic.gdx.input.RemoteInput$KeyEvent keyEvent -> b
    com.badlogic.gdx.input.RemoteInput this$0 -> c
    84:136:void run() -> run
com.badlogic.gdx.input.RemoteInput$KeyEvent -> com.badlogic.gdx.input.RemoteInput$KeyEvent:
    int KEY_DOWN -> a
    int KEY_UP -> b
    int KEY_TYPED -> c
    long timeStamp -> d
    int type -> e
    int keyCode -> f
    char keyChar -> g
    com.badlogic.gdx.input.RemoteInput this$0 -> h
com.badlogic.gdx.input.RemoteInput$TouchEvent -> com.badlogic.gdx.input.RemoteInput$TouchEvent:
    int TOUCH_DOWN -> a
    int TOUCH_UP -> b
    int TOUCH_DRAGGED -> c
    long timeStamp -> d
    int type -> e
    int x -> f
    int y -> g
    int pointer -> h
    com.badlogic.gdx.input.RemoteInput this$0 -> i
com.badlogic.gdx.input.RemoteSender -> com.badlogic.gdx.input.RemoteSender:
    java.io.DataOutputStream out -> j
    boolean connected -> k
    int KEY_DOWN -> a
    int KEY_UP -> b
    int KEY_TYPED -> c
    int TOUCH_DOWN -> d
    int TOUCH_UP -> e
    int TOUCH_DRAGGED -> f
    int ACCEL -> g
    int COMPASS -> h
    int SIZE -> i
    61:80:void sendUpdate() -> a
    84:96:boolean keyDown(int) -> a
    101:113:boolean keyUp(int) -> b
    118:130:boolean keyTyped(char) -> a
    135:149:boolean touchDown(int,int,int,int) -> a
    154:168:boolean touchUp(int,int,int,int) -> b
    173:187:boolean touchDragged(int,int,int) -> a
    192:192:boolean mouseMoved(int,int) -> a
    197:197:boolean scrolled(int) -> c
    201:203:boolean isConnected() -> b
com.badlogic.gdx.math.CatmullRomSpline -> com.badlogic.gdx.math.CatmullRomSpline:
    long serialVersionUID -> serialVersionUID
    java.util.List controlPoints -> controlPoints
    com.badlogic.gdx.math.Vector3 T1 -> T1
    com.badlogic.gdx.math.Vector3 T2 -> T2
    37:38:void add(com.badlogic.gdx.math.Vector3) -> a
    42:42:java.util.List getControlPoints() -> a
    51:86:java.util.List getPath(int) -> a
    95:124:void getPath(com.badlogic.gdx.math.Vector3[],int) -> a
    131:166:java.util.List getTangents(int) -> b
    175:214:java.util.List getTangentNormals2D(int) -> c
    223:229:java.util.List getTangentNormals(int,com.badlogic.gdx.math.Vector3) -> a
    233:240:java.util.List getTangentNormals(int,java.util.List) -> a
com.badlogic.gdx.math.Circle -> com.badlogic.gdx.math.Circle:
    float x -> x
    float y -> y
    float radius -> radius
    42:44:boolean contains(float,float) -> a
    48:50:boolean contains(com.badlogic.gdx.math.Vector2) -> a
    54:57:void set(float,float,float) -> a
com.badlogic.gdx.math.EarClippingTriangulator -> com.badlogic.gdx.math.EarClippingTriangulator:
    int CONCAVE -> a
    int CONVEX -> b
    int concaveVertexCount -> c
    43:74:java.util.List computeTriangles(java.util.List) -> a
    78:90:boolean areVerticesClockwise(java.util.ArrayList) -> a
    98:125:int[] classifyVertices(java.util.ArrayList) -> b
    130:133:boolean isTriangleConvex(float,float,float,float,float,float) -> a
    143:149:int computeSpannedAreaSign(float,float,float,float,float,float) -> b
    155:180:boolean isAnyVertexInTriangle(java.util.ArrayList,int[],float,float,float,float,float,float) -> a
    184:196:boolean isEarTip(java.util.ArrayList,int,int[]) -> a
    201:214:void cutEarTip(java.util.ArrayList,int,java.util.ArrayList) -> a
    218:234:void removeCollinearNeighborEarsAfterRemovingEarTip(java.util.ArrayList,int) -> a
    237:240:boolean isCollinear(java.util.ArrayList,int) -> b
    245:249:boolean isCollinear(java.util.ArrayList,int,int,int) -> a
    254:254:int computePreviousIndex(java.util.List,int) -> a
    258:258:int computeNextIndex(java.util.List,int) -> b
com.badlogic.gdx.math.FloatCounter -> com.badlogic.gdx.math.FloatCounter:
    int count -> a
    float total -> b
    float min -> c
    float max -> d
    float average -> e
    float latest -> f
    float value -> g
    com.badlogic.gdx.math.WindowedMean mean -> h
    54:71:void put(float) -> a
    77:86:void reset() -> a
com.badlogic.gdx.math.Frustum -> com.badlogic.gdx.math.Frustum:
    com.badlogic.gdx.math.Vector3[] clipSpacePlanePoints -> a
    float[] clipSpacePlanePointsArray -> b
    com.badlogic.gdx.math.Plane[] planes -> c
    com.badlogic.gdx.math.Vector3[] planePoints -> d
    float[] planePointsArray -> e
    57:72:void update(com.badlogic.gdx.math.Matrix4) -> a
    79:83:boolean pointInFrustum(com.badlogic.gdx.math.Vector3) -> a
    92:95:boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float) -> a
    104:107:boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float) -> b
    115:127:boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox) -> a
com.badlogic.gdx.math.Interpolation -> com.badlogic.gdx.math.Interpolation:
    com.badlogic.gdx.math.Interpolation linear -> a
    com.badlogic.gdx.math.Interpolation fade -> b
    com.badlogic.gdx.math.Interpolation$Pow pow2 -> c
    com.badlogic.gdx.math.Interpolation$PowIn pow2In -> d
    com.badlogic.gdx.math.Interpolation$PowOut pow2Out -> e
    com.badlogic.gdx.math.Interpolation$Pow pow3 -> f
    com.badlogic.gdx.math.Interpolation$PowIn pow3In -> g
    com.badlogic.gdx.math.Interpolation$PowOut pow3Out -> h
    com.badlogic.gdx.math.Interpolation$Pow pow4 -> i
    com.badlogic.gdx.math.Interpolation$PowIn pow4In -> j
    com.badlogic.gdx.math.Interpolation$PowOut pow4Out -> k
    com.badlogic.gdx.math.Interpolation$Pow pow5 -> l
    com.badlogic.gdx.math.Interpolation$PowIn pow5In -> m
    com.badlogic.gdx.math.Interpolation$PowOut pow5Out -> n
    com.badlogic.gdx.math.Interpolation sine -> o
    com.badlogic.gdx.math.Interpolation sineIn -> p
    com.badlogic.gdx.math.Interpolation sineOut -> q
    com.badlogic.gdx.math.Interpolation exp10 -> r
    com.badlogic.gdx.math.Interpolation exp10In -> s
    com.badlogic.gdx.math.Interpolation exp10Out -> t
    com.badlogic.gdx.math.Interpolation exp5 -> u
    com.badlogic.gdx.math.Interpolation exp5In -> v
    com.badlogic.gdx.math.Interpolation exp5Out -> w
    com.badlogic.gdx.math.Interpolation circle -> x
    com.badlogic.gdx.math.Interpolation circleIn -> y
    com.badlogic.gdx.math.Interpolation circleOut -> z
    com.badlogic.gdx.math.Interpolation$Elastic elastic -> A
    com.badlogic.gdx.math.Interpolation$Elastic elasticIn -> B
    com.badlogic.gdx.math.Interpolation$Elastic elasticOut -> C
    com.badlogic.gdx.math.Interpolation swing -> D
    com.badlogic.gdx.math.Interpolation swingIn -> E
    com.badlogic.gdx.math.Interpolation swingOut -> F
    com.badlogic.gdx.math.Interpolation bounce -> G
    com.badlogic.gdx.math.Interpolation bounceIn -> H
    com.badlogic.gdx.math.Interpolation bounceOut -> I
    float apply(float) -> a
    27:27:float apply(float,float,float) -> a
com.badlogic.gdx.math.Interpolation$1 -> com.badlogic.gdx.math.Interpolation$1:
    32:32:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$2 -> com.badlogic.gdx.math.Interpolation$2:
    38:38:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$3 -> com.badlogic.gdx.math.Interpolation$3:
    60:60:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$4 -> com.badlogic.gdx.math.Interpolation$4:
    66:66:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$5 -> com.badlogic.gdx.math.Interpolation$5:
    72:72:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$6 -> com.badlogic.gdx.math.Interpolation$6:
    86:92:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$7 -> com.badlogic.gdx.math.Interpolation$7:
    98:98:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$8 -> com.badlogic.gdx.math.Interpolation$8:
    104:105:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Bounce -> com.badlogic.gdx.math.Interpolation$Bounce:
    248:250:float out(float) -> b
    254:255:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$BounceIn -> com.badlogic.gdx.math.Interpolation$BounceIn:
    338:338:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$BounceOut -> com.badlogic.gdx.math.Interpolation$BounceOut:
    float[] widths -> J
    float[] heights -> K
    312:324:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Elastic -> com.badlogic.gdx.math.Interpolation$Elastic:
    float value -> J
    float power -> K
    205:211:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$ElasticIn -> com.badlogic.gdx.math.Interpolation$ElasticIn:
    221:221:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$ElasticOut -> com.badlogic.gdx.math.Interpolation$ElasticOut:
    231:232:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Exp -> com.badlogic.gdx.math.Interpolation$Exp:
    float value -> J
    float power -> K
    float min -> L
    float scale -> M
    169:170:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$ExpIn -> com.badlogic.gdx.math.Interpolation$ExpIn:
    180:180:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$ExpOut -> com.badlogic.gdx.math.Interpolation$ExpOut:
    190:190:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Pow -> com.badlogic.gdx.math.Interpolation$Pow:
    int power -> J
    131:132:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$PowIn -> com.badlogic.gdx.math.Interpolation$PowIn:
    142:142:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$PowOut -> com.badlogic.gdx.math.Interpolation$PowOut:
    152:152:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$Swing -> com.badlogic.gdx.math.Interpolation$Swing:
    float scale -> J
    352:358:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$SwingIn -> com.badlogic.gdx.math.Interpolation$SwingIn:
    float scale -> J
    383:383:float apply(float) -> a
com.badlogic.gdx.math.Interpolation$SwingOut -> com.badlogic.gdx.math.Interpolation$SwingOut:
    float scale -> J
    370:371:float apply(float) -> a
com.badlogic.gdx.math.Intersector -> com.badlogic.gdx.math.Intersector:
    com.badlogic.gdx.math.Vector3 v0 -> g
    com.badlogic.gdx.math.Vector3 v1 -> h
    com.badlogic.gdx.math.Vector3 v2 -> i
    com.badlogic.gdx.math.Plane p -> j
    com.badlogic.gdx.math.Vector3 i -> k
    com.badlogic.gdx.math.Vector3 dir -> l
    com.badlogic.gdx.math.Vector3 start -> m
    com.badlogic.gdx.math.Vector3 tmp -> a
    com.badlogic.gdx.math.Vector3 best -> b
    com.badlogic.gdx.math.Vector3 tmp1 -> c
    com.badlogic.gdx.math.Vector3 tmp2 -> d
    com.badlogic.gdx.math.Vector3 tmp3 -> e
    com.badlogic.gdx.math.Vector3 intersection -> f
    39:57:float getLowestPositiveRoot(float,float,float) -> a
    73:85:boolean isPointInTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    89:95:boolean intersectSegmentPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> a
    102:102:int pointLineSide(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
    108:108:int pointLineSide(float,float,float,float,float,float) -> a
    117:129:boolean isPointInPolygon(java.util.List,com.badlogic.gdx.math.Vector2) -> a
    140:157:float distanceLinePoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> b
    162:163:float distanceLinePoint(float,float,float,float,float,float) -> b
    174:190:boolean intersectSegmentCircle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> a
    204:215:float intersectSegmentCircleDisplace(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2) -> a
    226:237:boolean intersectRayPlane(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> a
    252:264:float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> a
    279:302:boolean intersectRayTriangle(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    318:358:boolean intersectRaySphere(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3) -> a
    369:481:boolean intersectRayBounds(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox,com.badlogic.gdx.math.Vector3) -> a
    491:527:boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox) -> a
    543:567:boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],com.badlogic.gdx.math.Vector3) -> a
    580:608:boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],short[],int,com.badlogic.gdx.math.Vector3) -> a
    619:641:boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,java.util.List,com.badlogic.gdx.math.Vector3) -> a
    651:651:boolean intersectRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> a
    664:676:boolean intersectLines(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
    688:700:boolean intersectSegments(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> b
    704:704:float det(float,float,float,float) -> a
    708:708:double detd(double,double,double,double) -> a
    712:716:boolean overlapCircles(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Circle) -> a
    720:723:boolean overlapRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> b
    727:747:boolean overlapCircleRectangle(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Rectangle) -> a
    756:756:boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon) -> a
    767:767:boolean overlapConvexPolygons$7244be0b(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon) -> b
    778:917:boolean overlapConvexPolygons(float[],float[],com.badlogic.gdx.math.Intersector$MinimumTranslationVector) -> a
    940:1035:void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle) -> a
    1040:1050:void splitEdge$445b702b(float[],int,int,int,com.badlogic.gdx.math.Plane,float[]) -> a
    1053:1062:void main$3231c38a() -> a
com.badlogic.gdx.math.Intersector$MinimumTranslationVector -> com.badlogic.gdx.math.Intersector$MinimumTranslationVector:
    com.badlogic.gdx.math.Vector2 normal -> a
    float depth -> b
com.badlogic.gdx.math.Intersector$SplitTriangle -> com.badlogic.gdx.math.Intersector$SplitTriangle:
    float[] front -> a
    float[] back -> b
    float[] edgeSplit -> c
    int numFront -> d
    int numBack -> e
    int total -> f
    boolean frontCurrent -> g
    int frontOffset -> h
    int backOffset -> i
    1085:1085:java.lang.String toString() -> toString
    1090:1091:void setSide(boolean) -> a
    1094:1094:boolean getSide() -> a
    1098:1105:void add(float[],int,int) -> a
    1108:1114:void reset() -> b
com.badlogic.gdx.math.MathUtils -> com.badlogic.gdx.math.MathUtils:
    float nanoToSec -> a
    float PI -> b
    int SIN_BITS -> i
    int SIN_MASK -> j
    int SIN_COUNT -> k
    float radFull -> l
    float degFull -> m
    float radToIndex -> n
    float degToIndex -> o
    float radiansToDegrees -> c
    float radDeg -> d
    float degreesToRadians -> e
    float degRad -> f
    int ATAN2_BITS -> p
    int ATAN2_BITS2 -> q
    int ATAN2_MASK -> r
    int ATAN2_COUNT -> s
    int ATAN2_DIM -> g
    float INV_ATAN2_DIM_MINUS_1 -> t
    java.util.Random random -> h
    int BIG_ENOUGH_INT -> u
    double BIG_ENOUGH_FLOOR -> v
    double CEIL -> w
    double BIG_ENOUGH_CEIL -> x
    double BIG_ENOUGH_ROUND -> y
    70:70:float sin(float) -> a
    75:75:float cos(float) -> b
    80:80:float sinDeg(float) -> c
    85:85:float cosDeg(float) -> d
    113:132:float atan2(float,float) -> a
    141:141:int random(int) -> a
    146:146:int random(int,int) -> a
    150:150:boolean randomBoolean() -> a
    154:154:float random() -> b
    159:159:float random(float) -> e
    164:164:float random(float,float) -> b
    171:178:int nextPowerOfTwo(int) -> b
    182:182:boolean isPowerOfTwo(int) -> c
    188:190:int clamp(int,int,int) -> a
    194:196:short clamp(short,short,short) -> a
    200:202:float clamp(float,float,float) -> a
    217:217:int floor(float) -> g
    223:223:int floorPositive(float) -> h
    229:229:int ceil(float) -> f
    235:235:int ceilPositive(float) -> i
    241:241:int round(float) -> j
    246:246:int roundPositive(float) -> k
com.badlogic.gdx.math.MathUtils$Atan2 -> com.badlogic.gdx.math.MathUtils$Atan2:
    float[] table -> a
com.badlogic.gdx.math.MathUtils$Cos -> com.badlogic.gdx.math.MathUtils$Cos:
    float[] table -> a
com.badlogic.gdx.math.MathUtils$Sin -> com.badlogic.gdx.math.MathUtils$Sin:
    float[] table -> a
com.badlogic.gdx.math.Matrix3 -> com.badlogic.gdx.math.Matrix3:
    long serialVersionUID -> serialVersionUID
    float DEGREE_TO_RAD -> j
    int M00 -> a
    int M01 -> b
    int M02 -> c
    int M10 -> d
    int M11 -> e
    int M12 -> f
    int M20 -> g
    int M21 -> h
    int M22 -> i
    float[] val -> val
    float[] tmp -> tmp
    52:61:com.badlogic.gdx.math.Matrix3 idt() -> a
    72:94:com.badlogic.gdx.math.Matrix3 mul(com.badlogic.gdx.math.Matrix3) -> a
    101:117:com.badlogic.gdx.math.Matrix3 setToRotation(float) -> b
    125:137:com.badlogic.gdx.math.Matrix3 setToTranslation(float,float) -> a
    144:156:com.badlogic.gdx.math.Matrix3 setToTranslation(com.badlogic.gdx.math.Vector2) -> a
    165:174:com.badlogic.gdx.math.Matrix3 setToScaling(float,float) -> e
    178:178:java.lang.String toString() -> toString
    184:184:float det() -> c
    191:216:com.badlogic.gdx.math.Matrix3 inv() -> d
    223:224:com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix3) -> b
    231:240:com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix4) -> a
    247:249:com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector2) -> b
    257:259:com.badlogic.gdx.math.Matrix3 trn(float,float) -> b
    266:268:com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector3) -> a
    277:289:com.badlogic.gdx.math.Matrix3 translate(float,float) -> c
    297:309:com.badlogic.gdx.math.Matrix3 translate(com.badlogic.gdx.math.Vector2) -> c
    317:334:com.badlogic.gdx.math.Matrix3 rotate(float) -> a
    343:353:com.badlogic.gdx.math.Matrix3 scale(float,float) -> d
    361:371:com.badlogic.gdx.math.Matrix3 scale(com.badlogic.gdx.math.Vector2) -> d
    377:377:float[] getValues() -> b
    384:386:com.badlogic.gdx.math.Matrix3 scl(float) -> c
    393:395:com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector2) -> e
    402:404:com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector3) -> b
    411:423:com.badlogic.gdx.math.Matrix3 transpose() -> e
    434:455:void mul(float[],float[]) -> a
com.badlogic.gdx.math.Matrix4 -> com.badlogic.gdx.math.Matrix4:
    long serialVersionUID -> serialVersionUID
    int M00 -> a
    int M01 -> b
    int M02 -> c
    int M03 -> d
    int M10 -> e
    int M11 -> f
    int M12 -> g
    int M13 -> h
    int M20 -> i
    int M21 -> j
    int M22 -> k
    int M23 -> l
    int M30 -> m
    int M31 -> n
    int M32 -> o
    int M33 -> p
    float[] tmp -> tmp
    float[] val -> val
    com.badlogic.gdx.math.Quaternion quat -> q
    com.badlogic.gdx.math.Vector3 tmpV -> r
    com.badlogic.gdx.math.Vector3 l_vez -> s
    com.badlogic.gdx.math.Vector3 l_vex -> t
    com.badlogic.gdx.math.Vector3 l_vey -> u
    com.badlogic.gdx.math.Vector3 tmpVec -> v
    com.badlogic.gdx.math.Matrix4 tmpMat -> w
    com.badlogic.gdx.math.Vector3 right -> x
    com.badlogic.gdx.math.Vector3 tmpForward -> y
    com.badlogic.gdx.math.Vector3 tmpUp -> z
    84:84:com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4) -> a
    94:95:com.badlogic.gdx.math.Matrix4 set(float[]) -> a
    104:130:com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Quaternion) -> a
    141:157:com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    162:162:com.badlogic.gdx.math.Matrix4 cpy() -> c
    170:173:com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3) -> a
    183:186:com.badlogic.gdx.math.Matrix4 trn(float,float,float) -> c
    191:191:float[] getValues() -> d
    203:204:com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4) -> b
    211:227:com.badlogic.gdx.math.Matrix4 tra() -> e
    234:250:com.badlogic.gdx.math.Matrix4 idt() -> a
    258:317:com.badlogic.gdx.math.Matrix4 inv() -> b
    322:322:float det() -> f
    341:362:com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float) -> a
    374:375:com.badlogic.gdx.math.Matrix4 setToOrtho2D$7167aba2(float,float) -> a
    389:390:com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float) -> b
    405:431:com.badlogic.gdx.math.Matrix4 setToOrtho(float,float,float,float,float,float) -> a
    440:444:com.badlogic.gdx.math.Matrix4 setToTranslation(com.badlogic.gdx.math.Vector3) -> c
    455:459:com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float) -> d
    469:476:com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    491:498:com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float) -> c
    509:513:com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float) -> a
    524:528:com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float) -> b
    536:537:com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> b
    549:550:com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float,float,float) -> d
    561:562:com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float) -> e
    570:574:com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3) -> d
    584:588:com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float) -> f
    602:617:com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> c
    630:634:com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    642:647:com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> b
    652:652:java.lang.String toString() -> toString
    661:663:void lerp(com.badlogic.gdx.math.Matrix4,float) -> a
    668:684:com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3) -> a
    688:691:com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3) -> b
    695:698:com.badlogic.gdx.math.Matrix4 scl(float,float,float) -> g
    702:705:com.badlogic.gdx.math.Matrix4 scl(float) -> b
    709:712:void getTranslation(com.badlogic.gdx.math.Vector3) -> e
    715:716:void getRotation(com.badlogic.gdx.math.Quaternion) -> b
    720:723:com.badlogic.gdx.math.Matrix4 toNormalMatrix() -> g
    void mul(float[],float[]) -> mul
    void mulVec(float[],float[]) -> mulVec
    void mulVec(float[],float[],int,int,int) -> mulVec
    void prj(float[],float[]) -> prj
    void prj(float[],float[],int,int,int) -> prj
    void rot(float[],float[]) -> rot
    void rot(float[],float[],int,int,int) -> rot
    boolean inv(float[]) -> inv
    float det(float[]) -> det
    986:986:com.badlogic.gdx.math.Matrix4 translate(com.badlogic.gdx.math.Vector3) -> f
    996:1014:com.badlogic.gdx.math.Matrix4 translate(float,float,float) -> a
    1024:1026:com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,float) -> b
    1037:1039:com.badlogic.gdx.math.Matrix4 rotate$7167aba2(float) -> a
    1048:1050:com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Quaternion) -> c
    1060:1078:com.badlogic.gdx.math.Matrix4 scale(float,float,float) -> b
com.badlogic.gdx.math.Plane -> com.badlogic.gdx.math.Plane:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 normal -> normal
    float d -> d
    73:78:void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    87:89:void set(float,float,float,float) -> a
    96:96:float distance(com.badlogic.gdx.math.Vector3) -> b
    105:112:com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3) -> a
    123:130:com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float) -> a
    139:140:boolean isFrontFacing(com.badlogic.gdx.math.Vector3) -> c
    145:145:com.badlogic.gdx.math.Vector3 getNormal() -> a
    150:150:float getD() -> b
    158:160:void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    163:165:void set(float,float,float,float,float,float) -> a
    171:173:void set(com.badlogic.gdx.math.Plane) -> a
    176:176:java.lang.String toString() -> toString
com.badlogic.gdx.math.Plane$PlaneSide -> com.badlogic.gdx.math.Plane$PlaneSide:
    com.badlogic.gdx.math.Plane$PlaneSide OnPlane -> a
    com.badlogic.gdx.math.Plane$PlaneSide Back -> b
    com.badlogic.gdx.math.Plane$PlaneSide Front -> c
    com.badlogic.gdx.math.Plane$PlaneSide[] $VALUES -> d
    31:31:com.badlogic.gdx.math.Plane$PlaneSide[] values() -> values
    31:31:com.badlogic.gdx.math.Plane$PlaneSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.math.Polygon -> com.badlogic.gdx.math.Polygon:
    float[] localVertices -> a
    float[] worldVertices -> b
    float x -> c
    float y -> d
    float originX -> e
    float originY -> f
    float rotation -> g
    float scaleX -> h
    float scaleY -> i
    boolean dirty -> j
    com.badlogic.gdx.math.Rectangle bounds -> k
    36:36:float[] getVertices() -> b
    41:79:float[] getTransformedVertices() -> a
    83:86:void setOrigin(float,float) -> a
    89:92:void setPosition(float,float) -> b
    95:98:void translate(float,float) -> c
    101:103:void setRotation(float) -> a
    106:108:void rotate(float) -> b
    111:114:void setScale(float,float) -> d
    117:120:void scale(float) -> c
    123:124:void dirty() -> c
    127:143:float area() -> d
    147:168:com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> e
    172:183:boolean contains(float,float) -> e
    187:187:float getX() -> f
    191:191:float getY() -> g
    195:195:float getOriginX() -> h
    199:199:float getOriginY() -> i
    203:203:float getRotation() -> j
    207:207:float getScaleX() -> k
    211:211:float getScaleY() -> l
com.badlogic.gdx.math.Quaternion -> com.badlogic.gdx.math.Quaternion:
    long serialVersionUID -> serialVersionUID
    float NORMALIZATION_TOLERANCE -> a
    com.badlogic.gdx.math.Quaternion tmp1 -> b
    com.badlogic.gdx.math.Quaternion tmp2 -> c
    float x -> x
    float y -> y
    float z -> z
    float w -> w
    71:75:com.badlogic.gdx.math.Quaternion set(float,float,float,float) -> a
    82:82:com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion) -> a
    91:94:com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Vector3,float) -> a
    99:99:com.badlogic.gdx.math.Quaternion cpy() -> b
    104:104:float len() -> c
    109:109:java.lang.String toString() -> toString
    118:139:com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float) -> a
    144:144:float len2() -> d
    150:158:com.badlogic.gdx.math.Quaternion nor() -> e
    165:168:com.badlogic.gdx.math.Quaternion conjugate() -> a
    176:183:void transform(com.badlogic.gdx.math.Vector3) -> a
    190:198:com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion) -> b
    206:214:com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion) -> c
    223:249:void toMatrix(float[]) -> a
    254:255:com.badlogic.gdx.math.Quaternion idt() -> f
    265:265:com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float) -> b
    276:279:com.badlogic.gdx.math.Quaternion setFromAxis(float,float,float,float) -> b
    289:289:com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4) -> a
    315:352:com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float) -> a
    360:361:com.badlogic.gdx.math.Quaternion setFromCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    373:374:com.badlogic.gdx.math.Quaternion setFromCross(float,float,float,float,float,float) -> a
    383:421:com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float) -> a
    425:432:boolean equals(java.lang.Object) -> equals
    440:440:float dot(com.badlogic.gdx.math.Quaternion) -> d
    447:451:com.badlogic.gdx.math.Quaternion mul$2f014c6f() -> g
com.badlogic.gdx.math.Rectangle -> com.badlogic.gdx.math.Rectangle:
    com.badlogic.gdx.math.Rectangle tmp -> tmp
    com.badlogic.gdx.math.Rectangle tmp2 -> tmp2
    long serialVersionUID -> serialVersionUID
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    59:59:float getX() -> getX
    65:66:void setX(float) -> setX
    70:70:float getY() -> getY
    76:77:void setY(float) -> setY
    81:81:float getWidth() -> getWidth
    87:88:void setWidth(float) -> setWidth
    92:92:float getHeight() -> getHeight
    98:99:void setHeight(float) -> setHeight
    104:110:boolean contains(com.badlogic.gdx.math.Rectangle) -> contains
    117:117:boolean overlaps(com.badlogic.gdx.math.Rectangle) -> overlaps
    121:125:void set(float,float,float,float) -> set
    131:131:boolean contains(float,float) -> contains
    137:141:void set(com.badlogic.gdx.math.Rectangle) -> set
    146:155:void merge(com.badlogic.gdx.math.Rectangle) -> merge
    158:158:java.lang.String toString() -> toString
com.badlogic.gdx.math.Vector2 -> com.badlogic.gdx.math.Vector2:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector2 tmp -> a
    com.badlogic.gdx.math.Vector2 tmp2 -> b
    com.badlogic.gdx.math.Vector2 tmp3 -> c
    com.badlogic.gdx.math.Vector2 X -> d
    com.badlogic.gdx.math.Vector2 Y -> e
    com.badlogic.gdx.math.Vector2 Zero -> f
    float x -> x
    float y -> y
    61:61:com.badlogic.gdx.math.Vector2 cpy() -> d
    66:66:float len() -> a
    71:71:float len2() -> e
    78:80:com.badlogic.gdx.math.Vector2 set(com.badlogic.gdx.math.Vector2) -> a
    88:90:com.badlogic.gdx.math.Vector2 set(float,float) -> a
    97:99:com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2) -> b
    105:110:com.badlogic.gdx.math.Vector2 nor() -> b
    117:119:com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2) -> c
    127:129:com.badlogic.gdx.math.Vector2 add(float,float) -> b
    135:135:float dot(com.badlogic.gdx.math.Vector2) -> e
    142:144:com.badlogic.gdx.math.Vector2 mul(float) -> a
    150:152:com.badlogic.gdx.math.Vector2 mul(float,float) -> d
    156:156:com.badlogic.gdx.math.Vector2 div(float) -> c
    160:160:com.badlogic.gdx.math.Vector2 div(float,float) -> e
    164:164:com.badlogic.gdx.math.Vector2 div(com.badlogic.gdx.math.Vector2) -> f
    170:172:float dst(com.badlogic.gdx.math.Vector2) -> d
    179:181:float dst(float,float) -> f
    187:189:float dst2(com.badlogic.gdx.math.Vector2) -> g
    196:198:float dst2(float,float) -> g
    202:202:java.lang.String toString() -> toString
    210:212:com.badlogic.gdx.math.Vector2 sub(float,float) -> c
    221:221:com.badlogic.gdx.math.Vector2 tmp() -> f
    228:232:com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3) -> a
    239:239:float crs(com.badlogic.gdx.math.Vector2) -> h
    247:247:float crs(float,float) -> h
    253:255:float angle() -> c
    261:263:void setAngle(float) -> d
    268:278:com.badlogic.gdx.math.Vector2 rotate(float) -> b
    288:290:com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float) -> a
    295:299:int hashCode() -> hashCode
    304:310:boolean equals(java.lang.Object) -> equals
    318:321:boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float) -> b
com.badlogic.gdx.math.Vector3 -> com.badlogic.gdx.math.Vector3:
    long serialVersionUID -> serialVersionUID
    float x -> x
    float y -> y
    float z -> z
    com.badlogic.gdx.math.Vector3 tmp -> a
    com.badlogic.gdx.math.Vector3 tmp2 -> b
    com.badlogic.gdx.math.Vector3 tmp3 -> c
    com.badlogic.gdx.math.Vector3 X -> d
    com.badlogic.gdx.math.Vector3 Y -> e
    com.badlogic.gdx.math.Vector3 Z -> f
    com.badlogic.gdx.math.Vector3 Zero -> g
    com.badlogic.gdx.math.Matrix4 tmpMat -> h
    84:87:com.badlogic.gdx.math.Vector3 set(float,float,float) -> a
    95:95:com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3) -> a
    103:103:com.badlogic.gdx.math.Vector3 set(float[]) -> a
    108:108:com.badlogic.gdx.math.Vector3 cpy() -> a
    116:116:com.badlogic.gdx.math.Vector3 tmp() -> b
    124:124:com.badlogic.gdx.math.Vector3 tmp2() -> c
    132:132:com.badlogic.gdx.math.Vector3 tmp3() -> g
    140:140:com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3) -> b
    149:149:com.badlogic.gdx.math.Vector3 add(float,float,float) -> b
    157:157:com.badlogic.gdx.math.Vector3 add(float) -> b
    164:164:com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3) -> c
    174:174:com.badlogic.gdx.math.Vector3 sub(float,float,float) -> c
    182:182:com.badlogic.gdx.math.Vector3 sub(float) -> c
    190:190:com.badlogic.gdx.math.Vector3 mul(float) -> a
    198:198:com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Vector3) -> h
    208:208:com.badlogic.gdx.math.Vector3 mul(float,float,float) -> e
    216:216:com.badlogic.gdx.math.Vector3 div(float) -> d
    220:220:com.badlogic.gdx.math.Vector3 div(float,float,float) -> f
    224:224:com.badlogic.gdx.math.Vector3 div(com.badlogic.gdx.math.Vector3) -> i
    229:229:float len() -> d
    234:234:float len2() -> e
    240:240:boolean idt(com.badlogic.gdx.math.Vector3) -> j
    246:254:float dst(com.badlogic.gdx.math.Vector3) -> d
    261:265:com.badlogic.gdx.math.Vector3 nor() -> f
    272:272:float dot(com.badlogic.gdx.math.Vector3) -> e
    279:279:com.badlogic.gdx.math.Vector3 crs(com.badlogic.gdx.math.Vector3) -> f
    288:288:com.badlogic.gdx.math.Vector3 crs(float,float,float) -> g
    295:296:com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix4) -> a
    307:309:com.badlogic.gdx.math.Vector3 prj(com.badlogic.gdx.math.Matrix4) -> b
    319:320:com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4) -> c
    331:331:com.badlogic.gdx.math.Vector3 rotate(float,float,float,float) -> a
    340:341:com.badlogic.gdx.math.Vector3 rotate(com.badlogic.gdx.math.Vector3,float) -> a
    346:346:boolean isUnit() -> h
    351:351:boolean isZero() -> i
    361:363:com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float) -> b
    373:387:com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float) -> c
    392:392:java.lang.String toString() -> toString
    402:402:float dot(float,float,float) -> d
    411:419:float dst2(com.badlogic.gdx.math.Vector3) -> g
    429:437:float dst2(float,float,float) -> h
    441:441:float dst$483d241b(float,float) -> a
    447:452:int hashCode() -> hashCode
    458:465:boolean equals(java.lang.Object) -> equals
    473:477:boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float) -> d
    483:486:boolean epsilonEquals(float,float,float,float) -> b
    495:498:com.badlogic.gdx.math.Vector3 scale(float,float,float) -> i
com.badlogic.gdx.math.WindowedMean -> com.badlogic.gdx.math.WindowedMean:
    float[] values -> a
    int added_values -> b
    int last_value -> c
    float mean -> d
    boolean dirty -> e
    41:41:boolean hasEnoughData() -> a
    46:51:void clear() -> b
    57:61:void addValue(float) -> a
    67:78:float getMean() -> c
    83:83:float getOldest() -> d
    88:88:float getLatest() -> e
    93:101:float standardDeviation() -> f
com.badlogic.gdx.math.collision.BoundingBox -> com.badlogic.gdx.math.collision.BoundingBox:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3[] crn -> crn
    com.badlogic.gdx.math.Vector3 min -> min
    com.badlogic.gdx.math.Vector3 max -> max
    com.badlogic.gdx.math.Vector3 cnt -> cnt
    com.badlogic.gdx.math.Vector3 dim -> dim
    boolean crn_dirty -> crn_dirty
    40:40:com.badlogic.gdx.math.Vector3 getCenter() -> c
    44:55:void updateCorners() -> d
    59:60:com.badlogic.gdx.math.Vector3[] getCorners() -> a
    65:65:com.badlogic.gdx.math.Vector3 getDimensions() -> e
    70:70:com.badlogic.gdx.math.Vector3 getMin() -> f
    75:75:com.badlogic.gdx.math.Vector3 getMax() -> g
    112:113:com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.collision.BoundingBox) -> b
    122:129:com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    137:141:com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3[]) -> a
    149:153:com.badlogic.gdx.math.collision.BoundingBox set(java.util.List) -> a
    160:165:com.badlogic.gdx.math.collision.BoundingBox inf() -> b
    173:174:com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.Vector3) -> a
    182:183:com.badlogic.gdx.math.collision.BoundingBox clr() -> h
    190:190:boolean isValid() -> i
    198:199:com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox) -> a
    209:217:com.badlogic.gdx.math.collision.BoundingBox mul(com.badlogic.gdx.math.Matrix4) -> a
    224:231:boolean contains(com.badlogic.gdx.math.collision.BoundingBox) -> c
    238:245:boolean contains(com.badlogic.gdx.math.Vector3) -> b
    249:249:java.lang.String toString() -> toString
    259:260:com.badlogic.gdx.math.collision.BoundingBox ext(float,float,float) -> a
    264:264:float min(float,float) -> a
    268:268:float max(float,float) -> b
com.badlogic.gdx.math.collision.Ray -> com.badlogic.gdx.math.collision.Ray:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 origin -> origin
    com.badlogic.gdx.math.Vector3 direction -> direction
    com.badlogic.gdx.math.Vector3 tmp -> a
    43:43:com.badlogic.gdx.math.collision.Ray cpy() -> a
    51:51:com.badlogic.gdx.math.Vector3 getEndPoint(float) -> a
    61:65:com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4) -> a
    70:70:java.lang.String toString() -> toString
    79:81:com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    94:96:com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float) -> a
    105:107:com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray) -> a
com.badlogic.gdx.math.collision.Segment -> com.badlogic.gdx.math.collision.Segment:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 a -> a
    com.badlogic.gdx.math.Vector3 b -> b
com.badlogic.gdx.math.collision.Sphere -> com.badlogic.gdx.math.collision.Sphere:
    long serialVersionUID -> serialVersionUID
    float radius -> radius
    com.badlogic.gdx.math.Vector3 center -> center
    44:44:boolean overlaps(com.badlogic.gdx.math.collision.Sphere) -> a
com.badlogic.gdx.net.NetJavaImpl -> com.badlogic.gdx.net.NetJavaImpl:
    java.util.concurrent.ExecutorService executorService -> a
    101:193:void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> a
com.badlogic.gdx.net.NetJavaImpl$1 -> com.badlogic.gdx.net.NetJavaImpl$1:
    java.lang.String val$method -> a
    com.badlogic.gdx.Net$HttpRequest val$httpRequest -> b
    java.net.HttpURLConnection val$connection -> c
    com.badlogic.gdx.Net$HttpResponseListener val$httpResponseListener -> d
    com.badlogic.gdx.net.NetJavaImpl this$0 -> e
    142:188:void run() -> run
com.badlogic.gdx.net.NetJavaImpl$1$1 -> com.badlogic.gdx.net.NetJavaImpl$1$1:
    com.badlogic.gdx.net.NetJavaImpl$1 this$1 -> a
    167:171:void run() -> run
com.badlogic.gdx.net.NetJavaImpl$1$2 -> com.badlogic.gdx.net.NetJavaImpl$1$2:
    java.lang.Exception val$e -> a
    com.badlogic.gdx.net.NetJavaImpl$1 this$1 -> b
    180:182:void run() -> run
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse -> com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse:
    java.net.HttpURLConnection connection -> a
    com.badlogic.gdx.Net$HttpStatus status -> b
    java.io.InputStream inputStream -> c
    52:65:byte[] getResult() -> a
    70:78:java.lang.String getResultAsString() -> b
    84:84:java.io.InputStream getResultAsStream() -> c
    89:89:com.badlogic.gdx.Net$HttpStatus getStatus() -> d
com.badlogic.gdx.net.ServerSocket -> com.badlogic.gdx.net.ServerSocket:
    com.badlogic.gdx.Net$Protocol getProtocol() -> getProtocol
    com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints) -> accept
com.badlogic.gdx.net.ServerSocketHints -> com.badlogic.gdx.net.ServerSocketHints:
    int backlog -> a
    int performancePrefConnectionTime -> b
    int performancePrefLatency -> c
    int performancePrefBandwidth -> d
    boolean reuseAddress -> e
    int acceptTimeout -> f
    int receiveBufferSize -> g
com.badlogic.gdx.net.Socket -> com.badlogic.gdx.net.Socket:
    boolean isConnected() -> isConnected
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
com.badlogic.gdx.net.SocketHints -> com.badlogic.gdx.net.SocketHints:
    int connectTimeout -> a
    int performancePrefConnectionTime -> b
    int performancePrefLatency -> c
    int performancePrefBandwidth -> d
    int trafficClass -> e
    boolean keepAlive -> f
    boolean tcpNoDelay -> g
    int sendBufferSize -> h
    int receiveBufferSize -> i
    boolean linger -> j
    int lingerDuration -> k
com.badlogic.gdx.physics.box2d.Body -> com.badlogic.gdx.physics.box2d.Body:
    long addr -> a
    float[] tmp -> g
    com.badlogic.gdx.physics.box2d.World world -> h
    java.util.ArrayList fixtures -> i
    java.util.ArrayList joints -> b
    java.lang.Object userData -> j
    com.badlogic.gdx.physics.box2d.Transform transform -> k
    com.badlogic.gdx.math.Vector2 position -> l
    com.badlogic.gdx.math.Vector2 worldCenter -> m
    com.badlogic.gdx.math.Vector2 localCenter -> n
    com.badlogic.gdx.math.Vector2 linearVelocity -> o
    com.badlogic.gdx.physics.box2d.MassData massData -> p
    com.badlogic.gdx.math.Vector2 localPoint -> q
    com.badlogic.gdx.math.Vector2 worldVector -> r
    com.badlogic.gdx.math.Vector2 localPoint2 -> c
    com.badlogic.gdx.math.Vector2 localVector -> d
    com.badlogic.gdx.math.Vector2 linVelWorld -> e
    com.badlogic.gdx.math.Vector2 linVelLoc -> f
    60:66:void reset(long) -> a
    74:80:com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.FixtureDef) -> a
    long jniCreateFixture(long,long,float,float,float,boolean,short,short,short) -> jniCreateFixture
    108:113:com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float) -> a
    long jniCreateFixture(long,long,float) -> jniCreateFixture
    128:132:void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture) -> a
    void jniDestroyFixture(long,long) -> jniDestroyFixture
    145:146:void setTransform(com.badlogic.gdx.math.Vector2,float) -> a
    154:155:void setTransform(float,float,float) -> a
    166:167:void setTransform(float,float,float,boolean) -> a
    void jniSetTransform(long,float,float,float) -> jniSetTransform
    void jniSetTransform(long,float,float,float,boolean) -> jniSetTransform
    183:184:com.badlogic.gdx.physics.box2d.Transform getTransform() -> a
    void jniGetTransform(long,float[]) -> jniGetTransform
    201:204:com.badlogic.gdx.math.Vector2 getPosition() -> b
    void jniGetPosition(long,float[]) -> jniGetPosition
    217:217:float getAngle() -> c
    float jniGetAngle(long) -> jniGetAngle
    229:232:com.badlogic.gdx.math.Vector2 getWorldCenter() -> d
    void jniGetWorldCenter(long,float[]) -> jniGetWorldCenter
    246:249:com.badlogic.gdx.math.Vector2 getLocalCenter() -> e
    void jniGetLocalCenter(long,float[]) -> jniGetLocalCenter
    261:262:void setLinearVelocity(com.badlogic.gdx.math.Vector2) -> a
    266:267:void setLinearVelocity$2548a35() -> f
    void jniSetLinearVelocity(long,float,float) -> jniSetLinearVelocity
    278:281:com.badlogic.gdx.math.Vector2 getLinearVelocity() -> g
    void jniGetLinearVelocity(long,float[]) -> jniGetLinearVelocity
    293:294:void setAngularVelocity(float) -> a
    void jniSetAngularVelocity(long,float) -> jniSetAngularVelocity
    303:303:float getAngularVelocity() -> h
    float jniGetAngularVelocity(long) -> jniGetAngularVelocity
    316:317:void applyForce(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
    326:327:void applyForce(float,float,float,float) -> a
    void jniApplyForce(long,float,float,float,float) -> jniApplyForce
    337:338:void applyForceToCenter(com.badlogic.gdx.math.Vector2) -> b
    344:345:void applyForceToCenter(float,float) -> a
    void jniApplyForceToCenter(long,float,float) -> jniApplyForceToCenter
    356:357:void applyTorque(float) -> b
    void jniApplyTorque(long,float) -> jniApplyTorque
    369:370:void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> b
    379:380:void applyLinearImpulse(float,float,float,float) -> b
    void jniApplyLinearImpulse(long,float,float,float,float) -> jniApplyLinearImpulse
    390:391:void applyAngularImpulse(float) -> c
    void jniApplyAngularImpulse(long,float) -> jniApplyAngularImpulse
    401:401:float getMass() -> i
    float jniGetMass(long) -> jniGetMass
    412:412:float getInertia() -> j
    float jniGetInertia(long) -> jniGetInertia
    425:430:com.badlogic.gdx.physics.box2d.MassData getMassData() -> k
    void jniGetMassData(long,float[]) -> jniGetMassData
    447:448:void setMassData(com.badlogic.gdx.physics.box2d.MassData) -> a
    void jniSetMassData(long,float,float,float,float) -> jniSetMassData
    463:464:void resetMassData() -> l
    void jniResetMassData(long) -> jniResetMassData
    477:480:com.badlogic.gdx.math.Vector2 getWorldPoint(com.badlogic.gdx.math.Vector2) -> c
    void jniGetWorldPoint(long,float,float,float[]) -> jniGetWorldPoint
    496:499:com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2) -> d
    void jniGetWorldVector(long,float,float,float[]) -> jniGetWorldVector
    515:518:com.badlogic.gdx.math.Vector2 getLocalPoint(com.badlogic.gdx.math.Vector2) -> e
    void jniGetLocalPoint(long,float,float,float[]) -> jniGetLocalPoint
    534:537:com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2) -> f
    void jniGetLocalVector(long,float,float,float[]) -> jniGetLocalVector
    553:556:com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2) -> g
    void jniGetLinearVelocityFromWorldPoint(long,float,float,float[]) -> jniGetLinearVelocityFromWorldPoint
    572:575:com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2) -> h
    void jniGetLinearVelocityFromLocalPoint(long,float,float,float[]) -> jniGetLinearVelocityFromLocalPoint
    587:587:float getLinearDamping() -> m
    float jniGetLinearDamping(long) -> jniGetLinearDamping
    597:598:void setLinearDamping(float) -> d
    void jniSetLinearDamping(long,float) -> jniSetLinearDamping
    607:607:float getAngularDamping() -> n
    float jniGetAngularDamping(long) -> jniGetAngularDamping
    617:618:void setAngularDamping(float) -> e
    void jniSetAngularDamping(long,float) -> jniSetAngularDamping
    627:628:void setType(com.badlogic.gdx.physics.box2d.BodyDef$BodyType) -> a
    void jniSetType(long,int) -> jniSetType
    652:656:com.badlogic.gdx.physics.box2d.BodyDef$BodyType getType() -> o
    int jniGetType(long) -> jniGetType
    666:667:void setBullet(boolean) -> a
    void jniSetBullet(long,boolean) -> jniSetBullet
    676:676:boolean isBullet() -> p
    boolean jniIsBullet(long) -> jniIsBullet
    686:687:void setSleepingAllowed(boolean) -> b
    void jniSetSleepingAllowed(long,boolean) -> jniSetSleepingAllowed
    696:696:boolean isSleepingAllowed() -> q
    boolean jniIsSleepingAllowed(long) -> jniIsSleepingAllowed
    707:708:void setAwake(boolean) -> c
    void jniSetAwake(long,boolean) -> jniSetAwake
    718:718:boolean isAwake() -> r
    boolean jniIsAwake(long) -> jniIsAwake
    733:734:void setActive(boolean) -> d
    void jniSetActive(long,boolean) -> jniSetActive
    743:743:boolean isActive() -> s
    boolean jniIsActive(long) -> jniIsActive
    753:754:void setFixedRotation(boolean) -> e
    void jniSetFixedRotation(long,boolean) -> jniSetFixedRotation
    763:763:boolean isFixedRotation() -> t
    boolean jniIsFixedRotation(long) -> jniIsFixedRotation
    773:773:java.util.ArrayList getFixtureList() -> u
    778:778:java.util.ArrayList getJointList() -> v
    791:791:float getGravityScale() -> w
    float jniGetGravityScale(long) -> jniGetGravityScale
    801:802:void setGravityScale(float) -> f
    void jniSetGravityScale(long,float) -> jniSetGravityScale
    811:811:com.badlogic.gdx.physics.box2d.World getWorld() -> x
    816:816:java.lang.Object getUserData() -> y
    821:822:void setUserData(java.lang.Object) -> a
com.badlogic.gdx.physics.box2d.BodyDef -> com.badlogic.gdx.physics.box2d.BodyDef:
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType type -> a
    com.badlogic.gdx.math.Vector2 position -> b
    float angle -> c
    com.badlogic.gdx.math.Vector2 linearVelocity -> d
    float angularVelocity -> e
    float linearDamping -> f
    float angularDamping -> g
    boolean allowSleep -> h
    boolean awake -> i
    boolean fixedRotation -> j
    boolean bullet -> k
    boolean active -> l
    float gravityScale -> m
com.badlogic.gdx.physics.box2d.BodyDef$BodyType -> com.badlogic.gdx.physics.box2d.BodyDef$BodyType:
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType StaticBody -> a
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType KinematicBody -> b
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType DynamicBody -> c
    int value -> value
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] $VALUES -> d
    28:28:com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] values() -> values
    28:28:com.badlogic.gdx.physics.box2d.BodyDef$BodyType valueOf(java.lang.String) -> valueOf
    38:38:int getValue() -> a
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer -> com.badlogic.gdx.physics.box2d.Box2DDebugRenderer:
    com.badlogic.gdx.graphics.glutils.ShapeRenderer renderer -> a
    com.badlogic.gdx.math.Vector2[] vertices -> b
    com.badlogic.gdx.math.Vector2 lower -> c
    com.badlogic.gdx.math.Vector2 upper -> d
    boolean drawBodies -> e
    boolean drawJoints -> f
    boolean drawAABBs -> g
    boolean drawInactiveBodies -> h
    boolean drawVelocities -> i
    com.badlogic.gdx.graphics.Color SHAPE_NOT_ACTIVE -> j
    com.badlogic.gdx.graphics.Color SHAPE_STATIC -> k
    com.badlogic.gdx.graphics.Color SHAPE_KINEMATIC -> l
    com.badlogic.gdx.graphics.Color SHAPE_NOT_AWAKE -> m
    com.badlogic.gdx.graphics.Color SHAPE_AWAKE -> n
    com.badlogic.gdx.graphics.Color JOINT_COLOR -> o
    com.badlogic.gdx.graphics.Color AABB_COLOR -> p
    com.badlogic.gdx.graphics.Color VELOCITY_COLOR -> q
    com.badlogic.gdx.math.Vector2 t -> r
    com.badlogic.gdx.math.Vector2 axis -> s
    com.badlogic.gdx.math.Vector2 f -> t
    com.badlogic.gdx.math.Vector2 v -> u
    com.badlogic.gdx.math.Vector2 lv -> v
    75:77:void render(com.badlogic.gdx.physics.box2d.World,com.badlogic.gdx.math.Matrix4) -> a
    89:113:void renderBodies(com.badlogic.gdx.physics.box2d.World) -> a
    116:144:void renderBody(com.badlogic.gdx.physics.box2d.Body) -> a
    147:187:void drawAABB(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform) -> a
    193:228:void drawShape(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform,com.badlogic.gdx.graphics.Color) -> a
    235:250:void drawSolidCircle(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color) -> a
    253:265:void drawSolidPolygon(com.badlogic.gdx.math.Vector2[],int,com.badlogic.gdx.graphics.Color,boolean) -> a
    268:294:void drawJoint(com.badlogic.gdx.physics.box2d.Joint) -> a
    297:299:void drawSegment(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color) -> a
    302:306:void drawContact(com.badlogic.gdx.physics.box2d.Contact) -> a
    309:309:boolean isDrawBodies() -> a
    313:314:void setDrawBodies(boolean) -> a
    317:317:boolean isDrawJoints() -> b
    321:322:void setDrawJoints(boolean) -> b
    325:325:boolean isDrawAABBs() -> c
    329:330:void setDrawAABBs(boolean) -> c
    333:333:boolean isDrawInactiveBodies() -> d
    337:338:void setDrawInactiveBodies(boolean) -> d
    341:341:boolean isDrawVelocities() -> e
    345:346:void setDrawVelocities(boolean) -> e
    349:349:com.badlogic.gdx.math.Vector2 getAxis() -> f
    353:354:void setAxis(com.badlogic.gdx.math.Vector2) -> a
    357:358:void dispose() -> g
com.badlogic.gdx.physics.box2d.ChainShape -> com.badlogic.gdx.physics.box2d.ChainShape:
    boolean isLooped -> a
    float[] verts -> c
    long newChainShape() -> newChainShape
    42:42:com.badlogic.gdx.physics.box2d.Shape$Type getType() -> a
    48:55:void createLoop(com.badlogic.gdx.math.Vector2[]) -> a
    void jniCreateLoop(long,float[],int) -> jniCreateLoop
    69:76:void createChain(com.badlogic.gdx.math.Vector2[]) -> b
    void jniCreateChain(long,float[],int) -> jniCreateChain
    89:90:void setPrevVertex(com.badlogic.gdx.math.Vector2) -> a
    94:95:void setPrevVertex(float,float) -> a
    void jniSetPrevVertex(long,float,float) -> jniSetPrevVertex
    104:105:void setNextVertex(com.badlogic.gdx.math.Vector2) -> b
    109:110:void setNextVertex(float,float) -> b
    void jniSetNextVertex(long,float,float) -> jniSetNextVertex
    119:119:int getVertexCount() -> b
    int jniGetVertexCount(long) -> jniGetVertexCount
    133:136:void getVertex(int,com.badlogic.gdx.math.Vector2) -> a
    void jniGetVertex(long,int,float[]) -> jniGetVertex
    146:146:boolean isLooped() -> e
com.badlogic.gdx.physics.box2d.CircleShape -> com.badlogic.gdx.physics.box2d.CircleShape:
    float[] tmp -> a
    com.badlogic.gdx.math.Vector2 position -> c
    long newCircleShape() -> newCircleShape
    44:44:com.badlogic.gdx.physics.box2d.Shape$Type getType() -> a
    52:55:com.badlogic.gdx.math.Vector2 getPosition() -> b
    void jniGetPosition(long,float[]) -> jniGetPosition
    66:67:void setPosition(com.badlogic.gdx.math.Vector2) -> a
    void jniSetPosition(long,float,float) -> jniSetPosition
com.badlogic.gdx.physics.box2d.Contact -> com.badlogic.gdx.physics.box2d.Contact:
    long addr -> a
    com.badlogic.gdx.physics.box2d.World world -> b
    com.badlogic.gdx.physics.box2d.WorldManifold worldManifold -> c
    float[] tmp -> d
    48:58:com.badlogic.gdx.physics.box2d.WorldManifold getWorldManifold() -> a
    int jniGetWorldManifold(long,float[]) -> jniGetWorldManifold
    80:80:boolean isTouching() -> b
    boolean jniIsTouching(long) -> jniIsTouching
    91:92:void setEnabled(boolean) -> a
    void jniSetEnabled(long,boolean) -> jniSetEnabled
    101:101:boolean isEnabled() -> c
    boolean jniIsEnabled(long) -> jniIsEnabled
    111:111:com.badlogic.gdx.physics.box2d.Fixture getFixtureA() -> d
    long jniGetFixtureA(long) -> jniGetFixtureA
    121:121:com.badlogic.gdx.physics.box2d.Fixture getFixtureB() -> e
    long jniGetFixtureB(long) -> jniGetFixtureB
    131:131:int getChildIndexA() -> f
    int jniGetChildIndexA(long) -> jniGetChildIndexA
    141:141:int getChildIndexB() -> g
    int jniGetChildIndexB(long) -> jniGetChildIndexB
    152:153:void setFriction(float) -> a
    void jniSetFriction(long,float) -> jniSetFriction
    162:162:float getFriction() -> h
    float jniGetFriction(long) -> jniGetFriction
    172:173:void resetFriction() -> i
    void jniResetFriction(long) -> jniResetFriction
    183:184:void setRestitution(float) -> b
    void jniSetRestitution(long,float) -> jniSetRestitution
    193:193:float getRestitution() -> j
    float jniGetRestitution(long) -> jniGetRestitution
    203:204:void ResetRestitution() -> k
    void jniResetRestitution(long) -> jniResetRestitution
com.badlogic.gdx.physics.box2d.ContactFilter -> com.badlogic.gdx.physics.box2d.ContactFilter:
    boolean shouldCollide$41f686cf() -> a
com.badlogic.gdx.physics.box2d.ContactImpulse -> com.badlogic.gdx.physics.box2d.ContactImpulse:
    com.badlogic.gdx.physics.box2d.World world -> a
    long addr -> b
    float[] tmp -> c
    float[] normalImpulses -> d
    float[] tangentImpulses -> e
    40:41:float[] getNormalImpulses() -> a
    void jniGetNormalImpulses(long,float[]) -> jniGetNormalImpulses
    51:52:float[] getTangentImpulses() -> b
    void jniGetTangentImpulses(long,float[]) -> jniGetTangentImpulses
    62:62:int getCount() -> c
    int jniGetCount(long) -> jniGetCount
com.badlogic.gdx.physics.box2d.ContactListener -> com.badlogic.gdx.physics.box2d.ContactListener:
    void beginContact$40399ada() -> a
    void endContact$40399ada() -> b
    void preSolve$48d15bf() -> c
    void postSolve$538b9884() -> d
com.badlogic.gdx.physics.box2d.DestructionListener -> com.badlogic.gdx.physics.box2d.DestructionListener:
com.badlogic.gdx.physics.box2d.EdgeShape -> com.badlogic.gdx.physics.box2d.EdgeShape:
    float[] vertex -> a
    long newEdgeShape() -> newEdgeShape
    43:44:void set(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
    48:49:void set(float,float,float,float) -> a
    void jniSet(long,float,float,float,float) -> jniSet
    59:62:void getVertex1(com.badlogic.gdx.math.Vector2) -> a
    void jniGetVertex1(long,float[]) -> jniGetVertex1
    71:74:void getVertex2(com.badlogic.gdx.math.Vector2) -> b
    void jniGetVertex2(long,float[]) -> jniGetVertex2
    104:104:com.badlogic.gdx.physics.box2d.Shape$Type getType() -> a
com.badlogic.gdx.physics.box2d.Filter -> com.badlogic.gdx.physics.box2d.Filter:
    short categoryBits -> a
    short maskBits -> b
    short groupIndex -> c
com.badlogic.gdx.physics.box2d.Fixture -> com.badlogic.gdx.physics.box2d.Fixture:
    com.badlogic.gdx.physics.box2d.Body body -> d
    long addr -> a
    com.badlogic.gdx.physics.box2d.Shape shape -> b
    java.lang.Object userData -> c
    short[] tmp -> e
    com.badlogic.gdx.physics.box2d.Filter filter -> f
    48:52:void reset(com.badlogic.gdx.physics.box2d.Body,long) -> a
    57:68:com.badlogic.gdx.physics.box2d.Shape$Type getType() -> a
    int jniGetType(long) -> jniGetType
    88:111:com.badlogic.gdx.physics.box2d.Shape getShape() -> b
    long jniGetShape(long) -> jniGetShape
    121:122:void setSensor(boolean) -> a
    void jniSetSensor(long,boolean) -> jniSetSensor
    132:132:boolean isSensor() -> e
    boolean jniIsSensor(long) -> jniIsSensor
    143:144:void setFilterData(com.badlogic.gdx.physics.box2d.Filter) -> a
    void jniSetFilterData(long,short,short,short) -> jniSetFilterData
    160:164:com.badlogic.gdx.physics.box2d.Filter getFilterData() -> c
    void jniGetFilterData(long,short[]) -> jniGetFilterData
    178:179:void refilter() -> f
    void jniRefilter(long) -> jniRefilter
    188:188:com.badlogic.gdx.physics.box2d.Body getBody() -> g
    194:194:boolean testPoint(com.badlogic.gdx.math.Vector2) -> a
    201:201:boolean testPoint(float,float) -> a
    boolean jniTestPoint(long,float,float) -> jniTestPoint
    236:237:void setDensity(float) -> a
    void jniSetDensity(long,float) -> jniSetDensity
    246:246:float getDensity() -> h
    float jniGetDensity(long) -> jniGetDensity
    256:256:float getFriction() -> i
    float jniGetFriction(long) -> jniGetFriction
    266:267:void setFriction(float) -> b
    void jniSetFriction(long,float) -> jniSetFriction
    276:276:float getRestitution() -> j
    float jniGetRestitution(long) -> jniGetRestitution
    286:287:void setRestitution(float) -> c
    void jniSetRestitution(long,float) -> jniSetRestitution
    301:302:void setUserData$5d527811() -> d
    306:306:java.lang.Object getUserData() -> k
com.badlogic.gdx.physics.box2d.FixtureDef -> com.badlogic.gdx.physics.box2d.FixtureDef:
    com.badlogic.gdx.physics.box2d.Shape shape -> a
    float friction -> b
    float restitution -> c
    float density -> d
    boolean isSensor -> e
    com.badlogic.gdx.physics.box2d.Filter filter -> f
com.badlogic.gdx.physics.box2d.Joint -> com.badlogic.gdx.physics.box2d.Joint:
    long addr -> a
    com.badlogic.gdx.physics.box2d.World world -> d
    float[] tmp -> e
    com.badlogic.gdx.physics.box2d.JointEdge jointEdgeA -> b
    com.badlogic.gdx.physics.box2d.JointEdge jointEdgeB -> c
    com.badlogic.gdx.math.Vector2 anchorA -> f
    com.badlogic.gdx.math.Vector2 anchorB -> g
    com.badlogic.gdx.math.Vector2 reactionForce -> h
    51:55:com.badlogic.gdx.physics.box2d.JointDef$JointType getType() -> a
    int jniGetType(long) -> jniGetType
    65:65:com.badlogic.gdx.physics.box2d.Body getBodyA() -> b
    long jniGetBodyA(long) -> jniGetBodyA
    75:75:com.badlogic.gdx.physics.box2d.Body getBodyB() -> c
    long jniGetBodyB(long) -> jniGetBodyB
    87:90:com.badlogic.gdx.math.Vector2 getAnchorA() -> d
    void jniGetAnchorA(long,float[]) -> jniGetAnchorA
    104:107:com.badlogic.gdx.math.Vector2 getAnchorB() -> e
    void jniGetAnchorB(long,float[]) -> jniGetAnchorB
    121:124:com.badlogic.gdx.math.Vector2 getReactionForce(float) -> a
    void jniGetReactionForce(long,float,float[]) -> jniGetReactionForce
    136:136:float getReactionTorque(float) -> b
    float jniGetReactionTorque(long,float) -> jniGetReactionTorque
    155:155:boolean isActive() -> f
    boolean jniIsActive(long) -> jniIsActive
com.badlogic.gdx.physics.box2d.JointDef -> com.badlogic.gdx.physics.box2d.JointDef:
    com.badlogic.gdx.physics.box2d.JointDef$JointType type -> a
    com.badlogic.gdx.physics.box2d.Body bodyA -> b
    com.badlogic.gdx.physics.box2d.Body bodyB -> c
    boolean collideConnected -> d
com.badlogic.gdx.physics.box2d.JointDef$JointType -> com.badlogic.gdx.physics.box2d.JointDef$JointType:
    com.badlogic.gdx.physics.box2d.JointDef$JointType Unknown -> a
    com.badlogic.gdx.physics.box2d.JointDef$JointType RevoluteJoint -> b
    com.badlogic.gdx.physics.box2d.JointDef$JointType PrismaticJoint -> c
    com.badlogic.gdx.physics.box2d.JointDef$JointType DistanceJoint -> d
    com.badlogic.gdx.physics.box2d.JointDef$JointType PulleyJoint -> e
    com.badlogic.gdx.physics.box2d.JointDef$JointType MouseJoint -> f
    com.badlogic.gdx.physics.box2d.JointDef$JointType GearJoint -> g
    com.badlogic.gdx.physics.box2d.JointDef$JointType WheelJoint -> h
    com.badlogic.gdx.physics.box2d.JointDef$JointType WeldJoint -> i
    com.badlogic.gdx.physics.box2d.JointDef$JointType FrictionJoint -> j
    com.badlogic.gdx.physics.box2d.JointDef$JointType RopeJoint -> k
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] valueTypes -> l
    int value -> value
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] $VALUES -> m
    20:20:com.badlogic.gdx.physics.box2d.JointDef$JointType[] values() -> values
    20:20:com.badlogic.gdx.physics.box2d.JointDef$JointType valueOf(java.lang.String) -> valueOf
    33:33:int getValue() -> a
com.badlogic.gdx.physics.box2d.JointEdge -> com.badlogic.gdx.physics.box2d.JointEdge:
    com.badlogic.gdx.physics.box2d.Body other -> a
    com.badlogic.gdx.physics.box2d.Joint joint -> b
com.badlogic.gdx.physics.box2d.Manifold -> com.badlogic.gdx.physics.box2d.Manifold:
    long addr -> a
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] points -> b
    com.badlogic.gdx.math.Vector2 localNormal -> c
    com.badlogic.gdx.math.Vector2 localPoint -> d
    int[] tmpInt -> e
    float[] tmpFloat -> f
    40:44:com.badlogic.gdx.physics.box2d.Manifold$ManifoldType getType() -> a
    int jniGetType(long) -> jniGetType
    53:53:int getPointCount() -> b
    int jniGetPointCount(long) -> jniGetPointCount
    62:64:com.badlogic.gdx.math.Vector2 getLocalNormal() -> c
    void jniGetLocalNormal(long,float[]) -> jniGetLocalNormal
    74:76:com.badlogic.gdx.math.Vector2 getLocalPoint() -> d
    void jniGetLocalPoint(long,float[]) -> jniGetLocalPoint
    86:97:com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] getPoints() -> e
    int jniGetPoint(long,float[],int) -> jniGetPoint
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint -> com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint:
    com.badlogic.gdx.math.Vector2 localPoint -> a
    float normalImpulse -> b
    float tangentImpulse -> c
    int contactID -> d
    com.badlogic.gdx.physics.box2d.Manifold this$0 -> e
    118:118:java.lang.String toString() -> toString
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType -> com.badlogic.gdx.physics.box2d.Manifold$ManifoldType:
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType Circle -> a
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType FaceA -> b
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType FaceB -> c
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType[] $VALUES -> d
    122:122:com.badlogic.gdx.physics.box2d.Manifold$ManifoldType[] values() -> values
    122:122:com.badlogic.gdx.physics.box2d.Manifold$ManifoldType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.MassData -> com.badlogic.gdx.physics.box2d.MassData:
    float mass -> a
    com.badlogic.gdx.math.Vector2 center -> b
    float I -> c
com.badlogic.gdx.physics.box2d.PolygonShape -> com.badlogic.gdx.physics.box2d.PolygonShape:
    float[] verts -> a
    long newPolygonShape() -> newPolygonShape
    44:44:com.badlogic.gdx.physics.box2d.Shape$Type getType() -> a
    50:56:void set(com.badlogic.gdx.math.Vector2[]) -> a
    61:62:void set(float[]) -> a
    67:68:void set(float[],int,int) -> a
    void jniSet(long,float[],int,int) -> jniSet
    85:86:void setAsBox(float,float) -> a
    void jniSetAsBox(long,float,float) -> jniSetAsBox
    99:100:void setAsBox$5190f958(float,float,com.badlogic.gdx.math.Vector2) -> a
    void jniSetAsBox(long,float,float,float,float,float) -> jniSetAsBox
    109:109:int getVertexCount() -> b
    int jniGetVertexCount(long) -> jniGetVertexCount
    123:126:void getVertex(int,com.badlogic.gdx.math.Vector2) -> a
    void jniGetVertex(long,int,float[]) -> jniGetVertex
com.badlogic.gdx.physics.box2d.QueryCallback -> com.badlogic.gdx.physics.box2d.QueryCallback:
    boolean reportFixture$2acb6fab() -> a
com.badlogic.gdx.physics.box2d.RayCastCallback -> com.badlogic.gdx.physics.box2d.RayCastCallback:
    float reportRayFixture$5d5164df(com.badlogic.gdx.math.Vector2,float) -> a
com.badlogic.gdx.physics.box2d.Shape -> com.badlogic.gdx.physics.box2d.Shape:
    long addr -> b
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> a
    45:45:float getRadius() -> c
    float jniGetRadius(long) -> jniGetRadius
    55:56:void setRadius(float) -> a
    void jniSetRadius(long,float) -> jniSetRadius
    65:66:void dispose() -> d
    void jniDispose(long) -> jniDispose
    int jniGetType(long) -> jniGetType
    86:86:int getChildCount() -> b
    int jniGetChildCount(long) -> jniGetChildCount
com.badlogic.gdx.physics.box2d.Shape$Type -> com.badlogic.gdx.physics.box2d.Shape$Type:
    com.badlogic.gdx.physics.box2d.Shape$Type Circle -> a
    com.badlogic.gdx.physics.box2d.Shape$Type Polygon -> b
    com.badlogic.gdx.physics.box2d.Shape$Type Edge -> c
    com.badlogic.gdx.physics.box2d.Shape$Type Chain -> d
    com.badlogic.gdx.physics.box2d.Shape$Type[] $VALUES -> e
    32:32:com.badlogic.gdx.physics.box2d.Shape$Type[] values() -> values
    32:32:com.badlogic.gdx.physics.box2d.Shape$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.Transform -> com.badlogic.gdx.physics.box2d.Transform:
    int POS_X -> a
    int POS_Y -> b
    int COS -> c
    int SIN -> d
    float[] vals -> e
    com.badlogic.gdx.math.Vector2 position -> f
    49:54:com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2) -> a
    59:59:com.badlogic.gdx.math.Vector2 getPosition() -> a
    65:68:void setRotation(float) -> a
    71:71:float getRotation() -> b
    77:79:void setPosition(com.badlogic.gdx.math.Vector2) -> b
com.badlogic.gdx.physics.box2d.World -> com.badlogic.gdx.physics.box2d.World:
    com.badlogic.gdx.utils.Pool freeBodies -> a
    com.badlogic.gdx.utils.Pool freeFixtures -> b
    long addr -> j
    com.badlogic.gdx.utils.LongMap bodies -> c
    com.badlogic.gdx.utils.LongMap fixtures -> d
    com.badlogic.gdx.utils.LongMap joints -> e
    com.badlogic.gdx.physics.box2d.ContactFilter contactFilter -> f
    com.badlogic.gdx.physics.box2d.ContactListener contactListener -> g
    float[] tmpGravity -> h
    com.badlogic.gdx.math.Vector2 gravity -> i
    com.badlogic.gdx.physics.box2d.QueryCallback queryCallback -> k
    long[] contactAddrs -> l
    java.util.ArrayList contacts -> m
    java.util.ArrayList freeContacts -> n
    com.badlogic.gdx.physics.box2d.Contact contact -> o
    com.badlogic.gdx.physics.box2d.Manifold manifold -> p
    com.badlogic.gdx.physics.box2d.ContactImpulse impulse -> q
    com.badlogic.gdx.physics.box2d.RayCastCallback rayCastCallback -> r
    com.badlogic.gdx.math.Vector2 rayPoint -> s
    com.badlogic.gdx.math.Vector2 rayNormal -> t
    long newWorld(float,float,boolean) -> newWorld
    251:251:void setDestructionListener$4c9bc94c() -> d
    256:258:void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter) -> a
    void setUseDefaultContactFilter(boolean) -> setUseDefaultContactFilter
    267:268:void setContactListener(com.badlogic.gdx.physics.box2d.ContactListener) -> a
    273:279:com.badlogic.gdx.physics.box2d.Body createBody(com.badlogic.gdx.physics.box2d.BodyDef) -> a
    long jniCreateBody(long,int,float,float,float,float,float,float,float,float,boolean,boolean,boolean,boolean,boolean,float) -> jniCreateBody
    310:321:void destroyBody(com.badlogic.gdx.physics.box2d.Body) -> a
    void jniDestroyBody(long,long) -> jniDestroyBody
    333:352:com.badlogic.gdx.physics.box2d.Joint createJoint(com.badlogic.gdx.physics.box2d.JointDef) -> a
    356:411:long createProperJoint(com.badlogic.gdx.physics.box2d.JointDef) -> b
    long jniCreateWheelJoint(long,long,long,boolean,float,float,float,float,float,float,boolean,float,float,float,float) -> jniCreateWheelJoint
    long jniCreateRopeJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateRopeJoint
    long jniCreateDistanceJoint(long,long,long,boolean,float,float,float,float,float,float,float) -> jniCreateDistanceJoint
    long jniCreateFrictionJoint(long,long,long,boolean,float,float,float,float,float,float) -> jniCreateFrictionJoint
    long jniCreateGearJoint(long,long,long,boolean,long,long,float) -> jniCreateGearJoint
    long jniCreateMouseJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateMouseJoint
    long jniCreatePrismaticJoint(long,long,long,boolean,float,float,float,float,float,float,float,boolean,float,float,boolean,float,float) -> jniCreatePrismaticJoint
    long jniCreatePulleyJoint(long,long,long,boolean,float,float,float,float,float,float,float,float,float,float,float) -> jniCreatePulleyJoint
    long jniCreateRevoluteJoint(long,long,long,boolean,float,float,float,float,float,boolean,float,float,boolean,float,float) -> jniCreateRevoluteJoint
    long jniCreateWeldJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateWeldJoint
    583:587:void destroyJoint(com.badlogic.gdx.physics.box2d.Joint) -> a
    void jniDestroyJoint(long,long) -> jniDestroyJoint
    600:601:void step$483e8c8b(float) -> a
    void jniStep(long,float,int,int) -> jniStep
    620:621:void clearForces() -> e
    void jniClearForces(long) -> jniClearForces
    630:631:void setWarmStarting(boolean) -> a
    void jniSetWarmStarting(long,boolean) -> jniSetWarmStarting
    640:641:void setContinuousPhysics(boolean) -> b
    void jniSetContiousPhysics(long,boolean) -> jniSetContiousPhysics
    650:650:int getProxyCount() -> f
    int jniGetProxyCount(long) -> jniGetProxyCount
    660:660:int getBodyCount() -> g
    int jniGetBodyCount(long) -> jniGetBodyCount
    670:670:int getJointCount() -> h
    int jniGetJointcount(long) -> jniGetJointcount
    680:680:int getContactCount() -> i
    int jniGetContactCount(long) -> jniGetContactCount
    690:691:void setGravity(com.badlogic.gdx.math.Vector2) -> a
    void jniSetGravity(long,float,float) -> jniSetGravity
    703:706:com.badlogic.gdx.math.Vector2 getGravity() -> j
    void jniGetGravity(long,float[]) -> jniGetGravity
    718:718:boolean isLocked() -> k
    boolean jniIsLocked(long) -> jniIsLocked
    728:729:void setAutoClearForces(boolean) -> c
    void jniSetAutoClearForces(long,boolean) -> jniSetAutoClearForces
    738:738:boolean getAutoClearForces() -> l
    boolean jniGetAutoClearForces(long) -> jniGetAutoClearForces
    753:755:void QueryAABB(com.badlogic.gdx.physics.box2d.QueryCallback,float,float,float,float) -> a
    void jniQueryAABB(long,float,float,float,float) -> jniQueryAABB
    793:814:java.util.List getContactList() -> a
    819:819:java.util.Iterator getBodies() -> b
    824:824:java.util.Iterator getJoints() -> c
    void jniGetContactList(long,long[]) -> jniGetContactList
    840:841:void dispose() -> dispose
    void jniDispose(long) -> jniDispose
    853:864:boolean contactFilter(long,long) -> a
    873:875:void beginContact(long) -> a
    878:880:void endContact(long) -> b
    883:886:void preSolve(long,long) -> b
    889:892:void postSolve(long,long) -> c
    895:898:boolean reportFixture(long) -> c
    void setVelocityThreshold(float) -> setVelocityThreshold
    float getVelocityThreshold() -> getVelocityThreshold
    917:919:void rayCast(com.badlogic.gdx.physics.box2d.RayCastCallback,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
    void jniRayCast(long,float,float,float,float) -> jniRayCast
    933:940:float reportRayFixture(long,float,float,float,float,float) -> a
com.badlogic.gdx.physics.box2d.World$1 -> com.badlogic.gdx.physics.box2d.World$1:
    com.badlogic.gdx.physics.box2d.World this$0 -> a
    188:188:com.badlogic.gdx.physics.box2d.Body newObject() -> a
    185:185:java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.box2d.World$2 -> com.badlogic.gdx.physics.box2d.World$2:
    com.badlogic.gdx.physics.box2d.World this$0 -> a
    196:196:com.badlogic.gdx.physics.box2d.Fixture newObject() -> a
    193:193:java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.box2d.WorldManifold -> com.badlogic.gdx.physics.box2d.WorldManifold:
    com.badlogic.gdx.math.Vector2 normal -> a
    com.badlogic.gdx.math.Vector2[] points -> b
    int numContactPoints -> c
    32:32:com.badlogic.gdx.math.Vector2 getNormal() -> c
    38:38:com.badlogic.gdx.math.Vector2[] getPoints() -> a
    43:43:int getNumberOfContactPoints() -> b
com.badlogic.gdx.physics.box2d.joints.DistanceJoint -> com.badlogic.gdx.physics.box2d.joints.DistanceJoint:
    36:37:void setLength(float) -> a
    void jniSetLength(long,float) -> jniSetLength
    46:46:float getLength() -> f
    float jniGetLength(long) -> jniGetLength
    56:57:void setFrequency(float) -> b
    void jniSetFrequency(long,float) -> jniSetFrequency
    66:66:float getFrequency() -> g
    float jniGetFrequency(long) -> jniGetFrequency
    76:77:void setDampingRatio(float) -> c
    void jniSetDampingRatio(long,float) -> jniSetDampingRatio
    86:86:float getDampingRatio() -> h
    float jniGetDampingRatio(long) -> jniGetDampingRatio
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef -> com.badlogic.gdx.physics.box2d.joints.DistanceJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> e
    com.badlogic.gdx.math.Vector2 localAnchorB -> f
    float length -> g
    float frequencyHz -> h
    float dampingRatio -> i
    34:39:void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.physics.box2d.joints.FrictionJoint -> com.badlogic.gdx.physics.box2d.joints.FrictionJoint:
    35:36:void setMaxForce(float) -> a
    void jniSetMaxForce(long,float) -> jniSetMaxForce
    45:45:float getMaxForce() -> f
    float jniGetMaxForce(long) -> jniGetMaxForce
    55:56:void setMaxTorque(float) -> b
    void jniSetMaxTorque(long,float) -> jniSetMaxTorque
    65:65:float getMaxTorque() -> g
    float jniGetMaxTorque(long) -> jniGetMaxTorque
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef -> com.badlogic.gdx.physics.box2d.joints.FrictionJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> e
    com.badlogic.gdx.math.Vector2 localAnchorB -> f
    float maxForce -> g
    float maxTorque -> h
    32:36:void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.physics.box2d.joints.GearJoint -> com.badlogic.gdx.physics.box2d.joints.GearJoint:
    39:40:void setRatio(float) -> a
    void jniSetRatio(long,float) -> jniSetRatio
    49:49:float getRatio() -> f
    float jniGetRatio(long) -> jniGetRatio
com.badlogic.gdx.physics.box2d.joints.GearJointDef -> com.badlogic.gdx.physics.box2d.joints.GearJointDef:
    com.badlogic.gdx.physics.box2d.Joint joint1 -> e
    com.badlogic.gdx.physics.box2d.Joint joint2 -> f
    float ratio -> g
com.badlogic.gdx.physics.box2d.joints.MouseJoint -> com.badlogic.gdx.physics.box2d.joints.MouseJoint:
    float[] tmp -> d
    com.badlogic.gdx.math.Vector2 target -> e
    38:39:void setTarget(com.badlogic.gdx.math.Vector2) -> a
    void jniSetTarget(long,float,float) -> jniSetTarget
    51:54:com.badlogic.gdx.math.Vector2 getTarget() -> f
    void jniGetTarget(long,float[]) -> jniGetTarget
    65:66:void setMaxForce(float) -> a
    void jniSetMaxForce(long,float) -> jniSetMaxForce
    75:75:float getMaxForce() -> g
    float jniGetMaxForce(long) -> jniGetMaxForce
    85:86:void setFrequency(float) -> b
    void jniSetFrequency(long,float) -> jniSetFrequency
    95:95:float getFrequency() -> h
    float jniGetFrequency(long) -> jniGetFrequency
    105:106:void setDampingRatio(float) -> c
    void jniSetDampingRatio(long,float) -> jniSetDampingRatio
    115:115:float getDampingRatio() -> i
    float jniGetDampingRatio(long) -> jniGetDampingRatio
com.badlogic.gdx.physics.box2d.joints.MouseJointDef -> com.badlogic.gdx.physics.box2d.joints.MouseJointDef:
    com.badlogic.gdx.math.Vector2 target -> e
    float maxForce -> f
    float frequencyHz -> g
    float dampingRatio -> h
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint -> com.badlogic.gdx.physics.box2d.joints.PrismaticJoint:
    37:37:float getJointTranslation() -> f
    float jniGetJointTranslation(long) -> jniGetJointTranslation
    47:47:float getJointSpeed() -> g
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    57:57:boolean isLimitEnabled() -> h
    boolean jniIsLimitEnabled(long) -> jniIsLimitEnabled
    67:68:void enableLimit(boolean) -> a
    void jniEnableLimit(long,boolean) -> jniEnableLimit
    77:77:float getLowerLimit() -> i
    float jniGetLowerLimit(long) -> jniGetLowerLimit
    87:87:float getUpperLimit() -> j
    float jniGetUpperLimit(long) -> jniGetUpperLimit
    97:98:void setLimits(float,float) -> a
    void jniSetLimits(long,float,float) -> jniSetLimits
    107:107:boolean isMotorEnabled() -> k
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    117:118:void enableMotor(boolean) -> b
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    127:128:void setMotorSpeed(float) -> a
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    137:137:float getMotorSpeed() -> l
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    147:148:void setMaxMotorForce(float) -> b
    void jniSetMaxMotorForce(long,float) -> jniSetMaxMotorForce
    157:157:float getMotorForce(float) -> c
    float jniGetMotorForce(long,float) -> jniGetMotorForce
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef -> com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> e
    com.badlogic.gdx.math.Vector2 localAnchorB -> f
    com.badlogic.gdx.math.Vector2 localAxisA -> g
    float referenceAngle -> h
    boolean enableLimit -> i
    float lowerTranslation -> j
    float upperTranslation -> k
    boolean enableMotor -> l
    float maxMotorForce -> m
    float motorSpeed -> n
    35:42:void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.physics.box2d.joints.PulleyJoint -> com.badlogic.gdx.physics.box2d.joints.PulleyJoint:
    float[] tmp -> d
    com.badlogic.gdx.math.Vector2 groundAnchorA -> e
    com.badlogic.gdx.math.Vector2 groundAnchorB -> f
    41:43:com.badlogic.gdx.math.Vector2 getGroundAnchorA() -> f
    void jniGetGroundAnchorA(long,float[]) -> jniGetGroundAnchorA
    56:58:com.badlogic.gdx.math.Vector2 getGroundAnchorB() -> g
    void jniGetGroundAnchorB(long,float[]) -> jniGetGroundAnchorB
    69:69:float getLength1() -> h
    float jniGetLength1(long) -> jniGetLength1
    79:79:float getLength2() -> i
    float jniGetLength2(long) -> jniGetLength2
    89:89:float getRatio() -> j
    float jniGetRatio(long) -> jniGetRatio
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef -> com.badlogic.gdx.physics.box2d.joints.PulleyJointDef:
    float minPulleyLength -> l
    com.badlogic.gdx.math.Vector2 groundAnchorA -> e
    com.badlogic.gdx.math.Vector2 groundAnchorB -> f
    com.badlogic.gdx.math.Vector2 localAnchorA -> g
    com.badlogic.gdx.math.Vector2 localAnchorB -> h
    float lengthA -> i
    float lengthB -> j
    float ratio -> k
    36:46:void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> a
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint -> com.badlogic.gdx.physics.box2d.joints.RevoluteJoint:
    38:38:float getJointAngle() -> f
    float jniGetJointAngle(long) -> jniGetJointAngle
    48:48:float getJointSpeed() -> g
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    58:58:boolean isLimitEnabled() -> h
    boolean jniIsLimitEnabled(long) -> jniIsLimitEnabled
    68:69:void enableLimit(boolean) -> a
    void jniEnableLimit(long,boolean) -> jniEnableLimit
    78:78:float getLowerLimit() -> i
    float jniGetLowerLimit(long) -> jniGetLowerLimit
    88:88:float getUpperLimit() -> j
    float jniGetUpperLimit(long) -> jniGetUpperLimit
    99:100:void setLimits(float,float) -> a
    void jniSetLimits(long,float,float) -> jniSetLimits
    109:109:boolean isMotorEnabled() -> k
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    119:120:void enableMotor(boolean) -> b
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    129:130:void setMotorSpeed(float) -> a
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    139:139:float getMotorSpeed() -> l
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    149:150:void setMaxMotorTorque(float) -> b
    void jniSetMaxMotorTorque(long,float) -> jniSetMaxMotorTorque
    159:159:float getMotorTorque(float) -> c
    float jniGetMotorTorque(long,float) -> jniGetMotorTorque
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef -> com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> e
    com.badlogic.gdx.math.Vector2 localAnchorB -> f
    float referenceAngle -> g
    boolean enableLimit -> h
    float lowerAngle -> i
    float upperAngle -> j
    boolean enableMotor -> k
    float motorSpeed -> l
    float maxMotorTorque -> m
    35:40:void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.physics.box2d.joints.RopeJoint -> com.badlogic.gdx.physics.box2d.joints.RopeJoint:
    38:38:float getMaxLength() -> f
    float jniGetMaxLength(long) -> jniGetMaxLength
    48:49:void setMaxLength(float) -> a
    float jniSetMaxLength(long,float) -> jniSetMaxLength
com.badlogic.gdx.physics.box2d.joints.RopeJointDef -> com.badlogic.gdx.physics.box2d.joints.RopeJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> e
    com.badlogic.gdx.math.Vector2 localAnchorB -> f
    float maxLength -> g
com.badlogic.gdx.physics.box2d.joints.WeldJoint -> com.badlogic.gdx.physics.box2d.joints.WeldJoint:
    35:35:float getReferenceAngle() -> f
    float jniGetReferenceAngle(long) -> jniGetReferenceAngle
com.badlogic.gdx.physics.box2d.joints.WeldJointDef -> com.badlogic.gdx.physics.box2d.joints.WeldJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> e
    com.badlogic.gdx.math.Vector2 localAnchorB -> f
    float referenceAngle -> g
    31:36:void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.physics.box2d.joints.WheelJoint -> com.badlogic.gdx.physics.box2d.joints.WheelJoint:
    37:37:float getJointTranslation() -> f
    float jniGetJointTranslation(long) -> jniGetJointTranslation
    47:47:float getJointSpeed() -> g
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    57:57:boolean isMotorEnabled() -> h
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    67:68:void enableMotor(boolean) -> a
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    77:78:void setMotorSpeed(float) -> a
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    87:87:float getMotorSpeed() -> i
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    97:98:void setMaxMotorTorque(float) -> b
    void jniSetMaxMotorTorque(long,float) -> jniSetMaxMotorTorque
    106:106:float getMaxMotorTorque() -> j
    float jniGetMaxMotorTorque(long) -> jniGetMaxMotorTorque
    116:116:float getMotorTorque(float) -> c
    float jniGetMotorTorque(long,float) -> jniGetMotorTorque
    126:127:void setSpringFrequencyHz(float) -> d
    void jniSetSpringFrequencyHz(long,float) -> jniSetSpringFrequencyHz
    135:135:float getSpringFrequencyHz() -> k
    float jniGetSpringFrequencyHz(long) -> jniGetSpringFrequencyHz
    145:146:void setSpringDampingRatio(float) -> e
    void jniSetSpringDampingRatio(long,float) -> jniSetSpringDampingRatio
    154:154:float getSpringDampingRatio() -> l
    float jniGetSpringDampingRatio(long) -> jniGetSpringDampingRatio
com.badlogic.gdx.physics.box2d.joints.WheelJointDef -> com.badlogic.gdx.physics.box2d.joints.WheelJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> e
    com.badlogic.gdx.math.Vector2 localAnchorB -> f
    com.badlogic.gdx.math.Vector2 localAxisA -> g
    boolean enableMotor -> h
    float maxMotorTorque -> i
    float motorSpeed -> j
    float frequencyHz -> k
    float dampingRatio -> l
    33:38:void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.scenes.scene2d.Action -> com.badlogic.gdx.scenes.scene2d.Action:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> a
    com.badlogic.gdx.utils.Pool pool -> b
    boolean act(float) -> a
    39:39:void restart() -> a
    43:43:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> c
    55:63:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    72:73:void reset() -> b
    76:76:com.badlogic.gdx.utils.Pool getPool() -> d
    82:83:void setPool(com.badlogic.gdx.utils.Pool) -> a
    86:90:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Actor -> com.badlogic.gdx.scenes.scene2d.Actor:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> stage
    com.badlogic.gdx.scenes.scene2d.Group parent -> parent
    com.badlogic.gdx.utils.DelayedRemovalArray listeners -> listeners
    com.badlogic.gdx.utils.DelayedRemovalArray captureListeners -> captureListeners
    com.badlogic.gdx.utils.Array actions -> actions
    java.lang.String name -> name
    com.badlogic.gdx.scenes.scene2d.Touchable touchable -> touchable
    boolean visible -> visible
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float originX -> originX
    float originY -> originY
    float scaleX -> scaleX
    float scaleY -> scaleY
    float rotation -> rotation
    com.badlogic.gdx.graphics.Color color -> color
    66:66:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    73:82:void act(float) -> act
    93:130:boolean fire(com.badlogic.gdx.scenes.scene2d.Event) -> fire
    140:165:boolean notify(com.badlogic.gdx.scenes.scene2d.Event,boolean) -> notify
    178:179:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    185:186:boolean remove() -> remove
    194:198:boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addListener
    202:202:boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeListener
    206:206:com.badlogic.gdx.utils.Array getListeners() -> getListeners
    212:213:boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addCaptureListener
    217:217:boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeCaptureListener
    221:221:com.badlogic.gdx.utils.Array getCaptureListeners() -> getCaptureListeners
    225:227:void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    230:231:void removeAction(com.badlogic.gdx.scenes.scene2d.Action) -> removeAction
    234:234:com.badlogic.gdx.utils.Array getActions() -> getActions
    239:242:void clearActions() -> clearActions
    246:246:com.badlogic.gdx.scenes.scene2d.Stage getStage() -> getStage
    252:253:void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    257:262:boolean isDescendantOf(com.badlogic.gdx.scenes.scene2d.Actor) -> isDescendantOf
    268:272:boolean isAscendantOf(com.badlogic.gdx.scenes.scene2d.Actor) -> isAscendantOf
    278:278:boolean hasParent() -> hasParent
    283:283:com.badlogic.gdx.scenes.scene2d.Group getParent() -> getParent
    289:290:void setParent(com.badlogic.gdx.scenes.scene2d.Group) -> setParent
    293:293:com.badlogic.gdx.scenes.scene2d.Touchable getTouchable() -> getTouchable
    298:299:void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> setTouchable
    302:302:boolean isVisible() -> isVisible
    307:308:void setVisible(boolean) -> setVisible
    311:311:float getX() -> getX
    315:316:void setX(float) -> setX
    319:319:float getY() -> getY
    323:324:void setY(float) -> setY
    328:330:void setPosition(float,float) -> setPosition
    333:335:void translate(float,float) -> translate
    338:338:float getWidth() -> getWidth
    342:343:void setWidth(float) -> setWidth
    346:346:float getHeight() -> getHeight
    350:351:void setHeight(float) -> setHeight
    355:355:float getTop() -> getTop
    360:360:float getRight() -> getRight
    365:367:void setSize(float,float) -> setSize
    371:373:void size(float) -> size
    377:379:void size(float,float) -> size
    383:387:void setBounds(float,float,float,float) -> setBounds
    390:390:float getOriginX() -> getOriginX
    394:395:void setOriginX(float) -> setOriginX
    398:398:float getOriginY() -> getOriginY
    402:403:void setOriginY(float) -> setOriginY
    407:409:void setOrigin(float,float) -> setOrigin
    412:412:float getScaleX() -> getScaleX
    416:417:void setScaleX(float) -> setScaleX
    420:420:float getScaleY() -> getScaleY
    424:425:void setScaleY(float) -> setScaleY
    429:431:void setScale(float) -> setScale
    435:437:void setScale(float,float) -> setScale
    441:443:void scale(float) -> scale
    447:449:void scale(float,float) -> scale
    452:452:float getRotation() -> getRotation
    456:457:void setRotation(float) -> setRotation
    461:462:void rotate(float) -> rotate
    465:466:void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    469:470:void setColor(float,float,float,float) -> setColor
    474:474:com.badlogic.gdx.graphics.Color getColor() -> getColor
    478:478:java.lang.String getName() -> getName
    484:485:void setName(java.lang.String) -> setName
    489:490:void toFront() -> toFront
    494:495:void toBack() -> toBack
    501:511:void setZIndex(int) -> setZIndex
    516:518:int getZIndex() -> getZIndex
    523:523:boolean clipBegin() -> clipBegin
    532:542:boolean clipBegin(float,float,float,float) -> clipBegin
    547:548:void clipEnd() -> clipEnd
    552:554:com.badlogic.gdx.math.Vector2 screenToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> screenToLocalCoordinates
    559:562:com.badlogic.gdx.math.Vector2 stageToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> stageToLocalCoordinates
    568:576:com.badlogic.gdx.math.Vector2 localToStageCoordinates(com.badlogic.gdx.math.Vector2) -> localToStageCoordinates
    582:586:com.badlogic.gdx.math.Vector2 localToParentCoordinates(com.badlogic.gdx.math.Vector2) -> localToParentCoordinates
    591:597:com.badlogic.gdx.math.Vector2 localToAscendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> localToAscendantCoordinates
    602:676:com.badlogic.gdx.math.Vector2 parentToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> parentToLocalCoordinates
    680:686:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Event -> com.badlogic.gdx.scenes.scene2d.Event:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> a
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> b
    com.badlogic.gdx.scenes.scene2d.Actor listenerActor -> c
    boolean capture -> d
    boolean bubbles -> e
    boolean handled -> f
    boolean stopped -> g
    boolean cancelled -> h
    37:38:void handle() -> a
    44:47:void cancel() -> c
    52:53:void stop() -> d
    56:64:void reset() -> b
    68:68:com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> e
    72:73:void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    77:77:com.badlogic.gdx.scenes.scene2d.Actor getListenerActor() -> f
    81:82:void setListenerActor(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    85:85:boolean getBubbles() -> g
    91:92:void setBubbles(boolean) -> b
    96:96:boolean isHandled() -> h
    101:101:boolean isStopped() -> i
    106:106:boolean isCancelled() -> j
    110:111:void setCapture(boolean) -> a
    116:116:boolean isCapture() -> l
    120:121:void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> a
    125:125:com.badlogic.gdx.scenes.scene2d.Stage getStage() -> k
com.badlogic.gdx.scenes.scene2d.EventListener -> com.badlogic.gdx.scenes.scene2d.EventListener:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.Group -> com.badlogic.gdx.scenes.scene2d.Group:
    com.badlogic.gdx.utils.SnapshotArray children -> children
    com.badlogic.gdx.math.Matrix3 localTransform -> localTransform
    com.badlogic.gdx.math.Matrix3 worldTransform -> worldTransform
    com.badlogic.gdx.math.Matrix4 batchTransform -> batchTransform
    com.badlogic.gdx.math.Matrix4 oldBatchTransform -> oldBatchTransform
    boolean transform -> transform
    com.badlogic.gdx.math.Rectangle cullingArea -> cullingArea
    com.badlogic.gdx.math.Vector2 point -> point
    45:50:void act(float) -> act
    55:58:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    66:134:void drawChildren(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> drawChildren
    139:141:void applyTransform(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.math.Matrix4) -> applyTransform
    145:177:com.badlogic.gdx.math.Matrix4 computeTransform() -> computeTransform
    183:184:void resetTransform(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> resetTransform
    189:190:void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
    193:202:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    207:207:void childrenChanged() -> childrenChanged
    212:217:void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    222:230:void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    235:241:void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    246:255:void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAfter
    261:267:boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    272:281:void clear() -> clear
    285:295:com.badlogic.gdx.scenes.scene2d.Actor findActor(java.lang.String) -> findActor
    299:303:void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    307:311:boolean swapActor(int,int) -> swapActor
    316:320:boolean swapActor(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> swapActor
    325:325:com.badlogic.gdx.utils.SnapshotArray getChildren() -> getChildren
    334:335:void setTransform(boolean) -> setTransform
    338:338:boolean isTransform() -> isTransform
    344:350:com.badlogic.gdx.math.Vector2 localToDescendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> localToDescendantCoordinates
com.badlogic.gdx.scenes.scene2d.InputEvent -> com.badlogic.gdx.scenes.scene2d.InputEvent:
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type type -> a
    float stageX -> b
    float stageY -> c
    int pointer -> d
    int button -> e
    int keyCode -> f
    int scrollAmount -> g
    char character -> h
    com.badlogic.gdx.scenes.scene2d.Actor relatedActor -> i
    31:34:void reset() -> b
    38:38:float getStageX() -> l
    42:43:void setStageX(float) -> a
    47:47:float getStageY() -> m
    51:52:void setStageY(float) -> b
    56:56:com.badlogic.gdx.scenes.scene2d.InputEvent$Type getType() -> n
    60:61:void setType(com.badlogic.gdx.scenes.scene2d.InputEvent$Type) -> a
    66:66:int getPointer() -> o
    70:71:void setPointer(int) -> a
    76:76:int getButton() -> p
    80:81:void setButton(int) -> b
    85:85:int getKeyCode() -> q
    89:90:void setKeyCode(int) -> c
    94:94:char getCharacter() -> r
    98:99:void setCharacter(char) -> a
    103:103:int getScrollAmount() -> s
    107:108:void setScrollAmount(int) -> d
    113:113:com.badlogic.gdx.scenes.scene2d.Actor getRelatedActor() -> t
    118:119:void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor) -> c
    122:122:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.InputEvent$Type -> com.badlogic.gdx.scenes.scene2d.InputEvent$Type:
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDown -> a
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchUp -> b
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDragged -> c
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type mouseMoved -> d
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type enter -> e
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type exit -> f
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type scrolled -> g
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyDown -> h
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyUp -> i
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyTyped -> j
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] $VALUES -> k
    125:125:com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] values() -> values
    125:125:com.badlogic.gdx.scenes.scene2d.InputEvent$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.InputListener -> com.badlogic.gdx.scenes.scene2d.InputListener:
    24:59:boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    67:67:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    74:74:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    80:80:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    86:86:boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    93:93:void enter(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> enter
    99:99:void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
    103:103:boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
    108:108:boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    113:113:boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    118:118:boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.InputListener$1 -> com.badlogic.gdx.scenes.scene2d.InputListener$1:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type -> a
com.badlogic.gdx.scenes.scene2d.Stage -> com.badlogic.gdx.scenes.scene2d.Stage:
    float width -> a
    float height -> b
    float gutterWidth -> c
    float gutterHeight -> d
    float centerX -> e
    float centerY -> f
    com.badlogic.gdx.graphics.Camera camera -> g
    com.badlogic.gdx.graphics.g2d.SpriteBatch batch -> h
    boolean ownsBatch -> i
    com.badlogic.gdx.scenes.scene2d.Group root -> j
    com.badlogic.gdx.math.Vector2 stageCoords -> k
    com.badlogic.gdx.scenes.scene2d.Actor[] pointerOverActors -> l
    boolean[] pointerTouched -> m
    int[] pointerScreenX -> n
    int[] pointerScreenY -> o
    int mouseScreenX -> p
    int mouseScreenY -> q
    com.badlogic.gdx.scenes.scene2d.Actor mouseOverActor -> r
    com.badlogic.gdx.scenes.scene2d.Actor keyboardFocus -> s
    com.badlogic.gdx.scenes.scene2d.Actor scrollFocus -> t
    com.badlogic.gdx.utils.SnapshotArray touchFocuses -> u
    94:102:void initialize$483d6f3f(float,float) -> b
    110:145:void setViewport$483d6f3f(float,float) -> a
    148:154:void draw() -> a
    158:159:void act() -> b
    166:195:void act(float) -> a
    199:221:com.badlogic.gdx.scenes.scene2d.Actor fireEnterAndExit(com.badlogic.gdx.scenes.scene2d.Actor,int,int,int) -> a
    226:246:boolean touchDown(int,int,int,int) -> a
    252:279:boolean touchDragged(int,int,int) -> a
    285:316:boolean touchUp(int,int,int,int) -> b
    322:339:boolean mouseMoved(int,int) -> a
    345:358:boolean scrolled(int) -> c
    364:372:boolean keyDown(int) -> a
    378:386:boolean keyUp(int) -> b
    392:400:boolean keyTyped(char) -> a
    406:413:void addTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int) -> a
    418:427:void removeTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int) -> b
    434:435:void cancelTouchFocus() -> k
    440:464:void cancelTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    470:471:void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    476:477:void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> a
    482:482:com.badlogic.gdx.utils.Array getActors() -> c
    488:488:boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> a
    494:494:boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> d
    500:500:boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> b
    506:506:boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> c
    511:513:void clear() -> l
    517:520:void unfocusAll() -> m
    524:526:void unfocus(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    531:551:void setKeyboardFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> c
    556:556:com.badlogic.gdx.scenes.scene2d.Actor getKeyboardFocus() -> d
    562:582:void setScrollFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> d
    587:587:com.badlogic.gdx.scenes.scene2d.Actor getScrollFocus() -> e
    593:593:float getWidth() -> f
    599:599:float getHeight() -> g
    605:605:float getGutterWidth() -> n
    611:611:float getGutterHeight() -> o
    615:615:com.badlogic.gdx.graphics.g2d.SpriteBatch getSpriteBatch() -> h
    619:619:com.badlogic.gdx.graphics.Camera getCamera() -> i
    626:627:void setCamera(com.badlogic.gdx.graphics.Camera) -> a
    631:631:com.badlogic.gdx.scenes.scene2d.Group getRoot() -> j
    640:642:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> a
    648:651:com.badlogic.gdx.math.Vector2 screenToStageCoordinates(com.badlogic.gdx.math.Vector2) -> a
    656:660:com.badlogic.gdx.math.Vector2 stageToScreenCoordinates(com.badlogic.gdx.math.Vector2) -> b
    666:667:com.badlogic.gdx.math.Vector2 toScreenCoordinates(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Matrix4) -> a
    671:672:void dispose() -> dispose
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus -> com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus:
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> a
    com.badlogic.gdx.scenes.scene2d.Actor listenerActor -> b
    com.badlogic.gdx.scenes.scene2d.Actor target -> c
    int pointer -> d
    int button -> e
    682:684:void reset() -> b
com.badlogic.gdx.scenes.scene2d.Touchable -> com.badlogic.gdx.scenes.scene2d.Touchable:
    com.badlogic.gdx.scenes.scene2d.Touchable enabled -> a
    com.badlogic.gdx.scenes.scene2d.Touchable disabled -> b
    com.badlogic.gdx.scenes.scene2d.Touchable childrenOnly -> c
    com.badlogic.gdx.scenes.scene2d.Touchable[] $VALUES -> d
    20:20:com.badlogic.gdx.scenes.scene2d.Touchable[] values() -> values
    20:20:com.badlogic.gdx.scenes.scene2d.Touchable valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.actions.Actions -> com.badlogic.gdx.scenes.scene2d.actions.Actions:
    32:35:com.badlogic.gdx.scenes.scene2d.Action action(java.lang.Class) -> a
    39:42:com.badlogic.gdx.scenes.scene2d.actions.AddAction add(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Action) -> a
    47:47:com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo$2ef7abe1(float) -> a
    51:51:com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float) -> a
    55:59:com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo$c42c229(float,float,float) -> c
    64:64:com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy$730446c3(float) -> b
    68:68:com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float) -> b
    72:76:com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy$6a46cf85(float,float,float) -> d
    81:81:com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float) -> c
    85:85:com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float) -> e
    89:93:com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo$4fc7b059(float,float,float) -> f
    98:98:com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float) -> d
    102:102:com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float) -> g
    106:110:com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy$5234424b(float,float,float) -> h
    115:115:com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float) -> e
    119:119:com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float) -> i
    123:127:com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo$2ec82a82(float,float,float) -> j
    132:132:com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float) -> f
    136:136:com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float) -> k
    140:144:com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy$2f3be2da(float,float,float) -> l
    149:149:com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float) -> g
    153:153:com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float) -> g
    157:161:com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo$6589fb17(float,float) -> h
    166:166:com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float) -> h
    170:170:com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float) -> a
    174:178:com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy$785edbb(float,float) -> i
    183:183:com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color) -> a
    188:188:com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float) -> a
    193:197:com.badlogic.gdx.scenes.scene2d.actions.ColorAction color$2f941340(com.badlogic.gdx.graphics.Color,float) -> b
    202:202:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float) -> c
    207:207:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float) -> b
    212:216:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha$33a9621f(float,float) -> j
    221:221:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float) -> d
    226:230:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float,com.badlogic.gdx.math.Interpolation) -> a
    235:235:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float) -> e
    240:244:com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float,com.badlogic.gdx.math.Interpolation) -> b
    248:248:com.badlogic.gdx.scenes.scene2d.actions.VisibleAction show() -> b
    252:252:com.badlogic.gdx.scenes.scene2d.actions.VisibleAction hide() -> c
    256:258:com.badlogic.gdx.scenes.scene2d.actions.VisibleAction visible(boolean) -> a
    262:264:com.badlogic.gdx.scenes.scene2d.actions.TouchableAction touchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> a
    268:268:com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor() -> a
    272:274:com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    278:280:com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float) -> f
    284:287:com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float,com.badlogic.gdx.scenes.scene2d.Action) -> a
    291:293:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action) -> b
    297:300:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> a
    304:308:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> a
    312:317:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> a
    321:327:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> a
    331:334:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action[]) -> a
    338:338:com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence() -> d
    342:344:com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action) -> c
    348:351:com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> b
    355:359:com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> b
    363:368:com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> b
    372:378:com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> b
    382:385:com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action[]) -> b
    389:389:com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel() -> e
    393:396:com.badlogic.gdx.scenes.scene2d.actions.RepeatAction repeat(int,com.badlogic.gdx.scenes.scene2d.Action) -> a
    400:403:com.badlogic.gdx.scenes.scene2d.actions.RepeatAction forever(com.badlogic.gdx.scenes.scene2d.Action) -> a
    407:409:com.badlogic.gdx.scenes.scene2d.actions.RunnableAction run(java.lang.Runnable) -> a
    413:415:com.badlogic.gdx.scenes.scene2d.actions.LayoutAction layout(boolean) -> b
    419:421:com.badlogic.gdx.scenes.scene2d.actions.AfterAction after(com.badlogic.gdx.scenes.scene2d.Action) -> d
com.badlogic.gdx.scenes.scene2d.actions.AddAction -> com.badlogic.gdx.scenes.scene2d.actions.AddAction:
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> b
    com.badlogic.gdx.scenes.scene2d.Action action -> c
    28:29:boolean act(float) -> a
    33:33:com.badlogic.gdx.scenes.scene2d.Actor getTargetActor() -> c
    37:38:void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    41:41:com.badlogic.gdx.scenes.scene2d.Action getAction() -> d
    45:46:void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> a
    49:50:void restart() -> a
    53:56:void reset() -> b
com.badlogic.gdx.scenes.scene2d.actions.AfterAction -> com.badlogic.gdx.scenes.scene2d.actions.AfterAction:
    com.badlogic.gdx.utils.Array waitForActions -> c
    28:30:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    33:35:void restart() -> a
    38:46:boolean act(float) -> a
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction -> com.badlogic.gdx.scenes.scene2d.actions.AlphaAction:
    float start -> b
    float end -> c
    com.badlogic.gdx.graphics.Color color -> d
    30:32:void begin() -> c
    35:36:void update(float) -> b
    39:41:void reset() -> b
    44:44:com.badlogic.gdx.graphics.Color getColor() -> d
    50:51:void setColor(com.badlogic.gdx.graphics.Color) -> a
    54:54:float getAlpha() -> e
    58:59:void setAlpha(float) -> c
com.badlogic.gdx.scenes.scene2d.actions.ColorAction -> com.badlogic.gdx.scenes.scene2d.actions.ColorAction:
    float startR -> b
    float startG -> c
    float startB -> d
    float startA -> e
    com.badlogic.gdx.graphics.Color color -> f
    com.badlogic.gdx.graphics.Color end -> g
    31:36:void begin() -> c
    39:44:void update(float) -> b
    47:49:void reset() -> b
    52:52:com.badlogic.gdx.graphics.Color getColor() -> d
    58:59:void setColor(com.badlogic.gdx.graphics.Color) -> b
    62:62:com.badlogic.gdx.graphics.Color getEndColor() -> e
    67:68:void setEndColor(com.badlogic.gdx.graphics.Color) -> a
com.badlogic.gdx.scenes.scene2d.actions.DelayAction -> com.badlogic.gdx.scenes.scene2d.actions.DelayAction:
    float duration -> c
    float time -> d
    25:31:boolean act(float) -> a
    36:37:void finish() -> c
    40:42:void restart() -> a
    46:46:float getTime() -> d
    51:52:void setTime(float) -> c
    55:55:float getDuration() -> e
    60:61:void setDuration(float) -> b
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction -> com.badlogic.gdx.scenes.scene2d.actions.DelegateAction:
    com.badlogic.gdx.scenes.scene2d.Action action -> b
    29:30:void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> a
    33:33:com.badlogic.gdx.scenes.scene2d.Action getAction() -> c
    37:38:void restart() -> a
    41:43:void reset() -> b
    46:48:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    51:51:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.actions.FloatAction -> com.badlogic.gdx.scenes.scene2d.actions.FloatAction:
    float start -> b
    float end -> c
    float value -> d
    38:39:void begin() -> c
    42:43:void update(float) -> b
    47:47:float getValue() -> d
    52:53:void setValue(float) -> c
    56:56:float getStart() -> e
    61:62:void setStart(float) -> d
    65:65:float getEnd() -> f
    70:71:void setEnd(float) -> f
com.badlogic.gdx.scenes.scene2d.actions.IntAction -> com.badlogic.gdx.scenes.scene2d.actions.IntAction:
    int start -> b
    int end -> c
    int value -> d
    38:39:void begin() -> c
    42:43:void update(float) -> b
    47:47:int getValue() -> d
    52:53:void setValue(int) -> a
    56:56:int getStart() -> e
    61:62:void setStart(int) -> b
    65:65:int getEnd() -> f
    70:71:void setEnd(int) -> c
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction -> com.badlogic.gdx.scenes.scene2d.actions.LayoutAction:
    boolean enabled -> b
    31:33:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    36:37:boolean act(float) -> a
    41:41:boolean isEnabled() -> c
    45:46:void setLayoutEnabled(boolean) -> a
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction -> com.badlogic.gdx.scenes.scene2d.actions.MoveByAction:
    float amountX -> b
    float amountY -> c
    25:26:void updateRelative(float) -> c
    29:31:void setAmount(float,float) -> a
    34:34:float getAmountX() -> d
    38:39:void setAmountX(float) -> d
    42:42:float getAmountY() -> e
    46:47:void setAmountY(float) -> f
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction -> com.badlogic.gdx.scenes.scene2d.actions.MoveToAction:
    float startX -> b
    float startY -> c
    float endX -> d
    float endY -> e
    26:28:void begin() -> c
    31:32:void update(float) -> b
    35:37:void setPosition(float,float) -> a
    40:40:float getX() -> d
    44:45:void setX(float) -> c
    48:48:float getY() -> e
    52:53:void setY(float) -> d
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction -> com.badlogic.gdx.scenes.scene2d.actions.ParallelAction:
    com.badlogic.gdx.utils.Array actions -> b
    boolean complete -> c
    30:35:boolean act(float) -> a
    39:43:void restart() -> a
    46:48:void reset() -> b
    51:53:void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> a
    56:60:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    63:63:com.badlogic.gdx.utils.Array getActions() -> c
    67:76:java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction -> com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction:
    float lastPercent -> b
    25:26:void begin() -> c
    29:31:void update(float) -> b
    void updateRelative(float) -> c
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction -> com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction:
    com.badlogic.gdx.scenes.scene2d.Actor removeActor -> b
    boolean removed -> c
    29:33:boolean act(float) -> a
    37:38:void restart() -> a
    41:43:void reset() -> b
    46:46:com.badlogic.gdx.scenes.scene2d.Actor getRemoveActor() -> c
    51:52:void setRemoveActor(com.badlogic.gdx.scenes.scene2d.Actor) -> b
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction -> com.badlogic.gdx.scenes.scene2d.actions.RepeatAction:
    int FOREVER -> c
    int repeatCount -> d
    int executedCount -> e
    boolean finished -> f
    28:34:boolean act(float) -> a
    39:40:void finish() -> c
    43:46:void restart() -> a
    50:51:void setCount(int) -> a
    54:54:int getCount() -> d
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction -> com.badlogic.gdx.scenes.scene2d.actions.RotateByAction:
    float amount -> b
    25:26:void updateRelative(float) -> c
    29:29:float getAmount() -> d
    33:34:void setAmount(float) -> d
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction -> com.badlogic.gdx.scenes.scene2d.actions.RotateToAction:
    float start -> b
    float end -> c
    25:26:void begin() -> c
    29:30:void update(float) -> b
    33:33:float getRotation() -> d
    37:38:void setRotation(float) -> c
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction -> com.badlogic.gdx.scenes.scene2d.actions.RunnableAction:
    java.lang.Runnable runnable -> b
    boolean ran -> c
    29:33:boolean act(float) -> a
    38:39:void run() -> c
    42:43:void restart() -> a
    46:48:void reset() -> b
    51:51:java.lang.Runnable getRunnable() -> d
    55:56:void setRunnable(java.lang.Runnable) -> a
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction -> com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction:
    float amountX -> b
    float amountY -> c
    25:26:void updateRelative(float) -> c
    29:31:void setAmount(float,float) -> a
    34:36:void setAmount(float) -> d
    39:39:float getAmountX() -> d
    43:44:void setAmountX(float) -> f
    47:47:float getAmountY() -> e
    51:52:void setAmountY(float) -> g
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction -> com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction:
    float startX -> b
    float startY -> c
    float endX -> d
    float endY -> e
    26:28:void begin() -> c
    31:32:void update(float) -> b
    35:37:void setScale(float,float) -> a
    40:42:void setScale(float) -> c
    45:45:float getX() -> d
    49:50:void setX(float) -> d
    53:53:float getY() -> e
    57:58:void setY(float) -> f
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction -> com.badlogic.gdx.scenes.scene2d.actions.SequenceAction:
    int index -> c
    25:30:boolean act(float) -> a
    34:36:void restart() -> a
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction -> com.badlogic.gdx.scenes.scene2d.actions.SizeByAction:
    float amountWidth -> b
    float amountHeight -> c
    25:26:void updateRelative(float) -> c
    29:31:void setAmount(float,float) -> a
    34:34:float getAmountWidth() -> d
    38:39:void setAmountWidth(float) -> d
    42:42:float getAmountHeight() -> e
    46:47:void setAmountHeight(float) -> f
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction -> com.badlogic.gdx.scenes.scene2d.actions.SizeToAction:
    float startWidth -> b
    float startHeight -> c
    float endWidth -> d
    float endHeight -> e
    26:28:void begin() -> c
    31:32:void update(float) -> b
    35:37:void setSize(float,float) -> a
    40:40:float getWidth() -> d
    44:45:void setWidth(float) -> c
    48:48:float getHeight() -> e
    52:53:void setHeight(float) -> d
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction -> com.badlogic.gdx.scenes.scene2d.actions.TemporalAction:
    float duration -> b
    float time -> c
    com.badlogic.gdx.math.Interpolation interpolation -> d
    boolean reverse -> e
    boolean complete -> f
    42:55:boolean act(float) -> a
    61:61:void begin() -> c
    65:65:void end() -> d
    void update(float) -> b
    74:75:void finish() -> e
    78:80:void restart() -> a
    83:86:void reset() -> b
    90:90:float getTime() -> f
    95:96:void setTime(float) -> c
    99:99:float getDuration() -> g
    104:105:void setDuration(float) -> e
    108:108:com.badlogic.gdx.math.Interpolation getInterpolation() -> h
    112:113:void setInterpolation(com.badlogic.gdx.math.Interpolation) -> a
    116:116:boolean isReverse() -> i
    121:122:void setReverse(boolean) -> a
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction -> com.badlogic.gdx.scenes.scene2d.actions.TouchableAction:
    com.badlogic.gdx.scenes.scene2d.Touchable touchable -> b
    29:30:boolean act(float) -> a
    34:34:com.badlogic.gdx.scenes.scene2d.Touchable getTouchable() -> c
    38:39:void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> a
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction -> com.badlogic.gdx.scenes.scene2d.actions.VisibleAction:
    boolean visible -> b
    28:29:boolean act(float) -> a
    33:33:boolean isVisible() -> c
    37:38:void setVisible(boolean) -> a
com.badlogic.gdx.scenes.scene2d.ui.Button -> com.badlogic.gdx.scenes.scene2d.ui.Button:
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle style -> style
    boolean isChecked -> isChecked
    boolean isDisabled -> isDisabled
    com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup buttonGroup -> buttonGroup
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    80:88:void initialize() -> initialize
    107:115:void setChecked(boolean) -> setChecked
    120:121:void toggle() -> toggle
    124:124:boolean isChecked() -> isChecked
    128:128:boolean isPressed() -> isPressed
    132:132:boolean isOver() -> isOver
    136:136:boolean isDisabled() -> isDisabled
    141:142:void setDisabled(boolean) -> setDisabled
    145:160:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    165:165:com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
    169:202:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    205:205:void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> drawBackground
    208:212:float getPrefWidth() -> getPrefWidth
    216:220:float getPrefHeight() -> getPrefHeight
    224:224:float getMinWidth() -> getMinWidth
    228:228:float getMinHeight() -> getMinHeight
com.badlogic.gdx.scenes.scene2d.ui.Button$1 -> com.badlogic.gdx.scenes.scene2d.ui.Button$1:
    com.badlogic.gdx.scenes.scene2d.ui.Button this$0 -> this$0
    83:86:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable up -> up
    com.badlogic.gdx.scenes.scene2d.utils.Drawable down -> down
    com.badlogic.gdx.scenes.scene2d.utils.Drawable over -> over
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checked -> checked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkedOver -> checkedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabled -> disabled
    float pressedOffsetX -> pressedOffsetX
    float pressedOffsetY -> pressedOffsetY
    float unpressedOffsetX -> unpressedOffsetX
    float unpressedOffsetY -> unpressedOffsetY
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup -> com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup:
    com.badlogic.gdx.utils.Array buttons -> buttons
    com.badlogic.gdx.utils.Array checkedButtons -> checkedButtons
    int minCheckCount -> minCheckCount
    int maxCheckCount -> maxCheckCount
    boolean uncheckLast -> uncheckLast
    com.badlogic.gdx.scenes.scene2d.ui.Button lastChecked -> lastChecked
    42:49:void add(com.badlogic.gdx.scenes.scene2d.ui.Button) -> add
    52:55:void add(com.badlogic.gdx.scenes.scene2d.ui.Button[]) -> add
    58:61:void remove(com.badlogic.gdx.scenes.scene2d.ui.Button) -> remove
    64:67:void remove(com.badlogic.gdx.scenes.scene2d.ui.Button[]) -> remove
    71:79:void setChecked(java.lang.String) -> setChecked
    84:105:boolean canCheck(com.badlogic.gdx.scenes.scene2d.ui.Button,boolean) -> canCheck
    110:117:void uncheckAll() -> uncheckAll
    121:122:com.badlogic.gdx.scenes.scene2d.ui.Button getChecked() -> getChecked
    126:126:com.badlogic.gdx.utils.Array getAllChecked() -> getAllChecked
    130:130:com.badlogic.gdx.utils.Array getButtons() -> getButtons
    135:136:void setMinCheckCount(int) -> setMinCheckCount
    140:141:void setMaxCheckCount(int) -> setMaxCheckCount
    147:148:void setUncheckLast(boolean) -> setUncheckLast
com.badlogic.gdx.scenes.scene2d.ui.CheckBox -> com.badlogic.gdx.scenes.scene2d.ui.CheckBox:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle style -> style
    51:54:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    59:59:com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle getStyle() -> getStyle
    64:72:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    75:75:com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    27:27:com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle() -> getStyle
    27:27:com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle -> com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOn -> checkboxOn
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOff -> checkboxOff
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOver -> checkboxOver
com.badlogic.gdx.scenes.scene2d.ui.Dialog -> com.badlogic.gdx.scenes.scene2d.ui.Dialog:
    float fadeDuration -> fadeDuration
    com.badlogic.gdx.scenes.scene2d.ui.Table contentTable -> contentTable
    com.badlogic.gdx.scenes.scene2d.ui.Table buttonTable -> buttonTable
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> skin
    com.badlogic.gdx.utils.ObjectMap values -> values
    boolean cancelHide -> cancelHide
    com.badlogic.gdx.scenes.scene2d.Actor previousKeyboardFocus -> previousKeyboardFocus
    com.badlogic.gdx.scenes.scene2d.Actor previousScrollFocus -> previousScrollFocus
    70:107:void initialize() -> initialize
    110:110:com.badlogic.gdx.scenes.scene2d.ui.Table getContentTable() -> getContentTable
    114:114:com.badlogic.gdx.scenes.scene2d.ui.Table getButtonTable() -> getButtonTable
    119:121:com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String) -> text
    126:126:com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> text
    131:132:com.badlogic.gdx.scenes.scene2d.ui.Dialog text(com.badlogic.gdx.scenes.scene2d.ui.Label) -> text
    138:138:com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String) -> button
    144:146:com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object) -> button
    152:152:com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object,com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle) -> button
    157:157:com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button) -> button
    163:165:com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button,java.lang.Object) -> button
    170:182:com.badlogic.gdx.scenes.scene2d.ui.Dialog show(com.badlogic.gdx.scenes.scene2d.Stage) -> show
    188:189:void hide() -> hide
    192:202:void setParent(com.badlogic.gdx.scenes.scene2d.Group) -> setParent
    205:206:void setObject(com.badlogic.gdx.scenes.scene2d.Actor,java.lang.Object) -> setObject
    211:221:com.badlogic.gdx.scenes.scene2d.ui.Dialog key(int,java.lang.Object) -> key
    227:227:void result(java.lang.Object) -> result
    230:231:void cancel() -> cancel
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$1:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    82:87:void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$2:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    92:93:void keyboardFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> keyboardFocusChanged
    96:97:void scrollFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> scrollFocusChanged
    100:105:void focusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent) -> focusChanged
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$3:
    int val$keycode -> val$keycode
    java.lang.Object val$object -> val$object
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    213:218:boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
com.badlogic.gdx.scenes.scene2d.ui.Image -> com.badlogic.gdx.scenes.scene2d.ui.Image:
    com.badlogic.gdx.utils.Scaling scaling -> scaling
    int align -> align
    float imageX -> imageX
    float imageY -> imageY
    float imageWidth -> imageWidth
    float imageHeight -> imageHeight
    com.badlogic.gdx.scenes.scene2d.utils.Drawable drawable -> drawable
    90:116:void layout() -> layout
    119:142:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    145:152:void setDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setDrawable
    155:155:com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable() -> getDrawable
    159:161:void setScaling(com.badlogic.gdx.utils.Scaling) -> setScaling
    164:165:void setAlign(int) -> setAlign
    168:168:float getMinWidth() -> getMinWidth
    172:172:float getMinHeight() -> getMinHeight
    176:177:float getPrefWidth() -> getPrefWidth
    181:182:float getPrefHeight() -> getPrefHeight
    186:186:float getImageX() -> getImageX
    190:190:float getImageY() -> getImageY
    194:194:float getImageWidth() -> getImageWidth
    198:198:float getImageHeight() -> getImageHeight
com.badlogic.gdx.scenes.scene2d.ui.ImageButton -> com.badlogic.gdx.scenes.scene2d.ui.ImageButton:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle style -> style
    64:68:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    71:71:com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle getStyle() -> getStyle
    75:86:void updateImage() -> updateImage
    89:91:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    94:94:com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    98:98:com.esotericsoftware.tablelayout.Cell getImageCell() -> getImageCell
    29:29:com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp -> imageUp
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown -> imageDown
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver -> imageOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked -> imageChecked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver -> imageCheckedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled -> imageDisabled
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton -> com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> label
    com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle style -> style
    68:79:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    82:82:com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle getStyle() -> getStyle
    86:97:void updateImage() -> updateImage
    100:114:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    117:117:com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    121:121:com.esotericsoftware.tablelayout.Cell getImageCell() -> getImageCell
    125:125:com.badlogic.gdx.scenes.scene2d.ui.Label getLabel() -> getLabel
    129:129:com.esotericsoftware.tablelayout.Cell getLabelCell() -> getLabelCell
    133:134:void setText(java.lang.String) -> setText
    137:137:java.lang.CharSequence getText() -> getText
    34:34:com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp -> imageUp
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown -> imageDown
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver -> imageOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked -> imageChecked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver -> imageCheckedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled -> imageDisabled
com.badlogic.gdx.scenes.scene2d.ui.Label -> com.badlogic.gdx.scenes.scene2d.ui.Label:
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style -> style
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds -> bounds
    com.badlogic.gdx.utils.StringBuilder text -> text
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> cache
    int labelAlign -> labelAlign
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment lineAlign -> lineAlign
    boolean wrap -> wrap
    float lastPrefHeight -> lastPrefHeight
    boolean sizeInvalid -> sizeInvalid
    float fontScaleX -> fontScaleX
    float fontScaleY -> fontScaleY
    77:82:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> setStyle
    87:87:com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle getStyle() -> getStyle
    92:103:void setText(java.lang.CharSequence) -> setText
    106:111:boolean textEquals(java.lang.CharSequence) -> textEquals
    115:115:java.lang.CharSequence getText() -> getText
    119:121:void invalidate() -> invalidate
    124:133:void computeSize() -> computeSize
    136:183:void layout() -> layout
    186:195:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    198:203:float getPrefWidth() -> getPrefWidth
    207:211:float getPrefHeight() -> getPrefHeight
    215:216:com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getTextBounds() -> getTextBounds
    223:225:void setWrap(boolean) -> setWrap
    230:231:void setAlignment(int) -> setAlignment
    237:247:void setAlignment(int,int) -> setAlignment
    250:253:void setFontScale(float) -> setFontScale
    256:259:void setFontScale(float,float) -> setFontScale
    262:262:float getFontScaleX() -> getFontScaleX
    266:268:void setFontScaleX(float) -> setFontScaleX
    271:271:float getFontScaleY() -> getFontScaleY
    275:277:void setFontScaleY(float) -> setFontScaleY
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle -> com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.List -> com.badlogic.gdx.scenes.scene2d.ui.List:
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle style -> style
    java.lang.String[] items -> items
    int selectedIndex -> selectedIndex
    com.badlogic.gdx.math.Rectangle cullingArea -> cullingArea
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    float itemHeight -> itemHeight
    float textOffsetX -> textOffsetX
    float textOffsetY -> textOffsetY
    71:78:void touchDown(float) -> touchDown
    81:87:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle) -> setStyle
    91:91:com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle getStyle() -> getStyle
    96:125:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    129:129:int getSelectedIndex() -> getSelectedIndex
    133:136:void setSelectedIndex(int) -> setSelectedIndex
    140:141:java.lang.String getSelection() -> getSelection
    146:153:int setSelection(java.lang.String) -> setSelection
    157:186:void setItems(java.lang.Object[]) -> setItems
    189:189:java.lang.String[] getItems() -> getItems
    193:193:float getPrefWidth() -> getPrefWidth
    197:197:float getPrefHeight() -> getPrefHeight
    201:202:void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
com.badlogic.gdx.scenes.scene2d.ui.List$1 -> com.badlogic.gdx.scenes.scene2d.ui.List$1:
    com.badlogic.gdx.scenes.scene2d.ui.List this$0 -> this$0
    63:65:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle -> com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColorSelected -> fontColorSelected
    com.badlogic.gdx.graphics.Color fontColorUnselected -> fontColorUnselected
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle style -> style
    com.badlogic.gdx.scenes.scene2d.Actor widget -> widget
    com.badlogic.gdx.math.Rectangle hScrollBounds -> hScrollBounds
    com.badlogic.gdx.math.Rectangle vScrollBounds -> vScrollBounds
    com.badlogic.gdx.math.Rectangle hKnobBounds -> hKnobBounds
    com.badlogic.gdx.math.Rectangle vKnobBounds -> vKnobBounds
    com.badlogic.gdx.math.Rectangle widgetAreaBounds -> widgetAreaBounds
    com.badlogic.gdx.math.Rectangle widgetCullingArea -> widgetCullingArea
    com.badlogic.gdx.math.Rectangle scissorBounds -> scissorBounds
    com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener flickScrollListener -> flickScrollListener
    boolean scrollX -> scrollX
    boolean scrollY -> scrollY
    float amountX -> amountX
    float amountY -> amountY
    float visualAmountX -> visualAmountX
    float visualAmountY -> visualAmountY
    float maxX -> maxX
    float maxY -> maxY
    boolean touchScrollH -> touchScrollH
    boolean touchScrollV -> touchScrollV
    com.badlogic.gdx.math.Vector2 lastPoint -> lastPoint
    float areaWidth -> areaWidth
    float areaHeight -> areaHeight
    boolean fadeScrollBars -> fadeScrollBars
    boolean smoothScrolling -> smoothScrolling
    float fadeAlpha -> fadeAlpha
    float fadeAlphaSeconds -> fadeAlphaSeconds
    float fadeDelay -> fadeDelay
    float fadeDelaySeconds -> fadeDelaySeconds
    boolean cancelTouchFocus -> cancelTouchFocus
    boolean flickScroll -> flickScroll
    float velocityX -> velocityX
    float velocityY -> velocityY
    float flingTimer -> flingTimer
    boolean overscrollX -> overscrollX
    boolean overscrollY -> overscrollY
    float flingTime -> flingTime
    float overscrollDistance -> overscrollDistance
    float overscrollSpeedMin -> overscrollSpeedMin
    float overscrollSpeedMax -> overscrollSpeedMax
    boolean forceOverscrollX -> forceOverscrollX
    boolean forceOverscrollY -> forceOverscrollY
    boolean disableX -> disableX
    boolean disableY -> disableY
    boolean clamp -> clamp
    boolean scrollbarsOnTop -> scrollbarsOnTop
    int draggingPointer -> draggingPointer
    225:227:void resetFade() -> resetFade
    230:233:void cancelTouchFocusedChild(com.badlogic.gdx.scenes.scene2d.InputEvent) -> cancelTouchFocusedChild
    236:241:void clamp() -> clamp
    244:247:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle) -> setStyle
    252:252:com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle getStyle() -> getStyle
    256:334:void act(float) -> act
    337:469:void layout() -> layout
    473:548:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    551:552:float getPrefWidth() -> getPrefWidth
    556:557:float getPrefHeight() -> getPrefHeight
    561:561:float getMinWidth() -> getMinWidth
    565:565:float getMinHeight() -> getMinHeight
    571:574:void setWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setWidget
    578:578:com.badlogic.gdx.scenes.scene2d.Actor getWidget() -> getWidget
    582:582:void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    586:586:void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    590:590:void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    594:596:boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    600:603:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    608:609:void scrollX(float) -> scrollX
    613:614:void scrollY(float) -> scrollY
    618:619:void visualScrollX(float) -> visualScrollX
    623:624:void visualScrollY(float) -> visualScrollY
    627:628:void setScrollX(float) -> setScrollX
    632:632:float getScrollX() -> getScrollX
    636:637:void setScrollY(float) -> setScrollY
    641:641:float getScrollY() -> getScrollY
    645:645:float getVisualScrollX() -> getVisualScrollX
    649:649:float getVisualScrollY() -> getVisualScrollY
    653:653:float getScrollPercentX() -> getScrollPercentX
    657:658:void setScrollPercentX(float) -> setScrollPercentX
    661:661:float getScrollPercentY() -> getScrollPercentY
    665:666:void setScrollPercentY(float) -> setScrollPercentY
    669:676:void setFlickScroll(boolean) -> setFlickScroll
    681:690:void scrollTo(float,float,float,float) -> scrollTo
    695:704:void scrollToCenter(float,float,float,float) -> scrollToCenter
    708:708:float getMaxX() -> getMaxX
    713:713:float getMaxY() -> getMaxY
    717:717:float getScrollBarHeight() -> getScrollBarHeight
    721:721:float getScrollBarWidth() -> getScrollBarWidth
    725:725:boolean isScrollX() -> isScrollX
    729:729:boolean isScrollY() -> isScrollY
    734:736:void setScrollingDisabled(boolean,boolean) -> setScrollingDisabled
    739:739:boolean isDragging() -> isDragging
    743:743:boolean isPanning() -> isPanning
    747:747:boolean isFlinging() -> isFlinging
    751:752:void setVelocityX(float) -> setVelocityX
    756:759:float getVelocityX() -> getVelocityX
    763:764:void setVelocityY(float) -> setVelocityY
    768:768:float getVelocityY() -> getVelocityY
    774:776:void setOverscroll(boolean,boolean) -> setOverscroll
    781:784:void setupOverscroll(float,float,float) -> setupOverscroll
    789:791:void setForceOverscroll(boolean,boolean) -> setForceOverscroll
    795:796:void setFlingTime(float) -> setFlingTime
    800:801:void setClamp(boolean) -> setClamp
    805:809:void setFadeScrollBars(boolean) -> setFadeScrollBars
    812:814:void setupFadeScrollBars(float,float) -> setupFadeScrollBars
    817:818:void setSmoothScrolling(boolean) -> setSmoothScrolling
    824:826:void setScrollbarsOnTop(boolean) -> setScrollbarsOnTop
    831:832:void setCancelTouchFocus(boolean) -> setCancelTouchFocus
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1:
    float handlePosition -> handlePosition
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    109:143:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    147:151:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    154:172:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    175:176:boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    182:187:void pan(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,float,float) -> pan
    190:200:void fling(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> fling
    203:207:boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    214:219:boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable corner -> corner
    com.badlogic.gdx.scenes.scene2d.utils.Drawable hScroll -> hScroll
    com.badlogic.gdx.scenes.scene2d.utils.Drawable hScrollKnob -> hScrollKnob
    com.badlogic.gdx.scenes.scene2d.utils.Drawable vScroll -> vScroll
    com.badlogic.gdx.scenes.scene2d.utils.Drawable vScrollKnob -> vScrollKnob
com.badlogic.gdx.scenes.scene2d.ui.SelectBox -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle style -> style
    java.lang.String[] items -> items
    int selectedIndex -> selectedIndex
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds -> bounds
    com.badlogic.gdx.math.Vector2 screenCoords -> screenCoords
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList list -> list
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    87:93:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle) -> setStyle
    98:98:com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle getStyle() -> getStyle
    102:128:void setItems(java.lang.Object[]) -> setItems
    133:162:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    167:168:void setSelection(int) -> setSelection
    171:176:void setSelection(java.lang.String) -> setSelection
    180:180:int getSelectionIndex() -> getSelectionIndex
    185:185:java.lang.String getSelection() -> getSelection
    189:189:float getPrefWidth() -> getPrefWidth
    193:193:float getPrefHeight() -> getPrefHeight
    197:199:void hideList() -> hideList
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox this$0 -> this$0
    71:81:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOver -> backgroundOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOpen -> backgroundOpen
    com.badlogic.gdx.scenes.scene2d.utils.Drawable listBackground -> listBackground
    com.badlogic.gdx.scenes.scene2d.utils.Drawable listSelection -> listSelection
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    float itemSpacing -> itemSpacing
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList:
    com.badlogic.gdx.math.Vector2 oldScreenCoords -> oldScreenCoords
    float itemHeight -> itemHeight
    float textOffsetX -> textOffsetX
    float textOffsetY -> textOffsetY
    int listSelectedIndex -> listSelectedIndex
    com.badlogic.gdx.scenes.scene2d.InputListener stageListener -> stageListener
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox this$0 -> this$0
    261:273:void layout() -> layout
    277:302:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    306:306:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    310:312:void act(float) -> act
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList$1 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList$1:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList this$1 -> this$1
    209:224:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    228:230:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    233:241:boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
com.badlogic.gdx.scenes.scene2d.ui.Skin -> com.badlogic.gdx.scenes.scene2d.ui.Skin:
    com.badlogic.gdx.utils.ObjectMap resources -> resources
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> atlas
    93:95:void load(com.badlogic.gdx.files.FileHandle) -> load
    101:106:void addRegions(com.badlogic.gdx.graphics.g2d.TextureAtlas) -> addRegions
    109:110:void add(java.lang.String,java.lang.Object) -> add
    113:121:void add(java.lang.String,java.lang.Object,java.lang.Class) -> add
    124:124:java.lang.Object get(java.lang.Class) -> get
    128:140:java.lang.Object get(java.lang.String,java.lang.Class) -> get
    144:148:java.lang.Object optional(java.lang.String,java.lang.Class) -> optional
    152:154:boolean has(java.lang.String,java.lang.Class) -> has
    159:159:com.badlogic.gdx.utils.ObjectMap getAll(java.lang.Class) -> getAll
    163:163:com.badlogic.gdx.graphics.Color getColor(java.lang.String) -> getColor
    167:167:com.badlogic.gdx.graphics.g2d.BitmapFont getFont(java.lang.String) -> getFont
    173:180:com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(java.lang.String) -> getRegion
    186:200:com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable getTiledDrawable(java.lang.String) -> getTiledDrawable
    207:224:com.badlogic.gdx.graphics.g2d.NinePatch getPatch(java.lang.String) -> getPatch
    232:246:com.badlogic.gdx.graphics.g2d.Sprite getSprite(java.lang.String) -> getSprite
    253:289:com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable(java.lang.String) -> getDrawable
    295:298:java.lang.String find(java.lang.Object) -> find
    303:303:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String) -> newDrawable
    308:308:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,float,float,float,float) -> newDrawable
    313:313:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,com.badlogic.gdx.graphics.Color) -> newDrawable
    318:321:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> newDrawable
    326:326:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,float,float,float,float) -> newDrawable
    331:357:com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.Color) -> newDrawable
    366:386:void setEnabled(com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> setEnabled
    390:390:com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas() -> getAtlas
    395:400:void dispose() -> dispose
    403:494:com.badlogic.gdx.utils.Json getJsonLoader(com.badlogic.gdx.files.FileHandle) -> getJsonLoader
    498:503:java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String) -> findMethod
com.badlogic.gdx.scenes.scene2d.ui.Skin$1 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$1:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    408:409:java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object) -> readValue
com.badlogic.gdx.scenes.scene2d.ui.Skin$2 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$2:
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> val$skin
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    417:426:com.badlogic.gdx.scenes.scene2d.ui.Skin read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
    431:441:void readNamedObjects(com.badlogic.gdx.utils.Json,java.lang.Class,com.badlogic.gdx.utils.ObjectMap) -> readNamedObjects
    415:415:java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$3 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$3:
    com.badlogic.gdx.files.FileHandle val$skinFile -> val$skinFile
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> val$skin
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    447:467:com.badlogic.gdx.graphics.g2d.BitmapFont read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
    445:445:java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$4 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$4:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    474:482:com.badlogic.gdx.graphics.Color read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
    472:472:java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$5 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$5:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    488:490:java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable -> com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable:
    java.lang.String name -> name
    com.badlogic.gdx.graphics.Color color -> color
com.badlogic.gdx.scenes.scene2d.ui.Slider -> com.badlogic.gdx.scenes.scene2d.ui.Slider:
    com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle style -> style
    float min -> min
    float max -> max
    float stepSize -> stepSize
    float value -> value
    float animateFromValue -> animateFromValue
    float sliderPos -> sliderPos
    boolean vertical -> vertical
    int draggingPointer -> draggingPointer
    float animateDuration -> animateDuration
    float animateTime -> animateTime
    com.badlogic.gdx.math.Interpolation animateInterpolation -> animateInterpolation
    99:102:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle) -> setStyle
    107:107:com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle getStyle() -> getStyle
    111:113:void act(float) -> act
    117:171:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    174:199:void calculatePositionAndValue(float,float) -> calculatePositionAndValue
    203:203:boolean isDragging() -> isDragging
    207:207:float getValue() -> getValue
    212:213:float getVisualValue() -> getVisualValue
    218:232:void setValue(float) -> setValue
    236:240:void setRange(float,float) -> setRange
    244:246:void setStepSize(float) -> setStepSize
    249:252:float getPrefWidth() -> getPrefWidth
    256:259:float getPrefHeight() -> getPrefHeight
    263:263:float getMinValue() -> getMinValue
    267:267:float getMaxValue() -> getMaxValue
    271:271:float getStepSize() -> getStepSize
    276:277:void setAnimateDuration(float) -> setAnimateDuration
    281:283:void setAnimateInterpolation(com.badlogic.gdx.math.Interpolation) -> setAnimateInterpolation
com.badlogic.gdx.scenes.scene2d.ui.Slider$1 -> com.badlogic.gdx.scenes.scene2d.ui.Slider$1:
    com.badlogic.gdx.scenes.scene2d.ui.Slider this$0 -> this$0
    80:83:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    87:90:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    93:94:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle -> com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knob -> knob
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knobBefore -> knobBefore
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knobAfter -> knobAfter
com.badlogic.gdx.scenes.scene2d.ui.SplitPane -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane:
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle style -> style
    com.badlogic.gdx.scenes.scene2d.Actor firstWidget -> firstWidget
    com.badlogic.gdx.scenes.scene2d.Actor secondWidget -> secondWidget
    boolean vertical -> vertical
    float splitAmount -> splitAmount
    float minAmount -> minAmount
    float maxAmount -> maxAmount
    float oldSplitAmount -> oldSplitAmount
    com.badlogic.gdx.math.Rectangle firstWidgetBounds -> firstWidgetBounds
    com.badlogic.gdx.math.Rectangle secondWidgetBounds -> secondWidgetBounds
    com.badlogic.gdx.math.Rectangle handleBounds -> handleBounds
    com.badlogic.gdx.math.Rectangle firstScissors -> firstScissors
    com.badlogic.gdx.math.Rectangle secondScissors -> secondScissors
    com.badlogic.gdx.math.Vector2 lastPoint -> lastPoint
    com.badlogic.gdx.math.Vector2 handlePosition -> handlePosition
    82:131:void initialize() -> initialize
    134:136:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle) -> setStyle
    141:141:com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle getStyle() -> getStyle
    146:185:void layout() -> layout
    189:192:float getPrefWidth() -> getPrefWidth
    197:200:float getPrefHeight() -> getPrefHeight
    204:204:float getMinWidth() -> getMinWidth
    208:208:float getMinHeight() -> getMinHeight
    212:213:void setVertical(boolean) -> setVertical
    216:228:void calculateHorizBoundsAndPositions() -> calculateHorizBoundsAndPositions
    231:244:void calculateVertBoundsAndPositions() -> calculateVertBoundsAndPositions
    248:274:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    278:280:void setSplitAmount(float) -> setSplitAmount
    283:283:float getSplit() -> getSplit
    287:290:void setMinSplitAmount(float) -> setMinSplitAmount
    293:296:void setMaxSplitAmount(float) -> setMaxSplitAmount
    300:304:void setFirstWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setFirstWidget
    308:312:void setSecondWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setSecondWidget
    315:315:void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    319:319:void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    323:323:void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    327:327:boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1 -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1:
    int draggingPointer -> draggingPointer
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane this$0 -> this$0
    86:94:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    98:99:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    102:129:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable handle -> handle
com.badlogic.gdx.scenes.scene2d.ui.Stack -> com.badlogic.gdx.scenes.scene2d.ui.Stack:
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    float minWidth -> minWidth
    float minHeight -> minHeight
    float maxWidth -> maxWidth
    float maxHeight -> maxHeight
    boolean sizeInvalid -> sizeInvalid
    53:55:void invalidate() -> invalidate
    58:88:void computeSize() -> computeSize
    91:92:void add(com.badlogic.gdx.scenes.scene2d.Actor) -> add
    95:114:void layout() -> layout
    117:118:float getPrefWidth() -> getPrefWidth
    122:123:float getPrefHeight() -> getPrefHeight
    127:128:float getMinWidth() -> getMinWidth
    132:133:float getMinHeight() -> getMinHeight
    137:138:float getMaxWidth() -> getMaxWidth
    142:143:float getMaxHeight() -> getMaxHeight
com.badlogic.gdx.scenes.scene2d.ui.Table -> com.badlogic.gdx.scenes.scene2d.ui.Table:
    com.badlogic.gdx.scenes.scene2d.ui.TableLayout layout -> layout
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    boolean clip -> clip
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> skin
    79:96:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    101:106:void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> drawBackground
    109:111:void invalidate() -> invalidate
    114:115:float getPrefWidth() -> getPrefWidth
    119:120:float getPrefHeight() -> getPrefHeight
    124:124:float getMinWidth() -> getMinWidth
    128:128:float getMinHeight() -> getMinHeight
    134:135:void setBackground(java.lang.String) -> setBackground
    141:152:void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setBackground
    155:155:com.badlogic.gdx.scenes.scene2d.utils.Drawable getBackground() -> getBackground
    159:163:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    169:172:void setClip(boolean) -> setClip
    176:176:int getRow(float) -> getRow
    181:184:void clear() -> clear
    188:189:com.esotericsoftware.tablelayout.Cell add(java.lang.String) -> add
    194:195:com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String) -> add
    200:201:com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String,com.badlogic.gdx.graphics.Color) -> add
    206:207:com.esotericsoftware.tablelayout.Cell add(java.lang.String,java.lang.String,java.lang.String) -> add
    212:212:com.esotericsoftware.tablelayout.Cell add() -> add
    218:218:com.esotericsoftware.tablelayout.Cell add(com.badlogic.gdx.scenes.scene2d.Actor) -> add
    224:229:com.esotericsoftware.tablelayout.Cell stack(com.badlogic.gdx.scenes.scene2d.Actor[]) -> stack
    235:235:com.esotericsoftware.tablelayout.Cell row() -> row
    241:241:com.esotericsoftware.tablelayout.Cell columnDefaults(int) -> columnDefaults
    246:246:com.esotericsoftware.tablelayout.Cell defaults() -> defaults
    250:251:void layout() -> layout
    256:257:void reset() -> reset
    261:261:com.esotericsoftware.tablelayout.Cell getCell(com.badlogic.gdx.scenes.scene2d.Actor) -> getCell
    266:266:java.util.List getCells() -> getCells
    271:272:com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.esotericsoftware.tablelayout.Value) -> pad
    276:277:com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> pad
    282:283:com.badlogic.gdx.scenes.scene2d.ui.Table padTop(com.esotericsoftware.tablelayout.Value) -> padTop
    288:289:com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(com.esotericsoftware.tablelayout.Value) -> padLeft
    294:295:com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(com.esotericsoftware.tablelayout.Value) -> padBottom
    300:301:com.badlogic.gdx.scenes.scene2d.ui.Table padRight(com.esotericsoftware.tablelayout.Value) -> padRight
    306:307:com.badlogic.gdx.scenes.scene2d.ui.Table pad(float) -> pad
    311:312:com.badlogic.gdx.scenes.scene2d.ui.Table pad(float,float,float,float) -> pad
    317:318:com.badlogic.gdx.scenes.scene2d.ui.Table padTop(float) -> padTop
    323:324:com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(float) -> padLeft
    329:330:com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(float) -> padBottom
    335:336:com.badlogic.gdx.scenes.scene2d.ui.Table padRight(float) -> padRight
    342:343:com.badlogic.gdx.scenes.scene2d.ui.Table align(int) -> align
    348:349:com.badlogic.gdx.scenes.scene2d.ui.Table center() -> center
    354:355:com.badlogic.gdx.scenes.scene2d.ui.Table top() -> top
    360:361:com.badlogic.gdx.scenes.scene2d.ui.Table left() -> left
    366:367:com.badlogic.gdx.scenes.scene2d.ui.Table bottom() -> bottom
    372:373:com.badlogic.gdx.scenes.scene2d.ui.Table right() -> right
    378:379:com.badlogic.gdx.scenes.scene2d.ui.Table debug() -> debug
    384:385:com.badlogic.gdx.scenes.scene2d.ui.Table debugTable() -> debugTable
    390:391:com.badlogic.gdx.scenes.scene2d.ui.Table debugCell() -> debugCell
    396:397:com.badlogic.gdx.scenes.scene2d.ui.Table debugWidget() -> debugWidget
    402:403:com.badlogic.gdx.scenes.scene2d.ui.Table debug(com.esotericsoftware.tablelayout.BaseTableLayout$Debug) -> debug
    407:407:com.esotericsoftware.tablelayout.BaseTableLayout$Debug getDebug() -> getDebug
    411:411:com.esotericsoftware.tablelayout.Value getPadTopValue() -> getPadTopValue
    415:415:float getPadTop() -> getPadTop
    419:419:com.esotericsoftware.tablelayout.Value getPadLeftValue() -> getPadLeftValue
    423:423:float getPadLeft() -> getPadLeft
    427:427:com.esotericsoftware.tablelayout.Value getPadBottomValue() -> getPadBottomValue
    431:431:float getPadBottom() -> getPadBottom
    435:435:com.esotericsoftware.tablelayout.Value getPadRightValue() -> getPadRightValue
    439:439:float getPadRight() -> getPadRight
    444:444:float getPadX() -> getPadX
    449:449:float getPadY() -> getPadY
    453:453:int getAlign() -> getAlign
    457:458:void setSkin(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> setSkin
    462:463:void setRound(boolean) -> setRound
    469:471:void drawDebug(com.badlogic.gdx.scenes.scene2d.Stage) -> drawDebug
    474:480:void drawDebug(com.badlogic.gdx.utils.Array,com.badlogic.gdx.graphics.g2d.SpriteBatch) -> drawDebug
com.badlogic.gdx.scenes.scene2d.ui.TableLayout -> com.badlogic.gdx.scenes.scene2d.ui.TableLayout:
    com.badlogic.gdx.utils.Array debugRects -> debugRects
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer debugRenderer -> debugRenderer
    boolean round -> round
    48:108:void layout() -> layout
    112:114:void invalidateHierarchy() -> invalidateHierarchy
    117:119:void toStageCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> toStageCoordinates
    123:178:void drawDebug(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> drawDebug
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit -> com.badlogic.gdx.scenes.scene2d.ui.TableToolkit:
    boolean drawDebug -> drawDebug
    35:44:void addChild(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addChild
    47:48:void removeChild(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> removeChild
    51:52:float getMinWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> getMinWidth
    56:57:float getMinHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> getMinHeight
    61:62:float getPrefWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> getPrefWidth
    66:67:float getPrefHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> getPrefHeight
    71:72:float getMaxWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> getMaxWidth
    76:77:float getMaxHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> getMaxHeight
    81:81:float getWidth(com.badlogic.gdx.scenes.scene2d.Actor) -> getWidth
    85:85:float getHeight(com.badlogic.gdx.scenes.scene2d.Actor) -> getHeight
    89:90:void clearDebugRectangles(com.badlogic.gdx.scenes.scene2d.ui.TableLayout) -> clearDebugRectangles
    93:96:void addDebugRectangle(com.badlogic.gdx.scenes.scene2d.ui.TableLayout,com.esotericsoftware.tablelayout.BaseTableLayout$Debug,float,float,float,float) -> addDebugRectangle
    31:31:void addDebugRectangle(com.esotericsoftware.tablelayout.BaseTableLayout,com.esotericsoftware.tablelayout.BaseTableLayout$Debug,float,float,float,float) -> addDebugRectangle
    31:31:void clearDebugRectangles(com.esotericsoftware.tablelayout.BaseTableLayout) -> clearDebugRectangles
    31:31:float getHeight(java.lang.Object) -> getHeight
    31:31:float getWidth(java.lang.Object) -> getWidth
    31:31:float getMaxHeight(java.lang.Object) -> getMaxHeight
    31:31:float getMaxWidth(java.lang.Object) -> getMaxWidth
    31:31:float getPrefHeight(java.lang.Object) -> getPrefHeight
    31:31:float getPrefWidth(java.lang.Object) -> getPrefWidth
    31:31:float getMinHeight(java.lang.Object) -> getMinHeight
    31:31:float getMinWidth(java.lang.Object) -> getMinWidth
    31:31:void removeChild(java.lang.Object,java.lang.Object) -> removeChild
    31:31:void addChild(java.lang.Object,java.lang.Object) -> addChild
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit$DebugRect -> com.badlogic.gdx.scenes.scene2d.ui.TableToolkit$DebugRect:
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug type -> type
com.badlogic.gdx.scenes.scene2d.ui.TextButton -> com.badlogic.gdx.scenes.scene2d.ui.TextButton:
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> label
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle style -> style
    54:64:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    67:67:com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle() -> getStyle
    72:84:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    87:87:com.badlogic.gdx.scenes.scene2d.ui.Label getLabel() -> getLabel
    91:91:com.esotericsoftware.tablelayout.Cell getLabelCell() -> getLabelCell
    95:96:void setText(java.lang.String) -> setText
    99:99:java.lang.CharSequence getText() -> getText
    29:29:com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color downFontColor -> downFontColor
    com.badlogic.gdx.graphics.Color overFontColor -> overFontColor
    com.badlogic.gdx.graphics.Color checkedFontColor -> checkedFontColor
    com.badlogic.gdx.graphics.Color checkedOverFontColor -> checkedOverFontColor
    com.badlogic.gdx.graphics.Color disabledFontColor -> disabledFontColor
com.badlogic.gdx.scenes.scene2d.ui.TextField -> com.badlogic.gdx.scenes.scene2d.ui.TextField:
    char BACKSPACE -> BACKSPACE
    char ENTER_DESKTOP -> ENTER_DESKTOP
    char ENTER_ANDROID -> ENTER_ANDROID
    char TAB -> TAB
    char DELETE -> DELETE
    char BULLET -> BULLET
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle style -> style
    java.lang.String text -> text
    java.lang.String messageText -> messageText
    java.lang.CharSequence displayText -> displayText
    int cursor -> cursor
    com.badlogic.gdx.utils.Clipboard clipboard -> clipboard
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener listener -> listener
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter filter -> filter
    com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard keyboard -> keyboard
    boolean focusTraversal -> focusTraversal
    boolean disabled -> disabled
    boolean passwordMode -> passwordMode
    java.lang.StringBuilder passwordBuffer -> passwordBuffer
    com.badlogic.gdx.math.Rectangle fieldBounds -> fieldBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds textBounds -> textBounds
    com.badlogic.gdx.math.Rectangle scissor -> scissor
    float renderOffset -> renderOffset
    float textOffset -> textOffset
    int visibleTextStart -> visibleTextStart
    int visibleTextEnd -> visibleTextEnd
    com.badlogic.gdx.utils.FloatArray glyphAdvances -> glyphAdvances
    com.badlogic.gdx.utils.FloatArray glyphPositions -> glyphPositions
    boolean cursorOn -> cursorOn
    float blinkTime -> blinkTime
    long lastBlink -> lastBlink
    boolean hasSelection -> hasSelection
    int selectionStart -> selectionStart
    float selectionX -> selectionX
    float selectionWidth -> selectionWidth
    char passwordCharacter -> passwordCharacter
    com.badlogic.gdx.scenes.scene2d.InputListener inputListener -> inputListener
    com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask keyRepeatTask -> keyRepeatTask
    float keyRepeatInitialTime -> keyRepeatInitialTime
    float keyRepeatTime -> keyRepeatTime
    boolean rightAligned -> rightAligned
    int maxLength -> maxLength
    124:362:void initialize() -> initialize
    365:366:void setMaxLength(int) -> setMaxLength
    369:369:int getMaxLength() -> getMaxLength
    373:376:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle) -> setStyle
    379:380:void setPasswordCharacter(char) -> setPasswordCharacter
    385:385:com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle getStyle() -> getStyle
    389:440:void calculateOffsets() -> calculateOffsets
    444:499:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    502:515:void updateDisplayText() -> updateDisplayText
    518:523:void blink() -> blink
    527:532:void copy() -> copy
    537:541:void cut() -> cut
    545:575:void paste() -> paste
    578:585:void delete() -> delete
    590:605:void next(boolean) -> next
    608:623:com.badlogic.gdx.scenes.scene2d.ui.TextField findNextTextField(com.badlogic.gdx.utils.Array,com.badlogic.gdx.scenes.scene2d.ui.TextField,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean) -> findNextTextField
    628:629:void setTextFieldListener(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener) -> setTextFieldListener
    633:634:void setTextFieldFilter(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter) -> setTextFieldFilter
    638:639:void setFocusTraversal(boolean) -> setFocusTraversal
    643:643:java.lang.String getMessageText() -> getMessageText
    649:650:void setMessageText(java.lang.String) -> setMessageText
    653:674:void setText(java.lang.String) -> setText
    678:678:java.lang.String getText() -> getText
    683:700:void setSelection(int,int) -> setSelection
    703:704:void selectAll() -> selectAll
    707:708:void clearSelection() -> clearSelection
    712:715:void setCursorPosition(int) -> setCursorPosition
    718:718:int getCursorPosition() -> getCursorPosition
    723:723:com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard getOnscreenKeyboard() -> getOnscreenKeyboard
    727:728:void setOnscreenKeyboard(com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard) -> setOnscreenKeyboard
    731:732:void setClipboard(com.badlogic.gdx.utils.Clipboard) -> setClipboard
    735:735:float getPrefWidth() -> getPrefWidth
    739:744:float getPrefHeight() -> getPrefHeight
    748:749:void setRightAligned(boolean) -> setRightAligned
    754:755:void setPasswordMode(boolean) -> setPasswordMode
    758:759:void setBlinkTime(float) -> setBlinkTime
    762:763:void setDisabled(boolean) -> setDisabled
    766:766:boolean isDisabled() -> isDisabled
    770:770:boolean isPasswordMode() -> isPasswordMode
    774:774:com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter getTextFieldFilter() -> getTextFieldFilter
com.badlogic.gdx.scenes.scene2d.ui.TextField$1 -> com.badlogic.gdx.scenes.scene2d.ui.TextField$1:
    com.badlogic.gdx.scenes.scene2d.ui.TextField this$0 -> this$0
    126:127:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    130:139:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    143:148:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    151:161:void setCursorPosition(float) -> setCursorPosition
    164:293:boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    297:299:boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    303:359:boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard -> com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard:
    820:821:void show(boolean) -> show
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask -> com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask:
    int keycode -> keycode
    com.badlogic.gdx.scenes.scene2d.ui.TextField this$0 -> this$0
    781:782:void run() -> run
com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard -> com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard:
    void show(boolean) -> show
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter:
    boolean acceptChar(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> acceptChar
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter:
    802:802:boolean acceptChar(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> acceptChar
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener:
    void keyTyped(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color disabledFontColor -> disabledFontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable cursor -> cursor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
    com.badlogic.gdx.graphics.g2d.BitmapFont messageFont -> messageFont
    com.badlogic.gdx.graphics.Color messageFontColor -> messageFontColor
com.badlogic.gdx.scenes.scene2d.ui.Touchpad -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad:
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle style -> style
    boolean touched -> touched
    float deadzoneRadius -> deadzoneRadius
    com.badlogic.gdx.math.Circle knobBounds -> knobBounds
    com.badlogic.gdx.math.Circle touchBounds -> touchBounds
    com.badlogic.gdx.math.Circle deadzoneBounds -> deadzoneBounds
    com.badlogic.gdx.math.Vector2 knobPosition -> knobPosition
    com.badlogic.gdx.math.Vector2 knobPercent -> knobPercent
    91:119:void calculatePositionAndValue(float,float,boolean) -> calculatePositionAndValue
    122:125:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle) -> setStyle
    130:130:com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle getStyle() -> getStyle
    135:135:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    141:151:void layout() -> layout
    155:174:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    178:178:float getPrefWidth() -> getPrefWidth
    183:183:float getPrefHeight() -> getPrefHeight
    187:187:boolean isTouched() -> isTouched
    192:195:void setDeadzone(float) -> setDeadzone
    199:199:float getKnobX() -> getKnobX
    204:204:float getKnobY() -> getKnobY
    210:210:float getKnobPercentX() -> getKnobPercentX
    216:216:float getKnobPercentY() -> getKnobPercentY
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1 -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1:
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad this$0 -> this$0
    71:74:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    79:80:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    84:86:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knob -> knob
com.badlogic.gdx.scenes.scene2d.ui.Tree -> com.badlogic.gdx.scenes.scene2d.ui.Tree:
    com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle style -> style
    com.badlogic.gdx.utils.Array rootNodes -> rootNodes
    com.badlogic.gdx.utils.Array selectedNodes -> selectedNodes
    float ySpacing -> ySpacing
    float iconSpacing -> iconSpacing
    float padding -> padding
    float indentSpacing -> indentSpacing
    float leftColumnWidth -> leftColumnWidth
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    boolean sizeInvalid -> sizeInvalid
    boolean multiSelect -> multiSelect
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node foundNode -> foundNode
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node overNode -> overNode
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    64:116:void initialize() -> initialize
    119:121:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle) -> setStyle
    124:125:void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> add
    128:133:void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> insert
    136:143:void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> remove
    147:151:void clear() -> clear
    154:154:com.badlogic.gdx.utils.Array getNodes() -> getNodes
    158:160:void invalidate() -> invalidate
    163:172:void computeSize() -> computeSize
    175:197:void computeSize(com.badlogic.gdx.utils.Array,float) -> computeSize
    200:202:void layout() -> layout
    205:217:float layout(com.badlogic.gdx.utils.Array,float,float) -> layout
    221:229:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    233:260:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.utils.Array,float) -> draw
    264:266:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getNodeAt(float) -> getNodeAt
    270:282:float getNodeAt(com.badlogic.gdx.utils.Array,float,float) -> getNodeAt
    286:294:void selectNodes(com.badlogic.gdx.utils.Array,float,float) -> selectNodes
    297:297:com.badlogic.gdx.utils.Array getSelection() -> getSelection
    301:303:void setSelection(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> setSelection
    306:308:void setSelection(com.badlogic.gdx.utils.Array) -> setSelection
    311:312:void addSelection(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> addSelection
    315:316:void clearSelection() -> clearSelection
    319:319:com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle getStyle() -> getStyle
    323:323:com.badlogic.gdx.utils.Array getRootNodes() -> getRootNodes
    327:327:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getOverNode() -> getOverNode
    331:332:void setOverNode(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> setOverNode
    336:337:void setPadding(float) -> setPadding
    341:342:void setYSpacing(float) -> setYSpacing
    346:347:void setIconSpacing(float) -> setIconSpacing
    350:351:float getPrefWidth() -> getPrefWidth
    355:356:float getPrefHeight() -> getPrefHeight
    361:362:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object) -> findNode
    366:375:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(com.badlogic.gdx.utils.Array,java.lang.Object) -> findNode
    379:380:void collapseAll() -> collapseAll
    383:388:void collapseAll(com.badlogic.gdx.utils.Array) -> collapseAll
    391:392:void expandAll() -> expandAll
    395:397:void expandAll(com.badlogic.gdx.utils.Array) -> expandAll
    401:401:com.badlogic.gdx.scenes.scene2d.utils.ClickListener getClickListener() -> getClickListener
    405:406:void setMultiSelect(boolean) -> setMultiSelect
com.badlogic.gdx.scenes.scene2d.ui.Tree$1 -> com.badlogic.gdx.scenes.scene2d.ui.Tree$1:
    com.badlogic.gdx.scenes.scene2d.ui.Tree this$0 -> this$0
    66:104:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    107:108:boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    112:114:void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node -> com.badlogic.gdx.scenes.scene2d.ui.Tree$Node:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node parent -> parent
    com.badlogic.gdx.utils.Array children -> children
    boolean selectable -> selectable
    boolean expanded -> expanded
    com.badlogic.gdx.scenes.scene2d.utils.Drawable icon -> icon
    float height -> height
    java.lang.Object object -> object
    424:437:void setExpanded(boolean) -> setExpanded
    441:445:void addToTree(com.badlogic.gdx.scenes.scene2d.ui.Tree) -> addToTree
    449:453:void removeFromTree(com.badlogic.gdx.scenes.scene2d.ui.Tree) -> removeFromTree
    456:457:void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> add
    460:462:void addAll(com.badlogic.gdx.utils.Array) -> addAll
    465:472:void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> insert
    475:478:void remove() -> remove
    481:487:void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> remove
    490:496:void removeAll() -> removeAll
    500:502:com.badlogic.gdx.scenes.scene2d.ui.Tree getTree() -> getTree
    506:506:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
    510:510:boolean isExpanded() -> isExpanded
    514:514:com.badlogic.gdx.utils.Array getChildren() -> getChildren
    518:518:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getParent() -> getParent
    523:524:void setIcon(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setIcon
    527:527:java.lang.Object getObject() -> getObject
    532:533:void setObject(java.lang.Object) -> setObject
    536:536:com.badlogic.gdx.scenes.scene2d.utils.Drawable getIcon() -> getIcon
    541:543:com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object) -> findNode
    548:550:void collapseAll() -> collapseAll
    554:556:void expandAll() -> expandAll
    560:565:void expandTo() -> expandTo
    568:568:boolean isSelectable() -> isSelectable
    572:573:void setSelectable(boolean) -> setSelectable
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle -> com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable plus -> plus
    com.badlogic.gdx.scenes.scene2d.utils.Drawable minus -> minus
    com.badlogic.gdx.scenes.scene2d.utils.Drawable over -> over
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup -> com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup:
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    boolean sizeInvalid -> sizeInvalid
    int alignment -> alignment
    boolean reverse -> reverse
    43:44:void setAlignment(int) -> setAlignment
    48:49:void setReverse(boolean) -> setReverse
    52:54:void invalidate() -> invalidate
    57:72:void computeSize() -> computeSize
    75:101:void layout() -> layout
    104:105:float getPrefWidth() -> getPrefWidth
    109:110:float getPrefHeight() -> getPrefHeight
com.badlogic.gdx.scenes.scene2d.ui.Widget -> com.badlogic.gdx.scenes.scene2d.ui.Widget:
    boolean needsLayout -> needsLayout
    boolean fillParent -> fillParent
    boolean layoutEnabled -> layoutEnabled
    41:41:float getMinWidth() -> getMinWidth
    45:45:float getMinHeight() -> getMinHeight
    49:49:float getPrefWidth() -> getPrefWidth
    53:53:float getPrefHeight() -> getPrefHeight
    57:57:float getMaxWidth() -> getMaxWidth
    61:61:float getMaxHeight() -> getMaxHeight
    65:67:void setLayoutEnabled(boolean) -> setLayoutEnabled
    70:93:void validate() -> validate
    97:97:boolean needsLayout() -> needsLayout
    101:102:void invalidate() -> invalidate
    105:109:void invalidateHierarchy() -> invalidateHierarchy
    112:120:void pack() -> pack
    123:124:void setFillParent(boolean) -> setFillParent
    128:129:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    132:132:void layout() -> layout
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup -> com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup:
    boolean needsLayout -> needsLayout
    boolean fillParent -> fillParent
    boolean layoutEnabled -> layoutEnabled
    42:42:float getMinWidth() -> getMinWidth
    46:46:float getMinHeight() -> getMinHeight
    50:50:float getPrefWidth() -> getPrefWidth
    54:54:float getPrefHeight() -> getPrefHeight
    58:58:float getMaxWidth() -> getMaxWidth
    62:62:float getMaxHeight() -> getMaxHeight
    66:69:void setLayoutEnabled(boolean) -> setLayoutEnabled
    72:80:void setLayoutEnabled(com.badlogic.gdx.scenes.scene2d.Group,boolean) -> setLayoutEnabled
    83:106:void validate() -> validate
    110:110:boolean needsLayout() -> needsLayout
    114:115:void invalidate() -> invalidate
    118:121:void invalidateHierarchy() -> invalidateHierarchy
    124:125:void childrenChanged() -> childrenChanged
    128:136:void pack() -> pack
    139:140:void setFillParent(boolean) -> setFillParent
    143:143:void layout() -> layout
    148:150:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.badlogic.gdx.scenes.scene2d.ui.Window -> com.badlogic.gdx.scenes.scene2d.ui.Window:
    com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle style -> style
    java.lang.String title -> title
    com.badlogic.gdx.graphics.g2d.BitmapFontCache titleCache -> titleCache
    boolean isMovable -> isMovable
    boolean isModal -> isModal
    com.badlogic.gdx.math.Vector2 dragOffset -> dragOffset
    boolean dragging -> dragging
    int titleAlignment -> titleAlignment
    boolean keepWithinStage -> keepWithinStage
    111:118:void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle) -> setStyle
    123:123:com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle getStyle() -> getStyle
    127:137:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    140:168:void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> drawBackground
    171:173:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    177:179:void setTitle(java.lang.String) -> setTitle
    182:182:java.lang.String getTitle() -> getTitle
    187:188:void setTitleAlignment(int) -> setTitleAlignment
    191:192:void setMovable(boolean) -> setMovable
    195:196:void setModal(boolean) -> setModal
    199:200:void setKeepWithinStage(boolean) -> setKeepWithinStage
    203:203:boolean isDragging() -> isDragging
    207:207:float getPrefWidth() -> getPrefWidth
com.badlogic.gdx.scenes.scene2d.ui.Window$1 -> com.badlogic.gdx.scenes.scene2d.ui.Window$1:
    com.badlogic.gdx.scenes.scene2d.ui.Window this$0 -> this$0
    70:71:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.Window$2 -> com.badlogic.gdx.scenes.scene2d.ui.Window$2:
    com.badlogic.gdx.scenes.scene2d.ui.Window this$0 -> this$0
    76:80:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    84:86:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    89:89:boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    93:93:boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
    97:97:boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    101:101:boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    105:105:boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle -> com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.graphics.g2d.BitmapFont titleFont -> titleFont
    com.badlogic.gdx.graphics.Color titleFontColor -> titleFontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable stageBackground -> stageBackground
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener -> com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener:
    com.badlogic.gdx.input.GestureDetector detector -> detector
    com.badlogic.gdx.scenes.scene2d.InputEvent event -> event
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.Actor touchDownTarget -> touchDownTarget
    87:111:boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    115:115:void touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    118:118:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    121:121:void tap(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> tap
    126:126:boolean longPress(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> longPress
    130:130:void fling(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> fling
    134:134:void pan(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,float,float) -> pan
    137:137:void zoom(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> zoom
    140:140:void pinch(com.badlogic.gdx.scenes.scene2d.InputEvent,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
    143:143:com.badlogic.gdx.input.GestureDetector getGestureDetector() -> getGestureDetector
    147:147:com.badlogic.gdx.scenes.scene2d.Actor getTouchDownTarget() -> getTouchDownTarget
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1 -> com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1:
    com.badlogic.gdx.math.Vector2 initialPointer1 -> b
    com.badlogic.gdx.math.Vector2 initialPointer2 -> c
    com.badlogic.gdx.math.Vector2 pointer1 -> d
    com.badlogic.gdx.math.Vector2 pointer2 -> e
    com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener this$0 -> a
    48:50:boolean tap(float,float,int,int) -> a
    54:55:boolean longPress(float,float) -> a
    59:60:boolean fling(float,float,int) -> a
    64:66:boolean pan(float,float,float,float) -> a
    70:71:boolean zoom(float,float) -> b
    76:81:boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2 -> com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type -> a
com.badlogic.gdx.scenes.scene2d.utils.Align -> com.badlogic.gdx.scenes.scene2d.utils.Align:
    int center -> a
    int top -> b
    int bottom -> c
    int left -> d
    int right -> e
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable -> com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable:
    float leftWidth -> a
    float rightWidth -> b
    float topHeight -> c
    float bottomHeight -> d
    float minWidth -> e
    float minHeight -> f
    40:40:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
    43:43:float getLeftWidth() -> a
    47:48:void setLeftWidth(float) -> a
    51:51:float getRightWidth() -> b
    55:56:void setRightWidth(float) -> b
    59:59:float getTopHeight() -> c
    63:64:void setTopHeight(float) -> c
    67:67:float getBottomHeight() -> d
    71:72:void setBottomHeight(float) -> d
    75:75:float getMinWidth() -> e
    79:80:void setMinWidth(float) -> e
    83:83:float getMinHeight() -> f
    87:88:void setMinHeight(float) -> f
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener -> com.badlogic.gdx.scenes.scene2d.utils.ChangeListener:
    27:29:boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent -> com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent:
com.badlogic.gdx.scenes.scene2d.utils.ClickListener -> com.badlogic.gdx.scenes.scene2d.utils.ClickListener:
    float tapSquareSize -> tapSquareSize
    float touchDownX -> touchDownX
    float touchDownY -> touchDownY
    int pressedPointer -> pressedPointer
    int button -> button
    boolean pressed -> pressed
    boolean over -> over
    boolean cancelled -> cancelled
    long tapCountInterval -> tapCountInterval
    int tapCount -> tapCount
    long lastTapTime -> lastTapTime
    49:55:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    59:66:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    69:85:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    88:89:void enter(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> enter
    92:93:void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
    97:101:void cancel() -> cancel
    104:104:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    107:107:void dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStart
    110:110:void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> drag
    113:113:void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStop
    117:119:boolean isOver(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> isOver
    123:124:boolean inTapSquare(float,float) -> inTapSquare
    129:131:void invalidateTapSquare() -> invalidateTapSquare
    135:135:boolean isPressed() -> isPressed
    140:140:boolean isOver() -> isOver
    144:145:void setTapSquareSize(float) -> setTapSquareSize
    148:148:float getTapSquareSize() -> getTapSquareSize
    153:154:void setTapCountInterval(float) -> setTapCountInterval
    158:158:int getTapCount() -> getTapCount
    162:162:float getTouchDownX() -> getTouchDownX
    166:166:float getTouchDownY() -> getTouchDownY
    170:170:int getButton() -> getButton
    175:176:void setButton(int) -> setButton
com.badlogic.gdx.scenes.scene2d.utils.Cullable -> com.badlogic.gdx.scenes.scene2d.utils.Cullable:
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop:
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source source -> a
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload payload -> b
    com.badlogic.gdx.scenes.scene2d.Actor dragActor -> c
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target target -> d
    boolean isValidTarget -> e
    com.badlogic.gdx.utils.Array targets -> f
    com.badlogic.gdx.utils.ObjectMap sourceListeners -> g
    float tapSquareSize -> l
    int button -> m
    float dragActorX -> h
    float dragActorY -> i
    long dragStartTime -> j
    int dragTime -> k
    45:124:void addSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source) -> a
    127:129:void removeSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source) -> b
    132:133:void addTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target) -> a
    136:137:void removeTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target) -> b
    141:142:void setTapSquareSize(float) -> a
    146:147:void setButton(int) -> a
    150:152:void setDragActorPosition(float,float) -> a
    155:155:boolean isDragging() -> a
    160:160:com.badlogic.gdx.scenes.scene2d.Actor getDragActor() -> b
    166:167:void setDragTime(int) -> b
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1 -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1:
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source val$source -> a
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop this$0 -> b
    47:50:void dragStart$1dcb6a94$3bf7ec54(com.badlogic.gdx.scenes.scene2d.InputEvent) -> a
    53:101:void drag$1dcb6a94(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> a
    104:118:void dragStop$1dcb6a94(com.badlogic.gdx.scenes.scene2d.InputEvent) -> b
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload:
    com.badlogic.gdx.scenes.scene2d.Actor dragActor -> a
    com.badlogic.gdx.scenes.scene2d.Actor validDragActor -> b
    com.badlogic.gdx.scenes.scene2d.Actor invalidDragActor -> c
    java.lang.Object object -> d
    226:227:void setDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    230:230:com.badlogic.gdx.scenes.scene2d.Actor getDragActor() -> a
    234:235:void setValidDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    238:238:com.badlogic.gdx.scenes.scene2d.Actor getValidDragActor() -> b
    242:243:void setInvalidDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> c
    246:246:com.badlogic.gdx.scenes.scene2d.Actor getInvalidDragActor() -> c
    250:250:java.lang.Object getObject() -> d
    254:255:void setObject(java.lang.Object) -> a
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> a
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload dragStart$4447ecbc() -> a
    184:184:void dragStop$75d53f5d() -> b
    187:187:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> c
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> a
    boolean drag$2b1368fd() -> a
    210:210:void reset$580fc584() -> b
    void drop$2b136901() -> c
    215:215:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> d
com.badlogic.gdx.scenes.scene2d.utils.DragListener -> com.badlogic.gdx.scenes.scene2d.utils.DragListener:
    float tapSquareSize -> a
    float touchDownX -> b
    float touchDownY -> c
    int pressedPointer -> d
    int button -> e
    boolean dragging -> f
    float deltaX -> g
    float deltaY -> h
    35:40:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    44:58:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    61:66:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    69:69:void dragStart$1dcb6a94$3bf7ec54(com.badlogic.gdx.scenes.scene2d.InputEvent) -> a
    72:72:void drag$1dcb6a94(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> a
    75:75:void dragStop$1dcb6a94(com.badlogic.gdx.scenes.scene2d.InputEvent) -> b
    79:79:boolean isDragging() -> e
    83:84:void setTapSquareSize(float) -> a
    87:87:float getTapSquareSize() -> f
    91:91:float getTouchDownX() -> a
    95:95:float getTouchDownY() -> b
    100:100:float getDeltaX() -> c
    105:105:float getDeltaY() -> d
    109:109:int getButton() -> g
    114:115:void setButton(int) -> a
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener -> com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane scroll -> g
    com.badlogic.gdx.utils.Timer$Task scrollUp -> h
    com.badlogic.gdx.utils.Timer$Task scrollDown -> i
    com.badlogic.gdx.math.Interpolation interpolation -> a
    float minSpeed -> b
    float maxSpeed -> c
    float tickSecs -> d
    long startTime -> e
    long rampTime -> f
    50:54:void setup(float,float,float,float) -> a
    57:57:float getScrollPixels() -> e
    61:80:void drag$1dcb6a94(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> a
    83:85:void dragStop$1dcb6a94(com.badlogic.gdx.scenes.scene2d.InputEvent) -> b
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1 -> com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane val$scroll -> a
    com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener this$0 -> b
    39:40:void run() -> run
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2 -> com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane val$scroll -> a
    com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener this$0 -> b
    44:45:void run() -> run
com.badlogic.gdx.scenes.scene2d.utils.Drawable -> com.badlogic.gdx.scenes.scene2d.utils.Drawable:
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
    float getLeftWidth() -> a
    void setLeftWidth(float) -> a
    float getRightWidth() -> b
    void setRightWidth(float) -> b
    float getTopHeight() -> c
    void setTopHeight(float) -> c
    float getBottomHeight() -> d
    void setBottomHeight(float) -> d
    float getMinWidth() -> e
    void setMinWidth(float) -> e
    float getMinHeight() -> f
    void setMinHeight(float) -> f
com.badlogic.gdx.scenes.scene2d.utils.FocusListener -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener:
    27:37:boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    42:42:void keyboardFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> keyboardFocusChanged
    46:46:void scrollFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> scrollFocusChanged
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1 -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type -> a
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent:
    boolean focused -> a
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type type -> b
    com.badlogic.gdx.scenes.scene2d.Actor relatedActor -> c
    56:58:void reset() -> b
    61:61:boolean isFocused() -> l
    65:66:void setFocused(boolean) -> b
    69:69:com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type getType() -> m
    73:74:void setType(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type) -> a
    79:79:com.badlogic.gdx.scenes.scene2d.Actor getRelatedActor() -> n
    84:85:void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor) -> c
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type:
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type keyboard -> a
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type scroll -> b
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type[] $VALUES -> c
    88:88:com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type[] values() -> values
    88:88:com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.utils.Layout -> com.badlogic.gdx.scenes.scene2d.utils.Layout:
    void layout() -> layout
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    void validate() -> validate
    void pack() -> pack
    void setFillParent(boolean) -> setFillParent
    void setLayoutEnabled(boolean) -> setLayoutEnabled
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable -> com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable:
    com.badlogic.gdx.graphics.g2d.NinePatch patch -> a
    48:49:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
    52:59:void setPatch(com.badlogic.gdx.graphics.g2d.NinePatch) -> a
    62:62:com.badlogic.gdx.graphics.g2d.NinePatch getPatch() -> g
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack -> com.badlogic.gdx.scenes.scene2d.utils.ScissorStack:
    com.badlogic.gdx.utils.Array scissors -> c
    com.badlogic.gdx.math.Vector3 tmp -> a
    com.badlogic.gdx.math.Rectangle viewport -> b
    45:68:boolean pushScissors(com.badlogic.gdx.math.Rectangle) -> a
    74:81:com.badlogic.gdx.math.Rectangle popScissors() -> a
    85:97:void fix(com.badlogic.gdx.math.Rectangle) -> b
    109:120:void calculateScissors(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> a
    124:130:com.badlogic.gdx.math.Rectangle getViewport() -> b
    140:146:void toWindowCoordinates(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector2) -> a
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable -> com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable:
    com.badlogic.gdx.graphics.g2d.Sprite sprite -> a
    42:47:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
    50:53:void setSprite(com.badlogic.gdx.graphics.g2d.Sprite) -> a
    56:56:com.badlogic.gdx.graphics.g2d.Sprite getSprite() -> g
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable -> com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable:
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> a
    41:42:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
    45:48:void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    51:51:com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> g
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable -> com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable:
    38:79:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float,float) -> a
com.badlogic.gdx.utils.Array -> com.badlogic.gdx.utils.Array:
    java.lang.Object[] items -> a
    int size -> b
    boolean ordered -> c
    com.badlogic.gdx.utils.Array$ArrayIterator iterator -> d
    97:100:void add(java.lang.Object) -> a
    103:104:void addAll(com.badlogic.gdx.utils.Array) -> a
    107:110:void addAll$30292825(com.badlogic.gdx.utils.Array,int) -> a
    113:114:void addAll(java.lang.Object[]) -> a
    117:122:void addAll$7ac2f2fc(java.lang.Object[],int) -> a
    125:126:java.lang.Object get(int) -> a
    130:132:void set(int,java.lang.Object) -> a
    135:143:void insert(int,java.lang.Object) -> b
    146:152:void swap(int,int) -> a
    156:162:boolean contains$4cfd3ce7(java.lang.Object) -> b
    169:177:int indexOf(java.lang.Object,boolean) -> a
    181:189:int lastIndexOf(java.lang.Object,boolean) -> c
    193:209:boolean removeValue(java.lang.Object,boolean) -> b
    214:223:java.lang.Object removeIndex(int) -> b
    230:256:boolean removeAll(com.badlogic.gdx.utils.Array,boolean) -> a
    261:264:java.lang.Object pop() -> a
    269:269:java.lang.Object peek() -> b
    274:274:java.lang.Object first() -> c
    278:282:void clear() -> d
    287:288:void shrink() -> e
    294:296:java.lang.Object[] ensureCapacity(int) -> c
    301:305:java.lang.Object[] resize(int) -> d
    311:312:void sort() -> f
    316:317:void sort(java.util.Comparator) -> a
    320:326:void reverse() -> g
    329:335:void shuffle() -> h
    340:344:java.util.Iterator iterator() -> iterator
    350:354:void truncate(int) -> e
    358:359:java.lang.Object random() -> j
    363:363:java.lang.Object[] toArray() -> i
    367:369:java.lang.Object[] toArray(java.lang.Class) -> a
    373:385:boolean equals(java.lang.Object) -> equals
    389:399:java.lang.String toString() -> toString
    403:411:java.lang.String toString(java.lang.String) -> a
com.badlogic.gdx.utils.Array$ArrayIterable -> com.badlogic.gdx.utils.Array$ArrayIterable:
    com.badlogic.gdx.utils.Array$ArrayIterator iterator -> a
    450:451:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.Array$ArrayIterator -> com.badlogic.gdx.utils.Array$ArrayIterator:
    com.badlogic.gdx.utils.Array array -> b
    int index -> a
    423:423:boolean hasNext() -> hasNext
    427:428:java.lang.Object next() -> next
    432:434:void remove() -> remove
    437:438:void reset() -> a
com.badlogic.gdx.utils.ArrayMap -> com.badlogic.gdx.utils.ArrayMap:
    java.lang.Object[] keys -> a
    java.lang.Object[] values -> b
    int size -> c
    boolean ordered -> d
    com.badlogic.gdx.utils.ArrayMap$Entries entries -> e
    com.badlogic.gdx.utils.ArrayMap$Values valuesIter -> f
    com.badlogic.gdx.utils.ArrayMap$Keys keysIter -> g
    86:91:void put(java.lang.Object,java.lang.Object) -> a
    94:102:void put(java.lang.Object,java.lang.Object,int) -> a
    105:106:void addAll(com.badlogic.gdx.utils.ArrayMap) -> a
    109:116:void addAll$c67354f(com.badlogic.gdx.utils.ArrayMap,int) -> a
    121:130:java.lang.Object get(java.lang.Object) -> a
    137:146:java.lang.Object getKey$7e8b2351(boolean) -> a
    150:151:java.lang.Object getKeyAt(int) -> b
    155:156:java.lang.Object getValueAt(int) -> c
    160:160:java.lang.Object firstKey() -> a
    164:164:java.lang.Object firstValue() -> b
    168:170:void setKey(int,java.lang.Object) -> a
    173:175:void setValue(int,java.lang.Object) -> b
    178:189:void insert(int,java.lang.Object,java.lang.Object) -> a
    192:201:boolean containsKey(java.lang.Object) -> b
    206:215:boolean containsValue(java.lang.Object,boolean) -> a
    219:227:int indexOfKey(java.lang.Object) -> c
    231:239:int indexOfValue(java.lang.Object,boolean) -> b
    243:261:java.lang.Object removeKey(java.lang.Object) -> d
    265:281:boolean removeValue(java.lang.Object,boolean) -> c
    286:298:void removeIndex(int) -> a
    302:302:java.lang.Object peekKey() -> c
    307:307:java.lang.Object peekValue() -> d
    311:318:void clear() -> e
    323:324:void shrink() -> f
    329:331:void ensureCapacity(int) -> d
    334:341:void resize(int) -> e
    344:354:void reverse() -> g
    357:367:void shuffle() -> h
    372:378:void truncate(int) -> f
    381:396:java.lang.String toString() -> toString
    402:406:com.badlogic.gdx.utils.ArrayMap$Entries entries() -> i
    412:416:com.badlogic.gdx.utils.ArrayMap$Values values() -> j
    422:426:com.badlogic.gdx.utils.ArrayMap$Keys keys() -> k
com.badlogic.gdx.utils.ArrayMap$Entries -> com.badlogic.gdx.utils.ArrayMap$Entries:
    com.badlogic.gdx.utils.ArrayMap map -> c
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> a
    int index -> b
    439:439:boolean hasNext() -> hasNext
    443:443:java.util.Iterator iterator() -> iterator
    447:450:com.badlogic.gdx.utils.ObjectMap$Entry next() -> b
    454:456:void remove() -> remove
    459:460:void reset() -> a
    429:429:java.lang.Object next() -> next
com.badlogic.gdx.utils.ArrayMap$Keys -> com.badlogic.gdx.utils.ArrayMap$Keys:
    com.badlogic.gdx.utils.ArrayMap map -> b
    int index -> a
    503:503:boolean hasNext() -> hasNext
    507:507:java.util.Iterator iterator() -> iterator
    511:512:java.lang.Object next() -> next
    516:518:void remove() -> remove
    521:522:void reset() -> a
com.badlogic.gdx.utils.ArrayMap$Values -> com.badlogic.gdx.utils.ArrayMap$Values:
    com.badlogic.gdx.utils.ArrayMap map -> b
    int index -> a
    472:472:boolean hasNext() -> hasNext
    476:476:java.util.Iterator iterator() -> iterator
    480:481:java.lang.Object next() -> next
    485:487:void remove() -> remove
    490:491:void reset() -> a
com.badlogic.gdx.utils.AtomicQueue -> com.badlogic.gdx.utils.AtomicQueue:
    java.util.concurrent.atomic.AtomicInteger writeIndex -> a
    java.util.concurrent.atomic.AtomicInteger readIndex -> b
    java.util.concurrent.atomic.AtomicReferenceArray queue -> c
    41:41:int next(int) -> a
    45:51:boolean put(java.lang.Object) -> a
    55:60:java.lang.Object poll() -> a
com.badlogic.gdx.utils.Base64Coder -> com.badlogic.gdx.utils.Base64Coder:
    java.lang.String systemLineSeparator -> a
    char[] map1 -> b
    byte[] map2 -> c
    63:63:java.lang.String encodeString(java.lang.String) -> a
    72:72:java.lang.String encodeLines(byte[]) -> b
    84:96:java.lang.String encodeLines$5263488f(byte[],int,java.lang.String) -> a
    104:104:char[] encode(byte[]) -> a
    113:113:char[] encode(byte[],int) -> a
    123:144:char[] encode(byte[],int,int) -> a
    153:153:java.lang.String decodeString(java.lang.String) -> b
    163:169:byte[] decodeLines(java.lang.String) -> d
    178:178:byte[] decode(java.lang.String) -> c
    187:187:byte[] decode(char[]) -> a
    198:226:byte[] decode$7f814ca0(char[],int) -> a
com.badlogic.gdx.utils.BinaryHeap -> com.badlogic.gdx.utils.BinaryHeap:
    int size -> a
    com.badlogic.gdx.utils.BinaryHeap$Node[] nodes -> b
    boolean isMaxHeap -> c
    37:46:com.badlogic.gdx.utils.BinaryHeap$Node add(com.badlogic.gdx.utils.BinaryHeap$Node) -> a
    50:51:com.badlogic.gdx.utils.BinaryHeap$Node peek() -> a
    55:60:com.badlogic.gdx.utils.BinaryHeap$Node pop() -> b
    64:70:void setValue(com.badlogic.gdx.utils.BinaryHeap$Node,float) -> a
    73:88:void up(int) -> a
    91:133:void down(int) -> b
    136:146:java.lang.String toString() -> toString
com.badlogic.gdx.utils.BinaryHeap$Node -> com.badlogic.gdx.utils.BinaryHeap$Node:
    float value -> a
    int index -> b
    159:159:float getValue() -> a
com.badlogic.gdx.utils.BooleanArray -> com.badlogic.gdx.utils.BooleanArray:
    boolean[] items -> a
    int size -> b
    boolean ordered -> c
    78:81:void add(boolean) -> a
    84:85:void addAll(com.badlogic.gdx.utils.BooleanArray) -> a
    88:91:void addAll$6b507241(com.badlogic.gdx.utils.BooleanArray,int) -> a
    94:95:void addAll(boolean[]) -> a
    98:103:void addAll$1ba7338c(boolean[],int) -> a
    106:107:boolean get(int) -> a
    111:113:void set(int,boolean) -> a
    116:124:void insert(int,boolean) -> b
    127:133:void swap(int,int) -> a
    137:145:boolean removeIndex(int) -> b
    151:164:boolean removeAll(com.badlogic.gdx.utils.BooleanArray) -> b
    169:169:boolean pop() -> a
    174:174:boolean peek() -> b
    179:179:boolean first() -> c
    183:184:void clear() -> d
    189:190:void shrink() -> e
    196:198:boolean[] ensureCapacity(int) -> c
    202:206:boolean[] resize(int) -> d
    210:216:void reverse() -> f
    219:225:void shuffle() -> g
    230:231:void truncate(int) -> e
    235:236:boolean random() -> h
    240:242:boolean[] toArray() -> i
    246:253:boolean equals(java.lang.Object) -> equals
    257:267:java.lang.String toString() -> toString
    271:279:java.lang.String toString(java.lang.String) -> a
com.badlogic.gdx.utils.BufferUtils -> com.badlogic.gdx.utils.BufferUtils:
    com.badlogic.gdx.utils.Array unsafeBuffers -> a
    int allocatedUnsafe -> b
    47:53:void copy(float[],java.nio.Buffer,int,int) -> a
    65:67:void copy$923abf1(byte[],java.nio.Buffer,int) -> a
    79:81:void copy(short[],int,java.nio.Buffer,int) -> a
    93:95:void copy(char[],int,java.nio.Buffer,int) -> a
    107:109:void copy(int[],int,java.nio.Buffer,int) -> a
    121:123:void copy(long[],int,java.nio.Buffer,int) -> a
    135:137:void copy(float[],int,java.nio.Buffer,int) -> a
    149:151:void copy(double[],int,java.nio.Buffer,int) -> a
    163:166:void copy(java.nio.Buffer,java.nio.Buffer,int) -> a
    169:184:int positionInBytes(java.nio.Buffer) -> a
    188:203:int bytesToElements(java.nio.Buffer,int) -> a
    207:222:int elementsToBytes(java.nio.Buffer,int) -> b
    226:228:java.nio.FloatBuffer newFloatBuffer(int) -> a
    232:234:java.nio.DoubleBuffer newDoubleBuffer(int) -> d
    238:240:java.nio.ByteBuffer newByteBuffer(int) -> b
    244:246:java.nio.ShortBuffer newShortBuffer(int) -> e
    250:252:java.nio.CharBuffer newCharBuffer(int) -> f
    256:258:java.nio.IntBuffer newIntBuffer$ba72910() -> a
    262:264:java.nio.LongBuffer newLongBuffer(int) -> g
    275:282:void disposeUnsafeByteBuffer(java.nio.ByteBuffer) -> a
    288:294:java.nio.ByteBuffer newUnsafeByteBuffer(int) -> c
    303:303:long getUnsafeBufferAddress(java.nio.Buffer) -> b
    314:318:java.nio.ByteBuffer newUnsafeByteBuffer(java.nio.ByteBuffer) -> b
    325:325:int getAllocatedBytesUnsafe() -> b
    void freeMemory(java.nio.ByteBuffer) -> freeMemory
    java.nio.ByteBuffer newDisposableByteBuffer(int) -> newDisposableByteBuffer
    long getBufferAddress(java.nio.Buffer) -> getBufferAddress
    void clear(java.nio.ByteBuffer,int) -> clear
    void copyJni(float[],java.nio.Buffer,int,int) -> copyJni
    void copyJni(byte[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(char[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(short[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(int[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(long[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(float[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(double[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int) -> copyJni
com.badlogic.gdx.utils.CharArray -> com.badlogic.gdx.utils.CharArray:
    char[] items -> a
    int size -> b
    boolean ordered -> c
    76:79:void add(char) -> a
    82:83:void addAll(com.badlogic.gdx.utils.CharArray) -> a
    86:89:void addAll$792de6e5(com.badlogic.gdx.utils.CharArray,int) -> a
    92:93:void addAll(char[]) -> a
    96:101:void addAll$1ceb5023(char[],int) -> a
    104:105:char get(int) -> a
    109:111:void set(int,char) -> a
    114:122:void insert(int,char) -> b
    125:131:void swap(int,int) -> a
    134:138:boolean contains(char) -> b
    142:145:int indexOf(char) -> c
    149:152:int lastIndexOf(char) -> d
    156:163:boolean removeValue(char) -> e
    168:176:char removeIndex(int) -> b
    182:195:boolean removeAll(com.badlogic.gdx.utils.CharArray) -> b
    200:200:char pop() -> a
    205:205:char peek() -> b
    210:210:char first() -> c
    214:215:void clear() -> d
    220:221:void shrink() -> e
    227:229:char[] ensureCapacity(int) -> c
    233:237:char[] resize(int) -> d
    241:242:void sort() -> f
    245:251:void reverse() -> g
    254:260:void shuffle() -> h
    265:266:void truncate(int) -> e
    270:271:char random() -> i
    275:277:char[] toArray() -> j
    281:288:boolean equals(java.lang.Object) -> equals
    292:302:java.lang.String toString() -> toString
    306:314:java.lang.String toString(java.lang.String) -> a
com.badlogic.gdx.utils.Clipboard -> com.badlogic.gdx.utils.Clipboard:
    java.lang.String getContents() -> getContents
    void setContents(java.lang.String) -> setContents
com.badlogic.gdx.utils.ComparableTimSort -> com.badlogic.gdx.utils.ComparableTimSort:
    int MIN_MERGE -> a
    java.lang.Object[] a -> b
    int MIN_GALLOP -> c
    int minGallop -> d
    int INITIAL_TMP_STORAGE_LENGTH -> e
    java.lang.Object[] tmp -> f
    int stackSize -> g
    int[] runBase -> h
    int[] runLen -> i
    boolean DEBUG -> j
    76:117:void doSort(java.lang.Object[],int,int) -> a
    148:149:void sort(java.lang.Object[]) -> a
    152:191:void sort(java.lang.Object[],int,int) -> b
    206:245:void binarySort(java.lang.Object[],int,int,int) -> a
    268:281:int countRunAndMakeAscending(java.lang.Object[],int,int) -> c
    290:296:void reverseRange(java.lang.Object[],int,int) -> d
    313:318:int minRunLength(int) -> a
    326:329:void pushRun(int,int) -> a
    338:349:void mergeCollapse() -> a
    353:358:void mergeForceCollapse() -> b
    370:411:void mergeAt(int) -> b
    428:476:int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int) -> a
    492:540:int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int) -> b
    559:649:void mergeLo(int,int,int,int) -> a
    663:756:void mergeHi(int,int,int,int) -> b
    764:782:java.lang.Object[] ensureCapacity(int) -> c
    793:796:void rangeCheck$4868d30e(int,int) -> b
com.badlogic.gdx.utils.DataInput -> com.badlogic.gdx.utils.DataInput:
    char[] chars -> a
    33:51:int readInt$1385f2() -> a
    57:77:java.lang.String readString() -> b
    81:105:void readUtf8_slow(int,int,int) -> a
com.badlogic.gdx.utils.DataOutput -> com.badlogic.gdx.utils.DataOutput:
    33:55:int writeInt$2563259(int) -> a
    61:79:void writeString(java.lang.String) -> a
    82:95:void writeString_slow(java.lang.String,int,int) -> a
com.badlogic.gdx.utils.DelayedRemovalArray -> com.badlogic.gdx.utils.DelayedRemovalArray:
    boolean iterating -> d
    com.badlogic.gdx.utils.IntArray remove -> e
    65:66:void begin() -> j
    69:72:void end() -> k
    75:84:void remove(int) -> f
    87:93:boolean removeValue(java.lang.Object,boolean) -> b
    97:101:java.lang.Object removeIndex(int) -> b
    105:107:void set(int,java.lang.Object) -> a
    110:112:void insert(int,java.lang.Object) -> b
    115:117:void swap(int,int) -> a
    120:121:java.lang.Object pop() -> a
    125:127:void clear() -> d
    130:132:void sort() -> f
    135:137:void sort(java.util.Comparator) -> a
    140:142:void reverse() -> g
    145:147:void shuffle() -> h
    150:152:void truncate(int) -> e
com.badlogic.gdx.utils.Disposable -> com.badlogic.gdx.utils.Disposable:
    void dispose() -> dispose
com.badlogic.gdx.utils.FloatArray -> com.badlogic.gdx.utils.FloatArray:
    float[] items -> a
    int size -> b
    boolean ordered -> c
    76:79:void add(float) -> a
    82:83:void addAll(com.badlogic.gdx.utils.FloatArray) -> a
    86:89:void addAll$4e402e0b(com.badlogic.gdx.utils.FloatArray,int) -> a
    92:93:void addAll(float[]) -> a
    96:101:void addAll$1cc109a0(float[],int) -> a
    104:105:float get(int) -> a
    109:111:void set(int,float) -> a
    114:122:void insert(int,float) -> b
    125:131:void swap(int,int) -> a
    134:138:boolean contains(float) -> b
    142:145:int indexOf(float) -> c
    149:152:int lastIndexOf(char) -> a
    156:163:boolean removeValue(float) -> d
    168:176:float removeIndex(int) -> b
    182:195:boolean removeAll(com.badlogic.gdx.utils.FloatArray) -> b
    200:200:float pop() -> b
    205:205:float peek() -> c
    210:210:float first() -> d
    214:215:void clear() -> a
    220:221:void shrink() -> e
    227:229:float[] ensureCapacity(int) -> c
    233:237:float[] resize(int) -> d
    241:242:void sort() -> f
    245:251:void reverse() -> g
    254:260:void shuffle() -> h
    265:266:void truncate(int) -> e
    270:271:float random() -> i
    275:277:float[] toArray() -> j
    281:288:boolean equals(java.lang.Object) -> equals
    292:302:java.lang.String toString() -> toString
    306:314:java.lang.String toString(java.lang.String) -> a
com.badlogic.gdx.utils.GdxBuild -> com.badlogic.gdx.utils.GdxBuild:
    30:54:void main$3231c38a() -> a
com.badlogic.gdx.utils.GdxNativesLoader -> com.badlogic.gdx.utils.GdxNativesLoader:
    boolean disableNativesLoading -> a
    boolean nativesLoaded -> b
    26:35:void load() -> a
com.badlogic.gdx.utils.GdxRuntimeException -> com.badlogic.gdx.utils.GdxRuntimeException:
    long serialVersionUID -> serialVersionUID
com.badlogic.gdx.utils.GwtModuleGenerator -> com.badlogic.gdx.utils.GwtModuleGenerator:
    34:48:void gatherJavaFiles(com.badlogic.gdx.files.FileHandle,java.util.Set,java.util.Map,boolean) -> a
    51:124:void main$3231c38a() -> a
com.badlogic.gdx.utils.IdentityMap -> com.badlogic.gdx.utils.IdentityMap:
    int PRIME1 -> f
    int PRIME2 -> g
    int PRIME3 -> h
    int size -> a
    java.lang.Object[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> i
    int hashShift -> j
    int mask -> k
    int threshold -> l
    int stashCapacity -> m
    int pushIterations -> n
    com.badlogic.gdx.utils.IdentityMap$Entries entries -> o
    com.badlogic.gdx.utils.IdentityMap$Values values -> p
    com.badlogic.gdx.utils.IdentityMap$Keys keys -> q
    85:146:java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    152:181:void putResize(java.lang.Object,java.lang.Object) -> b
    184:251:void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    254:266:void putStash(java.lang.Object,java.lang.Object) -> c
    269:278:java.lang.Object get(java.lang.Object) -> a
    282:291:java.lang.Object get(java.lang.Object,java.lang.Object) -> d
    295:298:java.lang.Object getStash(java.lang.Object,java.lang.Object) -> e
    302:330:java.lang.Object remove(java.lang.Object) -> b
    334:343:java.lang.Object removeStash(java.lang.Object) -> c
    348:356:void removeStashIndex(int) -> a
    359:367:void clear() -> a
    374:386:boolean containsValue(java.lang.Object,boolean) -> a
    390:399:boolean containsKey(java.lang.Object) -> d
    403:406:boolean containsKeyStash(java.lang.Object) -> e
    414:426:java.lang.Object findKey(java.lang.Object,boolean) -> b
    432:434:void ensureCapacity(int) -> b
    437:458:void resize(int) -> c
    461:462:int hash2(int) -> d
    466:467:int hash3(int) -> e
    471:494:java.lang.String toString() -> toString
    500:504:com.badlogic.gdx.utils.IdentityMap$Entries entries() -> b
    510:514:com.badlogic.gdx.utils.IdentityMap$Values values() -> c
    520:524:com.badlogic.gdx.utils.IdentityMap$Keys keys() -> d
com.badlogic.gdx.utils.IdentityMap$Entries -> com.badlogic.gdx.utils.IdentityMap$Entries:
    com.badlogic.gdx.utils.IdentityMap$Entry entry -> e
    586:592:com.badlogic.gdx.utils.IdentityMap$Entry next() -> c
    596:596:boolean hasNext() -> hasNext
    600:600:java.util.Iterator iterator() -> iterator
    577:577:void remove() -> remove
    577:577:void reset() -> a
    577:577:java.lang.Object next() -> next
com.badlogic.gdx.utils.IdentityMap$Entry -> com.badlogic.gdx.utils.IdentityMap$Entry:
    java.lang.Object key -> a
    java.lang.Object value -> b
    532:532:java.lang.String toString() -> toString
com.badlogic.gdx.utils.IdentityMap$Keys -> com.badlogic.gdx.utils.IdentityMap$Keys:
    645:645:boolean hasNext() -> hasNext
    649:652:java.lang.Object next() -> next
    656:656:java.util.Iterator iterator() -> iterator
    661:664:com.badlogic.gdx.utils.Array toArray() -> c
    639:639:void remove() -> remove
    639:639:void reset() -> a
com.badlogic.gdx.utils.IdentityMap$MapIterator -> com.badlogic.gdx.utils.IdentityMap$MapIterator:
    boolean hasNext -> a
    com.badlogic.gdx.utils.IdentityMap map -> b
    int nextIndex -> c
    int currentIndex -> d
    548:551:void reset() -> a
    554:559:void findNextIndex() -> b
    565:574:void remove() -> remove
com.badlogic.gdx.utils.IdentityMap$Values -> com.badlogic.gdx.utils.IdentityMap$Values:
    610:610:boolean hasNext() -> hasNext
    614:617:java.lang.Object next() -> next
    621:621:java.util.Iterator iterator() -> iterator
    626:629:com.badlogic.gdx.utils.Array toArray() -> c
    634:636:void toArray(com.badlogic.gdx.utils.Array) -> a
    604:604:void remove() -> remove
    604:604:void reset() -> a
com.badlogic.gdx.utils.IntArray -> com.badlogic.gdx.utils.IntArray:
    int[] items -> a
    int size -> b
    boolean ordered -> c
    76:79:void add(int) -> a
    82:83:void addAll(com.badlogic.gdx.utils.IntArray) -> a
    86:89:void addAll$75c2648(com.badlogic.gdx.utils.IntArray,int) -> a
    92:93:void addAll(int[]) -> a
    96:101:void addAll$1c96c31d(int[],int) -> a
    104:105:int get(int) -> b
    109:111:void set(int,int) -> b
    114:122:void insert(int,int) -> a
    125:131:void swap(int,int) -> c
    134:138:boolean contains(int) -> c
    142:145:int indexOf(int) -> d
    149:152:int lastIndexOf(int) -> e
    156:163:boolean removeValue(int) -> f
    168:176:int removeIndex(int) -> g
    182:195:boolean removeAll(com.badlogic.gdx.utils.IntArray) -> b
    200:200:int pop() -> a
    205:205:int peek() -> d
    210:210:int first() -> e
    214:215:void clear() -> b
    220:221:void shrink() -> c
    227:229:int[] ensureCapacity(int) -> h
    233:237:int[] resize(int) -> i
    241:242:void sort() -> f
    245:251:void reverse() -> g
    254:260:void shuffle() -> h
    265:266:void truncate(int) -> j
    270:271:int random() -> i
    275:277:int[] toArray() -> j
    281:288:boolean equals(java.lang.Object) -> equals
    292:302:java.lang.String toString() -> toString
    306:314:java.lang.String toString(java.lang.String) -> a
com.badlogic.gdx.utils.IntFloatMap -> com.badlogic.gdx.utils.IntFloatMap:
    int PRIME1 -> h
    int PRIME2 -> i
    int PRIME3 -> j
    int EMPTY -> k
    int size -> a
    int[] keyTable -> b
    float[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float zeroValue -> f
    boolean hasZeroValue -> g
    float loadFactor -> l
    int hashShift -> m
    int mask -> n
    int threshold -> o
    int stashCapacity -> p
    int pushIterations -> q
    com.badlogic.gdx.utils.IntFloatMap$Entries entries -> r
    com.badlogic.gdx.utils.IntFloatMap$Values values -> s
    com.badlogic.gdx.utils.IntFloatMap$Keys keys -> t
    88:152:void put(int,float) -> a
    155:157:void putAll(com.badlogic.gdx.utils.IntFloatMap) -> a
    161:196:void putResize(int,float) -> b
    199:265:void push(int,float,int,int,int,int,int,int) -> a
    268:280:void putStash(int,float) -> c
    284:293:float get(int,float) -> d
    297:300:float getStash(int,float) -> e
    306:316:float getAndIncrement(int,float,float) -> a
    320:328:float getAndIncrementStash(int,float,float) -> b
    332:363:float remove(int,float) -> f
    367:376:float removeStash(int,float) -> g
    381:387:void removeStashIndex(int) -> a
    390:395:void clear() -> a
    400:404:boolean containsValue(float) -> a
    410:414:boolean containsValue(float,float) -> a
    418:427:boolean containsKey(int) -> b
    431:434:boolean containsKeyStash(int) -> c
    440:444:int findKey(float,int) -> a
    450:452:void ensureCapacity(int) -> d
    455:476:void resize(int) -> e
    479:480:int hash2(int) -> f
    484:485:int hash3(int) -> g
    489:517:java.lang.String toString() -> toString
    523:527:com.badlogic.gdx.utils.IntFloatMap$Entries entries() -> b
    533:537:com.badlogic.gdx.utils.IntFloatMap$Values values() -> c
    543:547:com.badlogic.gdx.utils.IntFloatMap$Keys keys() -> d
com.badlogic.gdx.utils.IntFloatMap$Entries -> com.badlogic.gdx.utils.IntFloatMap$Entries:
    com.badlogic.gdx.utils.IntFloatMap$Entry entry -> g
    617:628:com.badlogic.gdx.utils.IntFloatMap$Entry next() -> c
    632:632:boolean hasNext() -> hasNext
    636:636:java.util.Iterator iterator() -> iterator
    608:608:void remove() -> remove
    608:608:void reset() -> a
    608:608:java.lang.Object next() -> next
com.badlogic.gdx.utils.IntFloatMap$Entry -> com.badlogic.gdx.utils.IntFloatMap$Entry:
    int key -> a
    float value -> b
    555:555:java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntFloatMap$Keys -> com.badlogic.gdx.utils.IntFloatMap$Keys:
    675:675:boolean hasNext() -> c
    679:682:int next() -> d
    687:690:com.badlogic.gdx.utils.IntArray toArray() -> e
    669:669:void remove() -> remove
    669:669:void reset() -> a
com.badlogic.gdx.utils.IntFloatMap$MapIterator -> com.badlogic.gdx.utils.IntFloatMap$MapIterator:
    int INDEX_ILLEGAL -> a
    int INDEX_ZERO -> b
    boolean hasNext -> c
    com.badlogic.gdx.utils.IntFloatMap map -> d
    int nextIndex -> e
    int currentIndex -> f
    574:580:void reset() -> a
    583:588:void findNextIndex() -> b
    594:605:void remove() -> remove
com.badlogic.gdx.utils.IntFloatMap$Values -> com.badlogic.gdx.utils.IntFloatMap$Values:
    646:646:boolean hasNext() -> c
    651:657:float next() -> d
    662:665:com.badlogic.gdx.utils.FloatArray toArray() -> e
    640:640:void remove() -> remove
    640:640:void reset() -> a
com.badlogic.gdx.utils.IntIntMap -> com.badlogic.gdx.utils.IntIntMap:
    int PRIME1 -> h
    int PRIME2 -> i
    int PRIME3 -> j
    int EMPTY -> k
    int size -> a
    int[] keyTable -> b
    int[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    int zeroValue -> f
    boolean hasZeroValue -> g
    float loadFactor -> l
    int hashShift -> m
    int mask -> n
    int threshold -> o
    int stashCapacity -> p
    int pushIterations -> q
    com.badlogic.gdx.utils.IntIntMap$Entries entries -> r
    com.badlogic.gdx.utils.IntIntMap$Values values -> s
    com.badlogic.gdx.utils.IntIntMap$Keys keys -> t
    89:153:void put(int,int) -> a
    156:158:void putAll(com.badlogic.gdx.utils.IntIntMap) -> a
    162:197:void putResize(int,int) -> b
    200:266:void push(int,int,int,int,int,int,int,int) -> a
    269:281:void putStash(int,int) -> c
    285:294:int get(int,int) -> d
    298:301:int getStash(int,int) -> e
    307:317:int getAndIncrement(int,int,int) -> a
    321:329:int getAndIncrementStash(int,int,int) -> b
    333:364:int remove(int,int) -> f
    368:377:int removeStash(int,int) -> g
    382:388:void removeStashIndex(int) -> a
    391:396:void clear() -> a
    401:405:boolean containsValue(int) -> b
    409:418:boolean containsKey(int) -> c
    422:425:boolean containsKeyStash(int) -> d
    431:435:int findKey(int,int) -> h
    441:443:void ensureCapacity(int) -> e
    446:467:void resize(int) -> f
    470:471:int hash2(int) -> g
    475:476:int hash3(int) -> h
    480:508:java.lang.String toString() -> toString
    514:518:com.badlogic.gdx.utils.IntIntMap$Entries entries() -> b
    524:528:com.badlogic.gdx.utils.IntIntMap$Values values() -> c
    534:538:com.badlogic.gdx.utils.IntIntMap$Keys keys() -> d
com.badlogic.gdx.utils.IntIntMap$Entries -> com.badlogic.gdx.utils.IntIntMap$Entries:
    com.badlogic.gdx.utils.IntIntMap$Entry entry -> g
    608:619:com.badlogic.gdx.utils.IntIntMap$Entry next() -> c
    623:623:boolean hasNext() -> hasNext
    627:627:java.util.Iterator iterator() -> iterator
    599:599:void remove() -> remove
    599:599:void reset() -> a
    599:599:java.lang.Object next() -> next
com.badlogic.gdx.utils.IntIntMap$Entry -> com.badlogic.gdx.utils.IntIntMap$Entry:
    int key -> a
    int value -> b
    546:546:java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntIntMap$Keys -> com.badlogic.gdx.utils.IntIntMap$Keys:
    666:666:boolean hasNext() -> c
    670:673:int next() -> d
    678:681:com.badlogic.gdx.utils.IntArray toArray() -> e
    660:660:void remove() -> remove
    660:660:void reset() -> a
com.badlogic.gdx.utils.IntIntMap$MapIterator -> com.badlogic.gdx.utils.IntIntMap$MapIterator:
    int INDEX_ILLEGAL -> a
    int INDEX_ZERO -> b
    boolean hasNext -> c
    com.badlogic.gdx.utils.IntIntMap map -> d
    int nextIndex -> e
    int currentIndex -> f
    565:571:void reset() -> a
    574:579:void findNextIndex() -> b
    585:596:void remove() -> remove
com.badlogic.gdx.utils.IntIntMap$Values -> com.badlogic.gdx.utils.IntIntMap$Values:
    637:637:boolean hasNext() -> c
    642:648:int next() -> d
    653:656:com.badlogic.gdx.utils.IntArray toArray() -> e
    631:631:void remove() -> remove
    631:631:void reset() -> a
com.badlogic.gdx.utils.IntMap -> com.badlogic.gdx.utils.IntMap:
    int PRIME1 -> h
    int PRIME2 -> i
    int PRIME3 -> j
    int EMPTY -> k
    int size -> a
    int[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    java.lang.Object zeroValue -> f
    boolean hasZeroValue -> g
    float loadFactor -> l
    int hashShift -> m
    int mask -> n
    int threshold -> o
    int stashCapacity -> p
    int pushIterations -> q
    com.badlogic.gdx.utils.IntMap$Entries entries -> r
    com.badlogic.gdx.utils.IntMap$Values values -> s
    com.badlogic.gdx.utils.IntMap$Keys keys -> t
    87:156:java.lang.Object put(int,java.lang.Object) -> a
    160:162:void putAll(com.badlogic.gdx.utils.IntMap) -> a
    166:201:void putResize(int,java.lang.Object) -> b
    204:271:void push(int,java.lang.Object,int,int,int,int,int,int) -> a
    274:286:void putStash(int,java.lang.Object) -> c
    289:298:java.lang.Object get(int) -> a
    302:311:java.lang.Object get(int,java.lang.Object) -> d
    315:318:java.lang.Object getStash(int,java.lang.Object) -> e
    322:358:java.lang.Object remove(int) -> b
    362:371:java.lang.Object removeStash(int) -> e
    376:384:void removeStashIndex(int) -> c
    387:397:void clear() -> b
    404:419:boolean containsValue(java.lang.Object,boolean) -> a
    423:432:boolean containsKey(int) -> d
    436:439:boolean containsKeyStash(int) -> f
    447:462:int findKey(java.lang.Object,boolean,int) -> a
    468:470:void ensureCapacity(int) -> g
    473:494:void resize(int) -> h
    497:498:int hash2(int) -> i
    502:503:int hash3(int) -> j
    507:535:java.lang.String toString() -> toString
    541:545:com.badlogic.gdx.utils.IntMap$Entries entries() -> c
    551:555:com.badlogic.gdx.utils.IntMap$Values values() -> a
    561:565:com.badlogic.gdx.utils.IntMap$Keys keys() -> d
com.badlogic.gdx.utils.IntMap$Entries -> com.badlogic.gdx.utils.IntMap$Entries:
    com.badlogic.gdx.utils.IntMap$Entry entry -> g
    637:648:com.badlogic.gdx.utils.IntMap$Entry next() -> c
    652:652:boolean hasNext() -> hasNext
    656:656:java.util.Iterator iterator() -> iterator
    628:628:void remove() -> remove
    628:628:void reset() -> a
    628:628:java.lang.Object next() -> next
com.badlogic.gdx.utils.IntMap$Entry -> com.badlogic.gdx.utils.IntMap$Entry:
    int key -> a
    java.lang.Object value -> b
    573:573:java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntMap$Keys -> com.badlogic.gdx.utils.IntMap$Keys:
    699:702:int next() -> c
    707:710:com.badlogic.gdx.utils.IntArray toArray() -> d
    693:693:void remove() -> remove
    693:693:void reset() -> a
com.badlogic.gdx.utils.IntMap$MapIterator -> com.badlogic.gdx.utils.IntMap$MapIterator:
    int INDEX_ILLEGAL -> a
    int INDEX_ZERO -> b
    boolean hasNext -> c
    com.badlogic.gdx.utils.IntMap map -> d
    int nextIndex -> e
    int currentIndex -> f
    592:598:void reset() -> a
    601:606:void findNextIndex() -> b
    612:625:void remove() -> remove
com.badlogic.gdx.utils.IntMap$Values -> com.badlogic.gdx.utils.IntMap$Values:
    666:666:boolean hasNext() -> hasNext
    671:677:java.lang.Object next() -> next
    681:681:java.util.Iterator iterator() -> iterator
    686:689:com.badlogic.gdx.utils.Array toArray() -> c
    660:660:void remove() -> remove
    660:660:void reset() -> a
com.badlogic.gdx.utils.Json -> com.badlogic.gdx.utils.Json:
    boolean debug -> debug
    com.badlogic.gdx.utils.JsonWriter writer -> writer
    java.lang.String typeName -> typeName
    boolean usePrototypes -> usePrototypes
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> outputType
    com.badlogic.gdx.utils.ObjectMap typeToFields -> typeToFields
    com.badlogic.gdx.utils.ObjectMap tagToClass -> tagToClass
    com.badlogic.gdx.utils.ObjectMap classToTag -> classToTag
    com.badlogic.gdx.utils.ObjectMap classToSerializer -> classToSerializer
    com.badlogic.gdx.utils.ObjectMap classToDefaultValues -> classToDefaultValues
    boolean ignoreUnknownFields -> ignoreUnknownFields
    65:66:void setIgnoreUnknownFields(boolean) -> setIgnoreUnknownFields
    69:70:void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType) -> setOutputType
    73:75:void addClassTag(java.lang.String,java.lang.Class) -> addClassTag
    78:83:java.lang.Class getClass(java.lang.String) -> getClass
    88:90:java.lang.String getTag(java.lang.Class) -> getTag
    96:97:void setTypeName(java.lang.String) -> setTypeName
    100:101:void setSerializer(java.lang.Class,com.badlogic.gdx.utils.Json$Serializer) -> setSerializer
    104:104:com.badlogic.gdx.utils.Json$Serializer getSerializer(java.lang.Class) -> getSerializer
    108:109:void setUsePrototypes(boolean) -> setUsePrototypes
    112:117:void setElementType(java.lang.Class,java.lang.String,java.lang.Class) -> setElementType
    120:147:com.badlogic.gdx.utils.ObjectMap cacheFields(java.lang.Class) -> cacheFields
    151:151:java.lang.String toJson(java.lang.Object) -> toJson
    155:155:java.lang.String toJson(java.lang.Object,java.lang.Class) -> toJson
    161:163:java.lang.String toJson(java.lang.Object,java.lang.Class,java.lang.Class) -> toJson
    167:168:void toJson(java.lang.Object,com.badlogic.gdx.files.FileHandle) -> toJson
    172:173:void toJson(java.lang.Object,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> toJson
    178:188:void toJson(java.lang.Object,java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> toJson
    193:194:void toJson(java.lang.Object,java.io.Writer) -> toJson
    198:199:void toJson(java.lang.Object,java.lang.Class,java.io.Writer) -> toJson
    204:212:void toJson(java.lang.Object,java.lang.Class,java.lang.Class,java.io.Writer) -> toJson
    217:248:void writeFields(java.lang.Object) -> writeFields
    252:283:java.lang.Object[] getDefaultValues(java.lang.Class) -> getDefaultValues
    288:289:void writeField(java.lang.Object,java.lang.String) -> writeField
    293:294:void writeField(java.lang.Object,java.lang.String,java.lang.Class) -> writeField
    297:298:void writeField(java.lang.Object,java.lang.String,java.lang.String) -> writeField
    302:321:void writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class) -> writeField
    328:336:void writeValue(java.lang.String,java.lang.Object) -> writeValue
    342:347:void writeValue(java.lang.String,java.lang.Object,java.lang.Class) -> writeValue
    354:359:void writeValue(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Class) -> writeValue
    363:367:void writeValue(java.lang.Object) -> writeValue
    372:373:void writeValue(java.lang.Object,java.lang.Class) -> writeValue
    380:495:void writeValue(java.lang.Object,java.lang.Class,java.lang.Class) -> writeValue
    501:506:void writeObjectStart(java.lang.String) -> writeObjectStart
    511:516:void writeObjectStart(java.lang.String,java.lang.Class,java.lang.Class) -> writeObjectStart
    520:522:void writeObjectStart() -> writeObjectStart
    529:534:void writeObjectStart(java.lang.Class,java.lang.Class) -> writeObjectStart
    538:540:void writeObjectEnd() -> writeObjectEnd
    546:549:void writeArrayStart(java.lang.String) -> writeArrayStart
    555:557:void writeArrayStart() -> writeArrayStart
    563:565:void writeArrayEnd() -> writeArrayEnd
    570:576:void writeType(java.lang.Class) -> writeType
    584:584:java.lang.Object fromJson(java.lang.Class,java.io.Reader) -> fromJson
    591:591:java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.Reader) -> fromJson
    597:597:java.lang.Object fromJson(java.lang.Class,java.io.InputStream) -> fromJson
    604:604:java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.InputStream) -> fromJson
    611:613:java.lang.Object fromJson(java.lang.Class,com.badlogic.gdx.files.FileHandle) -> fromJson
    622:624:java.lang.Object fromJson(java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> fromJson
    631:631:java.lang.Object fromJson(java.lang.Class,char[],int,int) -> fromJson
    638:638:java.lang.Object fromJson(java.lang.Class,java.lang.Class,char[],int,int) -> fromJson
    644:644:java.lang.Object fromJson(java.lang.Class,java.lang.String) -> fromJson
    650:650:java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.lang.String) -> fromJson
    654:655:void readField(java.lang.Object,java.lang.String,java.lang.Object) -> readField
    658:659:void readField(java.lang.Object,java.lang.String,java.lang.Class,java.lang.Object) -> readField
    662:663:void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object) -> readField
    667:687:void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class,java.lang.Object) -> readField
    692:719:void readFields(java.lang.Object,java.lang.Object) -> readFields
    725:726:java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Object) -> readValue
    732:735:java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Object) -> readValue
    742:743:java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> readValue
    750:753:java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object,java.lang.Object) -> readValue
    760:760:java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object,java.lang.Object) -> readValue
    766:766:java.lang.Object readValue(java.lang.Class,java.lang.Object) -> readValue
    773:891:java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object) -> readValue
    895:896:java.lang.String convertToString(java.lang.Object) -> convertToString
    901:919:java.lang.Object newInstance(java.lang.Class) -> newInstance
    924:924:java.lang.String prettyPrint(java.lang.Object) -> prettyPrint
    928:928:java.lang.String prettyPrint(java.lang.String) -> prettyPrint
    932:932:java.lang.String prettyPrint(java.lang.Object,int) -> prettyPrint
    936:938:java.lang.String prettyPrint(java.lang.String,int) -> prettyPrint
    942:1008:void prettyPrint(java.lang.Object,com.badlogic.gdx.utils.StringBuilder,int,int) -> prettyPrint
    1012:1016:boolean isFlat(com.badlogic.gdx.utils.ObjectMap) -> isFlat
    1020:1025:boolean isFlat(com.badlogic.gdx.utils.Array) -> isFlat
    1029:1031:void indent(int,com.badlogic.gdx.utils.StringBuilder) -> indent
com.badlogic.gdx.utils.Json$FieldMetadata -> com.badlogic.gdx.utils.Json$FieldMetadata:
    java.lang.reflect.Field field -> a
    java.lang.Class elementType -> b
com.badlogic.gdx.utils.Json$ReadOnlySerializer -> com.badlogic.gdx.utils.Json$ReadOnlySerializer:
    1062:1062:void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
    java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
com.badlogic.gdx.utils.Json$Serializable -> com.badlogic.gdx.utils.Json$Serializable:
    void write(com.badlogic.gdx.utils.Json) -> a
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.OrderedMap) -> a
com.badlogic.gdx.utils.Json$Serializer -> com.badlogic.gdx.utils.Json$Serializer:
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
    java.lang.Object read(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> read
com.badlogic.gdx.utils.JsonReader -> com.badlogic.gdx.utils.JsonReader:
    byte[] _json_actions -> g
    short[] _json_key_offsets -> h
    char[] _json_trans_keys -> i
    byte[] _json_single_lengths -> j
    byte[] _json_range_lengths -> k
    short[] _json_index_offsets -> l
    byte[] _json_trans_targs -> m
    byte[] _json_trans_actions -> n
    byte[] _json_eof_actions -> o
    int json_start -> a
    int json_first_final -> b
    int json_error -> c
    int json_en_object -> d
    int json_en_array -> e
    int json_en_main -> f
    com.badlogic.gdx.utils.Array elements -> p
    java.lang.Object root -> q
    java.lang.Object current -> r
    37:38:java.lang.Object parse(java.lang.String) -> a
    43:62:java.lang.Object parse(java.io.Reader) -> a
    68:70:java.lang.Object parse(java.io.InputStream) -> a
    76:78:java.lang.Object parse(com.badlogic.gdx.files.FileHandle) -> a
    83:423:java.lang.Object parse(char[],int,int) -> a
    428:428:byte[] init__json_actions_0() -> a
    435:435:short[] init__json_key_offsets_0() -> b
    444:444:char[] init__json_trans_keys_0() -> c
    472:472:byte[] init__json_single_lengths_0() -> d
    480:480:byte[] init__json_range_lengths_0() -> e
    488:488:short[] init__json_index_offsets_0() -> f
    497:497:byte[] init__json_trans_targs_0() -> g
    522:522:byte[] init__json_trans_actions_0() -> h
    544:544:byte[] init__json_eof_actions_0() -> i
    565:571:void set(java.lang.String,java.lang.Object) -> a
    574:578:void startObject(java.lang.String) -> b
    581:585:void startArray(java.lang.String) -> c
    588:590:void pop() -> j
    593:594:void string(java.lang.String,java.lang.String) -> a
    597:598:void number(java.lang.String,float) -> a
    601:602:void bool(java.lang.String,boolean) -> a
    605:645:java.lang.String unescape(java.lang.String) -> d
com.badlogic.gdx.utils.JsonWriter -> com.badlogic.gdx.utils.JsonWriter:
    java.io.Writer writer -> a
    com.badlogic.gdx.utils.Array stack -> b
    com.badlogic.gdx.utils.JsonWriter$JsonObject current -> c
    boolean named -> d
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> e
    37:38:void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType) -> a
    41:49:com.badlogic.gdx.utils.JsonWriter name(java.lang.String) -> a
    53:65:com.badlogic.gdx.utils.JsonWriter object() -> a
    69:81:com.badlogic.gdx.utils.JsonWriter array() -> b
    85:97:com.badlogic.gdx.utils.JsonWriter value(java.lang.Object) -> a
    101:101:com.badlogic.gdx.utils.JsonWriter object(java.lang.String) -> c
    105:105:com.badlogic.gdx.utils.JsonWriter array(java.lang.String) -> b
    109:109:com.badlogic.gdx.utils.JsonWriter set(java.lang.String,java.lang.Object) -> a
    113:116:com.badlogic.gdx.utils.JsonWriter pop() -> c
    120:121:void write(char[],int,int) -> write
    124:125:void flush() -> flush
    128:131:void close() -> close
com.badlogic.gdx.utils.JsonWriter$1 -> com.badlogic.gdx.utils.JsonWriter$1:
    int[] $SwitchMap$com$badlogic$gdx$utils$JsonWriter$OutputType -> a
com.badlogic.gdx.utils.JsonWriter$JsonObject -> com.badlogic.gdx.utils.JsonWriter$JsonObject:
    boolean array -> a
    boolean needsComma -> b
    com.badlogic.gdx.utils.JsonWriter this$0 -> c
    143:144:void close() -> a
com.badlogic.gdx.utils.JsonWriter$OutputType -> com.badlogic.gdx.utils.JsonWriter$OutputType:
    com.badlogic.gdx.utils.JsonWriter$OutputType json -> a
    com.badlogic.gdx.utils.JsonWriter$OutputType javascript -> b
    com.badlogic.gdx.utils.JsonWriter$OutputType minimal -> c
    java.util.regex.Pattern javascriptPattern -> d
    java.util.regex.Pattern minimalValuePattern -> e
    java.util.regex.Pattern minimalNamePattern -> f
    com.badlogic.gdx.utils.JsonWriter$OutputType[] $VALUES -> g
    147:147:com.badlogic.gdx.utils.JsonWriter$OutputType[] values() -> values
    147:147:com.badlogic.gdx.utils.JsonWriter$OutputType valueOf(java.lang.String) -> valueOf
    161:166:java.lang.String quoteValue(java.lang.Object) -> a
    170:179:java.lang.String quoteName(java.lang.String) -> a
com.badlogic.gdx.utils.LittleEndianInputStream -> com.badlogic.gdx.utils.LittleEndianInputStream:
    java.io.DataInputStream din -> a
    37:38:void readFully(byte[]) -> readFully
    41:42:void readFully(byte[],int,int) -> readFully
    45:45:int skipBytes(int) -> skipBytes
    49:49:boolean readBoolean() -> readBoolean
    53:53:byte readByte() -> readByte
    57:57:int readUnsignedByte() -> readUnsignedByte
    61:63:short readShort() -> readShort
    67:69:int readUnsignedShort() -> readUnsignedShort
    73:73:char readChar() -> readChar
    77:81:int readInt() -> readInt
    85:89:long readLong() -> readLong
    95:95:float readFloat() -> readFloat
    99:99:double readDouble() -> readDouble
    103:103:java.lang.String readLine() -> readLine
    107:107:java.lang.String readUTF() -> readUTF
com.badlogic.gdx.utils.Logger -> com.badlogic.gdx.utils.Logger:
    int NONE -> a
    int ERROR -> b
    int INFO -> c
    int DEBUG -> d
    java.lang.String tag -> e
    int level -> f
    45:46:void debug(java.lang.String) -> a
    49:50:void debug(java.lang.String,java.lang.Exception) -> a
    53:54:void info(java.lang.String) -> b
    57:58:void info(java.lang.String,java.lang.Exception) -> b
    61:62:void error(java.lang.String) -> c
    65:66:void error(java.lang.String,java.lang.Throwable) -> a
    72:73:void setLevel(int) -> a
    76:76:int getLevel() -> a
com.badlogic.gdx.utils.LongArray -> com.badlogic.gdx.utils.LongArray:
    long[] items -> a
    int size -> b
    boolean ordered -> c
    76:79:void add(long) -> a
    82:83:void addAll(com.badlogic.gdx.utils.LongArray) -> a
    86:89:void addAll$49aeb3f(com.badlogic.gdx.utils.LongArray,int) -> a
    92:93:void addAll(long[]) -> a
    96:101:void addAll$1c88ab9c(long[],int) -> a
    104:105:long get(int) -> a
    109:111:void set(int,long) -> a
    114:122:void insert(int,long) -> b
    125:131:void swap(int,int) -> a
    134:138:boolean contains(long) -> b
    142:145:int indexOf(long) -> c
    149:152:int lastIndexOf(char) -> a
    156:163:boolean removeValue(long) -> d
    168:176:long removeIndex(int) -> b
    182:195:boolean removeAll(com.badlogic.gdx.utils.LongArray) -> b
    200:200:long pop() -> a
    205:205:long peek() -> b
    210:210:long first() -> c
    214:215:void clear() -> d
    220:221:void shrink() -> e
    227:229:long[] ensureCapacity(int) -> c
    233:237:long[] resize(int) -> d
    241:242:void sort() -> f
    245:251:void reverse() -> g
    254:260:void shuffle() -> h
    265:266:void truncate(int) -> e
    270:271:long random() -> i
    275:277:long[] toArray() -> j
    281:288:boolean equals(java.lang.Object) -> equals
    292:302:java.lang.String toString() -> toString
    306:314:java.lang.String toString(java.lang.String) -> a
com.badlogic.gdx.utils.LongMap -> com.badlogic.gdx.utils.LongMap:
    int PRIME1 -> h
    int PRIME2 -> i
    int PRIME3 -> j
    int EMPTY -> k
    int size -> a
    long[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    java.lang.Object zeroValue -> f
    boolean hasZeroValue -> g
    float loadFactor -> l
    int hashShift -> m
    int mask -> n
    int threshold -> o
    int stashCapacity -> p
    int pushIterations -> q
    com.badlogic.gdx.utils.LongMap$Entries entries -> r
    com.badlogic.gdx.utils.LongMap$Values values -> s
    com.badlogic.gdx.utils.LongMap$Keys keys -> t
    87:156:java.lang.Object put(long,java.lang.Object) -> a
    160:162:void putAll(com.badlogic.gdx.utils.LongMap) -> a
    166:201:void putResize(long,java.lang.Object) -> b
    204:270:void push(long,java.lang.Object,int,long,int,long,int,long) -> a
    273:285:void putStash(long,java.lang.Object) -> c
    288:297:java.lang.Object get(long) -> a
    301:310:java.lang.Object get(long,java.lang.Object) -> d
    314:317:java.lang.Object getStash(long,java.lang.Object) -> e
    321:357:java.lang.Object remove(long) -> b
    361:370:java.lang.Object removeStash(long) -> c
    375:383:void removeStashIndex(int) -> a
    386:396:void clear() -> b
    401:416:boolean containsValue(java.lang.Object,boolean) -> a
    420:429:boolean containsKey(long) -> d
    433:436:boolean containsKeyStash(long) -> e
    444:459:long findKey(java.lang.Object,boolean,long) -> a
    465:467:void ensureCapacity(int) -> b
    470:491:void resize(int) -> c
    494:495:int hash2(long) -> f
    499:500:int hash3(long) -> g
    504:527:java.lang.String toString() -> toString
    533:537:com.badlogic.gdx.utils.LongMap$Entries entries() -> c
    543:547:com.badlogic.gdx.utils.LongMap$Values values() -> a
    553:557:com.badlogic.gdx.utils.LongMap$Keys keys() -> d
com.badlogic.gdx.utils.LongMap$Entries -> com.badlogic.gdx.utils.LongMap$Entries:
    com.badlogic.gdx.utils.LongMap$Entry entry -> g
    629:640:com.badlogic.gdx.utils.LongMap$Entry next() -> c
    644:644:boolean hasNext() -> hasNext
    648:648:java.util.Iterator iterator() -> iterator
    620:620:void remove() -> remove
    620:620:void reset() -> a
    620:620:java.lang.Object next() -> next
com.badlogic.gdx.utils.LongMap$Entry -> com.badlogic.gdx.utils.LongMap$Entry:
    long key -> a
    java.lang.Object value -> b
    565:565:java.lang.String toString() -> toString
com.badlogic.gdx.utils.LongMap$Keys -> com.badlogic.gdx.utils.LongMap$Keys:
    691:694:long next() -> c
    699:702:com.badlogic.gdx.utils.LongArray toArray() -> d
    685:685:void remove() -> remove
    685:685:void reset() -> a
com.badlogic.gdx.utils.LongMap$MapIterator -> com.badlogic.gdx.utils.LongMap$MapIterator:
    int INDEX_ILLEGAL -> a
    int INDEX_ZERO -> b
    boolean hasNext -> c
    com.badlogic.gdx.utils.LongMap map -> d
    int nextIndex -> e
    int currentIndex -> f
    584:590:void reset() -> a
    593:598:void findNextIndex() -> b
    604:617:void remove() -> remove
com.badlogic.gdx.utils.LongMap$Values -> com.badlogic.gdx.utils.LongMap$Values:
    658:658:boolean hasNext() -> hasNext
    663:669:java.lang.Object next() -> next
    673:673:java.util.Iterator iterator() -> iterator
    678:681:com.badlogic.gdx.utils.Array toArray() -> c
    652:652:void remove() -> remove
    652:652:void reset() -> a
com.badlogic.gdx.utils.NumberUtils -> com.badlogic.gdx.utils.NumberUtils:
    21:21:int floatToIntBits(float) -> a
    25:25:int floatToRawIntBits(float) -> c
    29:29:int floatToIntColor(float) -> b
    35:35:float intToFloatColor(int) -> a
    39:39:float intBitsToFloat(int) -> b
    43:43:long doubleToLongBits$13335d() -> a
    47:47:double longBitsToDouble(long) -> a
com.badlogic.gdx.utils.ObjectIntMap -> com.badlogic.gdx.utils.ObjectIntMap:
    int PRIME1 -> f
    int PRIME2 -> g
    int PRIME3 -> h
    int size -> a
    java.lang.Object[] keyTable -> b
    int[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> i
    int hashShift -> j
    int mask -> k
    int threshold -> l
    int stashCapacity -> m
    int pushIterations -> n
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries -> o
    com.badlogic.gdx.utils.ObjectIntMap$Values values -> p
    com.badlogic.gdx.utils.ObjectIntMap$Keys keys -> q
    84:141:void put(java.lang.Object,int) -> a
    144:146:void putAll(com.badlogic.gdx.utils.ObjectIntMap) -> a
    151:180:void putResize(java.lang.Object,int) -> c
    183:250:void push(java.lang.Object,int,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    253:265:void putStash(java.lang.Object,int) -> d
    269:278:int get(java.lang.Object,int) -> b
    282:285:int getStash(java.lang.Object,int) -> e
    291:302:int getAndIncrement(java.lang.Object,int,int) -> a
    306:314:int getAndIncrementStash(java.lang.Object,int,int) -> b
    318:343:int remove(java.lang.Object,int) -> f
    347:356:int removeStash(java.lang.Object,int) -> g
    361:367:void removeStashIndex(int) -> a
    370:375:void clear() -> a
    380:383:boolean containsValue(int) -> b
    387:396:boolean containsKey(java.lang.Object) -> a
    400:403:boolean containsKeyStash(java.lang.Object) -> b
    409:412:java.lang.Object findKey(int) -> c
    418:420:void ensureCapacity(int) -> d
    423:444:void resize(int) -> e
    447:448:int hash2(int) -> f
    452:453:int hash3(int) -> g
    457:480:java.lang.String toString() -> toString
    486:490:com.badlogic.gdx.utils.ObjectIntMap$Entries entries() -> b
    496:500:com.badlogic.gdx.utils.ObjectIntMap$Values values() -> c
    506:510:com.badlogic.gdx.utils.ObjectIntMap$Keys keys() -> d
com.badlogic.gdx.utils.ObjectIntMap$Entries -> com.badlogic.gdx.utils.ObjectIntMap$Entries:
    com.badlogic.gdx.utils.ObjectIntMap$Entry entry -> e
    571:577:com.badlogic.gdx.utils.ObjectIntMap$Entry next() -> c
    581:581:boolean hasNext() -> hasNext
    585:585:java.util.Iterator iterator() -> iterator
    562:562:void remove() -> remove
    562:562:void reset() -> a
    562:562:java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectIntMap$Entry -> com.badlogic.gdx.utils.ObjectIntMap$Entry:
    java.lang.Object key -> a
    int value -> b
    518:518:java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectIntMap$Keys -> com.badlogic.gdx.utils.ObjectIntMap$Keys:
    620:620:boolean hasNext() -> hasNext
    624:627:java.lang.Object next() -> next
    631:631:java.util.Iterator iterator() -> iterator
    636:639:com.badlogic.gdx.utils.Array toArray() -> c
    614:614:void remove() -> remove
    614:614:void reset() -> a
com.badlogic.gdx.utils.ObjectIntMap$MapIterator -> com.badlogic.gdx.utils.ObjectIntMap$MapIterator:
    boolean hasNext -> a
    com.badlogic.gdx.utils.ObjectIntMap map -> b
    int nextIndex -> c
    int currentIndex -> d
    534:537:void reset() -> a
    540:545:void findNextIndex() -> b
    551:559:void remove() -> remove
com.badlogic.gdx.utils.ObjectIntMap$Values -> com.badlogic.gdx.utils.ObjectIntMap$Values:
    595:595:boolean hasNext() -> c
    599:602:int next() -> d
    607:610:com.badlogic.gdx.utils.IntArray toArray() -> e
    589:589:void remove() -> remove
    589:589:void reset() -> a
com.badlogic.gdx.utils.ObjectMap -> com.badlogic.gdx.utils.ObjectMap:
    int PRIME1 -> f
    int PRIME2 -> g
    int PRIME3 -> h
    int size -> a
    java.lang.Object[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> i
    int hashShift -> j
    int mask -> k
    int threshold -> l
    int stashCapacity -> m
    int pushIterations -> n
    com.badlogic.gdx.utils.ObjectMap$Entries entries -> o
    com.badlogic.gdx.utils.ObjectMap$Values values -> p
    com.badlogic.gdx.utils.ObjectMap$Keys keys -> q
    85:86:java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    90:150:java.lang.Object put_internal(java.lang.Object,java.lang.Object) -> b
    154:156:void putAll(com.badlogic.gdx.utils.ObjectMap) -> a
    161:190:void putResize(java.lang.Object,java.lang.Object) -> c
    193:260:void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    263:275:void putStash(java.lang.Object,java.lang.Object) -> d
    278:287:java.lang.Object get(java.lang.Object) -> a
    291:294:java.lang.Object getStash(java.lang.Object) -> e
    299:308:java.lang.Object get(java.lang.Object,java.lang.Object) -> e
    312:315:java.lang.Object getStash(java.lang.Object,java.lang.Object) -> f
    319:347:java.lang.Object remove(java.lang.Object) -> b
    351:360:java.lang.Object removeStash(java.lang.Object) -> f
    365:373:void removeStashIndex(int) -> a
    376:384:void clear() -> a
    391:403:boolean containsValue(java.lang.Object,boolean) -> a
    407:416:boolean containsKey(java.lang.Object) -> c
    420:423:boolean containsKeyStash(java.lang.Object) -> g
    431:440:java.lang.Object findKey$7e8b2351(java.lang.Object) -> d
    449:451:void ensureCapacity(int) -> b
    454:475:void resize(int) -> c
    478:479:int hash2(int) -> d
    483:484:int hash3(int) -> e
    488:511:java.lang.String toString() -> toString
    517:521:com.badlogic.gdx.utils.ObjectMap$Entries entries() -> b
    527:531:com.badlogic.gdx.utils.ObjectMap$Values values() -> c
    537:541:com.badlogic.gdx.utils.ObjectMap$Keys keys() -> d
com.badlogic.gdx.utils.ObjectMap$Entries -> com.badlogic.gdx.utils.ObjectMap$Entries:
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> a
    603:609:com.badlogic.gdx.utils.ObjectMap$Entry next() -> a
    613:613:boolean hasNext() -> hasNext
    617:617:java.util.Iterator iterator() -> iterator
    594:594:void remove() -> remove
    594:594:void reset() -> b
    594:594:java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectMap$Entry -> com.badlogic.gdx.utils.ObjectMap$Entry:
    java.lang.Object key -> a
    java.lang.Object value -> b
    549:549:java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectMap$Keys -> com.badlogic.gdx.utils.ObjectMap$Keys:
    662:662:boolean hasNext() -> hasNext
    666:669:java.lang.Object next() -> next
    673:673:java.util.Iterator iterator() -> iterator
    678:681:com.badlogic.gdx.utils.Array toArray() -> a
    656:656:void remove() -> remove
    656:656:void reset() -> b
com.badlogic.gdx.utils.ObjectMap$MapIterator -> com.badlogic.gdx.utils.ObjectMap$MapIterator:
    boolean hasNext -> b
    com.badlogic.gdx.utils.ObjectMap map -> c
    int nextIndex -> d
    int currentIndex -> e
    565:568:void reset() -> b
    571:576:void advance() -> c
    582:591:void remove() -> remove
com.badlogic.gdx.utils.ObjectMap$Values -> com.badlogic.gdx.utils.ObjectMap$Values:
    627:627:boolean hasNext() -> hasNext
    631:634:java.lang.Object next() -> next
    638:638:java.util.Iterator iterator() -> iterator
    643:646:com.badlogic.gdx.utils.Array toArray() -> a
    651:653:void toArray(com.badlogic.gdx.utils.Array) -> a
    621:621:void remove() -> remove
    621:621:void reset() -> b
com.badlogic.gdx.utils.OrderedMap -> com.badlogic.gdx.utils.OrderedMap:
    com.badlogic.gdx.utils.Array keys -> f
    42:43:java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    47:48:java.lang.Object remove(java.lang.Object) -> b
    52:54:void clear() -> a
    57:57:com.badlogic.gdx.utils.Array orderedKeys() -> e
    61:61:com.badlogic.gdx.utils.ObjectMap$Entries entries() -> b
    81:81:com.badlogic.gdx.utils.ObjectMap$Keys keys() -> d
    100:100:com.badlogic.gdx.utils.ObjectMap$Values values() -> c
    119:131:java.lang.String toString() -> toString
com.badlogic.gdx.utils.OrderedMap$1 -> com.badlogic.gdx.utils.OrderedMap$1:
    com.badlogic.gdx.utils.OrderedMap this$0 -> f
    63:65:void advance() -> c
    68:71:com.badlogic.gdx.utils.ObjectMap$Entry next() -> a
    75:76:void remove() -> remove
    61:61:java.lang.Object next() -> next
com.badlogic.gdx.utils.OrderedMap$2 -> com.badlogic.gdx.utils.OrderedMap$2:
    com.badlogic.gdx.utils.OrderedMap this$0 -> a
    83:85:void advance() -> c
    88:90:java.lang.Object next() -> next
    94:95:void remove() -> remove
com.badlogic.gdx.utils.OrderedMap$3 -> com.badlogic.gdx.utils.OrderedMap$3:
    com.badlogic.gdx.utils.OrderedMap this$0 -> a
    102:104:void advance() -> c
    107:109:java.lang.Object next() -> next
    113:114:void remove() -> remove
com.badlogic.gdx.utils.PauseableThread -> com.badlogic.gdx.utils.PauseableThread:
    java.lang.Runnable runnable -> a
    boolean paused -> b
    boolean exit -> c
    37:48:void run() -> run
    54:55:void onPause() -> a
    59:62:void onResume() -> b
    67:67:boolean isPaused() -> c
    72:74:void stopThread() -> d
com.badlogic.gdx.utils.PerformanceCounter -> com.badlogic.gdx.utils.PerformanceCounter:
    float nano2seconds -> f
    long startTime -> g
    long lastTick -> h
    com.badlogic.gdx.math.FloatCounter time -> a
    com.badlogic.gdx.math.FloatCounter load -> b
    java.lang.String name -> c
    float current -> d
    boolean valid -> e
    65:69:void tick() -> a
    76:88:void tick(float) -> a
    95:97:void start() -> b
    104:109:void stop() -> c
    115:121:void reset() -> d
    126:127:java.lang.String toString() -> toString
    132:133:com.badlogic.gdx.utils.StringBuilder toString(com.badlogic.gdx.utils.StringBuilder) -> a
com.badlogic.gdx.utils.PerformanceCounters -> com.badlogic.gdx.utils.PerformanceCounters:
    float nano2seconds -> b
    long lastTick -> c
    com.badlogic.gdx.utils.Array counters -> a
    29:31:com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String,int) -> a
    35:37:com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String) -> a
    41:45:void tick() -> a
    48:50:void tick(float) -> a
    53:59:com.badlogic.gdx.utils.StringBuilder toString(com.badlogic.gdx.utils.StringBuilder) -> a
com.badlogic.gdx.utils.Pool -> com.badlogic.gdx.utils.Pool:
    int max -> max
    com.badlogic.gdx.utils.Array freeObjects -> freeObjects
    java.lang.Object newObject() -> newObject
    47:47:java.lang.Object obtain() -> obtain
    53:56:void free(java.lang.Object) -> free
    61:68:void freeAll(com.badlogic.gdx.utils.Array) -> freeAll
    72:73:void clear() -> clear
com.badlogic.gdx.utils.Pool$Poolable -> com.badlogic.gdx.utils.Pool$Poolable:
    void reset() -> b
com.badlogic.gdx.utils.PooledLinkedList -> com.badlogic.gdx.utils.PooledLinkedList:
    com.badlogic.gdx.utils.PooledLinkedList$Item head -> a
    com.badlogic.gdx.utils.PooledLinkedList$Item tail -> b
    com.badlogic.gdx.utils.PooledLinkedList$Item iter -> c
    com.badlogic.gdx.utils.PooledLinkedList$Item curr -> d
    int size -> e
    com.badlogic.gdx.utils.Pool pool -> f
    45:61:void add(java.lang.Object) -> a
    65:66:void iter() -> a
    72:77:java.lang.Object next() -> b
    82:112:void remove() -> c
    145:150:void clear() -> d
com.badlogic.gdx.utils.PooledLinkedList$1 -> com.badlogic.gdx.utils.PooledLinkedList$1:
    com.badlogic.gdx.utils.PooledLinkedList this$0 -> a
    39:39:com.badlogic.gdx.utils.PooledLinkedList$Item newObject() -> a
    37:37:java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.PooledLinkedList$Item -> com.badlogic.gdx.utils.PooledLinkedList$Item:
    java.lang.Object payload -> a
    com.badlogic.gdx.utils.PooledLinkedList$Item next -> b
    com.badlogic.gdx.utils.PooledLinkedList$Item prev -> c
com.badlogic.gdx.utils.Pools -> com.badlogic.gdx.utils.Pools:
    com.badlogic.gdx.utils.ObjectMap typePools -> a
    27:32:com.badlogic.gdx.utils.Pool get(java.lang.Class) -> a
    37:37:java.lang.Object obtain(java.lang.Class) -> b
    42:47:void free(java.lang.Object) -> a
    51:59:void freeAll(com.badlogic.gdx.utils.Array) -> a
com.badlogic.gdx.utils.ReflectionPool -> com.badlogic.gdx.utils.ReflectionPool:
    java.lang.Class type -> a
    43:59:java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.Scaling -> com.badlogic.gdx.utils.Scaling:
    com.badlogic.gdx.utils.Scaling fit -> a
    com.badlogic.gdx.utils.Scaling fill -> b
    com.badlogic.gdx.utils.Scaling fillX -> c
    com.badlogic.gdx.utils.Scaling fillY -> d
    com.badlogic.gdx.utils.Scaling stretch -> e
    com.badlogic.gdx.utils.Scaling stretchX -> f
    com.badlogic.gdx.utils.Scaling stretchY -> g
    com.badlogic.gdx.utils.Scaling none -> h
    com.badlogic.gdx.math.Vector2 temp -> i
    com.badlogic.gdx.utils.Scaling[] $VALUES -> j
    23:23:com.badlogic.gdx.utils.Scaling[] values() -> values
    23:23:com.badlogic.gdx.utils.Scaling valueOf(java.lang.String) -> valueOf
    52:102:com.badlogic.gdx.math.Vector2 apply(float,float,float,float) -> a
com.badlogic.gdx.utils.Scaling$1 -> com.badlogic.gdx.utils.Scaling$1:
    int[] $SwitchMap$com$badlogic$gdx$utils$Scaling -> a
com.badlogic.gdx.utils.ScreenUtils -> com.badlogic.gdx.utils.ScreenUtils:
    40:42:com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture() -> a
    56:68:com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture$78401e6b(int,int) -> a
    78:80:byte[] getFrameBufferPixels(boolean) -> a
    92:107:byte[] getFrameBufferPixels$604e10fe(int,int,boolean) -> a
com.badlogic.gdx.utils.SerializationException -> com.badlogic.gdx.utils.SerializationException:
    java.lang.StringBuffer trace -> trace
    42:42:boolean causedBy(java.lang.Class) -> a
    46:49:boolean causedBy(java.lang.Throwable,java.lang.Class) -> a
    53:59:java.lang.String getMessage() -> getMessage
    65:69:void addTrace(java.lang.String) -> a
com.badlogic.gdx.utils.SharedLibraryLoader -> com.badlogic.gdx.utils.SharedLibraryLoader:
    boolean isWindows -> a
    boolean isLinux -> b
    boolean isMac -> c
    boolean isAndroid -> d
    boolean is64Bit -> e
    java.util.HashSet loadedLibraries -> f
    java.lang.String nativesJar -> g
    66:81:java.lang.String crc(java.io.InputStream) -> a
    86:89:java.lang.String mapLibraryName(java.lang.String) -> b
    95:108:void load(java.lang.String) -> a
    111:120:java.io.InputStream readFile(java.lang.String) -> c
    129:163:java.io.File extractFile$7a2fde5c(java.lang.String) -> d
com.badlogic.gdx.utils.SnapshotArray -> com.badlogic.gdx.utils.SnapshotArray:
    java.lang.Object[] snapshot -> d
    java.lang.Object[] recycled -> e
    int snapshots -> f
    77:79:java.lang.Object[] begin() -> j
    84:93:void end() -> k
    96:104:void modified() -> l
    107:109:void set(int,java.lang.Object) -> a
    112:114:void insert(int,java.lang.Object) -> b
    117:119:void swap(int,int) -> a
    122:123:boolean removeValue(java.lang.Object,boolean) -> b
    127:128:java.lang.Object removeIndex(int) -> b
    132:133:java.lang.Object pop() -> a
    137:139:void clear() -> d
    142:144:void sort() -> f
    147:149:void sort(java.util.Comparator) -> a
    152:154:void reverse() -> g
    157:159:void shuffle() -> h
    162:164:void truncate(int) -> e
com.badlogic.gdx.utils.Sort -> com.badlogic.gdx.utils.Sort:
    com.badlogic.gdx.utils.Sort instance -> a
    com.badlogic.gdx.utils.TimSort timSort -> b
    com.badlogic.gdx.utils.ComparableTimSort comparableTimSort -> c
    31:33:void sort(com.badlogic.gdx.utils.Array) -> a
    36:38:void sort(java.lang.Object[]) -> a
    41:43:void sort$7ac2f2fc(java.lang.Object[],int) -> a
    46:48:void sort(com.badlogic.gdx.utils.Array,java.util.Comparator) -> a
    51:53:void sort(java.lang.Object[],java.util.Comparator) -> a
    56:58:void sort$6fa18035(java.lang.Object[],java.util.Comparator,int) -> a
    62:63:com.badlogic.gdx.utils.Sort instance() -> a
com.badlogic.gdx.utils.SortedIntList -> com.badlogic.gdx.utils.SortedIntList:
    com.badlogic.gdx.utils.SortedIntList$NodePool nodePool -> c
    com.badlogic.gdx.utils.SortedIntList$Iterator iterator -> d
    int size -> a
    com.badlogic.gdx.utils.SortedIntList$Node first -> b
    39:68:java.lang.Object insert(int,java.lang.Object) -> a
    76:86:java.lang.Object get(int) -> a
    91:95:void clear() -> a
    99:99:int size() -> b
    107:110:java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.SortedIntList$Iterator -> com.badlogic.gdx.utils.SortedIntList$Iterator:
    com.badlogic.gdx.utils.SortedIntList$Node position -> b
    com.badlogic.gdx.utils.SortedIntList$Node previousPosition -> c
    com.badlogic.gdx.utils.SortedIntList this$0 -> a
    119:119:boolean hasNext() -> hasNext
    124:126:com.badlogic.gdx.utils.SortedIntList$Node next() -> b
    132:146:void remove() -> remove
    149:151:com.badlogic.gdx.utils.SortedIntList$Iterator reset() -> a
    113:113:java.lang.Object next() -> next
com.badlogic.gdx.utils.SortedIntList$Node -> com.badlogic.gdx.utils.SortedIntList$Node:
    com.badlogic.gdx.utils.SortedIntList$Node p -> a
    com.badlogic.gdx.utils.SortedIntList$Node n -> b
    java.lang.Object value -> c
    int index -> d
com.badlogic.gdx.utils.SortedIntList$NodePool -> com.badlogic.gdx.utils.SortedIntList$NodePool:
    169:169:com.badlogic.gdx.utils.SortedIntList$Node newObject() -> a
    173:178:com.badlogic.gdx.utils.SortedIntList$Node obtain(com.badlogic.gdx.utils.SortedIntList$Node,com.badlogic.gdx.utils.SortedIntList$Node,java.lang.Object,int) -> a
    166:166:java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.StringBuilder -> com.badlogic.gdx.utils.StringBuilder:
    int INITIAL_CAPACITY -> a
    char[] chars -> b
    int length -> c
    char[] digits -> d
    39:39:char[] getValue() -> a
    88:92:void enlargeBuffer(int) -> c
    95:103:void appendNull() -> b
    106:112:void append0(char[]) -> b
    116:129:void append0(char[],int,int) -> b
    132:136:void append0(char) -> b
    139:150:void append0(java.lang.String) -> b
    153:161:void append0(java.lang.CharSequence,int,int) -> a
    169:169:int capacity() -> c
    178:181:char charAt(int) -> charAt
    185:199:void delete0(int,int) -> a
    203:211:void deleteCharAt0(int) -> d
    220:224:void ensureCapacity(int) -> e
    236:240:void getChars(int,int,char[],int) -> a
    243:251:void insert0(int,char[]) -> a
    254:266:void insert0(int,char[],int,int) -> a
    270:277:void insert0(int,char) -> a
    280:291:void insert0(int,java.lang.String) -> a
    296:303:void insert0(int,java.lang.CharSequence,int,int) -> a
    309:309:int length() -> length
    313:324:void move(int,int) -> b
    327:353:void replace0(int,int,java.lang.String) -> a
    357:411:void reverse0() -> d
    419:423:void setCharAt(int,char) -> b
    432:443:void setLength(int) -> a
    451:459:java.lang.String substring(int) -> f
    470:478:java.lang.String substring(int,int) -> c
    486:487:java.lang.String toString() -> toString
    499:499:java.lang.CharSequence subSequence(int,int) -> subSequence
    510:510:int indexOf(java.lang.String) -> c
    522:553:int indexOf(java.lang.String,int) -> a
    565:565:int lastIndexOf(java.lang.String) -> d
    578:610:int lastIndexOf(java.lang.String,int) -> b
    618:623:void trimToSize() -> e
    634:637:int codePointAt(int) -> g
    649:652:int codePointBefore(int) -> h
    666:669:int codePointCount(int,int) -> d
    683:683:int offsetByCodePoints(int,int) -> e
    693:694:com.badlogic.gdx.utils.StringBuilder append(boolean) -> a
    704:705:com.badlogic.gdx.utils.StringBuilder append(char) -> a
    715:735:com.badlogic.gdx.utils.StringBuilder append(int) -> b
    745:774:com.badlogic.gdx.utils.StringBuilder append(long) -> a
    784:785:com.badlogic.gdx.utils.StringBuilder append(float) -> a
    795:796:com.badlogic.gdx.utils.StringBuilder append(double) -> a
    806:811:com.badlogic.gdx.utils.StringBuilder append(java.lang.Object) -> a
    819:820:com.badlogic.gdx.utils.StringBuilder append(java.lang.String) -> a
    830:831:com.badlogic.gdx.utils.StringBuilder append(char[]) -> a
    844:845:com.badlogic.gdx.utils.StringBuilder append(char[],int,int) -> a
    854:859:com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence) -> a
    863:867:com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder) -> a
    880:881:com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence,int,int) -> b
    885:889:com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder,int,int) -> a
    899:900:com.badlogic.gdx.utils.StringBuilder appendCodePoint(int) -> i
    911:912:com.badlogic.gdx.utils.StringBuilder delete(int,int) -> f
    922:923:com.badlogic.gdx.utils.StringBuilder deleteCharAt(int) -> j
    935:936:com.badlogic.gdx.utils.StringBuilder insert(int,boolean) -> a
    948:949:com.badlogic.gdx.utils.StringBuilder insert(int,char) -> c
    961:962:com.badlogic.gdx.utils.StringBuilder insert(int,int) -> g
    974:975:com.badlogic.gdx.utils.StringBuilder insert(int,long) -> a
    987:988:com.badlogic.gdx.utils.StringBuilder insert(int,float) -> a
    1000:1001:com.badlogic.gdx.utils.StringBuilder insert(int,double) -> a
    1013:1014:com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.Object) -> a
    1025:1026:com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.String) -> b
    1038:1039:com.badlogic.gdx.utils.StringBuilder insert(int,char[]) -> b
    1054:1055:com.badlogic.gdx.utils.StringBuilder insert(int,char[],int,int) -> b
    1068:1069:com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence) -> a
    1085:1086:com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence,int,int) -> b
    1099:1100:com.badlogic.gdx.utils.StringBuilder replace(int,int,java.lang.String) -> b
    1107:1108:com.badlogic.gdx.utils.StringBuilder reverse() -> f
    1112:1116:int hashCode() -> hashCode
    1120:1132:boolean equals(java.lang.Object) -> equals
    27:27:java.lang.Appendable append(char) -> append
    27:27:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    27:27:java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.utils.TimSort -> com.badlogic.gdx.utils.TimSort:
    int MIN_MERGE -> a
    java.lang.Object[] a -> b
    java.util.Comparator c -> c
    int MIN_GALLOP -> d
    int minGallop -> e
    int INITIAL_TMP_STORAGE_LENGTH -> f
    java.lang.Object[] tmp -> g
    int tmpCount -> h
    int stackSize -> i
    int[] runBase -> j
    int[] runLen -> k
    boolean DEBUG -> l
    97:146:void doSort(java.lang.Object[],java.util.Comparator,int,int) -> a
    179:180:void sort(java.lang.Object[],java.util.Comparator) -> a
    183:227:void sort(java.lang.Object[],int,int,java.util.Comparator) -> a
    243:281:void binarySort(java.lang.Object[],int,int,int,java.util.Comparator) -> a
    304:317:int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator) -> b
    326:332:void reverseRange(java.lang.Object[],int,int) -> a
    349:354:int minRunLength(int) -> a
    362:365:void pushRun(int,int) -> a
    374:385:void mergeCollapse() -> a
    389:394:void mergeForceCollapse() -> b
    405:446:void mergeAt(int) -> b
    463:511:int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> a
    528:576:int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> b
    594:685:void mergeLo(int,int,int,int) -> a
    698:793:void mergeHi(int,int,int,int) -> b
    801:820:java.lang.Object[] ensureCapacity(int) -> c
    831:834:void rangeCheck$4868d30e(int,int) -> b
com.badlogic.gdx.utils.TimeUtils -> com.badlogic.gdx.utils.TimeUtils:
    24:24:long nanoTime() -> a
    29:29:long millis() -> b
com.badlogic.gdx.utils.Timer -> com.badlogic.gdx.utils.Timer:
    com.badlogic.gdx.utils.Array instances -> a
    com.badlogic.gdx.utils.Timer instance -> b
    int CANCELLED -> c
    int FOREVER -> d
    com.badlogic.gdx.utils.Array tasks -> e
    62:63:void postTask(com.badlogic.gdx.utils.Timer$Task) -> a
    67:68:void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float) -> b
    72:73:void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float) -> b
    77:85:void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float,int) -> a
    89:91:void stop() -> a
    96:100:void start() -> b
    105:109:void clear() -> c
    113:136:float update(float) -> a
    140:142:void wake() -> d
    148:149:void post(com.badlogic.gdx.utils.Timer$Task) -> b
    154:155:void schedule(com.badlogic.gdx.utils.Timer$Task,float) -> a
    160:161:void schedule(com.badlogic.gdx.utils.Timer$Task,float,float) -> a
    166:167:void schedule(com.badlogic.gdx.utils.Timer$Task,float,float,int) -> b
com.badlogic.gdx.utils.Timer$1 -> com.badlogic.gdx.utils.Timer$1:
    30:40:void run() -> run
com.badlogic.gdx.utils.Timer$Task -> com.badlogic.gdx.utils.Timer$Task:
    float executeTime -> executeTime
    float intervalSeconds -> intervalSeconds
    int repeatCount -> repeatCount
    void run() -> run
    182:184:void cancel() -> cancel
    188:188:boolean isScheduled() -> isScheduled
com.badlogic.gdx.utils.XmlReader -> com.badlogic.gdx.utils.XmlReader:
    com.badlogic.gdx.utils.Array elements -> a
    com.badlogic.gdx.utils.XmlReader$Element root -> b
    com.badlogic.gdx.utils.XmlReader$Element current -> c
    com.badlogic.gdx.utils.StringBuilder textBuffer -> d
    byte[] _xml_actions -> e
    byte[] _xml_key_offsets -> f
    char[] _xml_trans_keys -> g
    byte[] _xml_single_lengths -> h
    byte[] _xml_range_lengths -> i
    short[] _xml_index_offsets -> j
    byte[] _xml_indicies -> k
    byte[] _xml_trans_targs -> l
    byte[] _xml_trans_actions -> m
    int xml_start -> u
    int xml_first_final -> v
    int xml_error -> w
    int xml_en_elementBody -> x
    int xml_en_main -> y
    43:44:com.badlogic.gdx.utils.XmlReader$Element parse(java.lang.String) -> c
    48:60:com.badlogic.gdx.utils.XmlReader$Element parse(java.io.Reader) -> a
    64:64:com.badlogic.gdx.utils.XmlReader$Element parse(java.io.InputStream) -> a
    69:71:com.badlogic.gdx.utils.XmlReader$Element parse(com.badlogic.gdx.files.FileHandle) -> a
    76:321:com.badlogic.gdx.utils.XmlReader$Element parse$17989470(char[],int) -> a
    326:326:byte[] init__xml_actions_0() -> b
    332:332:byte[] init__xml_key_offsets_0() -> c
    339:339:char[] init__xml_trans_keys_0() -> d
    348:348:byte[] init__xml_single_lengths_0() -> e
    355:355:byte[] init__xml_range_lengths_0() -> f
    362:362:short[] init__xml_index_offsets_0() -> g
    369:369:byte[] init__xml_indicies_0() -> h
    379:379:byte[] init__xml_trans_targs_0() -> i
    387:387:byte[] init__xml_trans_actions_0() -> j
    403:408:void open(java.lang.String) -> a
    411:412:void attribute(java.lang.String,java.lang.String) -> a
    415:420:java.lang.String entity(java.lang.String) -> d
    424:426:void text(java.lang.String) -> b
    429:431:void close() -> a
com.badlogic.gdx.utils.XmlReader$Element -> com.badlogic.gdx.utils.XmlReader$Element:
    java.lang.String name -> a
    com.badlogic.gdx.utils.ObjectMap attributes -> b
    com.badlogic.gdx.utils.Array children -> c
    java.lang.String text -> d
    com.badlogic.gdx.utils.XmlReader$Element parent -> e
    446:446:java.lang.String getName() -> a
    450:450:com.badlogic.gdx.utils.ObjectMap getAttributes() -> c
    455:458:java.lang.String getAttribute(java.lang.String) -> b
    462:465:java.lang.String getAttribute$7157d249(java.lang.String) -> c
    469:471:void setAttribute(java.lang.String,java.lang.String) -> a
    474:475:int getChildCount() -> d
    480:481:com.badlogic.gdx.utils.XmlReader$Element getChild(int) -> a
    485:487:void addChild(com.badlogic.gdx.utils.XmlReader$Element) -> a
    490:490:java.lang.String getText() -> b
    494:495:void setText(java.lang.String) -> a
    498:499:void removeChild(int) -> b
    502:503:void removeChild(com.badlogic.gdx.utils.XmlReader$Element) -> b
    506:507:void remove() -> e
    510:510:com.badlogic.gdx.utils.XmlReader$Element getParent() -> f
    514:514:java.lang.String toString() -> toString
    518:552:java.lang.String toString(java.lang.String) -> d
    558:563:com.badlogic.gdx.utils.XmlReader$Element getChildByName(java.lang.String) -> e
    569:576:com.badlogic.gdx.utils.XmlReader$Element getChildByNameRecursive(java.lang.String) -> f
    582:588:com.badlogic.gdx.utils.Array getChildrenByName(java.lang.String) -> g
    594:596:com.badlogic.gdx.utils.Array getChildrenByNameRecursively(java.lang.String) -> h
    600:606:void getChildrenByNameRecursively(java.lang.String,com.badlogic.gdx.utils.Array) -> a
    610:610:float getFloatAttribute(java.lang.String) -> i
    614:616:float getFloatAttribute(java.lang.String,float) -> a
    621:621:int getIntAttribute(java.lang.String) -> j
    625:627:int getIntAttribute(java.lang.String,int) -> a
    632:632:boolean getBooleanAttribute(java.lang.String) -> k
    636:638:boolean getBooleanAttribute(java.lang.String,boolean) -> a
    644:646:java.lang.String get(java.lang.String) -> l
    652:660:java.lang.String get$7157d249(java.lang.String) -> m
    666:668:int getInt(java.lang.String) -> n
    674:676:int getInt(java.lang.String,int) -> b
    682:684:float getFloat(java.lang.String) -> o
    690:692:float getFloat(java.lang.String,float) -> b
    698:700:boolean getBoolean(java.lang.String) -> p
    706:708:boolean getBoolean(java.lang.String,boolean) -> b
com.badlogic.gdx.utils.XmlWriter -> com.badlogic.gdx.utils.XmlWriter:
    java.io.Writer writer -> b
    com.badlogic.gdx.utils.Array stack -> c
    java.lang.String currentElement -> d
    boolean indentNextClose -> e
    int indent -> a
    55:59:void indent() -> b
    62:67:com.badlogic.gdx.utils.XmlWriter element(java.lang.String) -> a
    71:71:com.badlogic.gdx.utils.XmlWriter element(java.lang.String,java.lang.Object) -> b
    75:80:boolean startElementContent() -> c
    84:90:com.badlogic.gdx.utils.XmlWriter attribute(java.lang.String,java.lang.Object) -> a
    94:103:com.badlogic.gdx.utils.XmlWriter text(java.lang.Object) -> a
    107:118:com.badlogic.gdx.utils.XmlWriter pop() -> a
    123:126:void close() -> close
    129:131:void write(char[],int,int) -> write
    134:135:void flush() -> flush
com.badlogic.gdx.utils.compression.CRC -> com.badlogic.gdx.utils.compression.CRC:
    int[] Table -> a
    int _value -> b
    23:24:void Init() -> a
    27:29:void Update(byte[],int,int) -> a
    32:35:void Update(byte[]) -> a
    38:39:void UpdateByte(int) -> a
    42:42:int GetDigest() -> b
com.badlogic.gdx.utils.compression.ICodeProgress -> com.badlogic.gdx.utils.compression.ICodeProgress:
    void SetProgress$2566ab5() -> a
com.badlogic.gdx.utils.compression.Lzma -> com.badlogic.gdx.utils.compression.Lzma:
    62:85:void compress(java.io.InputStream,java.io.OutputStream) -> a
    93:109:void decompress(java.io.InputStream,java.io.OutputStream) -> b
com.badlogic.gdx.utils.compression.Lzma$CommandLine -> com.badlogic.gdx.utils.compression.Lzma$CommandLine:
    int kEncode -> a
    int kDecode -> b
    int kBenchmak -> c
    int Command -> d
    int NumBenchmarkPasses -> e
    int DictionarySize -> f
    boolean DictionarySizeIsDefined -> g
    int Lc -> h
    int Lp -> i
    int Pb -> j
    int Fb -> k
    boolean FbIsDefined -> l
    boolean Eos -> m
    int Algorithm -> n
    int MatchFinder -> o
    java.lang.String InFile -> p
    java.lang.String OutFile -> q
com.badlogic.gdx.utils.compression.lz.BinTree -> com.badlogic.gdx.utils.compression.lz.BinTree:
    int _cyclicBufferPos -> a
    int _cyclicBufferSize -> b
    int _matchMaxLen -> c
    int[] _son -> d
    int[] _hash -> e
    int _cutValue -> f
    int _hashMask -> g
    int _hashSizeSum -> h
    boolean HASH_ARRAY -> i
    int kHash2Size -> j
    int kHash3Size -> k
    int kBT2HashSize -> l
    int kStartMaxLen -> m
    int kHash3Offset -> n
    int kEmptyHashValue -> o
    int kMaxValForNormalize -> p
    int kNumHashDirectBytes -> q
    int kMinMatchCheck -> r
    int kFixHashSize -> s
    int[] CrcTable -> E
    34:44:void SetType(int) -> a
    47:52:void Init() -> a
    55:58:void MovePos() -> b
    61:89:boolean Create$3b4dfe47(int,int) -> a
    94:197:int GetMatches(int[]) -> a
    203:274:void Skip(int) -> b
    277:285:void NormalizeLinks(int[],int,int) -> a
    288:292:void Normalize() -> e
    295:296:void SetCutValue(int) -> e
com.badlogic.gdx.utils.compression.lz.InWindow -> com.badlogic.gdx.utils.compression.lz.InWindow:
    byte[] _bufferBase -> t
    java.io.InputStream _stream -> u
    int _posLimit -> v
    boolean _streamEndWasReached -> w
    int _pointerToLastSafePosition -> x
    int _bufferOffset -> y
    int _blockSize -> z
    int _pos -> A
    int _keepSizeBefore -> B
    int _keepSizeAfter -> C
    int _streamPos -> D
    24:34:void MoveBlock() -> e
    37:52:void ReadBlock() -> f
    56:57:void Free() -> g
    60:69:void Create(int,int,int) -> b
    72:73:void SetStream(java.io.InputStream) -> a
    76:77:void ReleaseStream() -> c
    80:85:void Init() -> a
    88:94:void MovePos() -> b
    97:97:byte GetIndexByte(int) -> c
    102:110:int GetMatchLen(int,int,int) -> a
    114:114:int GetNumAvailableBytes() -> d
    118:122:void ReduceOffsets(int) -> d
com.badlogic.gdx.utils.compression.lz.OutWindow -> com.badlogic.gdx.utils.compression.lz.OutWindow:
    byte[] _buffer -> a
    int _pos -> b
    int _windowSize -> c
    int _streamPos -> d
    java.io.OutputStream _stream -> e
    15:19:void Create(int) -> a
    22:24:void SetStream(java.io.OutputStream) -> a
    27:29:void ReleaseStream() -> a
    32:36:void Init$1385ff() -> b
    39:44:void Flush() -> c
    47:54:void CopyBlock(int,int) -> a
    57:59:void PutByte(byte) -> a
    62:64:byte GetByte(int) -> b
com.badlogic.gdx.utils.compression.lzma.Base -> com.badlogic.gdx.utils.compression.lzma.Base:
    int kNumRepDistances -> a
    int kNumStates -> b
    int kNumPosSlotBits -> c
    int kDicLogSizeMin -> d
    int kNumLenToPosStatesBits -> e
    int kNumLenToPosStates -> f
    int kMatchMinLen -> g
    int kNumAlignBits -> h
    int kAlignTableSize -> i
    int kAlignMask -> j
    int kStartPosModelIndex -> k
    int kEndPosModelIndex -> l
    int kNumPosModels -> m
    int kNumFullDistances -> n
    int kNumLitPosStatesBitsEncodingMax -> o
    int kNumLitContextBitsMax -> p
    int kNumPosStatesBitsMax -> q
    int kNumPosStatesMax -> r
    int kNumPosStatesBitsEncodingMax -> s
    int kNumPosStatesEncodingMax -> t
    int kNumLowLenBits -> u
    int kNumMidLenBits -> v
    int kNumHighLenBits -> w
    int kNumLowLenSymbols -> x
    int kNumMidLenSymbols -> y
    int kNumLenSymbols -> z
    int kMatchMaxLen -> A
    10:10:int StateInit() -> a
    14:16:int StateUpdateChar(int) -> a
    20:20:int StateUpdateMatch(int) -> b
    24:24:int StateUpdateRep(int) -> c
    28:28:int StateUpdateShortRep(int) -> d
    32:32:boolean StateIsCharState(int) -> e
    46:48:int GetLenToPosState(int) -> f
com.badlogic.gdx.utils.compression.lzma.Decoder -> com.badlogic.gdx.utils.compression.lzma.Decoder:
    com.badlogic.gdx.utils.compression.lz.OutWindow m_OutWindow -> a
    com.badlogic.gdx.utils.compression.rangecoder.Decoder m_RangeDecoder -> b
    short[] m_IsMatchDecoders -> c
    short[] m_IsRepDecoders -> d
    short[] m_IsRepG0Decoders -> e
    short[] m_IsRepG1Decoders -> f
    short[] m_IsRepG2Decoders -> g
    short[] m_IsRep0LongDecoders -> h
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_PosSlotDecoder -> i
    short[] m_PosDecoders -> j
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder m_PosAlignDecoder -> k
    com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder m_LenDecoder -> l
    com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder m_RepLenDecoder -> m
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder m_LiteralDecoder -> n
    int m_DictionarySize -> o
    int m_DictionarySizeCheck -> p
    int m_PosStateMask -> q
    151:157:boolean SetDictionarySize(int) -> a
    161:167:boolean SetLcLpPb(int,int,int) -> a
    171:189:void Init() -> a
    192:276:boolean Code(java.io.InputStream,java.io.OutputStream,long) -> a
    280:290:boolean SetDecoderProperties(byte[]) -> a
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder -> com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder:
    short[] m_Choice -> a
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_LowCoder -> b
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_MidCoder -> c
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder m_HighCoder -> d
    int m_NumPosStates -> e
    com.badlogic.gdx.utils.compression.lzma.Decoder this$0 -> f
    33:37:void Create(int) -> a
    40:46:void Init() -> a
    49:55:int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder,int) -> a
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder -> com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder:
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2[] m_Coders -> a
    int m_NumPrevBits -> b
    int m_NumPosBits -> c
    int m_PosMask -> d
    com.badlogic.gdx.utils.compression.lzma.Decoder this$0 -> e
    99:107:void Create(int,int) -> a
    110:113:void Init() -> a
    116:116:com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2 GetDecoder(int,byte) -> a
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2 -> com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2:
    short[] m_Decoders -> a
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder this$1 -> b
    64:65:void Init() -> a
    68:72:byte DecodeNormal(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> a
    77:89:byte DecodeWithMatchByte(com.badlogic.gdx.utils.compression.rangecoder.Decoder,byte) -> a
com.badlogic.gdx.utils.compression.lzma.Encoder -> com.badlogic.gdx.utils.compression.lzma.Encoder:
    int EMatchFinderTypeBT2 -> a
    int EMatchFinderTypeBT4 -> b
    int kIfinityPrice -> c
    byte[] g_FastPos -> d
    int _state -> e
    byte _previousByte -> f
    int[] _repDistances -> g
    int kDefaultDictionaryLogSize -> h
    int kNumFastBytesDefault -> i
    int kNumLenSpecSymbols -> j
    int kNumOpts -> k
    com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal[] _optimum -> l
    com.badlogic.gdx.utils.compression.lz.BinTree _matchFinder -> m
    com.badlogic.gdx.utils.compression.rangecoder.Encoder _rangeEncoder -> n
    short[] _isMatch -> o
    short[] _isRep -> p
    short[] _isRepG0 -> q
    short[] _isRepG1 -> r
    short[] _isRepG2 -> s
    short[] _isRep0Long -> t
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _posSlotEncoder -> u
    short[] _posEncoders -> v
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder _posAlignEncoder -> w
    com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder _lenEncoder -> x
    com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder _repMatchLenEncoder -> y
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder _literalEncoder -> z
    int[] _matchDistances -> A
    int _numFastBytes -> B
    int _longestMatchLength -> C
    int _numDistancePairs -> D
    int _additionalOffset -> E
    int _optimumEndIndex -> F
    int _optimumCurrentIndex -> G
    boolean _longestMatchWasFound -> H
    int[] _posSlotPrices -> I
    int[] _distancesPrices -> J
    int[] _alignPrices -> K
    int _alignPriceCount -> L
    int _distTableSize -> M
    int _posStateBits -> N
    int _posStateMask -> O
    int _numLiteralPosStateBits -> P
    int _numLiteralContextBits -> Q
    int _dictionarySize -> R
    int _dictionarySizePrev -> S
    int _numFastBytesPrev -> T
    long nowPos64 -> U
    boolean _finished -> V
    java.io.InputStream _inStream -> W
    int _matchFinderType -> X
    boolean _writeEndMark -> Y
    boolean _needReleaseMFStream -> Z
    int[] reps -> aa
    int[] repLens -> ab
    int backRes -> ac
    long[] processedInSize -> ad
    long[] processedOutSize -> ae
    boolean[] finished -> af
    int kPropSize -> ag
    byte[] properties -> ah
    int[] tempPrices -> ai
    int _matchPriceCount -> aj
    45:47:int GetPosSlot(int) -> d
    51:53:int GetPosSlot2(int) -> e
    61:65:void BaseInit() -> b
    345:358:void Create() -> c
    368:369:void SetWriteEndMarkerMode(boolean) -> b
    372:396:void Init() -> d
    399:408:int ReadMatchDistances() -> e
    412:416:void MovePos(int) -> f
    419:419:int GetRepLen1Price(int,int) -> a
    426:439:int GetPureRepPrice(int,int,int) -> b
    443:444:int GetRepPrice(int,int,int,int) -> a
    449:454:int GetPosLenPrice(int,int,int) -> c
    458:483:int Backward(int) -> g
    491:913:int GetOptimum(int) -> h
    917:917:boolean ChangePair(int,int) -> b
    922:936:void WriteEndMarker(int) -> i
    939:943:void Flush(int) -> j
    946:1078:void CodeOneBlock(long[],long[],boolean[]) -> a
    1082:1086:void ReleaseMFStream() -> f
    1089:1090:void SetOutStream(java.io.OutputStream) -> b
    1093:1094:void ReleaseOutStream() -> g
    1097:1099:void ReleaseStreams() -> h
    1102:1120:void SetStreams$40e92230(java.io.InputStream,java.io.OutputStream) -> b
    1128:1136:void Code$1a48d2a1(java.io.InputStream,java.io.OutputStream) -> a
    1148:1152:void WriteCoderProperties(java.io.OutputStream) -> a
    1158:1183:void FillDistancesPrices() -> i
    1186:1189:void FillAlignPrices() -> j
    1195:1195:boolean SetAlgorithm$134632() -> a
    1199:1206:boolean SetDictionarySize(int) -> a
    1210:1212:boolean SetNumFastBytes(int) -> b
    1216:1223:boolean SetMatchFinder(int) -> c
    1227:1233:boolean SetLcLpPb(int,int,int) -> a
    1237:1238:void SetEndMarkerMode(boolean) -> a
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder -> com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder:
    short[] _choice -> a
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _lowCoder -> b
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _midCoder -> c
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder _highCoder -> d
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> e
    171:178:void Init(int) -> a
    182:196:void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> a
    199:214:void SetPrices(int,int,int[],int) -> a
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder -> com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder:
    int[] _prices -> f
    int _tableSize -> g
    int[] _counters -> h
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> i
    225:226:void SetTableSize(int) -> b
    229:229:int GetPrice(int,int) -> a
    233:235:void UpdateTable(int) -> d
    238:240:void UpdateTables(int) -> c
    244:246:void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> a
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder -> com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder:
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2[] m_Coders -> a
    int m_NumPrevBits -> b
    int m_NumPosBits -> c
    int m_PosMask -> d
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> e
    136:144:void Create(int,int) -> a
    147:150:void Init() -> a
    153:153:com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2 GetSubCoder(int,byte) -> a
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2 -> com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2:
    short[] m_Encoders -> a
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder this$1 -> b
    75:76:void Init() -> a
    79:85:void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte) -> a
    89:102:void EncodeMatched(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte,byte) -> a
    105:126:int GetPrice(boolean,byte,byte) -> a
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal -> com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal:
    int State -> a
    boolean Prev1IsChar -> b
    boolean Prev2 -> c
    int PosPrev2 -> d
    int BackPrev2 -> e
    int Price -> f
    int PosPrev -> g
    int BackPrev -> h
    int Backs0 -> i
    int Backs1 -> j
    int Backs2 -> k
    int Backs3 -> l
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> m
    270:272:void MakeAsChar() -> a
    275:278:void MakeAsShortRep() -> b
    281:281:boolean IsShortRep() -> c
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder -> com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder:
    short[] Models -> a
    int NumBitLevels -> b
    29:30:void Init() -> a
    33:36:int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> a
    40:48:int ReverseDecode(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> b
    53:61:int ReverseDecode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Decoder,int) -> a
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder -> com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder:
    short[] Models -> a
    int NumBitLevels -> b
    31:32:void Init() -> a
    35:42:void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int) -> a
    45:52:void ReverseEncode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int) -> b
    55:63:int GetPrice(int) -> a
    67:75:int ReverseGetPrice(int) -> b
    79:87:int ReverseGetPrice(short[],int,int,int) -> a
    92:99:void ReverseEncode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> a
com.badlogic.gdx.utils.compression.rangecoder.Decoder -> com.badlogic.gdx.utils.compression.rangecoder.Decoder:
    int kTopMask -> a
    int kNumBitModelTotalBits -> b
    int kBitModelTotal -> c
    int kNumMoveBits -> d
    int Range -> e
    int Code -> f
    java.io.InputStream Stream -> g
    34:35:void SetStream(java.io.InputStream) -> a
    38:39:void ReleaseStream() -> a
    42:46:void Init() -> b
    49:61:int DecodeDirectBits(int) -> a
    65:83:int DecodeBit(short[],int) -> a
    88:90:void InitBitModels(short[]) -> a
com.badlogic.gdx.utils.compression.rangecoder.Encoder -> com.badlogic.gdx.utils.compression.rangecoder.Encoder:
    int kTopMask -> a
    int kNumBitModelTotalBits -> b
    int kBitModelTotal -> c
    int kNumMoveBits -> d
    java.io.OutputStream Stream -> e
    long Low -> f
    int Range -> g
    int _cacheSize -> h
    int _cache -> i
    long _position -> j
    int kNumMoveReducingBits -> k
    int kNumBitPriceShiftBits -> l
    int[] ProbPrices -> m
    38:39:void SetStream(java.io.OutputStream) -> a
    42:43:void ReleaseStream() -> a
    46:51:void Init() -> b
    54:56:void FlushData() -> c
    59:60:void FlushStream() -> d
    63:75:void ShiftLow() -> f
    78:86:void EncodeDirectBits(int,int) -> a
    89:89:long GetProcessedSizeAdd() -> e
    96:98:void InitBitModels(short[]) -> a
    101:115:void Encode(short[],int,int) -> a
    130:130:int GetPrice(int,int) -> b
    134:134:int GetPrice0(int) -> a
    138:138:int GetPrice1(int) -> b
com.esotericsoftware.tablelayout.BaseTableLayout -> com.esotericsoftware.tablelayout.BaseTableLayout:
    int CENTER -> CENTER
    int TOP -> TOP
    int BOTTOM -> BOTTOM
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    com.esotericsoftware.tablelayout.Toolkit toolkit -> toolkit
    java.lang.Object table -> table
    int columns -> columns
    int rows -> rows
    java.util.ArrayList cells -> cells
    com.esotericsoftware.tablelayout.Cell cellDefaults -> cellDefaults
    java.util.ArrayList columnDefaults -> columnDefaults
    com.esotericsoftware.tablelayout.Cell rowDefaults -> rowDefaults
    boolean sizeInvalid -> sizeInvalid
    float[] columnMinWidth -> columnMinWidth
    float[] rowMinHeight -> rowMinHeight
    float[] columnPrefWidth -> columnPrefWidth
    float[] rowPrefHeight -> rowPrefHeight
    float tableMinWidth -> tableMinWidth
    float tableMinHeight -> tableMinHeight
    float tablePrefWidth -> tablePrefWidth
    float tablePrefHeight -> tablePrefHeight
    float[] columnWidth -> columnWidth
    float[] rowHeight -> rowHeight
    float[] expandWidth -> expandWidth
    float[] expandHeight -> expandHeight
    float[] columnWeightedWidth -> columnWeightedWidth
    float[] rowWeightedHeight -> rowWeightedHeight
    com.esotericsoftware.tablelayout.Value padTop -> padTop
    com.esotericsoftware.tablelayout.Value padLeft -> padLeft
    com.esotericsoftware.tablelayout.Value padBottom -> padBottom
    com.esotericsoftware.tablelayout.Value padRight -> padRight
    int align -> align
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug debug -> debug
    79:80:void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    87:123:com.esotericsoftware.tablelayout.Cell add(java.lang.Object) -> add
    129:131:com.esotericsoftware.tablelayout.Cell row() -> row
    135:145:void endRow() -> endRow
    150:160:com.esotericsoftware.tablelayout.Cell columnDefaults(int) -> columnDefaults
    166:176:void reset() -> reset
    180:189:void clear() -> clear
    193:197:com.esotericsoftware.tablelayout.Cell getCell(java.lang.Object) -> getCell
    202:202:java.util.List getCells() -> getCells
    206:207:void setToolkit(com.esotericsoftware.tablelayout.Toolkit) -> setToolkit
    211:211:java.lang.Object getTable() -> getTable
    216:217:void setTable(java.lang.Object) -> setTable
    221:222:float getMinWidth() -> getMinWidth
    227:228:float getMinHeight() -> getMinHeight
    233:234:float getPrefWidth() -> getPrefWidth
    239:240:float getPrefHeight() -> getPrefHeight
    245:245:com.esotericsoftware.tablelayout.Cell defaults() -> defaults
    250:255:com.esotericsoftware.tablelayout.BaseTableLayout pad(com.esotericsoftware.tablelayout.Value) -> pad
    259:264:com.esotericsoftware.tablelayout.BaseTableLayout pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> pad
    269:271:com.esotericsoftware.tablelayout.BaseTableLayout padTop(com.esotericsoftware.tablelayout.Value) -> padTop
    276:278:com.esotericsoftware.tablelayout.BaseTableLayout padLeft(com.esotericsoftware.tablelayout.Value) -> padLeft
    283:285:com.esotericsoftware.tablelayout.BaseTableLayout padBottom(com.esotericsoftware.tablelayout.Value) -> padBottom
    290:292:com.esotericsoftware.tablelayout.BaseTableLayout padRight(com.esotericsoftware.tablelayout.Value) -> padRight
    297:302:com.esotericsoftware.tablelayout.BaseTableLayout pad(float) -> pad
    306:311:com.esotericsoftware.tablelayout.BaseTableLayout pad(float,float,float,float) -> pad
    316:318:com.esotericsoftware.tablelayout.BaseTableLayout padTop(float) -> padTop
    323:325:com.esotericsoftware.tablelayout.BaseTableLayout padLeft(float) -> padLeft
    330:332:com.esotericsoftware.tablelayout.BaseTableLayout padBottom(float) -> padBottom
    337:339:com.esotericsoftware.tablelayout.BaseTableLayout padRight(float) -> padRight
    345:346:com.esotericsoftware.tablelayout.BaseTableLayout align(int) -> align
    351:352:com.esotericsoftware.tablelayout.BaseTableLayout center() -> center
    357:359:com.esotericsoftware.tablelayout.BaseTableLayout top() -> top
    364:366:com.esotericsoftware.tablelayout.BaseTableLayout left() -> left
    371:373:com.esotericsoftware.tablelayout.BaseTableLayout bottom() -> bottom
    378:380:com.esotericsoftware.tablelayout.BaseTableLayout right() -> right
    385:387:com.esotericsoftware.tablelayout.BaseTableLayout debug() -> debug
    392:394:com.esotericsoftware.tablelayout.BaseTableLayout debugTable() -> debugTable
    399:401:com.esotericsoftware.tablelayout.BaseTableLayout debugCell() -> debugCell
    406:408:com.esotericsoftware.tablelayout.BaseTableLayout debugWidget() -> debugWidget
    413:418:com.esotericsoftware.tablelayout.BaseTableLayout debug(com.esotericsoftware.tablelayout.BaseTableLayout$Debug) -> debug
    422:422:com.esotericsoftware.tablelayout.BaseTableLayout$Debug getDebug() -> getDebug
    426:426:com.esotericsoftware.tablelayout.Value getPadTopValue() -> getPadTopValue
    430:430:float getPadTop() -> getPadTop
    434:434:com.esotericsoftware.tablelayout.Value getPadLeftValue() -> getPadLeftValue
    438:438:float getPadLeft() -> getPadLeft
    442:442:com.esotericsoftware.tablelayout.Value getPadBottomValue() -> getPadBottomValue
    446:446:float getPadBottom() -> getPadBottom
    450:450:com.esotericsoftware.tablelayout.Value getPadRightValue() -> getPadRightValue
    454:454:float getPadRight() -> getPadRight
    458:458:int getAlign() -> getAlign
    463:476:int getRow(float) -> getRow
    480:483:float[] ensureSize(float[],int) -> ensureSize
    487:487:float w(com.esotericsoftware.tablelayout.Value) -> w
    491:491:float h(com.esotericsoftware.tablelayout.Value) -> h
    495:495:float w(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Cell) -> w
    499:499:float h(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Cell) -> h
    503:662:void computeSize() -> computeSize
    667:893:void layout(float,float,float,float) -> layout
com.esotericsoftware.tablelayout.BaseTableLayout$Debug -> com.esotericsoftware.tablelayout.BaseTableLayout$Debug:
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug none -> a
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug all -> b
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug table -> c
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug cell -> d
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug widget -> e
    com.esotericsoftware.tablelayout.BaseTableLayout$Debug[] $VALUES -> f
    46:46:com.esotericsoftware.tablelayout.BaseTableLayout$Debug[] values() -> values
    46:46:com.esotericsoftware.tablelayout.BaseTableLayout$Debug valueOf(java.lang.String) -> valueOf
com.esotericsoftware.tablelayout.Cell -> com.esotericsoftware.tablelayout.a:
    com.esotericsoftware.tablelayout.Value minWidth -> a
    com.esotericsoftware.tablelayout.Value minHeight -> b
    com.esotericsoftware.tablelayout.Value prefWidth -> c
    com.esotericsoftware.tablelayout.Value prefHeight -> d
    com.esotericsoftware.tablelayout.Value maxWidth -> e
    com.esotericsoftware.tablelayout.Value maxHeight -> f
    com.esotericsoftware.tablelayout.Value spaceTop -> g
    com.esotericsoftware.tablelayout.Value spaceLeft -> h
    com.esotericsoftware.tablelayout.Value spaceBottom -> i
    com.esotericsoftware.tablelayout.Value spaceRight -> j
    com.esotericsoftware.tablelayout.Value padTop -> k
    com.esotericsoftware.tablelayout.Value padLeft -> l
    com.esotericsoftware.tablelayout.Value padBottom -> m
    com.esotericsoftware.tablelayout.Value padRight -> n
    java.lang.Float fillX -> o
    java.lang.Float fillY -> p
    java.lang.Integer align -> q
    java.lang.Integer expandX -> r
    java.lang.Integer expandY -> s
    java.lang.Boolean ignore -> t
    java.lang.Integer colspan -> u
    java.lang.Boolean uniformX -> v
    java.lang.Boolean uniformY -> w
    java.lang.Object widget -> x
    float widgetX -> y
    float widgetY -> z
    float widgetWidth -> A
    float widgetHeight -> B
    com.esotericsoftware.tablelayout.BaseTableLayout layout -> K
    boolean endRow -> C
    int column -> D
    int row -> E
    int cellAboveIndex -> F
    float computedPadTop -> G
    float computedPadLeft -> H
    float computedPadBottom -> I
    float computedPadRight -> J
    64:87:void set(com.esotericsoftware.tablelayout.Cell) -> a
    90:114:void merge(com.esotericsoftware.tablelayout.Cell) -> b
    118:119:com.esotericsoftware.tablelayout.Cell setWidget(java.lang.Object) -> a
    124:124:java.lang.Object getWidget() -> a
    129:129:boolean hasWidget() -> t
    134:140:com.esotericsoftware.tablelayout.Cell size(com.esotericsoftware.tablelayout.Value) -> a
    145:151:com.esotericsoftware.tablelayout.Cell size(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> a
    156:157:com.esotericsoftware.tablelayout.Cell size(float) -> n
    162:163:com.esotericsoftware.tablelayout.Cell size(float,float) -> a
    168:171:com.esotericsoftware.tablelayout.Cell width(com.esotericsoftware.tablelayout.Value) -> b
    176:177:com.esotericsoftware.tablelayout.Cell width(float) -> a
    182:185:com.esotericsoftware.tablelayout.Cell height(com.esotericsoftware.tablelayout.Value) -> c
    190:191:com.esotericsoftware.tablelayout.Cell height(float) -> b
    196:198:com.esotericsoftware.tablelayout.Cell minSize(com.esotericsoftware.tablelayout.Value) -> d
    203:205:com.esotericsoftware.tablelayout.Cell minSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> b
    209:210:com.esotericsoftware.tablelayout.Cell minWidth(com.esotericsoftware.tablelayout.Value) -> e
    214:215:com.esotericsoftware.tablelayout.Cell minHeight(com.esotericsoftware.tablelayout.Value) -> f
    220:222:com.esotericsoftware.tablelayout.Cell minSize(float) -> o
    227:229:com.esotericsoftware.tablelayout.Cell minSize(float,float) -> b
    233:234:com.esotericsoftware.tablelayout.Cell minWidth(float) -> p
    238:239:com.esotericsoftware.tablelayout.Cell minHeight(float) -> q
    244:246:com.esotericsoftware.tablelayout.Cell prefSize(com.esotericsoftware.tablelayout.Value) -> g
    251:253:com.esotericsoftware.tablelayout.Cell prefSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> c
    257:258:com.esotericsoftware.tablelayout.Cell prefWidth(com.esotericsoftware.tablelayout.Value) -> h
    262:263:com.esotericsoftware.tablelayout.Cell prefHeight(com.esotericsoftware.tablelayout.Value) -> i
    268:270:com.esotericsoftware.tablelayout.Cell prefSize(float,float) -> c
    275:277:com.esotericsoftware.tablelayout.Cell prefSize(float) -> r
    281:282:com.esotericsoftware.tablelayout.Cell prefWidth(float) -> s
    286:287:com.esotericsoftware.tablelayout.Cell prefHeight(float) -> t
    292:294:com.esotericsoftware.tablelayout.Cell maxSize(com.esotericsoftware.tablelayout.Value) -> j
    299:301:com.esotericsoftware.tablelayout.Cell maxSize(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> d
    305:306:com.esotericsoftware.tablelayout.Cell maxWidth(com.esotericsoftware.tablelayout.Value) -> k
    310:311:com.esotericsoftware.tablelayout.Cell maxHeight(com.esotericsoftware.tablelayout.Value) -> l
    316:318:com.esotericsoftware.tablelayout.Cell maxSize(float) -> u
    323:325:com.esotericsoftware.tablelayout.Cell maxSize(float,float) -> d
    329:330:com.esotericsoftware.tablelayout.Cell maxWidth(float) -> v
    334:335:com.esotericsoftware.tablelayout.Cell maxHeight(float) -> w
    340:344:com.esotericsoftware.tablelayout.Cell space(com.esotericsoftware.tablelayout.Value) -> m
    348:352:com.esotericsoftware.tablelayout.Cell space(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> a
    356:357:com.esotericsoftware.tablelayout.Cell spaceTop(com.esotericsoftware.tablelayout.Value) -> n
    361:362:com.esotericsoftware.tablelayout.Cell spaceLeft(com.esotericsoftware.tablelayout.Value) -> o
    366:367:com.esotericsoftware.tablelayout.Cell spaceBottom(com.esotericsoftware.tablelayout.Value) -> p
    371:372:com.esotericsoftware.tablelayout.Cell spaceRight(com.esotericsoftware.tablelayout.Value) -> q
    377:383:com.esotericsoftware.tablelayout.Cell space(float) -> c
    387:395:com.esotericsoftware.tablelayout.Cell space(float,float,float,float) -> b
    399:401:com.esotericsoftware.tablelayout.Cell spaceTop$65660d43() -> b
    405:407:com.esotericsoftware.tablelayout.Cell spaceLeft$65660d43() -> c
    411:413:com.esotericsoftware.tablelayout.Cell spaceBottom(float) -> d
    417:419:com.esotericsoftware.tablelayout.Cell spaceRight$65660d43() -> d
    424:428:com.esotericsoftware.tablelayout.Cell pad(com.esotericsoftware.tablelayout.Value) -> r
    432:436:com.esotericsoftware.tablelayout.Cell pad(com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value,com.esotericsoftware.tablelayout.Value) -> b
    440:441:com.esotericsoftware.tablelayout.Cell padTop(com.esotericsoftware.tablelayout.Value) -> s
    445:446:com.esotericsoftware.tablelayout.Cell padLeft(com.esotericsoftware.tablelayout.Value) -> t
    450:451:com.esotericsoftware.tablelayout.Cell padBottom(com.esotericsoftware.tablelayout.Value) -> u
    455:456:com.esotericsoftware.tablelayout.Cell padRight(com.esotericsoftware.tablelayout.Value) -> v
    461:466:com.esotericsoftware.tablelayout.Cell pad(float) -> e
    470:474:com.esotericsoftware.tablelayout.Cell pad(float,float,float,float) -> a
    478:479:com.esotericsoftware.tablelayout.Cell padTop(float) -> f
    483:484:com.esotericsoftware.tablelayout.Cell padLeft(float) -> g
    488:489:com.esotericsoftware.tablelayout.Cell padBottom(float) -> h
    493:494:com.esotericsoftware.tablelayout.Cell padRight(float) -> i
    499:501:com.esotericsoftware.tablelayout.Cell fill() -> e
    506:507:com.esotericsoftware.tablelayout.Cell fillX() -> f
    512:513:com.esotericsoftware.tablelayout.Cell fillY() -> g
    517:519:com.esotericsoftware.tablelayout.Cell fill(java.lang.Float,java.lang.Float) -> a
    524:526:com.esotericsoftware.tablelayout.Cell fill(boolean,boolean) -> a
    531:533:com.esotericsoftware.tablelayout.Cell fill(boolean) -> a
    539:540:com.esotericsoftware.tablelayout.Cell align(java.lang.Integer) -> b
    545:546:com.esotericsoftware.tablelayout.Cell center() -> h
    551:557:com.esotericsoftware.tablelayout.Cell top() -> i
    562:568:com.esotericsoftware.tablelayout.Cell left() -> j
    573:579:com.esotericsoftware.tablelayout.Cell bottom() -> u
    584:590:com.esotericsoftware.tablelayout.Cell right() -> k
    595:597:com.esotericsoftware.tablelayout.Cell expand() -> l
    602:603:com.esotericsoftware.tablelayout.Cell expandX() -> v
    608:609:com.esotericsoftware.tablelayout.Cell expandY() -> w
    613:615:com.esotericsoftware.tablelayout.Cell expand(java.lang.Integer,java.lang.Integer) -> a
    620:622:com.esotericsoftware.tablelayout.Cell expand(boolean,boolean) -> b
    626:627:com.esotericsoftware.tablelayout.Cell ignore(java.lang.Boolean) -> a
    632:633:com.esotericsoftware.tablelayout.Cell ignore() -> x
    637:637:boolean getIgnore() -> m
    641:642:com.esotericsoftware.tablelayout.Cell colspan(java.lang.Integer) -> a
    647:649:com.esotericsoftware.tablelayout.Cell uniform() -> y
    654:655:com.esotericsoftware.tablelayout.Cell uniformX() -> n
    660:661:com.esotericsoftware.tablelayout.Cell uniformY() -> z
    665:667:com.esotericsoftware.tablelayout.Cell uniform(java.lang.Boolean,java.lang.Boolean) -> a
    671:671:float getWidgetX() -> o
    675:676:void setWidgetX(float) -> j
    679:679:float getWidgetY() -> p
    683:684:void setWidgetY(float) -> k
    687:687:float getWidgetWidth() -> q
    691:692:void setWidgetWidth(float) -> l
    695:695:float getWidgetHeight() -> r
    699:700:void setWidgetHeight(float) -> m
    703:703:int getColumn() -> A
    707:707:int getRow() -> B
    712:712:com.esotericsoftware.tablelayout.Value getMinWidthValue() -> C
    716:716:float getMinWidth() -> D
    721:721:com.esotericsoftware.tablelayout.Value getMinHeightValue() -> E
    725:725:float getMinHeight() -> F
    730:730:com.esotericsoftware.tablelayout.Value getPrefWidthValue() -> G
    734:734:float getPrefWidth() -> H
    739:739:com.esotericsoftware.tablelayout.Value getPrefHeightValue() -> I
    743:743:float getPrefHeight() -> J
    748:748:com.esotericsoftware.tablelayout.Value getMaxWidthValue() -> K
    752:752:float getMaxWidth() -> L
    757:757:com.esotericsoftware.tablelayout.Value getMaxHeightValue() -> M
    761:761:float getMaxHeight() -> N
    766:766:com.esotericsoftware.tablelayout.Value getSpaceTopValue() -> O
    770:770:float getSpaceTop() -> P
    775:775:com.esotericsoftware.tablelayout.Value getSpaceLeftValue() -> Q
    779:779:float getSpaceLeft() -> R
    784:784:com.esotericsoftware.tablelayout.Value getSpaceBottomValue() -> S
    788:788:float getSpaceBottom() -> T
    793:793:com.esotericsoftware.tablelayout.Value getSpaceRightValue() -> U
    797:797:float getSpaceRight() -> V
    802:802:com.esotericsoftware.tablelayout.Value getPadTopValue() -> W
    806:806:float getPadTop() -> X
    811:811:com.esotericsoftware.tablelayout.Value getPadLeftValue() -> Y
    815:815:float getPadLeft() -> Z
    820:820:com.esotericsoftware.tablelayout.Value getPadBottomValue() -> aa
    824:824:float getPadBottom() -> ab
    829:829:com.esotericsoftware.tablelayout.Value getPadRightValue() -> ac
    833:833:float getPadRight() -> ad
    838:838:java.lang.Float getFillX() -> ae
    843:843:java.lang.Float getFillY() -> af
    848:848:java.lang.Integer getAlign() -> ag
    853:853:java.lang.Integer getExpandX() -> ah
    858:858:java.lang.Integer getExpandY() -> ai
    863:863:java.lang.Integer getColspan() -> aj
    868:868:java.lang.Boolean getUniformX() -> ak
    873:873:java.lang.Boolean getUniformY() -> al
    878:878:boolean isEndRow() -> am
    883:883:float getComputedPadTop() -> an
    888:888:float getComputedPadLeft() -> ao
    893:893:float getComputedPadBottom() -> ap
    898:898:float getComputedPadRight() -> aq
    902:902:com.esotericsoftware.tablelayout.Cell row() -> ar
    906:906:com.esotericsoftware.tablelayout.BaseTableLayout getLayout() -> s
    910:932:com.esotericsoftware.tablelayout.Cell defaults(com.esotericsoftware.tablelayout.BaseTableLayout) -> a
com.esotericsoftware.tablelayout.Toolkit -> com.esotericsoftware.tablelayout.b:
    com.esotericsoftware.tablelayout.Toolkit instance -> instance
    void addChild(java.lang.Object,java.lang.Object) -> addChild
    void removeChild(java.lang.Object,java.lang.Object) -> removeChild
    float getMinWidth(java.lang.Object) -> getMinWidth
    float getMinHeight(java.lang.Object) -> getMinHeight
    float getPrefWidth(java.lang.Object) -> getPrefWidth
    float getPrefHeight(java.lang.Object) -> getPrefHeight
    float getMaxWidth(java.lang.Object) -> getMaxWidth
    float getMaxHeight(java.lang.Object) -> getMaxHeight
    float getWidth(java.lang.Object) -> getWidth
    float getHeight(java.lang.Object) -> getHeight
    void clearDebugRectangles(com.esotericsoftware.tablelayout.BaseTableLayout) -> clearDebugRectangles
    void addDebugRectangle(com.esotericsoftware.tablelayout.BaseTableLayout,com.esotericsoftware.tablelayout.BaseTableLayout$Debug,float,float,float,float) -> addDebugRectangle
    65:69:void setWidget(com.esotericsoftware.tablelayout.BaseTableLayout,com.esotericsoftware.tablelayout.Cell,java.lang.Object) -> setWidget
    76:76:float width(float) -> width
    84:84:float height(float) -> height
com.esotericsoftware.tablelayout.Value -> com.esotericsoftware.tablelayout.c:
    com.esotericsoftware.tablelayout.Value zero -> a
    com.esotericsoftware.tablelayout.Value minWidth -> b
    com.esotericsoftware.tablelayout.Value minHeight -> c
    com.esotericsoftware.tablelayout.Value prefWidth -> d
    com.esotericsoftware.tablelayout.Value prefHeight -> e
    com.esotericsoftware.tablelayout.Value maxWidth -> f
    com.esotericsoftware.tablelayout.Value maxHeight -> g
    float get(java.lang.Object) -> a
    float get(com.esotericsoftware.tablelayout.Cell) -> a
    43:43:float width(java.lang.Object) -> b
    48:48:float height(java.lang.Object) -> c
    53:53:float width(com.esotericsoftware.tablelayout.Cell) -> b
    58:58:float height(com.esotericsoftware.tablelayout.Cell) -> c
    172:172:com.esotericsoftware.tablelayout.Value percentWidth(float) -> a
    181:181:com.esotericsoftware.tablelayout.Value percentHeight(float) -> b
    190:190:com.esotericsoftware.tablelayout.Value percentWidth(float,java.lang.Object) -> a
    203:203:com.esotericsoftware.tablelayout.Value percentHeight(float,java.lang.Object) -> b
com.esotericsoftware.tablelayout.Value$1 -> com.esotericsoftware.tablelayout.d:
    64:64:float get(com.esotericsoftware.tablelayout.Cell) -> a
    68:68:float get(java.lang.Object) -> a
com.esotericsoftware.tablelayout.Value$10 -> com.esotericsoftware.tablelayout.e:
    java.lang.Object val$widget -> h
    float val$percent -> i
    192:192:float get(com.esotericsoftware.tablelayout.Cell) -> a
    196:196:float get(java.lang.Object) -> a
com.esotericsoftware.tablelayout.Value$11 -> com.esotericsoftware.tablelayout.f:
    java.lang.Object val$widget -> h
    float val$percent -> i
    205:205:float get(java.lang.Object) -> a
com.esotericsoftware.tablelayout.Value$2 -> com.esotericsoftware.tablelayout.g:
    113:116:float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$3 -> com.esotericsoftware.tablelayout.h:
    123:126:float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$4 -> com.esotericsoftware.tablelayout.i:
    133:136:float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$5 -> com.esotericsoftware.tablelayout.j:
    143:146:float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$6 -> com.esotericsoftware.tablelayout.k:
    153:156:float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$7 -> com.esotericsoftware.tablelayout.l:
    163:166:float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$8 -> com.esotericsoftware.tablelayout.m:
    float val$percent -> h
    174:174:float get(java.lang.Object) -> a
com.esotericsoftware.tablelayout.Value$9 -> com.esotericsoftware.tablelayout.n:
    float val$percent -> h
    183:183:float get(java.lang.Object) -> a
com.esotericsoftware.tablelayout.Value$CellValue -> com.esotericsoftware.tablelayout.o:
    76:76:float get(java.lang.Object) -> a
com.esotericsoftware.tablelayout.Value$FixedValue -> com.esotericsoftware.tablelayout.p:
    float value -> h
    98:99:void set(float) -> a
    102:102:float get(java.lang.Object) -> a
    106:106:float get(com.esotericsoftware.tablelayout.Cell) -> a
com.esotericsoftware.tablelayout.Value$TableValue -> com.esotericsoftware.tablelayout.q:
    84:84:float get(com.esotericsoftware.tablelayout.Cell) -> a
com.mazalearn.scienceengine.AbstractPlatformAdapter -> com.mazalearn.scienceengine.a:
    com.mazalearn.scienceengine.app.services.IMessage messages -> a
    com.mazalearn.scienceengine.app.utils.IPlatformAdapter$Platform platform -> b
    30:31:void browseURL(java.lang.String) -> a
    35:36:void showExternalURL(java.lang.String) -> b
    39:43:void showFileUri(com.badlogic.gdx.files.FileHandle) -> a
    47:48:void showInternalURL(java.lang.String) -> c
    52:52:boolean playVideo(java.io.File) -> a
    58:58:com.badlogic.gdx.scenes.scene2d.Stage createLevelEditor(com.mazalearn.scienceengine.core.controller.IScience2DController,com.mazalearn.scienceengine.app.screens.AbstractScreen) -> a
    63:66:com.mazalearn.scienceengine.app.services.IMessage getMsg() -> a
    71:71:com.mazalearn.scienceengine.app.utils.IPlatformAdapter$Platform getPlatform() -> b
    76:76:com.badlogic.gdx.graphics.g2d.BitmapFont loadFont(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String) -> a
    81:81:boolean supportsLanguage() -> c
    86:86:void takeSnapshot(com.badlogic.gdx.scenes.scene2d.Stage,com.mazalearn.scienceengine.Topic,com.mazalearn.scienceengine.Topic,int,int,int,int) -> a
    90:105:void launchPurchaseFlow(java.lang.String,com.mazalearn.scienceengine.billing.IBilling) -> a
    110:138:void queryInventory(java.util.List,com.mazalearn.scienceengine.billing.IBilling) -> a
    142:142:boolean supportsSpeech() -> d
    147:147:void provisionSpeech() -> e
    153:153:void speak(java.lang.String,boolean) -> a
com.mazalearn.scienceengine.AbstractPlatformAdapter$1 -> com.mazalearn.scienceengine.b:
    com.mazalearn.scienceengine.AbstractPlatformAdapter this$0 -> a
    com.mazalearn.scienceengine.billing.IBilling val$billing -> b
    java.lang.String val$productId -> c
    96:101:void run() -> run
com.mazalearn.scienceengine.AbstractPlatformAdapter$2 -> com.mazalearn.scienceengine.c:
    com.mazalearn.scienceengine.AbstractPlatformAdapter this$0 -> a
    com.mazalearn.scienceengine.billing.IBilling val$billing -> b
    com.mazalearn.scienceengine.billing.Inventory val$inventory -> c
    131:136:void run() -> run
com.mazalearn.scienceengine.AndroidPlatformAdapter -> com.mazalearn.scienceengine.d:
    int PAUSE_MS -> b
    com.badlogic.gdx.backends.android.AndroidApplication application -> c
    com.mazalearn.scienceengine.billing.IabHelper iabHelper -> d
    android.speech.tts.TextToSpeech textToSpeech -> e
    java.lang.String deviceId -> f
    java.lang.String HINDI_TTF -> g
    java.lang.String KANNADA_TTF -> h
    45:45:java.lang.String getDeviceId() -> f
    49:52:com.mazalearn.scienceengine.app.services.IMessage getMsg() -> a
    57:59:void browseURL(java.lang.String) -> a
    63:64:void showExternalURL(java.lang.String) -> b
    68:72:void showFileUri(java.lang.String,java.lang.String) -> a
    76:77:void showInternalURL(java.lang.String) -> c
    81:105:void launchPurchaseFlow(java.lang.String,com.mazalearn.scienceengine.billing.IBilling) -> a
    109:135:void queryInventory(java.util.List,com.mazalearn.scienceengine.billing.IBilling) -> a
    139:180:boolean verifyDeveloperPayload(com.mazalearn.scienceengine.billing.Purchase,java.lang.String) -> a
    185:190:boolean playVideo(java.io.File) -> a
    199:212:com.badlogic.gdx.graphics.g2d.BitmapFont loadFont(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String) -> a
    217:217:boolean supportsLanguage() -> c
    222:222:boolean supportsSpeech() -> d
    227:236:void speak(java.lang.String,boolean) -> a
    239:244:java.lang.String getUserEmail() -> i
    249:255:void provisionSpeech() -> e
    258:259:void setTts(android.speech.tts.TextToSpeech) -> a
    32:32:com.mazalearn.scienceengine.billing.IabHelper access$0(com.mazalearn.scienceengine.AndroidPlatformAdapter) -> a
com.mazalearn.scienceengine.AndroidPlatformAdapter$1 -> com.mazalearn.scienceengine.e:
    com.mazalearn.scienceengine.AndroidPlatformAdapter this$0 -> a
    com.mazalearn.scienceengine.billing.IBilling val$billing -> b
    java.lang.String val$productId -> c
    91:103:void onIabPurchaseFinished(com.mazalearn.scienceengine.billing.IabResult,com.mazalearn.scienceengine.billing.Purchase) -> a
com.mazalearn.scienceengine.AndroidPlatformAdapter$2 -> com.mazalearn.scienceengine.f:
    com.mazalearn.scienceengine.AndroidPlatformAdapter this$0 -> a
    java.util.List val$productList -> b
    com.mazalearn.scienceengine.billing.IBilling val$billing -> c
    121:133:void run() -> run
com.mazalearn.scienceengine.AndroidPlatformAdapter$2$1 -> com.mazalearn.scienceengine.g:
    com.mazalearn.scienceengine.AndroidPlatformAdapter$2 this$1 -> a
    com.mazalearn.scienceengine.billing.IBilling val$billing -> b
    125:131:void onQueryInventoryFinished(com.mazalearn.scienceengine.billing.IabResult,com.mazalearn.scienceengine.billing.Inventory) -> a
com.mazalearn.scienceengine.BasicMessages -> com.mazalearn.scienceengine.h:
    java.util.Map i18nMap -> a
    43:47:java.lang.String getString(java.lang.String) -> a
    52:52:java.lang.String getLanguage() -> a
    57:57:void setLanguage(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String) -> a
    61:103:void setFont(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
com.mazalearn.scienceengine.BuildConfig -> com.mazalearn.scienceengine.i:
    boolean DEBUG -> a
com.mazalearn.scienceengine.CustomExceptionHandler -> com.mazalearn.scienceengine.j:
    java.lang.Thread$UncaughtExceptionHandler defaultUEH -> a
    java.lang.String localPath -> b
    java.lang.String url -> c
    41:57:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    60:71:void writeToFile(java.lang.String,java.lang.String) -> a
    74:86:void sendToServer(java.lang.String,java.lang.String) -> b
com.mazalearn.scienceengine.DevMode -> com.mazalearn.scienceengine.k:
    int DEBUG -> a
    int DESIGN -> b
    int BILLING_DUMMY -> c
    int DEV_MODE -> d
    10:10:boolean isCheckMode(int) -> a
    13:18:void setMode$2563266(int) -> b
    20:21:void setDebug$1385ff() -> a
    23:24:void setDesign$1385ff() -> b
    26:27:void setDummyBilling$1385ff() -> c
    29:29:boolean isDebug() -> d
    32:32:boolean isDummyBilling() -> e
    35:35:boolean isDesign() -> f
com.mazalearn.scienceengine.Device -> com.mazalearn.scienceengine.Device:
    com.mazalearn.scienceengine.Device Android -> a
    com.mazalearn.scienceengine.Device Nexus7 -> b
    com.mazalearn.scienceengine.Device IPad -> c
    com.mazalearn.scienceengine.Device IPhone -> d
    com.mazalearn.scienceengine.Device IPhone4 -> e
    com.mazalearn.scienceengine.Device IPhone5 -> f
    com.mazalearn.scienceengine.Device Desktop -> g
    com.mazalearn.scienceengine.Device GalaxyY -> h
    com.mazalearn.scienceengine.Device GalaxyS3 -> i
    com.mazalearn.scienceengine.Device GalaxyS4 -> j
    int height -> height
    int width -> width
    com.mazalearn.scienceengine.Device[] ENUM$VALUES -> k
    1:1:com.mazalearn.scienceengine.Device[] values() -> values
    1:1:com.mazalearn.scienceengine.Device valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.Installation -> com.mazalearn.scienceengine.l:
    java.lang.String sID -> a
    java.lang.String INSTALLATION -> b
    14:47:java.lang.String id(java.lang.String,java.lang.String) -> a
com.mazalearn.scienceengine.JsonSerializable -> com.mazalearn.scienceengine.JsonSerializable:
com.mazalearn.scienceengine.MainActivity -> com.mazalearn.scienceengine.MainActivity:
    int TTS_CHECK -> e
    com.mazalearn.scienceengine.billing.IabHelper iabHelper -> f
    com.mazalearn.scienceengine.AndroidPlatformAdapter platformAdapter -> g
    android.speech.tts.TextToSpeech mTts -> h
    36:65:void onCreate(android.os.Bundle) -> onCreate
    68:86:void provisionBilling() -> b
    89:89:java.lang.String findAndroidId() -> c
    94:107:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    110:141:void provisionTtsEngine(int) -> a
    145:148:void exit() -> exit
    152:164:void onDestroy() -> onDestroy
    167:180:void syncPurchaseItems() -> a
    32:32:void access$0$7da5458f(com.mazalearn.scienceengine.MainActivity) -> a
    32:32:android.speech.tts.TextToSpeech access$1(com.mazalearn.scienceengine.MainActivity) -> b
    31:31:com.mazalearn.scienceengine.AndroidPlatformAdapter access$2(com.mazalearn.scienceengine.MainActivity) -> c
com.mazalearn.scienceengine.MainActivity$1 -> com.mazalearn.scienceengine.m:
    com.mazalearn.scienceengine.MainActivity this$0 -> a
    76:84:void onIabSetupFinished(com.mazalearn.scienceengine.billing.IabResult) -> a
com.mazalearn.scienceengine.MainActivity$2 -> com.mazalearn.scienceengine.n:
    com.mazalearn.scienceengine.MainActivity this$0 -> a
    115:133:void onInit(int) -> onInit
com.mazalearn.scienceengine.MainActivity$3 -> com.mazalearn.scienceengine.o:
    com.mazalearn.scienceengine.MainActivity this$0 -> a
    170:178:void onQueryInventoryFinished(com.mazalearn.scienceengine.billing.IabResult,com.mazalearn.scienceengine.billing.Inventory) -> a
com.mazalearn.scienceengine.Messages -> com.mazalearn.scienceengine.p:
    java.lang.String BUNDLE_NAME -> a
    java.util.Locale locale -> b
    com.mazalearn.scienceengine.app.utils.IPlatformAdapter$Platform platform -> c
    java.util.ResourceBundle resourceBundle -> d
    23:27:java.lang.String getString(java.lang.String) -> a
    32:32:java.lang.String getLanguage() -> a
    36:39:void setLanguage(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String) -> a
    1:1:void setFont(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
com.mazalearn.scienceengine.NonWebPlatformAdapter -> com.mazalearn.scienceengine.q:
    java.lang.String BODY_DELIMITER -> b
    byte[] responseBytes -> c
    33:33:com.badlogic.gdx.scenes.scene2d.Stage createLevelEditor(com.mazalearn.scienceengine.core.controller.IScience2DController,com.mazalearn.scienceengine.app.screens.AbstractScreen) -> a
    38:40:void getBytes(com.badlogic.gdx.graphics.Pixmap,byte[]) -> a
    44:48:void putBytes(com.badlogic.gdx.graphics.Pixmap,byte[]) -> b
    53:55:byte[] pixmap2Bytes(com.badlogic.gdx.graphics.Pixmap) -> a
    62:65:com.badlogic.gdx.graphics.Pixmap bytes2Pixmap(byte[]) -> a
    71:99:java.lang.String httpPost(java.lang.String,java.lang.String,java.util.Map,byte[]) -> a
    104:135:java.lang.String httpGet(java.lang.String) -> d
    140:156:java.lang.String getResponseBody(java.io.InputStream) -> a
    161:170:java.lang.String makeHeaderString(java.lang.String,java.lang.String,java.util.Map,int,java.lang.String) -> a
    175:176:void takeSnapshot(com.badlogic.gdx.scenes.scene2d.Stage,com.mazalearn.scienceengine.Topic,com.mazalearn.scienceengine.Topic,int,int,int,int) -> a
    180:180:java.lang.String getInstallationId() -> g
    185:185:java.lang.String getDeviceId() -> f
    190:192:void executeAsync(java.lang.Runnable) -> a
    196:196:boolean supportsSync() -> h
com.mazalearn.scienceengine.R -> com.mazalearn.scienceengine.r:
com.mazalearn.scienceengine.R$attr -> com.mazalearn.scienceengine.s:
com.mazalearn.scienceengine.R$drawable -> com.mazalearn.scienceengine.t:
    int ic_launcher_scienceengine -> a
com.mazalearn.scienceengine.R$id -> com.mazalearn.scienceengine.u:
    int videoview -> a
    int webview -> b
com.mazalearn.scienceengine.R$layout -> com.mazalearn.scienceengine.v:
    int main -> a
    int videoplayer -> b
    int webview -> c
com.mazalearn.scienceengine.R$string -> com.mazalearn.scienceengine.w:
    int app_name -> a
    int video -> b
    int webview -> c
com.mazalearn.scienceengine.ScienceEngine -> com.mazalearn.scienceengine.x:
    java.lang.String USER -> a
    java.lang.String LOG -> b
    com.mazalearn.scienceengine.DevMode DEV_MODE -> c
    com.mazalearn.scienceengine.ScienceEngine SCIENCE_ENGINE -> d
    com.badlogic.gdx.graphics.FPSLogger fpsLogger -> e
    java.lang.String SKIN_BASE -> f
    com.mazalearn.scienceengine.app.services.PreferencesManager preferencesManager -> g
    com.mazalearn.scienceengine.app.services.MusicManager musicManager -> h
    com.mazalearn.scienceengine.app.services.SoundManager soundManager -> i
    com.mazalearn.scienceengine.app.utils.IPlatformAdapter platformAdapter -> j
    com.badlogic.gdx.assets.AssetManager assetManager -> k
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> l
    java.lang.String uri -> m
    java.util.Map atlasMap -> n
    com.mazalearn.scienceengine.core.model.Science2DBody selectedBody -> o
    boolean isProbeMode -> p
    com.mazalearn.scienceengine.app.services.EventLog eventLog -> q
    float time -> r
    java.util.Set pinnedBodies -> s
    long logicalTime -> t
    com.mazalearn.scienceengine.Device device -> u
    98:101:com.mazalearn.scienceengine.app.services.PreferencesManager getPreferencesManager() -> g
    105:105:com.mazalearn.scienceengine.app.services.MusicManager getMusicManager() -> h
    109:109:com.mazalearn.scienceengine.app.services.SoundManager getSoundManager() -> i
    113:123:com.badlogic.gdx.scenes.scene2d.ui.Skin getSkin() -> j
    129:130:void setPlatformAdapter(com.mazalearn.scienceengine.app.utils.IPlatformAdapter) -> a
    136:176:void create() -> a
    180:192:void resize(int,int) -> a
    206:235:com.mazalearn.scienceengine.app.screens.AbstractScreen createScreen(java.lang.String) -> d
    240:239:boolean isSupportedSubject(java.lang.String) -> e
    246:245:boolean isSupportedBoard(java.lang.String) -> f
    251:254:com.mazalearn.scienceengine.Topic findSupportedTopic(java.lang.String) -> g
    259:264:void render() -> b
    268:279:void dispose() -> e
    283:288:void pause() -> c
    292:294:void resume() -> d
    298:301:void setScreen(com.badlogic.gdx.Screen) -> a
    304:304:com.mazalearn.scienceengine.app.utils.IPlatformAdapter getPlatformAdapter() -> k
    308:308:com.mazalearn.scienceengine.app.services.IMessage getMsg() -> l
    312:312:com.mazalearn.scienceengine.core.model.Science2DBody getSelectedBody() -> m
    321:326:void selectBody(com.mazalearn.scienceengine.core.model.Science2DBody,com.mazalearn.scienceengine.core.view.IScience2DView) -> a
    334:338:void selectParameter(com.mazalearn.scienceengine.core.model.Science2DBody,com.mazalearn.scienceengine.core.model.IParameter,float,com.mazalearn.scienceengine.core.view.IScience2DView) -> a
    341:342:void selectParameter(com.mazalearn.scienceengine.core.model.Science2DBody,com.mazalearn.scienceengine.core.model.IParameter,boolean,com.mazalearn.scienceengine.core.view.IScience2DView) -> a
    345:346:void selectParameter$34529b6d(com.mazalearn.scienceengine.core.model.Science2DBody,com.mazalearn.scienceengine.core.model.IParameter,com.mazalearn.scienceengine.core.view.IScience2DView) -> a
    349:349:com.mazalearn.scienceengine.app.services.EventLog getEventLog() -> n
    353:360:void displayEntityStatus(com.mazalearn.scienceengine.core.model.Science2DBody,java.lang.String,com.mazalearn.scienceengine.core.view.IScience2DView) -> a
    363:369:void displayStatusMessage(com.badlogic.gdx.scenes.scene2d.Stage,com.mazalearn.scienceengine.StatusType,java.lang.String) -> a
    372:373:void setProbeMode(boolean) -> a
    380:380:boolean isProbeMode() -> o
    388:390:void addTimeElapsed(float) -> a
    393:393:float getTime() -> p
    397:397:boolean isPinned(com.mazalearn.scienceengine.core.model.Science2DBody) -> a
    401:406:void pin(com.mazalearn.scienceengine.core.model.Science2DBody,boolean) -> a
    409:410:void clearPins() -> q
    413:413:java.lang.String getUserEmail() -> v
    417:417:java.lang.String getUserName() -> r
    421:424:java.lang.String getHostPort() -> s
    429:429:long getLogicalTime() -> t
    433:435:void loadAtlas(java.lang.String) -> a
    438:440:void unloadAtlas(java.lang.String) -> b
    443:460:com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion(java.lang.String) -> c
    465:468:com.badlogic.gdx.assets.AssetManager getAssetManager() -> u
com.mazalearn.scienceengine.ScreenComponent -> com.mazalearn.scienceengine.ScreenComponent:
    com.mazalearn.scienceengine.ScreenComponent TopBar -> a
    com.mazalearn.scienceengine.ScreenComponent BottomBar -> b
    com.mazalearn.scienceengine.ScreenComponent Title -> c
    com.mazalearn.scienceengine.ScreenComponent Status -> d
    com.mazalearn.scienceengine.ScreenComponent User -> e
    com.mazalearn.scienceengine.ScreenComponent Back -> f
    com.mazalearn.scienceengine.ScreenComponent Help -> g
    com.mazalearn.scienceengine.ScreenComponent ViewControls -> h
    com.mazalearn.scienceengine.ScreenComponent ModelControls -> i
    com.mazalearn.scienceengine.ScreenComponent Logo -> j
    com.mazalearn.scienceengine.ScreenComponent Scoreboard -> k
    com.mazalearn.scienceengine.ScreenComponent Idea -> l
    com.mazalearn.scienceengine.ScreenComponent NextButton -> m
    com.mazalearn.scienceengine.ScreenComponent ImageMessageBox -> n
    com.mazalearn.scienceengine.ScreenComponent Goal -> o
    com.mazalearn.scienceengine.ScreenComponent McqOption -> p
    com.mazalearn.scienceengine.ScreenComponent TimeTracker -> q
    com.mazalearn.scienceengine.ScreenComponent McqProgressInfo -> r
    com.mazalearn.scienceengine.ScreenComponent Hint -> s
    int xOffset -> xOffset
    int yOffset -> yOffset
    com.badlogic.gdx.graphics.Color color -> color
    boolean inAllScreens -> inAllScreens
    boolean helpTour -> helpTour
    com.mazalearn.scienceengine.ScreenComponent$XAlign xAlign -> xAlign
    com.mazalearn.scienceengine.ScreenComponent$YAlign yAlign -> yAlign
    int canonicalWidth -> canonicalWidth
    int canonicalHeight -> canonicalHeight
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    int zIndex -> zIndex
    java.lang.String CORE_GROUP -> t
    java.lang.String TUTOR_GROUP -> u
    java.lang.String ACTIVITY_GROUP -> v
    java.lang.String HELP_TOUR -> w
    int PIXELS_PER_M -> z
    float X_SCALE -> A
    float Y_SCALE -> B
    int CANONICAL_VIEWPORT_HEIGHT -> E
    int CANONICAL_VIEWPORT_WIDTH -> F
    int VIEWPORT_HEIGHT -> C
    int VIEWPORT_WIDTH -> D
    int CANONICAL_FONT_SIZE -> G
    int FontSize -> H
    int[] AVAILABLE_FONT_SIZES -> I
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$ScreenComponent$XAlign -> J
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$ScreenComponent$YAlign -> K
    com.mazalearn.scienceengine.ScreenComponent[] ENUM$VALUES -> L
    118:118:float getWidth() -> getWidth
    125:125:float getHeight() -> getHeight
    128:128:float getX() -> getX
    129:129:float getY() -> getY
    132:137:float getX(float) -> a
    141:146:float getY(float) -> b
    149:149:com.badlogic.gdx.graphics.Color getColor() -> a
    152:152:java.lang.String getLocalizedName() -> b
    156:161:com.mazalearn.scienceengine.ScreenComponent valueOf(com.mazalearn.scienceengine.core.model.IComponentType) -> a
    165:165:boolean isInAllScreens() -> c
    169:169:boolean showInHelpTour() -> d
    173:173:float getScaledX(float) -> c
    177:177:float getScaledY(float) -> d
    181:182:void scaleSize(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> a
    185:186:void scalePosition(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> b
    189:191:void scalePositionAndSize(com.badlogic.gdx.scenes.scene2d.Actor,float,float,float,float) -> a
    194:210:void setSize(int,int) -> a
    217:223:int selectFontSize(int) -> a
    227:227:int getFontSize() -> e
    232:234:java.lang.String getFont(float) -> e
    239:239:java.lang.String getComponentType() -> f
    243:243:int getZIndex() -> g
    248:256:void showHelp(com.badlogic.gdx.scenes.scene2d.Stage,boolean) -> a
    1:1:com.mazalearn.scienceengine.ScreenComponent[] values() -> values
    1:1:com.mazalearn.scienceengine.ScreenComponent valueOf(java.lang.String) -> valueOf
    11:11:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$ScreenComponent$XAlign() -> h
    11:11:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$ScreenComponent$YAlign() -> i
com.mazalearn.scienceengine.ScreenComponent$XAlign -> com.mazalearn.scienceengine.ScreenComponent$XAlign:
    com.mazalearn.scienceengine.ScreenComponent$XAlign LEFT -> a
    com.mazalearn.scienceengine.ScreenComponent$XAlign CENTER -> b
    com.mazalearn.scienceengine.ScreenComponent$XAlign RIGHT -> c
    int base -> base
    com.mazalearn.scienceengine.ScreenComponent$XAlign[] ENUM$VALUES -> d
    37:37:float getValue(int) -> a
    1:1:com.mazalearn.scienceengine.ScreenComponent$XAlign[] values() -> values
    1:1:com.mazalearn.scienceengine.ScreenComponent$XAlign valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.ScreenComponent$YAlign -> com.mazalearn.scienceengine.ScreenComponent$YAlign:
    com.mazalearn.scienceengine.ScreenComponent$YAlign BOTTOM -> a
    com.mazalearn.scienceengine.ScreenComponent$YAlign MIDDLE -> b
    com.mazalearn.scienceengine.ScreenComponent$YAlign TOP -> c
    int base -> base
    com.mazalearn.scienceengine.ScreenComponent$YAlign[] ENUM$VALUES -> d
    49:49:float getValue(int) -> a
    1:1:com.mazalearn.scienceengine.ScreenComponent$YAlign[] values() -> values
    1:1:com.mazalearn.scienceengine.ScreenComponent$YAlign valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.StatusType -> com.mazalearn.scienceengine.StatusType:
    com.mazalearn.scienceengine.StatusType INFO -> a
    com.mazalearn.scienceengine.StatusType WARNING -> b
    com.mazalearn.scienceengine.StatusType ERROR -> c
    com.mazalearn.scienceengine.StatusType FATAL -> d
    com.badlogic.gdx.graphics.Color color -> color
    com.mazalearn.scienceengine.StatusType[] ENUM$VALUES -> e
    1:1:com.mazalearn.scienceengine.StatusType[] values() -> values
    1:1:com.mazalearn.scienceengine.StatusType valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.Topic -> com.mazalearn.scienceengine.Topic:
    com.mazalearn.scienceengine.Topic BarMagnet -> a
    com.mazalearn.scienceengine.Topic Field -> b
    com.mazalearn.scienceengine.Topic TwoWires -> c
    com.mazalearn.scienceengine.Topic ElectroMagnet -> d
    com.mazalearn.scienceengine.Topic BarMagnetInduction -> e
    com.mazalearn.scienceengine.Topic ElectroMagnetInduction -> f
    com.mazalearn.scienceengine.Topic DCMotor -> g
    com.mazalearn.scienceengine.Topic ElectromagnetismScienceTrain -> h
    com.mazalearn.scienceengine.Topic ElectromagnetismReview -> i
    com.mazalearn.scienceengine.Topic Electromagnetism -> j
    com.mazalearn.scienceengine.Topic SOM -> k
    com.mazalearn.scienceengine.Topic StatesOfMatterReview -> l
    com.mazalearn.scienceengine.Topic StatesOfMatter -> m
    com.mazalearn.scienceengine.Topic W -> n
    com.mazalearn.scienceengine.Topic WavesReview -> o
    com.mazalearn.scienceengine.Topic Waves -> p
    java.lang.String PRODUCT_PREFIX -> q
    com.mazalearn.scienceengine.Topic[] childTopics -> childTopics
    com.mazalearn.scienceengine.Topic canonicalChild -> canonicalChild
    int topicId -> topicId
    java.lang.String description -> description
    boolean isFree -> isFree
    java.util.Map idToTopicMap -> r
    com.mazalearn.scienceengine.Topic[] ENUM$VALUES -> s
    65:65:com.mazalearn.scienceengine.Topic getCanonicalChild() -> a
    69:69:com.mazalearn.scienceengine.Topic[] getChildren() -> b
    73:73:int getTopicId() -> c
    77:77:java.lang.String getDescription() -> d
    81:81:boolean isFree() -> e
    85:85:com.mazalearn.scienceengine.Topic idToTopic(int) -> a
    89:100:com.mazalearn.scienceengine.Topic fromProductId(java.lang.String) -> a
    104:104:java.lang.String toProductId() -> f
    1:1:com.mazalearn.scienceengine.Topic[] values() -> values
    1:1:com.mazalearn.scienceengine.Topic valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.VideoPlayer -> com.mazalearn.scienceengine.VideoPlayer:
    android.widget.VideoView mVideoView -> a
    17:34:void onCreate(android.os.Bundle) -> onCreate
    39:40:void onCompletion(android.media.MediaPlayer) -> onCompletion
com.mazalearn.scienceengine.WebViewActivity -> com.mazalearn.scienceengine.WebViewActivity:
    android.webkit.WebView myWebView -> a
    19:34:void onCreate(android.os.Bundle) -> onCreate
    38:39:void onCompletion(android.media.MediaPlayer) -> onCompletion
com.mazalearn.scienceengine.app.dialogs.AboutDialog -> com.mazalearn.scienceengine.app.dialogs.a:
    java.lang.String COPYRIGHTS_FILE -> a
    63:126:com.badlogic.gdx.scenes.scene2d.ui.Table createCopyrightsTable(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    150:155:com.mazalearn.scienceengine.app.dialogs.AboutDialog$Copyright[] loadCopyrights() -> a
com.mazalearn.scienceengine.app.dialogs.AboutDialog$1 -> com.mazalearn.scienceengine.app.dialogs.b:
    com.mazalearn.scienceengine.app.dialogs.AboutDialog this$0 -> a
    com.mazalearn.scienceengine.app.dialogs.AboutDialog$Copyright val$copyright -> b
    83:84:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.AboutDialog$2 -> com.mazalearn.scienceengine.app.dialogs.c:
    com.mazalearn.scienceengine.app.dialogs.AboutDialog this$0 -> a
    com.mazalearn.scienceengine.app.dialogs.AboutDialog$Copyright val$copyright -> b
    101:104:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.AboutDialog$3 -> com.mazalearn.scienceengine.app.dialogs.d:
    com.mazalearn.scienceengine.app.dialogs.AboutDialog this$0 -> a
    com.mazalearn.scienceengine.app.dialogs.AboutDialog$Copyright val$copyright -> b
    113:114:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.AboutDialog$Copyright -> com.mazalearn.scienceengine.app.dialogs.e:
    java.lang.String name -> a
    java.lang.String year -> b
    java.lang.String home -> c
    java.lang.String license -> d
    java.lang.String attribution -> e
    java.lang.String platform -> f
    138:145:java.lang.String toString$16915f7f() -> a
com.mazalearn.scienceengine.app.dialogs.AppRater -> com.mazalearn.scienceengine.app.dialogs.f:
    java.lang.String APP_TITLE -> a
    java.lang.String APP_PNAME -> b
    int DAYS_UNTIL_PROMPT -> c
    int LAUNCHES_UNTIL_PROMPT -> d
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$app$utils$IPlatformAdapter$Platform -> e
    25:88:void showRaterDialog(com.badlogic.gdx.scenes.scene2d.Stage,com.badlogic.gdx.scenes.scene2d.ui.Skin,com.mazalearn.scienceengine.app.services.Profile,boolean) -> a
    91:109:void appLaunched(com.badlogic.gdx.scenes.scene2d.Stage,com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    112:116:java.lang.String getPlatformStoreUrl() -> b
    17:17:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$app$utils$IPlatformAdapter$Platform() -> a
com.mazalearn.scienceengine.app.dialogs.AppRater$1 -> com.mazalearn.scienceengine.app.dialogs.g:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog val$dialog -> a
    56:59:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.AppRater$2 -> com.mazalearn.scienceengine.app.dialogs.h:
    com.mazalearn.scienceengine.app.services.Profile val$profile -> a
    com.badlogic.gdx.scenes.scene2d.ui.Dialog val$dialog -> b
    67:69:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.AppRater$3 -> com.mazalearn.scienceengine.app.dialogs.i:
    com.mazalearn.scienceengine.app.services.Profile val$profile -> a
    com.badlogic.gdx.scenes.scene2d.ui.Dialog val$dialog -> b
    78:80:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.ChangeFaceDialog -> com.mazalearn.scienceengine.app.dialogs.j:
    com.mazalearn.scienceengine.app.services.Profile profile -> a
    com.mazalearn.scienceengine.app.dialogs.UserHomeDialog parentDialog -> b
    62:63:void result(java.lang.Object) -> result
    18:18:com.mazalearn.scienceengine.app.services.Profile access$0(com.mazalearn.scienceengine.app.dialogs.ChangeFaceDialog) -> a
com.mazalearn.scienceengine.app.dialogs.ChangeFaceDialog$1 -> com.mazalearn.scienceengine.app.dialogs.k:
    com.mazalearn.scienceengine.app.dialogs.ChangeFaceDialog this$0 -> a
    com.mazalearn.scienceengine.core.view.DrawingActor val$face -> b
    com.badlogic.gdx.scenes.scene2d.ui.Image val$userImage -> c
    com.mazalearn.scienceengine.app.dialogs.UserHomeDialog val$parentDialog -> d
    51:55:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog -> com.mazalearn.scienceengine.app.dialogs.l:
    com.mazalearn.scienceengine.app.services.Profile profile -> a
    com.mazalearn.scienceengine.app.services.loaders.Trivia trivia -> b
    com.badlogic.gdx.scenes.scene2d.ui.Dialog parentDialog -> c
    com.mazalearn.scienceengine.app.services.ProfileData$Social$Message gift -> d
    com.badlogic.gdx.scenes.scene2d.ui.Button sendButton -> e
    com.badlogic.gdx.scenes.scene2d.ui.TextButton makeGift -> f
    99:116:com.badlogic.gdx.scenes.scene2d.Actor createCoinsChooser(com.badlogic.gdx.scenes.scene2d.ui.Skin,com.badlogic.gdx.scenes.scene2d.ui.Dialog) -> a
    120:124:void enableGifting(com.mazalearn.scienceengine.app.services.ProfileData$Social$Message) -> a
    127:171:com.badlogic.gdx.scenes.scene2d.Actor createFriendChooser(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    176:177:void result(java.lang.Object) -> result
    32:32:com.badlogic.gdx.scenes.scene2d.ui.TextButton access$0(com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog) -> a
    30:30:com.mazalearn.scienceengine.app.services.ProfileData$Social$Message access$1(com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog) -> b
    28:28:com.mazalearn.scienceengine.app.services.loaders.Trivia access$2(com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog) -> c
    119:119:void access$3(com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog,com.mazalearn.scienceengine.app.services.ProfileData$Social$Message) -> a
    31:31:com.badlogic.gdx.scenes.scene2d.ui.Button access$4(com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog) -> d
    27:27:com.mazalearn.scienceengine.app.services.Profile access$5(com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog) -> e
com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog$1 -> com.mazalearn.scienceengine.app.dialogs.m:
    com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image val$giftImage -> b
    63:70:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog$2 -> com.mazalearn.scienceengine.app.dialogs.n:
    com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> b
    com.badlogic.gdx.scenes.scene2d.ui.Image val$giftImage -> c
    77:79:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog$3 -> com.mazalearn.scienceengine.app.dialogs.o:
    com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog this$0 -> a
    89:91:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog$4 -> com.mazalearn.scienceengine.app.dialogs.p:
    com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.List val$pointsList -> b
    com.badlogic.gdx.scenes.scene2d.ui.Dialog val$parentDialog -> c
    106:113:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog$5 -> com.mazalearn.scienceengine.app.dialogs.q:
    com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.List val$friendsList -> b
    133:159:void doCommand() -> a
    129:129:com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog access$0(com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog$5) -> a
com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog$5$1 -> com.mazalearn.scienceengine.app.dialogs.r:
    com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog$5 this$1 -> a
    com.badlogic.gdx.scenes.scene2d.ui.List val$friendsList -> b
    136:152:void input(java.lang.String) -> a
    156:157:void canceled() -> a
com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog$6 -> com.mazalearn.scienceengine.app.dialogs.s:
    com.mazalearn.scienceengine.app.dialogs.GiveGiftDialog this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.List val$friendsList -> b
    164:165:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.MessageDialog -> com.mazalearn.scienceengine.app.dialogs.t:
com.mazalearn.scienceengine.app.dialogs.OptionsDialog -> com.mazalearn.scienceengine.app.dialogs.u:
    com.badlogic.gdx.scenes.scene2d.ui.Label volumeValue -> a
    30:30:java.lang.String getMsg(java.lang.String) -> a
    177:179:void updateVolumeLabel() -> a
    176:176:void access$0(com.mazalearn.scienceengine.app.dialogs.OptionsDialog) -> a
com.mazalearn.scienceengine.app.dialogs.OptionsDialog$1 -> com.mazalearn.scienceengine.app.dialogs.v:
    com.mazalearn.scienceengine.app.dialogs.OptionsDialog this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> b
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox val$languageSelect -> c
    51:53:void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.mazalearn.scienceengine.app.dialogs.OptionsDialog$2 -> com.mazalearn.scienceengine.app.dialogs.w:
    com.mazalearn.scienceengine.app.dialogs.OptionsDialog this$0 -> a
    com.mazalearn.scienceengine.app.services.PreferencesManager val$preferencesManager -> b
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox val$syncSelect -> c
    67:69:void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.mazalearn.scienceengine.app.dialogs.OptionsDialog$3 -> com.mazalearn.scienceengine.app.dialogs.x:
    com.mazalearn.scienceengine.app.dialogs.OptionsDialog this$0 -> a
    com.mazalearn.scienceengine.app.services.PreferencesManager val$preferencesManager -> b
    78:79:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.OptionsDialog$4 -> com.mazalearn.scienceengine.app.dialogs.y:
    com.mazalearn.scienceengine.app.dialogs.OptionsDialog this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.TextButton val$soundEffectsCheckbox -> b
    com.mazalearn.scienceengine.app.services.PreferencesManager val$preferencesManager -> c
    91:94:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.OptionsDialog$5 -> com.mazalearn.scienceengine.app.dialogs.z:
    com.mazalearn.scienceengine.app.dialogs.OptionsDialog this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.TextButton val$musicCheckbox -> b
    com.mazalearn.scienceengine.app.services.PreferencesManager val$preferencesManager -> c
    106:113:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.OptionsDialog$6 -> com.mazalearn.scienceengine.app.dialogs.aa:
    com.mazalearn.scienceengine.app.dialogs.OptionsDialog this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.TextButton val$speechCheckbox -> b
    com.mazalearn.scienceengine.app.services.PreferencesManager val$preferencesManager -> c
    126:128:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.OptionsDialog$7 -> com.mazalearn.scienceengine.app.dialogs.ab:
    com.mazalearn.scienceengine.app.dialogs.OptionsDialog this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.Slider val$volumeSlider -> b
    com.mazalearn.scienceengine.app.services.PreferencesManager val$preferencesManager -> c
    140:145:void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.mazalearn.scienceengine.app.dialogs.OptionsDialog$8 -> com.mazalearn.scienceengine.app.dialogs.ac:
    com.mazalearn.scienceengine.app.dialogs.OptionsDialog this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> b
    com.badlogic.gdx.scenes.scene2d.Stage val$stage -> c
    165:166:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.PurchaseDialog -> com.mazalearn.scienceengine.app.dialogs.PurchaseDialog:
    java.lang.String PURCHASE_FLOW -> a
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> b
    java.util.List productList -> c
    com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup purchasableItems -> d
    com.mazalearn.scienceengine.ScienceEngine scienceEngine -> e
    com.mazalearn.scienceengine.Topic topic -> f
    com.mazalearn.scienceengine.billing.IBilling billing -> g
    com.badlogic.gdx.scenes.scene2d.ui.Table waitActor -> h
    java.lang.Boolean purchaseDone -> i
    long timeStart -> j
    float[] stats -> k
    com.mazalearn.scienceengine.app.services.Profile profile -> l
    java.lang.String purchaseFlowId -> m
    com.badlogic.gdx.scenes.scene2d.Stage stage -> n
    123:125:void log(com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$State) -> a
    128:136:com.badlogic.gdx.scenes.scene2d.ui.Table createWaitActor(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    141:151:void act(float) -> act
    154:173:void showItemsForPurchase(com.mazalearn.scienceengine.billing.Inventory) -> a
    176:194:void addPurchasableItems(com.mazalearn.scienceengine.billing.Inventory,com.badlogic.gdx.scenes.scene2d.ui.Table) -> a
    197:244:com.badlogic.gdx.scenes.scene2d.ui.Table createButtons(boolean) -> a
    122:122:void access$0(com.mazalearn.scienceengine.app.dialogs.PurchaseDialog,com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$State) -> a
    48:48:void access$1(com.mazalearn.scienceengine.app.dialogs.PurchaseDialog,java.lang.Boolean) -> a
    153:153:void access$2(com.mazalearn.scienceengine.app.dialogs.PurchaseDialog,com.mazalearn.scienceengine.billing.Inventory) -> a
    41:41:com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup access$3(com.mazalearn.scienceengine.app.dialogs.PurchaseDialog) -> a
    45:45:com.badlogic.gdx.scenes.scene2d.ui.Table access$4(com.mazalearn.scienceengine.app.dialogs.PurchaseDialog) -> b
    53:53:com.badlogic.gdx.scenes.scene2d.Stage access$5(com.mazalearn.scienceengine.app.dialogs.PurchaseDialog) -> c
    44:44:com.mazalearn.scienceengine.billing.IBilling access$6(com.mazalearn.scienceengine.app.dialogs.PurchaseDialog) -> d
com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$1 -> com.mazalearn.scienceengine.app.dialogs.ad:
    com.mazalearn.scienceengine.app.dialogs.PurchaseDialog this$0 -> a
    com.mazalearn.scienceengine.app.services.InstallProfile val$installProfile -> c
    com.badlogic.gdx.scenes.scene2d.Stage val$stage -> d
    98:111:void purchaseCallback(java.lang.String) -> a
    115:116:void inventoryCallback(com.mazalearn.scienceengine.billing.Inventory) -> a
com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$2 -> com.mazalearn.scienceengine.app.dialogs.ae:
    com.mazalearn.scienceengine.app.dialogs.PurchaseDialog this$0 -> a
    184:184:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$3 -> com.mazalearn.scienceengine.app.dialogs.af:
    com.mazalearn.scienceengine.app.dialogs.PurchaseDialog this$0 -> a
    209:211:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$4 -> com.mazalearn.scienceengine.app.dialogs.ag:
    com.mazalearn.scienceengine.app.dialogs.PurchaseDialog this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.TextButton val$purchaseButton -> b
    com.badlogic.gdx.scenes.scene2d.ui.Table val$buttonTable -> c
    226:242:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$State -> com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$State:
    com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$State Initiated -> a
    com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$State InventoryQuery -> b
    com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$State InventoryFailure -> c
    com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$State InventoryDisplay -> d
    com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$State PurchaseRequest -> e
    com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$State PurchaseFailure -> f
    com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$State PurchaseDone -> g
    com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$State PurchaseCanceled -> h
    int index -> index
    com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$State[] ENUM$VALUES -> i
    1:1:com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$State[] values() -> values
    1:1:com.mazalearn.scienceengine.app.dialogs.PurchaseDialog$State valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.app.dialogs.ShowGiftDialog -> com.mazalearn.scienceengine.app.dialogs.ah:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog parentDialog -> a
    64:65:void result(java.lang.Object) -> result
com.mazalearn.scienceengine.app.dialogs.ShowGiftDialog$1 -> com.mazalearn.scienceengine.app.dialogs.ai:
    com.mazalearn.scienceengine.app.dialogs.ShowGiftDialog this$0 -> a
    com.mazalearn.scienceengine.app.services.ProfileData$Social$Message val$gift -> b
    com.badlogic.gdx.scenes.scene2d.Actor val$giftItem -> c
    51:57:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.TutoringEndDialog -> com.mazalearn.scienceengine.app.dialogs.aj:
    35:42:com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable createBackground() -> a
com.mazalearn.scienceengine.app.dialogs.UserHomeDialog -> com.mazalearn.scienceengine.app.dialogs.ak:
    int GIFT_WIDTH -> b
    int GIFT_HEIGHT -> a
    int CERTIFICATE_WIDTH -> c
    int CERTIFICATE_HEIGHT -> d
    boolean ENABLE_SOCIAL -> e
    com.mazalearn.scienceengine.app.services.Profile profile -> f
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> g
    com.badlogic.gdx.scenes.scene2d.ui.TextButton myUserImage -> h
    86:98:void addUserInfo(com.badlogic.gdx.scenes.scene2d.ui.Image,com.badlogic.gdx.scenes.scene2d.ui.Table) -> a
    101:102:void setUserImage(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> a
    105:126:void addRegistrationRequest(com.badlogic.gdx.scenes.scene2d.ui.Table) -> a
    129:154:void addCertificatesPane(com.badlogic.gdx.scenes.scene2d.ui.Table) -> b
    159:169:void addSocialPane(com.badlogic.gdx.scenes.scene2d.ui.Table) -> c
    173:186:com.badlogic.gdx.scenes.scene2d.Actor createWaitingGiftsPane$36b91362(com.badlogic.gdx.scenes.scene2d.ui.Dialog,java.util.List,com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    190:197:com.badlogic.gdx.scenes.scene2d.Actor createGiftingPane() -> a
    201:216:com.badlogic.gdx.scenes.scene2d.Actor createImagesPane(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.util.List) -> a
    220:229:com.badlogic.gdx.scenes.scene2d.ui.TextButton createItem(com.badlogic.gdx.scenes.scene2d.ui.Skin,int,int,java.lang.String) -> a
    36:36:com.mazalearn.scienceengine.app.services.Profile access$0(com.mazalearn.scienceengine.app.dialogs.UserHomeDialog) -> a
    37:37:com.badlogic.gdx.scenes.scene2d.ui.Skin access$1(com.mazalearn.scienceengine.app.dialogs.UserHomeDialog) -> b
com.mazalearn.scienceengine.app.dialogs.UserHomeDialog$1 -> com.mazalearn.scienceengine.app.dialogs.al:
    com.mazalearn.scienceengine.app.dialogs.UserHomeDialog this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> b
    68:69:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.UserHomeDialog$2 -> com.mazalearn.scienceengine.app.dialogs.am:
    com.mazalearn.scienceengine.app.dialogs.UserHomeDialog this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image val$userImage -> b
    94:95:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.UserHomeDialog$3 -> com.mazalearn.scienceengine.app.dialogs.an:
    com.mazalearn.scienceengine.app.dialogs.UserHomeDialog this$0 -> a
    118:124:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.UserHomeDialog$4 -> com.mazalearn.scienceengine.app.dialogs.ao:
    com.mazalearn.scienceengine.app.dialogs.UserHomeDialog this$0 -> a
    java.lang.String val$itemName -> b
    135:143:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.UserHomeDialog$5 -> com.mazalearn.scienceengine.app.dialogs.ap:
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> a
    com.mazalearn.scienceengine.app.services.ProfileData$Social$Message val$gift -> b
    com.badlogic.gdx.scenes.scene2d.ui.TextButton val$item -> c
    boolean val$allowAccept -> d
    com.badlogic.gdx.scenes.scene2d.ui.Dialog val$parentDialog -> e
    181:182:void doCommand() -> a
com.mazalearn.scienceengine.app.dialogs.UserHomeDialog$6 -> com.mazalearn.scienceengine.app.dialogs.aq:
    com.mazalearn.scienceengine.app.dialogs.UserHomeDialog this$0 -> a
    195:195:void doCommand() -> a
com.mazalearn.scienceengine.app.screens.AbstractScreen -> com.mazalearn.scienceengine.app.a.a:
    com.mazalearn.scienceengine.ScienceEngine scienceEngine -> a
    com.badlogic.gdx.scenes.scene2d.Stage stage -> b
    com.badlogic.gdx.scenes.scene2d.ui.Table table -> c
    com.badlogic.gdx.graphics.Color backgroundColor -> d
    com.mazalearn.scienceengine.app.services.Profile profile -> e
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$ScreenComponent -> f
    52:52:java.lang.String getMsg(java.lang.String) -> a
    79:79:boolean needsLayout() -> f
    83:86:void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> a
    89:89:com.badlogic.gdx.scenes.scene2d.Stage getStage() -> g
    93:93:java.lang.String getName() -> m
    void goBack() -> h
    101:105:void setTitle(java.lang.String) -> b
    108:132:com.badlogic.gdx.scenes.scene2d.Group setupCoreGroup(com.badlogic.gdx.scenes.scene2d.Stage) -> b
    136:212:com.badlogic.gdx.scenes.scene2d.Actor createScreenComponent(com.mazalearn.scienceengine.ScreenComponent,com.badlogic.gdx.scenes.scene2d.Stage,com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    217:225:com.badlogic.gdx.scenes.scene2d.ui.Table getTable() -> i
    232:240:void show() -> a
    244:246:void resize(int,int) -> a
    250:257:void render(float) -> a
    261:267:void hide() -> b
    271:272:void pause() -> c
    276:277:void resume() -> d
    281:289:void dispose() -> e
    292:292:com.badlogic.gdx.scenes.scene2d.ui.Skin getSkin() -> j
    298:302:void addAssets() -> k
    305:305:com.mazalearn.scienceengine.app.services.Profile getProfile() -> l
    38:38:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$ScreenComponent() -> n
com.mazalearn.scienceengine.app.screens.AbstractScreen$1 -> com.mazalearn.scienceengine.app.a.b:
    com.mazalearn.scienceengine.app.screens.AbstractScreen this$0 -> a
    62:70:boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
com.mazalearn.scienceengine.app.screens.AbstractScreen$2 -> com.mazalearn.scienceengine.app.a.c:
    com.mazalearn.scienceengine.app.screens.AbstractScreen this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image val$image -> b
    com.badlogic.gdx.scenes.scene2d.Stage val$stage -> c
    157:158:void doCommand() -> a
com.mazalearn.scienceengine.app.screens.AbstractScreen$3 -> com.mazalearn.scienceengine.app.a.d:
    com.mazalearn.scienceengine.app.screens.AbstractScreen this$0 -> a
    com.badlogic.gdx.scenes.scene2d.Stage val$stage -> b
    168:169:void doCommand() -> a
com.mazalearn.scienceengine.app.screens.AbstractScreen$4 -> com.mazalearn.scienceengine.app.a.e:
    com.mazalearn.scienceengine.app.screens.AbstractScreen this$0 -> a
    193:194:void doCommand() -> a
com.mazalearn.scienceengine.app.screens.ActivityScreen -> com.mazalearn.scienceengine.app.a.f:
    com.mazalearn.scienceengine.core.controller.IScience2DController science2DController -> c
    com.mazalearn.scienceengine.Topic topic -> d
    com.mazalearn.scienceengine.Topic activityLevel -> e
    com.mazalearn.scienceengine.tutor.ITutor tutorUnderRevision -> f
    com.mazalearn.scienceengine.core.view.IScience2DView science2DView -> g
    com.badlogic.gdx.scenes.scene2d.Actor helpActor -> h
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$Topic -> i
    85:88:void enterRevisionMode(com.mazalearn.scienceengine.tutor.ITutor) -> a
    93:107:com.badlogic.gdx.scenes.scene2d.Group setupCoreGroup(com.badlogic.gdx.scenes.scene2d.Stage) -> b
    111:122:com.badlogic.gdx.scenes.scene2d.Actor createHelpActor() -> m
    126:149:void showHelp() -> n
    153:163:void show() -> a
    168:178:void goBack() -> h
    182:190:com.mazalearn.scienceengine.core.controller.IScience2DController createTopicController(com.mazalearn.scienceengine.Topic,com.mazalearn.scienceengine.Topic,int,int) -> a
    196:207:void addAssets() -> k
    125:125:void access$0(com.mazalearn.scienceengine.app.screens.ActivityScreen) -> a
    39:39:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$Topic() -> o
com.mazalearn.scienceengine.app.screens.ActivityScreen$1 -> com.mazalearn.scienceengine.app.a.g:
    com.mazalearn.scienceengine.app.screens.ActivityScreen this$0 -> a
    71:75:boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
com.mazalearn.scienceengine.app.screens.ActivityScreen$2 -> com.mazalearn.scienceengine.app.a.h:
    com.mazalearn.scienceengine.app.screens.ActivityScreen this$0 -> a
    115:116:void doCommand() -> a
com.mazalearn.scienceengine.app.screens.ChooseTopicScreen -> com.mazalearn.scienceengine.app.a.i:
    int THUMBNAIL_WIDTH -> c
    int THUMBNAIL_HEIGHT -> d
    38:57:void show() -> a
    60:102:com.badlogic.gdx.scenes.scene2d.Actor createTopicsSelector() -> m
    106:113:int findTopicProgressPercentage(com.mazalearn.scienceengine.Topic) -> a
    118:119:void goBack() -> h
    122:126:void gotoTopicHome(com.mazalearn.scienceengine.Topic) -> b
    121:121:void access$0(com.mazalearn.scienceengine.app.screens.ChooseTopicScreen,com.mazalearn.scienceengine.Topic) -> a
com.mazalearn.scienceengine.app.screens.ChooseTopicScreen$1 -> com.mazalearn.scienceengine.app.a.j:
    com.mazalearn.scienceengine.app.screens.ChooseTopicScreen this$0 -> a
    boolean val$lock -> b
    com.mazalearn.scienceengine.Topic val$topic -> c
    87:90:void doCommand() -> a
com.mazalearn.scienceengine.app.screens.HelpTour -> com.mazalearn.scienceengine.app.a.k:
    com.badlogic.gdx.math.Vector2 CENTER_POS -> a
    com.badlogic.gdx.math.Vector2 pos -> b
    127:135:float repositionArrow(com.badlogic.gdx.scenes.scene2d.Stage,com.mazalearn.scienceengine.app.screens.HelpTour$IHelpComponent,com.badlogic.gdx.scenes.scene2d.Actor) -> b
    139:139:java.lang.String getMsg(java.lang.String) -> b
    21:21:com.badlogic.gdx.math.Vector2 access$0() -> a
    23:23:com.badlogic.gdx.math.Vector2 access$1() -> b
    138:138:java.lang.String access$2(java.lang.String) -> a
    126:126:float access$3(com.badlogic.gdx.scenes.scene2d.Stage,com.mazalearn.scienceengine.app.screens.HelpTour$IHelpComponent,com.badlogic.gdx.scenes.scene2d.Actor) -> a
com.mazalearn.scienceengine.app.screens.HelpTour$1 -> com.mazalearn.scienceengine.app.a.l:
    com.mazalearn.scienceengine.app.screens.HelpTour this$0 -> a
    com.mazalearn.scienceengine.app.screens.HelpTour$ClickHandler val$onClickHandler -> b
    162:163:void doCommand() -> a
com.mazalearn.scienceengine.app.screens.HelpTour$2 -> com.mazalearn.scienceengine.app.a.m:
    com.mazalearn.scienceengine.app.screens.HelpTour this$0 -> a
    com.mazalearn.scienceengine.app.screens.HelpTour$ClickHandler val$onClickHandler -> b
    168:169:void doCommand() -> a
com.mazalearn.scienceengine.app.screens.HelpTour$3 -> com.mazalearn.scienceengine.app.a.n:
    com.mazalearn.scienceengine.app.screens.HelpTour this$0 -> a
    com.mazalearn.scienceengine.app.screens.HelpTour$ClickHandler val$onClickHandler -> b
    175:176:void doCommand() -> a
com.mazalearn.scienceengine.app.screens.HelpTour$ClickHandler -> com.mazalearn.scienceengine.app.a.o:
    com.mazalearn.scienceengine.tutor.ImageMessageBox contentBox -> b
    java.lang.String content -> c
    int currentComponent -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image arrow -> d
    java.util.List helpComponents -> e
    com.mazalearn.scienceengine.app.screens.HelpTour$IHelpComponent helpComponent -> f
    com.badlogic.gdx.scenes.scene2d.Stage stage -> g
    62:85:void setContent(java.lang.String,float,float,float) -> a
    88:91:void endHelp() -> a
    94:123:void showHelp(int) -> a
    42:42:java.util.List access$0(com.mazalearn.scienceengine.app.screens.HelpTour$ClickHandler) -> a
    43:43:com.mazalearn.scienceengine.app.screens.HelpTour$IHelpComponent access$1(com.mazalearn.scienceengine.app.screens.HelpTour$ClickHandler) -> b
    44:44:com.badlogic.gdx.scenes.scene2d.Stage access$2(com.mazalearn.scienceengine.app.screens.HelpTour$ClickHandler) -> c
    41:41:com.badlogic.gdx.scenes.scene2d.ui.Image access$3(com.mazalearn.scienceengine.app.screens.HelpTour$ClickHandler) -> d
    39:39:java.lang.String access$4(com.mazalearn.scienceengine.app.screens.HelpTour$ClickHandler) -> e
    61:61:void access$5(com.mazalearn.scienceengine.app.screens.HelpTour$ClickHandler,java.lang.String,float,float,float) -> a
    38:38:com.mazalearn.scienceengine.tutor.ImageMessageBox access$6(com.mazalearn.scienceengine.app.screens.HelpTour$ClickHandler) -> f
    43:43:void access$7(com.mazalearn.scienceengine.app.screens.HelpTour$ClickHandler,com.mazalearn.scienceengine.app.screens.HelpTour$IHelpComponent) -> a
    93:93:void access$8(com.mazalearn.scienceengine.app.screens.HelpTour$ClickHandler,int) -> a
    87:87:void access$9(com.mazalearn.scienceengine.app.screens.HelpTour$ClickHandler) -> g
com.mazalearn.scienceengine.app.screens.HelpTour$ClickHandler$1 -> com.mazalearn.scienceengine.app.a.p:
    com.mazalearn.scienceengine.app.screens.HelpTour$ClickHandler this$1 -> b
    int val$increment -> c
    99:119:boolean act(float) -> a
com.mazalearn.scienceengine.app.screens.HelpTour$IHelpComponent -> com.mazalearn.scienceengine.app.a.q:
    java.lang.String getLocalizedName() -> b
    java.lang.String getComponentType() -> f
    float getX() -> getX
    float getY() -> getY
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void showHelp(com.badlogic.gdx.scenes.scene2d.Stage,boolean) -> a
com.mazalearn.scienceengine.app.screens.LoadingScreen -> com.mazalearn.scienceengine.app.a.r:
    float INCREMENT -> c
    float startX -> d
    float endX -> e
    float percent -> f
    com.mazalearn.scienceengine.app.screens.AbstractScreen nextScreen -> g
    com.badlogic.gdx.scenes.scene2d.Actor train -> h
    float startY -> i
    float endY -> j
    com.badlogic.gdx.scenes.scene2d.ui.Image railTracks -> k
    com.badlogic.gdx.scenes.scene2d.ui.Label loading -> l
    float alpha -> m
    44:44:boolean needsLayout() -> f
    49:63:void show() -> a
    68:81:void resize(int,int) -> a
    86:117:void render(float) -> a
    120:126:void delayIfDebug() -> m
    130:131:void hide() -> b
    136:136:void goBack() -> h
com.mazalearn.scienceengine.app.screens.OverlayImage -> com.mazalearn.scienceengine.app.a.s:
    com.badlogic.gdx.scenes.scene2d.ui.Image overlayImage -> a
    18:22:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.mazalearn.scienceengine.app.screens.SplashScreen -> com.mazalearn.scienceengine.app.a.t:
    50:50:boolean needsLayout() -> f
    55:57:void enterApplication() -> m
    61:184:void show() -> a
    188:190:void goBack() -> h
    53:53:void access$0(com.mazalearn.scienceengine.app.screens.SplashScreen) -> a
com.mazalearn.scienceengine.app.screens.SplashScreen$1 -> com.mazalearn.scienceengine.app.a.u:
    com.mazalearn.scienceengine.app.screens.SplashScreen this$0 -> a
    73:74:void doCommand() -> a
com.mazalearn.scienceengine.app.screens.SplashScreen$2 -> com.mazalearn.scienceengine.app.a.v:
    com.mazalearn.scienceengine.app.screens.SplashScreen this$0 -> a
    com.mazalearn.scienceengine.app.services.InstallProfile val$installProfile -> b
    com.mazalearn.scienceengine.app.services.PreferencesManager val$preferencesManager -> c
    com.badlogic.gdx.scenes.scene2d.ui.Image val$userImage -> d
    113:162:void doCommand() -> a
    110:110:com.mazalearn.scienceengine.app.screens.SplashScreen access$0(com.mazalearn.scienceengine.app.screens.SplashScreen$2) -> a
com.mazalearn.scienceengine.app.screens.SplashScreen$2$1 -> com.mazalearn.scienceengine.app.a.w:
    com.mazalearn.scienceengine.app.screens.SplashScreen$2 this$1 -> a
    com.mazalearn.scienceengine.app.services.PreferencesManager val$preferencesManager -> b
    com.mazalearn.scienceengine.app.services.Profile val$userProfile -> c
    134:136:void doCommand() -> a
com.mazalearn.scienceengine.app.screens.SplashScreen$SplashImage -> com.mazalearn.scienceengine.app.a.x:
    com.mazalearn.scienceengine.app.screens.SplashScreen this$0 -> a
com.mazalearn.scienceengine.app.screens.TopicHomeScreen -> com.mazalearn.scienceengine.app.a.y:
    int RESOURCE_WIDTH -> e
    int THUMBNAIL_WIDTH -> c
    int THUMBNAIL_HEIGHT -> d
    int RESOURCE_INFO_HEIGHT -> f
    com.badlogic.gdx.scenes.scene2d.ui.TextButton[] activityThumbs -> g
    com.badlogic.gdx.utils.Array resources -> h
    com.mazalearn.scienceengine.Topic topic -> i
    115:118:void goBack() -> h
    122:166:void show() -> a
    169:250:com.badlogic.gdx.scenes.scene2d.Actor createActivitiesPane() -> m
    254:267:void setLastActiveLevel(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane) -> a
    271:343:com.badlogic.gdx.scenes.scene2d.Actor createResourcePane() -> n
    348:353:void gotoActivityLevel(com.mazalearn.scienceengine.Topic) -> a
    358:368:void readTopicResourcesInfo() -> o
    372:375:void addAssets() -> k
    101:101:com.mazalearn.scienceengine.Topic access$0(com.mazalearn.scienceengine.app.screens.TopicHomeScreen) -> a
    347:347:void access$1(com.mazalearn.scienceengine.app.screens.TopicHomeScreen,com.mazalearn.scienceengine.Topic) -> a
com.mazalearn.scienceengine.app.screens.TopicHomeScreen$1 -> com.mazalearn.scienceengine.app.a.z:
    com.mazalearn.scienceengine.app.screens.TopicHomeScreen this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.TextButton val$contentTypeButton -> b
    com.esotericsoftware.tablelayout.Cell val$scrollPane -> c
    com.badlogic.gdx.scenes.scene2d.Actor val$resourcesPane -> d
    com.badlogic.gdx.scenes.scene2d.Actor val$activitiesPane -> e
    153:160:void doCommand() -> a
com.mazalearn.scienceengine.app.screens.TopicHomeScreen$2 -> com.mazalearn.scienceengine.app.a.aa:
    com.mazalearn.scienceengine.app.screens.TopicHomeScreen this$0 -> a
    boolean val$isScienceTrainLevel -> b
    com.mazalearn.scienceengine.app.services.InstallProfile val$installProfile -> c
    com.mazalearn.scienceengine.Topic val$level -> d
    215:220:void doCommand() -> a
com.mazalearn.scienceengine.app.screens.TopicHomeScreen$3 -> com.mazalearn.scienceengine.app.a.ab:
    com.mazalearn.scienceengine.app.screens.TopicHomeScreen this$0 -> a
    com.mazalearn.scienceengine.Topic val$iLevel -> b
    235:236:void doCommand() -> a
com.mazalearn.scienceengine.app.screens.TopicHomeScreen$BrowseUrlListener -> com.mazalearn.scienceengine.app.a.ac:
    java.lang.String url -> a
    54:56:void doCommand() -> a
com.mazalearn.scienceengine.app.screens.TopicHomeScreen$VideoPlayListener -> com.mazalearn.scienceengine.app.a.ad:
    java.lang.String fileName -> a
    java.lang.String url -> b
    70:92:void doCommand() -> a
com.mazalearn.scienceengine.app.services.AggregatorFunction -> com.mazalearn.scienceengine.app.services.AggregatorFunction:
    com.mazalearn.scienceengine.app.services.AggregatorFunction Min -> a
    com.mazalearn.scienceengine.app.services.AggregatorFunction Max -> b
    com.mazalearn.scienceengine.app.services.AggregatorFunction Count -> c
    com.mazalearn.scienceengine.app.services.AggregatorFunction$Aggregator aggregator -> aggregator
    com.mazalearn.scienceengine.app.services.AggregatorFunction[] ENUM$VALUES -> d
    41:41:float eval(java.lang.String) -> a
    1:1:com.mazalearn.scienceengine.app.services.AggregatorFunction[] values() -> values
    1:1:com.mazalearn.scienceengine.app.services.AggregatorFunction valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.app.services.AggregatorFunction$1 -> com.mazalearn.scienceengine.app.services.a:
    float min -> a
    10:10:void init() -> a
    11:11:void visit(float) -> a
    12:12:float getValue() -> b
com.mazalearn.scienceengine.app.services.AggregatorFunction$2 -> com.mazalearn.scienceengine.app.services.b:
    float max -> a
    16:16:void init() -> a
    17:17:void visit(float) -> a
    18:18:float getValue() -> b
com.mazalearn.scienceengine.app.services.AggregatorFunction$3 -> com.mazalearn.scienceengine.app.services.c:
    float count -> a
    22:22:void init() -> a
    23:23:void visit(float) -> a
    24:24:float getValue() -> b
com.mazalearn.scienceengine.app.services.AggregatorFunction$Aggregator -> com.mazalearn.scienceengine.app.services.d:
    void init() -> a
    void visit(float) -> a
    float getValue() -> b
com.mazalearn.scienceengine.app.services.EventLog -> com.mazalearn.scienceengine.app.services.e:
    java.util.List events -> a
    boolean suppressDuplicates -> b
    com.mazalearn.scienceengine.core.lang.Event lastEvent -> c
    17:18:void logEvent(java.lang.String,java.lang.String) -> a
    21:36:float eval(com.mazalearn.scienceengine.app.services.AggregatorFunction$Aggregator,java.lang.String) -> a
    40:48:void logEvent(java.lang.String,java.lang.String,float) -> a
    51:52:void clear() -> a
com.mazalearn.scienceengine.app.services.IMessage -> com.mazalearn.scienceengine.app.services.f:
    java.lang.String getString(java.lang.String) -> a
    java.lang.String getLanguage() -> a
    void setLanguage(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String) -> a
    void setFont(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
com.mazalearn.scienceengine.app.services.InstallData -> com.mazalearn.scienceengine.app.services.InstallData:
    java.lang.String PNG -> PNG
    java.lang.String USER_IDS -> USER_IDS
    java.lang.String INSTALL_DATA -> INSTALL_DATA
    java.lang.String installId -> installId
    java.lang.String registeredUserId -> registeredUserId
    java.lang.String installName -> installName
    java.lang.String enterpriseId -> enterpriseId
    java.lang.String pngEnterpriseLogo -> pngEnterpriseLogo
    java.lang.String enterpriseName -> enterpriseName
    java.lang.String expiryDate -> expiryDate
    long lastUpdated -> lastUpdated
    java.lang.String[] userIds -> userIds
    java.util.ArrayList availableTopicNames -> availableTopicNames
    boolean isChanged -> isChanged
com.mazalearn.scienceengine.app.services.InstallProfile -> com.mazalearn.scienceengine.app.services.InstallProfile:
    com.mazalearn.scienceengine.app.services.InstallData data -> a
    35:40:void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.OrderedMap) -> a
    44:45:void write(com.badlogic.gdx.utils.Json) -> a
    48:48:java.lang.String getEnterpriseName() -> h
    52:52:java.lang.String getEnterpriseId() -> i
    56:56:java.lang.String getRegisteredUserId() -> a
    60:64:void save() -> j
    67:67:long getLastUpdated() -> b
    71:72:com.badlogic.gdx.graphics.Pixmap getEnterpriseLogo() -> k
    76:76:java.lang.String[] getUserIds() -> c
    80:80:java.lang.String getInstallationId() -> d
    84:84:java.lang.String getInstallationName() -> l
    88:88:boolean isAvailableTopic(com.mazalearn.scienceengine.Topic) -> a
    96:100:void addAsAvailableTopic(com.mazalearn.scienceengine.Topic) -> b
    103:113:void provisionProduct(java.lang.String) -> a
    116:144:com.mazalearn.scienceengine.app.services.InstallProfile fromBase64(java.lang.String) -> b
    148:153:java.lang.String toBase64() -> e
    157:157:boolean isChanged() -> f
    161:163:void markChanged$1385ff() -> g
com.mazalearn.scienceengine.app.services.MusicManager -> com.mazalearn.scienceengine.app.services.MusicManager:
    float ATTENUATION -> a
    com.mazalearn.scienceengine.app.services.MusicManager$ScienceEngineMusic musicBeingPlayed -> b
    float volume -> c
    boolean enabled -> d
    73:97:void play(com.mazalearn.scienceengine.app.services.MusicManager$ScienceEngineMusic) -> a
    103:110:void stop() -> a
    116:129:void setVolume(float) -> a
    135:135:float getVolume() -> b
    142:148:void setEnabled(boolean) -> a
    154:156:void dispose() -> dispose
com.mazalearn.scienceengine.app.services.MusicManager$ScienceEngineMusic -> com.mazalearn.scienceengine.app.services.MusicManager$ScienceEngineMusic:
    com.mazalearn.scienceengine.app.services.MusicManager$ScienceEngineMusic MENU -> a
    com.mazalearn.scienceengine.app.services.MusicManager$ScienceEngineMusic LEVEL -> b
    com.mazalearn.scienceengine.app.services.MusicManager$ScienceEngineMusic HUM -> c
    java.lang.String fileName -> fileName
    com.badlogic.gdx.audio.Music musicResource -> musicResource
    com.mazalearn.scienceengine.app.services.MusicManager$ScienceEngineMusic[] ENUM$VALUES -> d
    31:31:java.lang.String getFileName() -> a
    35:35:com.badlogic.gdx.audio.Music getMusicResource() -> b
    39:40:void setMusicResource(com.badlogic.gdx.audio.Music) -> a
    1:1:com.mazalearn.scienceengine.app.services.MusicManager$ScienceEngineMusic[] values() -> values
    1:1:com.mazalearn.scienceengine.app.services.MusicManager$ScienceEngineMusic valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.app.services.PreferencesManager -> com.mazalearn.scienceengine.app.services.g:
    java.lang.String SERVER_PROFILE_PREFIX -> a
    java.lang.String SYNC_PROFILES -> b
    java.lang.String INSTALL_PROFILE -> c
    java.lang.String PREF_VOLUME -> d
    java.lang.String PREF_MUSIC_ENABLED -> e
    java.lang.String PREF_SPEECH_ENABLED -> f
    java.lang.String PREF_SOUND_ENABLED -> g
    java.lang.String PREFS_NAME -> h
    java.lang.String PREFS_SYNC_MODE -> i
    com.badlogic.gdx.Preferences prefs -> j
    com.mazalearn.scienceengine.app.services.InstallProfile defaultInstallProfile -> k
    com.mazalearn.scienceengine.app.utils.IPlatformAdapter platformAdapter -> l
    com.mazalearn.scienceengine.app.services.InstallProfile installProfile -> m
    com.mazalearn.scienceengine.app.services.Profile userProfile -> n
    49:49:boolean isSoundEnabled() -> a
    53:56:void setSoundEnabled(boolean) -> a
    59:59:boolean isMusicEnabled() -> b
    63:66:void setMusicEnabled(boolean) -> b
    69:69:boolean isSpeechEnabled() -> c
    73:82:void setSpeechEnabled(boolean) -> c
    85:85:float getVolume() -> d
    89:91:void setVolume(float) -> a
    95:98:void setActiveUserProfile(com.mazalearn.scienceengine.app.services.Profile) -> a
    101:111:com.mazalearn.scienceengine.app.services.Profile retrieveUserProfile() -> i
    115:120:com.mazalearn.scienceengine.app.services.Profile getUserProfile(java.lang.String) -> a
    125:129:java.lang.String getProfileUserId() -> j
    133:136:com.mazalearn.scienceengine.app.services.Profile getActiveUserProfile() -> e
    140:146:com.mazalearn.scienceengine.app.services.InstallProfile getInstallProfile() -> f
    150:151:java.lang.String getSyncProfilesString() -> k
    155:158:void setSyncProfilesString(java.lang.String) -> c
    161:162:void saveUserProfile() -> g
    166:171:void saveProfile(com.mazalearn.scienceengine.app.services.Profile) -> b
    180:192:boolean mergeServerProfileIfAvailable(com.mazalearn.scienceengine.app.services.Profile,java.lang.String) -> a
    197:202:void markProfileDirty(java.lang.String) -> d
    292:306:void syncProfiles(boolean) -> d
    309:311:void saveInstallProfile() -> h
    314:315:void setSync(java.lang.String) -> b
com.mazalearn.scienceengine.app.services.PreferencesManager$SyncProfilesTask -> com.mazalearn.scienceengine.app.services.h:
    java.lang.String syncProfilesString -> a
    com.badlogic.gdx.Preferences prefs -> b
    com.mazalearn.scienceengine.app.services.InstallProfile installProfile -> c
    com.mazalearn.scienceengine.app.utils.IPlatformAdapter platformAdapter -> d
    220:227:void run() -> run
    230:231:void setInstallProfile(com.mazalearn.scienceengine.app.services.InstallProfile) -> a
    236:268:void syncInstallProfile(java.lang.String) -> a
    271:287:void syncUserProfile(java.util.Map,java.lang.String) -> a
com.mazalearn.scienceengine.app.services.Profile -> com.mazalearn.scienceengine.app.services.Profile:
    java.lang.String GUEST -> a
    com.mazalearn.scienceengine.app.services.ProfileData data -> b
    47:59:void setCurrentActivity(com.mazalearn.scienceengine.Topic) -> a
    65:70:com.mazalearn.scienceengine.Topic getCurrentActivity() -> a
    78:83:com.mazalearn.scienceengine.Topic getLastActivity() -> b
    93:137:void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.OrderedMap) -> a
    141:160:void write(com.badlogic.gdx.utils.Json) -> a
    163:167:void setCurrentTopic(com.mazalearn.scienceengine.Topic) -> b
    170:174:com.mazalearn.scienceengine.Topic getCurrentTopic() -> c
    179:180:java.lang.String getUserName() -> d
    184:185:java.lang.String getUserEmail() -> e
    189:190:void setUserEmailLocally(java.lang.String) -> a
    193:194:void save() -> f
    197:204:void addFriend(java.lang.String) -> b
    207:213:java.util.List getFriends() -> g
    217:224:void sendGift(com.mazalearn.scienceengine.app.services.ProfileData$Social$Message) -> a
    227:231:void testPostInMessage(com.mazalearn.scienceengine.app.services.ProfileData$Social$Message) -> c
    234:234:java.util.List getOutbox() -> u
    238:238:java.util.List getInbox() -> h
    242:246:void acceptGift(com.mazalearn.scienceengine.app.services.ProfileData$Social$Message) -> b
    249:256:void setCoachPixmap(com.badlogic.gdx.graphics.Pixmap,float,java.lang.String) -> a
    259:260:com.badlogic.gdx.graphics.Pixmap getCoachPixmap() -> i
    264:269:void setUserPixmap(com.badlogic.gdx.graphics.Pixmap) -> a
    272:273:com.badlogic.gdx.graphics.Pixmap getUserPixmap() -> j
    277:291:float[] getStats(com.mazalearn.scienceengine.Topic,java.lang.String,int) -> a
    300:302:void saveStats(float[],java.lang.String) -> a
    305:306:void markForSync(java.lang.String) -> g
    309:310:void setPlatform(com.mazalearn.scienceengine.app.utils.IPlatformAdapter$Platform) -> a
    313:313:java.lang.String getInstallationId() -> k
    318:319:void setInstallationId(java.lang.String) -> c
    322:334:com.mazalearn.scienceengine.app.services.Profile fromBase64(java.lang.String) -> d
    338:341:java.lang.String toBase64() -> l
    352:358:void mergeProfile(java.lang.String) -> e
    361:362:void addPoints(int) -> a
    365:365:int getPoints() -> m
    369:369:int getGiftPoints() -> n
    374:377:java.lang.String getSyncStr() -> o
    382:382:boolean isRegistered() -> p
    386:386:java.util.Collection getCertificates() -> q
    390:395:void addCertificate(java.lang.String) -> f
    398:401:void setDontShowAgain(boolean) -> a
    404:404:boolean getDontShowAgain() -> r
    408:408:int getLaunchCount() -> v
    412:415:int incrementLaunchCount() -> s
    419:423:long getDateFirstLaunch() -> t
    427:428:void setSoundEnabled(boolean) -> b
    431:432:void setMusicEnabled(boolean) -> c
    435:436:void setSpeechEnabled(boolean) -> d
com.mazalearn.scienceengine.app.services.ProfileData -> com.mazalearn.scienceengine.app.services.ProfileData:
    java.lang.String USER_EMAIL -> USER_EMAIL
    java.lang.String INSTALL_ID -> INSTALL_ID
    java.lang.String USER_NAME -> USER_NAME
    java.lang.String USER_ID -> USER_ID
    java.lang.String LAST_UPDATED -> LAST_UPDATED
    java.lang.String SEX -> SEX
    java.lang.String GRADE -> GRADE
    java.lang.String SCHOOL -> SCHOOL
    java.lang.String CITY -> CITY
    java.lang.String COMMENTS -> COMMENTS
    java.lang.String COLOR -> COLOR
    java.lang.String CURRENT -> CURRENT
    java.lang.String PNG -> PNG
    java.lang.String SOCIAL -> SOCIAL
    java.lang.String CLIENT_PROPS -> CLIENT_PROPS
    java.lang.String SERVER_PROPS -> SERVER_PROPS
    java.lang.String TOPIC_STATS -> TOPIC_STATS
    java.lang.String LAST_SYNC_TIME -> LAST_SYNC_TIME
    java.lang.String COACH_PNG -> COACH_PNG
    java.lang.String USER_PNG -> USER_PNG
    java.lang.String THIS_SYNC_TIME -> THIS_SYNC_TIME
    java.lang.String SERVER_TIME_STAMPS -> SERVER_TIME_STAMPS
    java.util.HashMap currentActivityStats -> currentActivityStats
    com.mazalearn.scienceengine.app.services.ProfileData$ClientProps client -> client
    com.mazalearn.scienceengine.app.services.ProfileData$ServerProps server -> server
    java.util.HashMap topicStats -> topicStats
    com.mazalearn.scienceengine.app.services.ProfileData$Social social -> social
    java.util.HashMap lastUpdated -> lastUpdated
    java.lang.String userPng -> userPng
    java.lang.String coachPng -> coachPng
    java.util.Map serverTimestamps -> serverTimestamps
com.mazalearn.scienceengine.app.services.ProfileData$ClientProps -> com.mazalearn.scienceengine.app.services.ProfileData$ClientProps:
    java.lang.String userEmail -> userEmail
    java.lang.String platform -> platform
    java.lang.String color -> color
    float current -> current
    java.lang.String installId -> installId
    java.lang.String topic -> topic
    java.lang.String lastActivity -> lastActivity
    java.lang.String activity -> activity
    java.util.ArrayList certificates -> certificates
    java.util.ArrayList certificateTimes -> certificateTimes
    int points -> points
    boolean dontShowAgain -> dontShowAgain
    int launchCount -> launchCount
    long dateFirstLaunch -> dateFirstLaunch
    boolean soundEnabled -> soundEnabled
    boolean musicEnabled -> musicEnabled
    boolean speechEnabled -> speechEnabled
com.mazalearn.scienceengine.app.services.ProfileData$ServerProps -> com.mazalearn.scienceengine.app.services.ProfileData$ServerProps:
    java.lang.String userName -> userName
    java.lang.String userId -> userId
    java.lang.String sex -> sex
    java.lang.String grade -> grade
    java.lang.String school -> school
    java.lang.String city -> city
    java.lang.String comments -> comments
    java.lang.String registrationDate -> registrationDate
    boolean isRegistered -> isRegistered
com.mazalearn.scienceengine.app.services.ProfileData$Social -> com.mazalearn.scienceengine.app.services.ProfileData$Social:
    java.util.ArrayList friends -> friends
    com.mazalearn.scienceengine.app.services.ProfileData$Social$MQ inbox -> inbox
    com.mazalearn.scienceengine.app.services.ProfileData$Social$MQ outbox -> outbox
    int points -> points
com.mazalearn.scienceengine.app.services.ProfileData$Social$MQ -> com.mazalearn.scienceengine.app.services.ProfileData$Social$MQ:
    java.util.ArrayList mq -> mq
    int tailId -> tailId
    int headId -> headId
    128:130:void addMessage(com.mazalearn.scienceengine.app.services.ProfileData$Social$Message) -> addMessage
com.mazalearn.scienceengine.app.services.ProfileData$Social$Message -> com.mazalearn.scienceengine.app.services.ProfileData$Social$Message:
    int messageId -> messageId
    java.lang.String email -> email
    int giftType -> giftType
    java.lang.String text -> text
    java.lang.String image -> image
    int points -> points
com.mazalearn.scienceengine.app.services.ProfileSyncer -> com.mazalearn.scienceengine.app.services.i:
    long FORCED_SYNC -> a
    long testCurrentTime -> b
    java.util.List serverProfileItems -> c
    21:22:void setTestCurrentTime(long) -> a
    25:25:long getCurrentTime() -> a
    46:58:void syncMerge(java.util.Map,java.util.Map,java.util.Map,java.util.Map) -> a
    84:99:java.util.Map getSyncData(java.util.Map,java.util.Map,java.util.Map,java.util.Map) -> b
    105:121:java.util.Map doSync(java.util.Map,java.util.Map,java.util.Map,java.util.Map) -> c
    125:125:long nvl(java.lang.Long,long) -> a
    130:160:void mergeProfile(com.mazalearn.scienceengine.app.services.ProfileData,com.mazalearn.scienceengine.app.services.ProfileData) -> a
    170:196:boolean syncSocialClient(com.mazalearn.scienceengine.app.services.ProfileData$Social,com.mazalearn.scienceengine.app.services.ProfileData$Social) -> a
    201:218:java.util.Map getSyncJson(com.mazalearn.scienceengine.app.services.ProfileData) -> a
com.mazalearn.scienceengine.app.services.SoundManager -> com.mazalearn.scienceengine.app.services.SoundManager:
    float volume -> a
    boolean enabled -> b
    56:68:void play(com.mazalearn.scienceengine.app.services.SoundManager$ScienceEngineSound) -> a
    74:82:void setVolume(float) -> a
    88:89:void setEnabled(boolean) -> a
    95:96:void dispose() -> a
com.mazalearn.scienceengine.app.services.SoundManager$ScienceEngineSound -> com.mazalearn.scienceengine.app.services.SoundManager$ScienceEngineSound:
    com.mazalearn.scienceengine.app.services.SoundManager$ScienceEngineSound CLICK -> a
    com.mazalearn.scienceengine.app.services.SoundManager$ScienceEngineSound SUCCESS -> b
    com.mazalearn.scienceengine.app.services.SoundManager$ScienceEngineSound FAILURE -> c
    com.mazalearn.scienceengine.app.services.SoundManager$ScienceEngineSound CELEBRATE -> d
    com.mazalearn.scienceengine.app.services.SoundManager$ScienceEngineSound RAPID_FIRE -> e
    com.mazalearn.scienceengine.app.services.SoundManager$ScienceEngineSound CHIME -> f
    com.mazalearn.scienceengine.app.services.SoundManager$ScienceEngineSound CHALLENGE -> g
    java.lang.String fileName -> fileName
    com.mazalearn.scienceengine.app.services.SoundManager$ScienceEngineSound[] ENUM$VALUES -> h
    31:31:java.lang.String getFileName() -> a
    1:1:com.mazalearn.scienceengine.app.services.SoundManager$ScienceEngineSound[] values() -> values
    1:1:com.mazalearn.scienceengine.app.services.SoundManager$ScienceEngineSound valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.app.services.loaders.AsyncLevelLoader -> com.mazalearn.scienceengine.app.services.loaders.a:
    com.mazalearn.scienceengine.app.services.loaders.LevelLoader levelLoader -> a
    23:25:void loadAsync$700b64ca(com.mazalearn.scienceengine.app.services.loaders.AsyncLevelLoader$LevelLoaderParameter) -> a
    29:30:com.mazalearn.scienceengine.core.controller.IScience2DController loadSync$141b0492(com.mazalearn.scienceengine.app.services.loaders.AsyncLevelLoader$LevelLoaderParameter) -> b
    36:36:com.badlogic.gdx.utils.Array getDependencies$4faa8a3e() -> a
    1:1:void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    1:1:com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    1:1:java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.mazalearn.scienceengine.app.services.loaders.AsyncLevelLoader$LevelLoaderParameter -> com.mazalearn.scienceengine.app.services.loaders.b:
    com.mazalearn.scienceengine.core.controller.IScience2DController science2DController -> b
com.mazalearn.scienceengine.app.services.loaders.CircuitLoader -> com.mazalearn.scienceengine.app.services.loaders.c:
    13:23:void loadCircuits(com.badlogic.gdx.utils.Array,com.mazalearn.scienceengine.core.model.IScience2DModel) -> a
    26:38:void loadCircuit(com.badlogic.gdx.utils.Array,com.mazalearn.scienceengine.core.model.IScience2DModel) -> b
com.mazalearn.scienceengine.app.services.loaders.ComponentLoader -> com.mazalearn.scienceengine.app.services.loaders.d:
    java.util.Map componentTypeCount -> a
    com.mazalearn.scienceengine.core.controller.IScience2DController science2DController -> b
    29:38:void loadEnvironment(com.mazalearn.scienceengine.core.model.EnvironmentBody,com.badlogic.gdx.utils.Array) -> a
    41:54:void loadComponents(com.badlogic.gdx.utils.Array,boolean) -> a
    58:110:void loadComponent(com.badlogic.gdx.utils.OrderedMap,boolean) -> a
    113:125:com.badlogic.gdx.scenes.scene2d.Actor findActor(java.lang.String,java.lang.String) -> a
com.mazalearn.scienceengine.app.services.loaders.ConfigLoader -> com.mazalearn.scienceengine.app.services.loaders.e:
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$core$controller$IModelConfig$ConfigType -> a
    18:26:void loadConfigs(com.badlogic.gdx.utils.Array,com.mazalearn.scienceengine.core.model.IScience2DModel) -> a
    30:52:void loadConfig(com.badlogic.gdx.utils.OrderedMap,com.mazalearn.scienceengine.core.model.IScience2DModel) -> a
    10:10:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$core$controller$IModelConfig$ConfigType() -> a
com.mazalearn.scienceengine.app.services.loaders.GroupLoader -> com.mazalearn.scienceengine.app.services.loaders.f:
    12:22:void loadGroups(com.badlogic.gdx.utils.Array,com.mazalearn.scienceengine.core.view.IScience2DView) -> a
    25:37:void loadGroup(com.badlogic.gdx.utils.Array,com.mazalearn.scienceengine.core.view.IScience2DView) -> b
com.mazalearn.scienceengine.app.services.loaders.LevelLoader -> com.mazalearn.scienceengine.app.services.loaders.g:
    com.mazalearn.scienceengine.core.controller.IScience2DController science2DController -> a
    com.mazalearn.scienceengine.core.view.IScience2DView science2DView -> b
    com.mazalearn.scienceengine.core.model.IScience2DModel science2DModel -> c
    com.mazalearn.scienceengine.core.view.ModelControls modelControls -> d
    com.mazalearn.scienceengine.core.view.ViewControls viewControls -> e
    com.mazalearn.scienceengine.Topic level -> f
    com.badlogic.gdx.utils.OrderedMap rootElem -> g
    com.mazalearn.scienceengine.app.services.loaders.ComponentLoader componentLoader -> h
    com.mazalearn.scienceengine.app.services.loaders.TutorLoader tutorLoader -> i
    47:49:void load() -> a
    52:56:com.badlogic.gdx.utils.OrderedMap getJsonFromFile() -> b
    61:68:com.badlogic.gdx.utils.OrderedMap getJsonFromFile(com.mazalearn.scienceengine.Topic,com.mazalearn.scienceengine.Topic) -> a
    72:83:void loadFromJson() -> c
    86:95:void reload() -> d
    98:102:void readLevelInfo(com.badlogic.gdx.utils.OrderedMap) -> a
    105:111:void loadTutors(com.badlogic.gdx.utils.Array) -> a
    114:114:java.lang.Object nvl(java.lang.Object,java.lang.Object) -> a
com.mazalearn.scienceengine.app.services.loaders.Trivia -> com.mazalearn.scienceengine.app.services.loaders.Trivia:
    java.lang.String TRIVIA_FILE_NAME -> a
    com.badlogic.gdx.utils.Array trivia -> b
    23:31:void load() -> a
    34:34:int getNumTrivia() -> b
    39:40:java.lang.String getTriviumPart(int,com.mazalearn.scienceengine.app.services.loaders.Trivia$Part) -> a
com.mazalearn.scienceengine.app.services.loaders.Trivia$Part -> com.mazalearn.scienceengine.app.services.loaders.Trivia$Part:
    com.mazalearn.scienceengine.app.services.loaders.Trivia$Part text -> a
    com.mazalearn.scienceengine.app.services.loaders.Trivia$Part image -> b
    com.mazalearn.scienceengine.app.services.loaders.Trivia$Part[] ENUM$VALUES -> c
    1:1:com.mazalearn.scienceengine.app.services.loaders.Trivia$Part[] values() -> values
    1:1:com.mazalearn.scienceengine.app.services.loaders.Trivia$Part valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.app.services.loaders.TutorLoader -> com.mazalearn.scienceengine.app.services.loaders.h:
    com.mazalearn.scienceengine.core.controller.IScience2DController science2DController -> a
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$tutor$TutorType -> b
    33:63:com.mazalearn.scienceengine.tutor.AbstractTutor loadTutor(com.mazalearn.scienceengine.Topic,com.mazalearn.scienceengine.tutor.ITutor,com.badlogic.gdx.utils.OrderedMap) -> a
    68:73:com.mazalearn.scienceengine.tutor.AbstractTutor makeParameterProber(com.badlogic.gdx.utils.OrderedMap,com.mazalearn.scienceengine.tutor.ParameterProber) -> a
    78:82:com.mazalearn.scienceengine.tutor.AbstractTutor makeMcqTutor(com.badlogic.gdx.utils.OrderedMap,com.mazalearn.scienceengine.tutor.McqTutor) -> a
    86:91:com.mazalearn.scienceengine.tutor.AbstractTutor makeTutorGroup(com.badlogic.gdx.utils.OrderedMap,com.mazalearn.scienceengine.tutor.TutorGroup) -> a
    96:114:com.mazalearn.scienceengine.tutor.AbstractTutor makeReviewer(com.badlogic.gdx.utils.OrderedMap,com.mazalearn.scienceengine.tutor.TutorGroup) -> b
    119:134:com.mazalearn.scienceengine.tutor.AbstractTutor makeAbstractor(com.badlogic.gdx.utils.OrderedMap,com.mazalearn.scienceengine.tutor.Abstractor) -> a
    138:141:com.mazalearn.scienceengine.tutor.KnowledgeUnit makeKnowledgeUnit(com.badlogic.gdx.utils.OrderedMap,com.mazalearn.scienceengine.tutor.KnowledgeUnit) -> a
    145:150:java.lang.String[] loadStringArray(java.lang.String,com.badlogic.gdx.utils.OrderedMap) -> a
    155:167:java.util.List loadChildTutors(com.mazalearn.scienceengine.Topic,com.mazalearn.scienceengine.tutor.ITutor,com.badlogic.gdx.utils.Array) -> a
    24:24:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$tutor$TutorType() -> a
com.mazalearn.scienceengine.app.utils.Crypter -> com.mazalearn.scienceengine.app.utils.a:
    java.lang.String SALT -> a
    java.lang.String XLATE -> b
    com.mazalearn.scienceengine.app.utils.Crypter$Sha1 sha1 -> c
    41:42:void setSha1Implementor(com.mazalearn.scienceengine.app.utils.Crypter$Sha1) -> a
    48:59:java.lang.String saltedSha1Hash(java.lang.String,java.lang.String) -> a
    63:77:java.lang.String hexlate(byte[]) -> a
com.mazalearn.scienceengine.app.utils.Crypter$1 -> com.mazalearn.scienceengine.app.utils.b:
    22:36:byte[] sha1Hash(byte[]) -> a
com.mazalearn.scienceengine.app.utils.Crypter$Sha1 -> com.mazalearn.scienceengine.app.utils.c:
    byte[] sha1Hash(byte[]) -> a
com.mazalearn.scienceengine.app.utils.Dimension -> com.mazalearn.scienceengine.app.utils.d:
    int width -> a
    int height -> b
com.mazalearn.scienceengine.app.utils.Format -> com.mazalearn.scienceengine.app.utils.e:
    6:7:java.lang.String formatTime(float) -> a
com.mazalearn.scienceengine.app.utils.IPlatformAdapter -> com.mazalearn.scienceengine.app.utils.IPlatformAdapter:
    void browseURL(java.lang.String) -> a
    void showExternalURL(java.lang.String) -> b
    void showInternalURL(java.lang.String) -> c
    boolean playVideo(java.io.File) -> a
    com.badlogic.gdx.scenes.scene2d.Stage createLevelEditor(com.mazalearn.scienceengine.core.controller.IScience2DController,com.mazalearn.scienceengine.app.screens.AbstractScreen) -> a
    com.mazalearn.scienceengine.app.services.IMessage getMsg() -> a
    com.mazalearn.scienceengine.app.utils.IPlatformAdapter$Platform getPlatform() -> b
    com.badlogic.gdx.graphics.g2d.BitmapFont loadFont(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String) -> a
    void getBytes(com.badlogic.gdx.graphics.Pixmap,byte[]) -> a
    void putBytes(com.badlogic.gdx.graphics.Pixmap,byte[]) -> b
    byte[] pixmap2Bytes(com.badlogic.gdx.graphics.Pixmap) -> a
    com.badlogic.gdx.graphics.Pixmap bytes2Pixmap(byte[]) -> a
    boolean supportsLanguage() -> c
    java.lang.String httpPost(java.lang.String,java.lang.String,java.util.Map,byte[]) -> a
    void takeSnapshot(com.badlogic.gdx.scenes.scene2d.Stage,com.mazalearn.scienceengine.Topic,com.mazalearn.scienceengine.Topic,int,int,int,int) -> a
    java.lang.String getInstallationId() -> g
    java.lang.String httpGet(java.lang.String) -> d
    void executeAsync(java.lang.Runnable) -> a
    boolean supportsSync() -> h
    void launchPurchaseFlow(java.lang.String,com.mazalearn.scienceengine.billing.IBilling) -> a
    void queryInventory(java.util.List,com.mazalearn.scienceengine.billing.IBilling) -> a
    boolean supportsSpeech() -> d
    void speak(java.lang.String,boolean) -> a
    void provisionSpeech() -> e
    java.lang.String getDeviceId() -> f
com.mazalearn.scienceengine.app.utils.IPlatformAdapter$Platform -> com.mazalearn.scienceengine.app.utils.IPlatformAdapter$Platform:
    com.mazalearn.scienceengine.app.utils.IPlatformAdapter$Platform Desktop -> a
    com.mazalearn.scienceengine.app.utils.IPlatformAdapter$Platform Android -> b
    com.mazalearn.scienceengine.app.utils.IPlatformAdapter$Platform AndroidEmulator -> c
    com.mazalearn.scienceengine.app.utils.IPlatformAdapter$Platform GWT -> d
    com.mazalearn.scienceengine.app.utils.IPlatformAdapter$Platform IOS -> e
    com.mazalearn.scienceengine.app.utils.IPlatformAdapter$Platform[] ENUM$VALUES -> f
    1:1:com.mazalearn.scienceengine.app.utils.IPlatformAdapter$Platform[] values() -> values
    1:1:com.mazalearn.scienceengine.app.utils.IPlatformAdapter$Platform valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.app.utils.ImageList -> com.mazalearn.scienceengine.app.utils.f:
com.mazalearn.scienceengine.app.utils.LevelUtil -> com.mazalearn.scienceengine.app.utils.g:
    15:24:com.badlogic.gdx.graphics.Texture getLevelThumbnail$22c815b4(com.mazalearn.scienceengine.Topic,com.mazalearn.scienceengine.Topic) -> a
    28:28:com.badlogic.gdx.graphics.Pixmap getEmptyThumbnail() -> a
    34:34:int powerOf2Ceiling(float) -> a
    38:38:com.badlogic.gdx.files.FileHandle getLevelFile(com.mazalearn.scienceengine.Topic,com.mazalearn.scienceengine.Topic,java.lang.String) -> a
    43:43:java.lang.String getLevelFilename(com.mazalearn.scienceengine.Topic,com.mazalearn.scienceengine.Topic,java.lang.String) -> b
com.mazalearn.scienceengine.app.utils.ProfileMapConverter -> com.mazalearn.scienceengine.app.utils.h:
    14:22:java.util.Map profileToMap(com.mazalearn.scienceengine.app.services.ProfileData) -> a
    27:36:void mapToProfile(com.mazalearn.scienceengine.app.services.ProfileData,java.util.Map) -> a
com.mazalearn.scienceengine.app.utils.ScreenUtils -> com.mazalearn.scienceengine.app.utils.i:
    com.badlogic.gdx.math.Vector3 currentTouch -> a
    int NUM_ENGINE_WHEELS -> b
    52:88:com.badlogic.gdx.graphics.Pixmap getScreenshot(float,float,float,float,int,int,com.badlogic.gdx.scenes.scene2d.Stage,boolean) -> a
    92:102:void flipY(com.badlogic.gdx.graphics.Pixmap) -> a
    105:112:void swapLines(byte[],int,int,int) -> a
    116:130:void removeBlackAndYellow(com.badlogic.gdx.graphics.Pixmap) -> b
    133:138:com.badlogic.gdx.graphics.g2d.TextureRegion createTextureRegion(float,float,com.badlogic.gdx.graphics.Color) -> a
    143:147:com.badlogic.gdx.scenes.scene2d.ui.Label createLabel(java.lang.String,float,float,float,float,com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> a
    152:162:com.badlogic.gdx.scenes.scene2d.ui.TextButton createImageButton(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String) -> a
    167:172:com.badlogic.gdx.scenes.scene2d.ui.TextButton createTextButton(java.lang.String,float,float,float,float,com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle) -> a
    177:178:com.badlogic.gdx.scenes.scene2d.ui.TextButton createCheckBox$728f9f95(java.lang.String,float,com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle) -> a
    183:189:com.badlogic.gdx.scenes.scene2d.ui.TextButton setupTextBox$22a14b41(float,float,float,com.badlogic.gdx.scenes.scene2d.ui.CheckBox) -> a
    194:202:com.badlogic.gdx.scenes.scene2d.ui.TextButton createImageCheckBox$728f9f95$30d1f14b(float,float,com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle) -> a
    207:218:void createProgressPercentageBar(com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle,com.badlogic.gdx.scenes.scene2d.ui.TextButton,float,float) -> a
    222:237:com.badlogic.gdx.scenes.scene2d.Actor createScienceTrain(int) -> a
com.mazalearn.scienceengine.app.utils.ScreenUtils$1 -> com.mazalearn.scienceengine.app.utils.j:
    156:159:void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> drawBackground
com.mazalearn.scienceengine.app.utils.ScreenUtils$2 -> com.mazalearn.scienceengine.app.utils.k:
    197:200:void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> drawBackground
com.mazalearn.scienceengine.app.utils.ServerConstants -> com.mazalearn.scienceengine.app.utils.l:
    java.lang.String TOPIC -> a
    java.lang.String CERTIFICATE_SERVLET -> b
    java.lang.String USER_PROFILE_SERVLET -> c
    java.lang.String INSTALL_PROFILE_SERVLET -> d
    java.lang.String REGISTRATION_SERVLET -> e
com.mazalearn.scienceengine.billing.Base64 -> com.mazalearn.scienceengine.billing.a:
    boolean ENCODE -> a
    boolean DECODE -> b
    byte EQUALS_SIGN -> d
    byte NEW_LINE -> e
    byte[] ALPHABET -> f
    byte[] WEBSAFE_ALPHABET -> g
    byte[] DECODABET -> h
    byte[] WEBSAFE_DECODABET -> i
    byte WHITE_SPACE_ENC -> j
    byte EQUALS_SIGN_ENC -> k
    boolean $assertionsDisabled -> c
    210:234:byte[] encode3to4(byte[],int,int,byte[],int,byte[]) -> a
    247:247:java.lang.String encode(byte[]) -> a
    258:258:java.lang.String encodeWebSafe(byte[],boolean) -> a
    274:286:java.lang.String encode$785907af(byte[],int,byte[],boolean) -> a
    301:345:byte[] encode$589aa863(byte[],int,int,byte[]) -> a
    378:406:int decode4to3$355785af(byte[],byte[],int,byte[]) -> a
    419:420:byte[] decode(java.lang.String) -> a
    431:432:byte[] decodeWebSafe(java.lang.String) -> b
    445:445:byte[] decode(byte[]) -> b
    458:458:byte[] decodeWebSafe(byte[]) -> c
    474:474:byte[] decode$7dcc7401(byte[],int) -> a
    489:489:byte[] decodeWebSafe$7dcc7401(byte[],int) -> b
    504:568:byte[] decode$3f345f1a(byte[],int,byte[]) -> a
com.mazalearn.scienceengine.billing.Base64DecoderException -> com.mazalearn.scienceengine.billing.Base64DecoderException:
    long serialVersionUID -> serialVersionUID
com.mazalearn.scienceengine.billing.IBilling -> com.mazalearn.scienceengine.billing.b:
    int REQUEST_CODE -> b
    void purchaseCallback(java.lang.String) -> a
    void inventoryCallback(com.mazalearn.scienceengine.billing.Inventory) -> a
com.mazalearn.scienceengine.billing.IabException -> com.mazalearn.scienceengine.billing.IabException:
    com.mazalearn.scienceengine.billing.IabResult mResult -> mResult
    42:42:com.mazalearn.scienceengine.billing.IabResult getResult() -> a
com.mazalearn.scienceengine.billing.IabHelper -> com.mazalearn.scienceengine.billing.c:
    boolean mDebugLog -> a
    java.lang.String mDebugTag -> b
    boolean mSetupDone -> c
    boolean mSubscriptionsSupported -> d
    boolean mAsyncInProgress -> e
    java.lang.String mAsyncOperation -> f
    android.content.Context mContext -> g
    com.android.vending.billing.IInAppBillingService mService -> h
    android.content.ServiceConnection mServiceConn -> i
    int mRequestCode -> j
    java.lang.String mPurchasingItemType -> k
    java.lang.String mSignatureBase64 -> l
    int BILLING_RESPONSE_RESULT_OK -> m
    int BILLING_RESPONSE_RESULT_USER_CANCELED -> n
    int BILLING_RESPONSE_RESULT_BILLING_UNAVAILABLE -> o
    int BILLING_RESPONSE_RESULT_ITEM_UNAVAILABLE -> p
    int BILLING_RESPONSE_RESULT_DEVELOPER_ERROR -> q
    int BILLING_RESPONSE_RESULT_ERROR -> r
    int BILLING_RESPONSE_RESULT_ITEM_ALREADY_OWNED -> s
    int BILLING_RESPONSE_RESULT_ITEM_NOT_OWNED -> t
    int IABHELPER_ERROR_BASE -> u
    int IABHELPER_REMOTE_EXCEPTION -> v
    int IABHELPER_BAD_RESPONSE -> w
    int IABHELPER_VERIFICATION_FAILED -> x
    int IABHELPER_SEND_INTENT_FAILED -> y
    int IABHELPER_USER_CANCELLED -> z
    int IABHELPER_UNKNOWN_PURCHASE_RESPONSE -> A
    int IABHELPER_MISSING_TOKEN -> B
    int IABHELPER_UNKNOWN_ERROR -> C
    int IABHELPER_SUBSCRIPTIONS_NOT_AVAILABLE -> D
    int IABHELPER_INVALID_CONSUMPTION -> E
    java.lang.String RESPONSE_CODE -> F
    java.lang.String RESPONSE_GET_SKU_DETAILS_LIST -> G
    java.lang.String RESPONSE_BUY_INTENT -> H
    java.lang.String RESPONSE_INAPP_PURCHASE_DATA -> I
    java.lang.String RESPONSE_INAPP_SIGNATURE -> J
    java.lang.String RESPONSE_INAPP_ITEM_LIST -> K
    java.lang.String RESPONSE_INAPP_PURCHASE_DATA_LIST -> L
    java.lang.String RESPONSE_INAPP_SIGNATURE_LIST -> M
    java.lang.String INAPP_CONTINUATION_TOKEN -> N
    java.lang.String ITEM_TYPE_INAPP -> O
    java.lang.String ITEM_TYPE_SUBS -> P
    java.lang.String GET_SKU_DETAILS_ITEM_LIST -> Q
    java.lang.String GET_SKU_DETAILS_ITEM_TYPE_LIST -> R
    com.mazalearn.scienceengine.billing.IabHelper$OnIabPurchaseFinishedListener mPurchaseListener -> S
    171:173:void enableDebugLogging(boolean,java.lang.String) -> a
    176:177:void enableDebugLogging$1385ff() -> a
    201:272:void startSetup(com.mazalearn.scienceengine.billing.IabHelper$OnIabSetupFinishedListener) -> a
    281:290:void dispose() -> b
    294:294:boolean subscriptionsSupported() -> e
    299:299:boolean inappItemsSupported() -> c
    324:325:void launchPurchaseFlow(android.app.Activity,java.lang.String,int,com.mazalearn.scienceengine.billing.IabHelper$OnIabPurchaseFinishedListener) -> a
    329:330:void launchPurchaseFlow(android.app.Activity,java.lang.String,int,com.mazalearn.scienceengine.billing.IabHelper$OnIabPurchaseFinishedListener,java.lang.String) -> a
    334:335:void launchSubscriptionPurchaseFlow(android.app.Activity,java.lang.String,int,com.mazalearn.scienceengine.billing.IabHelper$OnIabPurchaseFinishedListener) -> b
    339:340:void launchSubscriptionPurchaseFlow(android.app.Activity,java.lang.String,int,com.mazalearn.scienceengine.billing.IabHelper$OnIabPurchaseFinishedListener,java.lang.String) -> b
    362:409:void launchPurchaseFlow(android.app.Activity,java.lang.String,java.lang.String,int,com.mazalearn.scienceengine.billing.IabHelper$OnIabPurchaseFinishedListener,java.lang.String) -> a
    426:504:boolean handleActivityResult(int,int,android.content.Intent) -> a
    508:508:com.mazalearn.scienceengine.billing.Inventory queryInventory(boolean,java.util.List) -> b
    526:562:com.mazalearn.scienceengine.billing.Inventory queryInventory$57b21199(boolean,java.util.List) -> a
    593:618:void queryInventoryAsync(boolean,java.util.List,com.mazalearn.scienceengine.billing.IabHelper$QueryInventoryFinishedListener) -> a
    621:622:void queryInventoryAsync(com.mazalearn.scienceengine.billing.IabHelper$QueryInventoryFinishedListener) -> a
    625:626:void queryInventoryAsync$805069(com.mazalearn.scienceengine.billing.IabHelper$QueryInventoryFinishedListener) -> b
    639:666:void consume(com.mazalearn.scienceengine.billing.Purchase) -> a
    706:710:void consumeAsync(com.mazalearn.scienceengine.billing.Purchase,com.mazalearn.scienceengine.billing.IabHelper$OnConsumeFinishedListener) -> a
    718:720:void consumeAsync(java.util.List,com.mazalearn.scienceengine.billing.IabHelper$OnConsumeMultiFinishedListener) -> a
    730:753:java.lang.String getResponseDesc(int) -> a
    759:763:void checkSetupDone(java.lang.String) -> a
    767:777:int getResponseCodeFromBundle(android.os.Bundle) -> a
    783:793:int getResponseCodeFromIntent(android.content.Intent) -> a
    798:803:void flagStartAsync(java.lang.String) -> d
    806:809:void flagEndAsync() -> d
    814:872:int queryPurchases(com.mazalearn.scienceengine.billing.Inventory,java.lang.String) -> a
    877:912:int querySkuDetails(java.lang.String,com.mazalearn.scienceengine.billing.Inventory,java.util.List) -> a
    919:951:void consumeAsyncInternal(java.util.List,com.mazalearn.scienceengine.billing.IabHelper$OnConsumeFinishedListener,com.mazalearn.scienceengine.billing.IabHelper$OnConsumeMultiFinishedListener) -> a
    954:955:void logDebug(java.lang.String) -> b
    958:959:void logError(java.lang.String) -> c
    962:963:void logWarn(java.lang.String) -> e
com.mazalearn.scienceengine.billing.IabHelper$1 -> com.mazalearn.scienceengine.billing.d:
    com.mazalearn.scienceengine.billing.IabHelper this$0 -> a
    com.mazalearn.scienceengine.billing.IabHelper$OnIabSetupFinishedListener val$listener -> b
    208:210:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    214:256:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.mazalearn.scienceengine.billing.IabHelper$2 -> com.mazalearn.scienceengine.billing.e:
    com.mazalearn.scienceengine.billing.IabHelper this$0 -> a
    boolean val$querySkuDetails -> b
    java.util.List val$moreSkus -> c
    android.os.Handler val$handler -> d
    com.mazalearn.scienceengine.billing.IabHelper$QueryInventoryFinishedListener val$listener -> e
    598:616:void run() -> run
com.mazalearn.scienceengine.billing.IabHelper$2$1 -> com.mazalearn.scienceengine.billing.f:
    com.mazalearn.scienceengine.billing.IabHelper$2 this$1 -> a
    com.mazalearn.scienceengine.billing.IabHelper$QueryInventoryFinishedListener val$listener -> b
    com.mazalearn.scienceengine.billing.IabResult val$result_f -> c
    com.mazalearn.scienceengine.billing.Inventory val$inv_f -> d
    613:614:void run() -> run
com.mazalearn.scienceengine.billing.IabHelper$3 -> com.mazalearn.scienceengine.billing.g:
    com.mazalearn.scienceengine.billing.IabHelper this$0 -> a
    java.util.List val$purchases -> b
    com.mazalearn.scienceengine.billing.IabHelper$OnConsumeFinishedListener val$singleListener -> c
    android.os.Handler val$handler -> d
    com.mazalearn.scienceengine.billing.IabHelper$OnConsumeMultiFinishedListener val$multiListener -> e
    923:949:void run() -> run
com.mazalearn.scienceengine.billing.IabHelper$3$1 -> com.mazalearn.scienceengine.billing.h:
    com.mazalearn.scienceengine.billing.IabHelper$3 this$1 -> a
    com.mazalearn.scienceengine.billing.IabHelper$OnConsumeFinishedListener val$singleListener -> b
    java.util.List val$purchases -> c
    java.util.List val$results -> d
    938:939:void run() -> run
com.mazalearn.scienceengine.billing.IabHelper$3$2 -> com.mazalearn.scienceengine.billing.i:
    com.mazalearn.scienceengine.billing.IabHelper$3 this$1 -> a
    com.mazalearn.scienceengine.billing.IabHelper$OnConsumeMultiFinishedListener val$multiListener -> b
    java.util.List val$purchases -> c
    java.util.List val$results -> d
    945:946:void run() -> run
com.mazalearn.scienceengine.billing.IabHelper$OnConsumeFinishedListener -> com.mazalearn.scienceengine.billing.j:
    void onConsumeFinished$8f730a7() -> a
com.mazalearn.scienceengine.billing.IabHelper$OnConsumeMultiFinishedListener -> com.mazalearn.scienceengine.billing.k:
    void onConsumeMultiFinished$4e6360a9() -> a
com.mazalearn.scienceengine.billing.IabHelper$OnIabPurchaseFinishedListener -> com.mazalearn.scienceengine.billing.l:
    void onIabPurchaseFinished(com.mazalearn.scienceengine.billing.IabResult,com.mazalearn.scienceengine.billing.Purchase) -> a
com.mazalearn.scienceengine.billing.IabHelper$OnIabSetupFinishedListener -> com.mazalearn.scienceengine.billing.m:
    void onIabSetupFinished(com.mazalearn.scienceengine.billing.IabResult) -> a
com.mazalearn.scienceengine.billing.IabHelper$QueryInventoryFinishedListener -> com.mazalearn.scienceengine.billing.n:
    void onQueryInventoryFinished(com.mazalearn.scienceengine.billing.IabResult,com.mazalearn.scienceengine.billing.Inventory) -> a
com.mazalearn.scienceengine.billing.IabResult -> com.mazalearn.scienceengine.billing.o:
    int mResponse -> a
    java.lang.String mMessage -> b
    39:39:int getResponse() -> a
    40:40:java.lang.String getMessage() -> d
    41:41:boolean isSuccess() -> b
    42:42:boolean isFailure() -> c
    43:43:java.lang.String toString() -> toString
com.mazalearn.scienceengine.billing.Inventory -> com.mazalearn.scienceengine.billing.p:
    java.util.Map mSkuMap -> a
    java.util.Map mPurchaseMap -> b
    36:36:com.mazalearn.scienceengine.billing.SkuDetails getSkuDetails(java.lang.String) -> a
    41:41:com.mazalearn.scienceengine.billing.Purchase getPurchase(java.lang.String) -> c
    46:46:boolean hasPurchase(java.lang.String) -> d
    51:51:boolean hasDetails(java.lang.String) -> e
    63:64:void erasePurchase(java.lang.String) -> f
    68:68:java.util.Set getAllOwnedSkus() -> a
    73:77:java.util.List getAllOwnedSkus(java.lang.String) -> b
    82:82:java.util.List getAllPurchases() -> b
    86:87:void addSkuDetails(com.mazalearn.scienceengine.billing.SkuDetails) -> a
    90:91:void addPurchase(com.mazalearn.scienceengine.billing.Purchase) -> a
com.mazalearn.scienceengine.billing.Purchase -> com.mazalearn.scienceengine.billing.Purchase:
    java.lang.String itemType -> itemType
    java.lang.String orderId -> orderId
    java.lang.String packageName -> packageName
    java.lang.String productId -> productId
    long purchaseTime -> purchaseTime
    int purchaseState -> purchaseState
    java.lang.String developerPayload -> developerPayload
    java.lang.String purchaseToken -> purchaseToken
    java.lang.String originalJson -> originalJson
    java.lang.String signature -> signature
    37:41:com.mazalearn.scienceengine.billing.Purchase toPurchase(java.lang.String,java.lang.String,java.lang.String) -> toPurchase
    44:44:java.lang.String getItemType() -> getItemType
    45:45:java.lang.String getOrderId() -> getOrderId
    46:46:java.lang.String getPackageName() -> getPackageName
    47:47:java.lang.String getProductId() -> getProductId
    48:48:long getPurchaseTime() -> getPurchaseTime
    49:49:int getPurchaseState() -> getPurchaseState
    50:50:java.lang.String getDeveloperPayload() -> getDeveloperPayload
    51:51:java.lang.String getPurchaseToken() -> getPurchaseToken
    52:52:java.lang.String getOriginalJson() -> getOriginalJson
    53:53:java.lang.String getSignature() -> getSignature
    56:56:java.lang.String toString() -> toString
com.mazalearn.scienceengine.billing.Security -> com.mazalearn.scienceengine.billing.q:
    java.lang.String TAG -> a
    java.lang.String[] PKEY -> b
    java.lang.String KEY_FACTORY_ALGORITHM -> c
    java.lang.String SIGNATURE_ALGORITHM -> d
    com.mazalearn.scienceengine.billing.Security$Logger Log -> e
    57:61:java.lang.String getPublicKey() -> a
    65:65:java.lang.String getSharedSecret() -> b
    79:93:boolean verifyPurchase(java.lang.String,java.lang.String,java.lang.String) -> a
    105:115:java.security.PublicKey generatePublicKey(java.lang.String) -> a
    131:148:boolean verify(java.security.PublicKey,java.lang.String,java.lang.String) -> a
com.mazalearn.scienceengine.billing.Security$Logger -> com.mazalearn.scienceengine.billing.r:
    51:51:void i(java.lang.String,java.lang.String) -> b
    52:52:void e(java.lang.String,java.lang.String) -> a
    53:53:void w(java.lang.String,java.lang.String) -> c
com.mazalearn.scienceengine.billing.SkuDetails -> com.mazalearn.scienceengine.billing.SkuDetails:
    java.lang.String itemType -> itemType
    java.lang.String productId -> productId
    java.lang.String type -> type
    java.lang.String price -> price
    java.lang.String title -> title
    java.lang.String description -> description
    java.lang.String mJson -> mJson
    44:47:com.mazalearn.scienceengine.billing.SkuDetails toSkuDetails(java.lang.String,java.lang.String) -> toSkuDetails
    50:50:java.lang.String getProductId() -> getProductId
    51:51:java.lang.String getType() -> getType
    52:52:java.lang.String getPrice() -> getPrice
    53:53:java.lang.String getTitle() -> getTitle
    54:54:java.lang.String getDescription() -> getDescription
    58:58:java.lang.String toString() -> toString
com.mazalearn.scienceengine.core.controller.AbstractModelConfig -> com.mazalearn.scienceengine.core.controller.a:
    com.mazalearn.scienceengine.core.controller.IModelConfig$ConfigType type -> b
    com.mazalearn.scienceengine.core.model.Science2DBody body -> c
    com.mazalearn.scienceengine.core.model.IParameter parameter -> a
    boolean isPermitted -> d
    float low -> e
    float high -> f
    java.lang.Enum[] values -> g
    java.lang.String name -> h
    68:69:void setPermitted(boolean) -> a
    71:71:boolean isMeter() -> a
    72:72:boolean isPermitted() -> b
    73:73:com.mazalearn.scienceengine.core.controller.IModelConfig$ConfigType getType() -> c
    75:81:java.lang.String getName() -> d
    83:83:com.mazalearn.scienceengine.core.model.Science2DBody getBody() -> e
    84:84:com.mazalearn.scienceengine.core.model.IParameter getParameter() -> f
    85:85:java.lang.Object getValue() -> g
    86:86:void setValue(java.lang.Object) -> a
    boolean isPossible() -> h
    89:89:boolean isAvailable() -> i
    91:91:boolean hasProbeMode() -> j
    92:92:void setProbeMode() -> k
    95:95:float getLow() -> l
    96:96:float getHigh() -> m
    98:100:void setRange(float,float) -> a
    103:103:void doCommand() -> n
    107:107:java.lang.Enum[] getList() -> o
com.mazalearn.scienceengine.core.controller.AbstractScience2DController -> com.mazalearn.scienceengine.core.controller.b:
    com.mazalearn.scienceengine.core.view.ModelControls modelControls -> a
    com.mazalearn.scienceengine.core.view.ViewControls viewControls -> b
    com.mazalearn.scienceengine.core.model.IScience2DModel science2DModel -> c
    com.mazalearn.scienceengine.core.view.IScience2DView science2DView -> d
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> e
    com.mazalearn.scienceengine.Topic topic -> f
    com.mazalearn.scienceengine.Topic level -> g
    com.mazalearn.scienceengine.tutor.Guru guru -> h
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$core$model$CoreComponentType -> i
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$tutor$TutorType -> j
    61:66:void initialize(com.mazalearn.scienceengine.core.model.IScience2DModel,com.mazalearn.scienceengine.core.view.AbstractScience2DView) -> a
    70:70:com.mazalearn.scienceengine.Topic getTopic() -> a
    75:75:java.lang.String getTitle() -> b
    80:80:com.mazalearn.scienceengine.Topic getLevel() -> c
    85:85:com.mazalearn.scienceengine.core.view.IScience2DView getView() -> d
    90:90:com.mazalearn.scienceengine.core.model.IScience2DModel getModel() -> e
    95:95:com.mazalearn.scienceengine.core.view.ModelControls getModelControls() -> f
    100:100:com.mazalearn.scienceengine.core.view.ViewControls getViewControls() -> g
    105:105:com.badlogic.gdx.scenes.scene2d.ui.Skin getSkin() -> h
    110:113:void reset() -> i
    117:125:com.mazalearn.scienceengine.tutor.Guru getGuru() -> j
    131:143:com.badlogic.gdx.scenes.scene2d.Actor addScience2DActor(java.lang.String,java.lang.String,float,float,float) -> a
    150:185:com.badlogic.gdx.scenes.scene2d.Actor createActor(java.lang.String,java.lang.String,com.mazalearn.scienceengine.core.model.Science2DBody) -> a
    195:224:com.mazalearn.scienceengine.tutor.AbstractTutor createTutor(com.mazalearn.scienceengine.tutor.ITutor,java.lang.String,com.mazalearn.scienceengine.Topic,java.lang.String,java.lang.String,com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array,java.lang.String[],java.lang.String[],java.lang.String[]) -> a
    41:41:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$core$model$CoreComponentType() -> k
    41:41:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$tutor$TutorType() -> l
com.mazalearn.scienceengine.core.controller.AbstractScience2DController$1 -> com.mazalearn.scienceengine.core.controller.c:
    com.mazalearn.scienceengine.core.controller.AbstractScience2DController this$0 -> a
    166:172:void showHelp(com.badlogic.gdx.scenes.scene2d.Stage,boolean) -> a
com.mazalearn.scienceengine.core.controller.CheckBoxControl -> com.mazalearn.scienceengine.core.controller.d:
    com.mazalearn.scienceengine.core.controller.IModelConfig property -> a
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox checkBox -> b
    37:38:void syncWithModel() -> a
    41:41:boolean isActivated() -> b
    46:46:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> c
    13:13:com.badlogic.gdx.scenes.scene2d.ui.CheckBox access$0(com.mazalearn.scienceengine.core.controller.CheckBoxControl) -> a
com.mazalearn.scienceengine.core.controller.CheckBoxControl$1 -> com.mazalearn.scienceengine.core.controller.e:
    com.mazalearn.scienceengine.core.controller.CheckBoxControl this$0 -> a
    com.mazalearn.scienceengine.core.controller.IModelConfig val$property -> b
    24:25:void doCommand() -> a
    29:31:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.mazalearn.scienceengine.core.controller.CommandButtonControl -> com.mazalearn.scienceengine.core.controller.f:
    com.mazalearn.scienceengine.core.controller.IModelConfig command -> b
    com.badlogic.gdx.scenes.scene2d.ui.TextButton textButton -> a
    48:48:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> c
    53:53:void syncWithModel() -> a
    56:56:boolean isActivated() -> b
com.mazalearn.scienceengine.core.controller.CommandButtonControl$1 -> com.mazalearn.scienceengine.core.controller.g:
    com.mazalearn.scienceengine.core.controller.CommandButtonControl this$0 -> a
    com.mazalearn.scienceengine.core.controller.IModelConfig val$command -> b
    34:35:void doCommand() -> a
    39:42:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.mazalearn.scienceengine.core.controller.Controller -> com.mazalearn.scienceengine.core.controller.h:
    com.esotericsoftware.tablelayout.Cell cellTable -> a
    com.mazalearn.scienceengine.core.controller.IControl control -> b
    com.badlogic.gdx.scenes.scene2d.ui.Table table -> c
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$core$controller$IModelConfig$ConfigType -> d
    22:24:void validate() -> a
    29:29:com.mazalearn.scienceengine.core.controller.Controller createController(com.mazalearn.scienceengine.core.controller.IModelConfig,com.badlogic.gdx.scenes.scene2d.ui.Table,com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    35:72:com.mazalearn.scienceengine.core.controller.Controller createController(com.mazalearn.scienceengine.core.controller.IModelConfig,com.badlogic.gdx.scenes.scene2d.ui.Table,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String) -> a
    10:10:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$core$controller$IModelConfig$ConfigType() -> b
com.mazalearn.scienceengine.core.controller.IControl -> com.mazalearn.scienceengine.core.controller.i:
    void syncWithModel() -> a
    boolean isActivated() -> b
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> c
com.mazalearn.scienceengine.core.controller.IModelConfig -> com.mazalearn.scienceengine.core.controller.IModelConfig:
    com.mazalearn.scienceengine.core.controller.IModelConfig$ConfigType getType() -> c
    java.lang.String getName() -> d
    com.mazalearn.scienceengine.core.model.IParameter getParameter() -> f
    boolean isAvailable() -> i
    boolean isMeter() -> a
    void doCommand() -> n
    java.lang.Object getValue() -> g
    void setValue(java.lang.Object) -> a
    float getLow() -> l
    float getHigh() -> m
    java.lang.Enum[] getList() -> o
    void setPermitted(boolean) -> a
    boolean isPermitted() -> b
    boolean isPossible() -> h
    boolean hasProbeMode() -> j
    void setProbeMode() -> k
    com.mazalearn.scienceengine.core.model.Science2DBody getBody() -> e
com.mazalearn.scienceengine.core.controller.IModelConfig$ConfigType -> com.mazalearn.scienceengine.core.controller.IModelConfig$ConfigType:
    com.mazalearn.scienceengine.core.controller.IModelConfig$ConfigType RANGE -> a
    com.mazalearn.scienceengine.core.controller.IModelConfig$ConfigType LIST -> b
    com.mazalearn.scienceengine.core.controller.IModelConfig$ConfigType COMMAND -> c
    com.mazalearn.scienceengine.core.controller.IModelConfig$ConfigType TOGGLE -> d
    com.mazalearn.scienceengine.core.controller.IModelConfig$ConfigType TEXT -> e
    com.mazalearn.scienceengine.core.controller.IModelConfig$ConfigType[] ENUM$VALUES -> f
    1:1:com.mazalearn.scienceengine.core.controller.IModelConfig$ConfigType[] values() -> values
    1:1:com.mazalearn.scienceengine.core.controller.IModelConfig$ConfigType valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.core.controller.IScience2DController -> com.mazalearn.scienceengine.core.controller.j:
    com.mazalearn.scienceengine.core.view.IScience2DView getView() -> d
    com.mazalearn.scienceengine.core.model.IScience2DModel getModel() -> e
    com.mazalearn.scienceengine.core.view.ModelControls getModelControls() -> f
    com.mazalearn.scienceengine.Topic getTopic() -> a
    com.mazalearn.scienceengine.Topic getLevel() -> c
    void reset() -> i
    com.badlogic.gdx.scenes.scene2d.Actor addScience2DActor(java.lang.String,java.lang.String,float,float,float) -> a
    com.mazalearn.scienceengine.tutor.Guru getGuru() -> j
    com.mazalearn.scienceengine.tutor.AbstractTutor createTutor(com.mazalearn.scienceengine.tutor.ITutor,java.lang.String,com.mazalearn.scienceengine.Topic,java.lang.String,java.lang.String,com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array,java.lang.String[],java.lang.String[],java.lang.String[]) -> a
    com.badlogic.gdx.scenes.scene2d.ui.Skin getSkin() -> h
    com.mazalearn.scienceengine.core.view.ViewControls getViewControls() -> g
    java.lang.String getTitle() -> b
com.mazalearn.scienceengine.core.controller.RadioControl -> com.mazalearn.scienceengine.core.controller.k:
    com.mazalearn.scienceengine.core.controller.IModelConfig property -> a
    com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup radioGroup -> b
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox checkBox -> c
    43:43:void syncWithModel() -> a
    46:46:boolean isActivated() -> b
    51:51:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> c
    16:16:com.badlogic.gdx.scenes.scene2d.ui.CheckBox access$0(com.mazalearn.scienceengine.core.controller.RadioControl) -> a
com.mazalearn.scienceengine.core.controller.RadioControl$1 -> com.mazalearn.scienceengine.core.controller.l:
    com.mazalearn.scienceengine.core.controller.RadioControl this$0 -> a
    com.mazalearn.scienceengine.core.controller.IModelConfig val$property -> b
    30:30:void doCommand() -> a
    34:36:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.mazalearn.scienceengine.core.controller.SelectBoxControl -> com.mazalearn.scienceengine.core.controller.m:
    com.mazalearn.scienceengine.core.controller.IModelConfig property -> a
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox selectBox -> b
    39:44:java.lang.String[] getItems(com.mazalearn.scienceengine.core.controller.IModelConfig) -> a
    48:49:void syncWithModel() -> a
    52:52:boolean isActivated() -> b
    57:57:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> c
    13:13:com.badlogic.gdx.scenes.scene2d.ui.SelectBox access$0(com.mazalearn.scienceengine.core.controller.SelectBoxControl) -> a
com.mazalearn.scienceengine.core.controller.SelectBoxControl$1 -> com.mazalearn.scienceengine.core.controller.n:
    com.mazalearn.scienceengine.core.controller.SelectBoxControl this$0 -> a
    com.mazalearn.scienceengine.core.controller.IModelConfig val$property -> b
    24:25:void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.mazalearn.scienceengine.core.controller.SelectBoxControl$2 -> com.mazalearn.scienceengine.core.controller.o:
    com.mazalearn.scienceengine.core.controller.SelectBoxControl this$0 -> a
    com.mazalearn.scienceengine.core.controller.IModelConfig val$property -> b
    30:33:void doCommand() -> a
com.mazalearn.scienceengine.core.controller.SliderControl -> com.mazalearn.scienceengine.core.controller.p:
    com.mazalearn.scienceengine.core.controller.IModelConfig property -> a
    com.badlogic.gdx.scenes.scene2d.ui.Slider slider -> b
    float DELTA -> c
    61:67:void syncWithModel() -> a
    70:70:boolean isActivated() -> b
    75:75:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> c
    19:19:com.badlogic.gdx.scenes.scene2d.ui.Slider access$0(com.mazalearn.scienceengine.core.controller.SliderControl) -> a
com.mazalearn.scienceengine.core.controller.SliderControl$1 -> com.mazalearn.scienceengine.core.controller.q:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> a
    com.mazalearn.scienceengine.core.controller.SliderControl this$0 -> b
    com.mazalearn.scienceengine.core.controller.IModelConfig val$property -> c
    29:33:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.mazalearn.scienceengine.core.controller.SliderControl$2 -> com.mazalearn.scienceengine.core.controller.r:
    com.mazalearn.scienceengine.core.controller.SliderControl this$0 -> a
    com.mazalearn.scienceengine.core.controller.IModelConfig val$property -> b
    46:47:void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.mazalearn.scienceengine.core.controller.SliderControl$3 -> com.mazalearn.scienceengine.core.controller.s:
    com.mazalearn.scienceengine.core.controller.SliderControl this$0 -> a
    com.mazalearn.scienceengine.core.controller.IModelConfig val$property -> b
    52:55:void doCommand() -> a
com.mazalearn.scienceengine.core.controller.TextMeter -> com.mazalearn.scienceengine.core.controller.t:
    com.mazalearn.scienceengine.core.controller.IModelConfig property -> a
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> b
    36:36:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> c
    41:42:void syncWithModel() -> a
    45:45:boolean isActivated() -> b
    18:18:com.badlogic.gdx.scenes.scene2d.ui.Label access$0(com.mazalearn.scienceengine.core.controller.TextMeter) -> a
com.mazalearn.scienceengine.core.controller.TextMeter$1 -> com.mazalearn.scienceengine.core.controller.u:
    com.mazalearn.scienceengine.core.controller.TextMeter this$0 -> a
    com.mazalearn.scienceengine.core.controller.IModelConfig val$property -> b
    29:31:void doCommand() -> a
com.mazalearn.scienceengine.core.controller.ToggleButtonControl -> com.mazalearn.scienceengine.core.controller.v:
    com.mazalearn.scienceengine.core.controller.IModelConfig property -> b
    com.badlogic.gdx.scenes.scene2d.ui.TextButton toggleButton -> a
    48:48:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> c
    53:54:void syncWithModel() -> a
    57:57:boolean isActivated() -> b
com.mazalearn.scienceengine.core.controller.ToggleButtonControl$1 -> com.mazalearn.scienceengine.core.controller.w:
    com.mazalearn.scienceengine.core.controller.ToggleButtonControl this$0 -> a
    30:31:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.mazalearn.scienceengine.core.controller.ToggleButtonControl$2 -> com.mazalearn.scienceengine.core.controller.x:
    com.mazalearn.scienceengine.core.controller.ToggleButtonControl this$0 -> a
    com.mazalearn.scienceengine.core.controller.IModelConfig val$property -> b
    38:43:void doCommand() -> a
com.mazalearn.scienceengine.core.lang.BinaryExpr -> com.mazalearn.scienceengine.core.lang.a:
    int rator -> a
    com.mazalearn.scienceengine.core.lang.Expr rand0 -> b
    com.mazalearn.scienceengine.core.lang.Expr rand1 -> c
    java.util.List BOOLEAN_OPS -> d
    204:227:double fvalue() -> a
    232:242:java.lang.String svalue() -> b
    247:260:boolean bvalue() -> c
com.mazalearn.scienceengine.core.lang.ConditionalExpr -> com.mazalearn.scienceengine.core.lang.b:
    com.mazalearn.scienceengine.core.lang.Expr test -> a
    com.mazalearn.scienceengine.core.lang.Expr consequent -> b
    com.mazalearn.scienceengine.core.lang.Expr alternative -> c
    329:334:double fvalue() -> a
    338:343:java.lang.String svalue() -> b
    347:352:boolean bvalue() -> c
com.mazalearn.scienceengine.core.lang.Event -> com.mazalearn.scienceengine.core.lang.Event:
    com.mazalearn.scienceengine.core.lang.Event$Type type -> a
    java.lang.String object -> b
    java.lang.String action -> c
    float fvalue -> d
    boolean bvalue -> e
    java.lang.String svalue -> f
    float time -> g
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$core$lang$Event$Type -> h
    41:41:java.lang.String getObject() -> a
    45:45:java.lang.String getAction() -> b
    49:54:float fvalue() -> c
    58:63:java.lang.String svalue() -> e
    67:72:boolean bvalue() -> f
    76:76:float getTime() -> g
    80:80:com.mazalearn.scienceengine.core.lang.Event$Type getType() -> d
    5:5:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$core$lang$Event$Type() -> h
com.mazalearn.scienceengine.core.lang.Event$Type -> com.mazalearn.scienceengine.core.lang.Event$Type:
    com.mazalearn.scienceengine.core.lang.Event$Type FLOAT -> a
    com.mazalearn.scienceengine.core.lang.Event$Type STRING -> b
    com.mazalearn.scienceengine.core.lang.Event$Type BOOLEAN -> c
    com.mazalearn.scienceengine.core.lang.Event$Type[] ENUM$VALUES -> d
    1:1:com.mazalearn.scienceengine.core.lang.Event$Type[] values() -> values
    1:1:com.mazalearn.scienceengine.core.lang.Event$Type valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.core.lang.Example -> com.mazalearn.scienceengine.core.lang.c:
    36:51:void main(java.lang.String[]) -> a
com.mazalearn.scienceengine.core.lang.Expr -> com.mazalearn.scienceengine.core.lang.Expr:
    com.mazalearn.scienceengine.core.lang.Expr$Type type -> e
    int ADD -> f
    int SUB -> g
    int MUL -> h
    int DIV -> i
    int POW -> j
    int ATAN2 -> k
    int MAX -> l
    int MIN -> m
    int LT -> n
    int LE -> o
    int EQ -> p
    int NE -> q
    int GE -> r
    int GT -> s
    int AND -> t
    int OR -> u
    int ABS -> v
    int ACOS -> w
    int ASIN -> x
    int ATAN -> y
    int CEIL -> z
    int COS -> A
    int EXP -> B
    int FLOOR -> C
    int LOG -> D
    int NEG -> E
    int ROUND -> F
    int SIN -> G
    int SQRT -> H
    int TAN -> I
    int NOT -> J
    int FUNCTION -> K
    double fvalue() -> a
    java.lang.String svalue() -> b
    boolean bvalue() -> c
    63:63:com.mazalearn.scienceengine.core.lang.Expr makeNumberLiteral(double) -> a
    70:70:com.mazalearn.scienceengine.core.lang.Expr makeStringLiteral(java.lang.String) -> a
    79:80:com.mazalearn.scienceengine.core.lang.Expr makeApp1(int,com.mazalearn.scienceengine.core.lang.Expr) -> a
    92:93:com.mazalearn.scienceengine.core.lang.Expr makeApp2(int,com.mazalearn.scienceengine.core.lang.Expr,com.mazalearn.scienceengine.core.lang.Expr) -> a
    107:111:com.mazalearn.scienceengine.core.lang.Expr makeIfThenElse(com.mazalearn.scienceengine.core.lang.Expr,com.mazalearn.scienceengine.core.lang.Expr,com.mazalearn.scienceengine.core.lang.Expr) -> a
    114:115:com.mazalearn.scienceengine.core.lang.Expr makeFunction(int,com.mazalearn.scienceengine.core.lang.IFunction$A0) -> a
    118:119:com.mazalearn.scienceengine.core.lang.Expr makeFunction(int,com.mazalearn.scienceengine.core.lang.IFunction$A1,com.mazalearn.scienceengine.core.lang.Expr) -> a
    122:123:com.mazalearn.scienceengine.core.lang.Expr makeFunction(int,com.mazalearn.scienceengine.core.lang.IFunction$A2,com.mazalearn.scienceengine.core.lang.Expr,com.mazalearn.scienceengine.core.lang.Expr) -> a
com.mazalearn.scienceengine.core.lang.Expr$Type -> com.mazalearn.scienceengine.core.lang.Expr$Type:
    com.mazalearn.scienceengine.core.lang.Expr$Type DOUBLE -> a
    com.mazalearn.scienceengine.core.lang.Expr$Type STRING -> b
    com.mazalearn.scienceengine.core.lang.Expr$Type BOOL -> c
    com.mazalearn.scienceengine.core.lang.Expr$Type[] ENUM$VALUES -> d
    1:1:com.mazalearn.scienceengine.core.lang.Expr$Type[] values() -> values
    1:1:com.mazalearn.scienceengine.core.lang.Expr$Type valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.core.lang.FunctionExpr -> com.mazalearn.scienceengine.core.lang.d:
    int arity -> a
    int rator -> b
    com.mazalearn.scienceengine.core.lang.Variable rand0 -> c
    com.mazalearn.scienceengine.core.lang.Variable rand1 -> d
    com.mazalearn.scienceengine.core.lang.IFunction$A0 function0 -> L
    com.mazalearn.scienceengine.core.lang.IFunction$A1 function1 -> M
    com.mazalearn.scienceengine.core.lang.IFunction$A2 function2 -> N
    304:309:double fvalue() -> a
    313:313:java.lang.String svalue() -> b
    315:315:boolean bvalue() -> c
com.mazalearn.scienceengine.core.lang.IFunction -> com.mazalearn.scienceengine.core.lang.e:
com.mazalearn.scienceengine.core.lang.IFunction$A0 -> com.mazalearn.scienceengine.core.lang.f:
    float eval() -> a
com.mazalearn.scienceengine.core.lang.IFunction$A1 -> com.mazalearn.scienceengine.core.lang.g:
    float eval(java.lang.String) -> a
com.mazalearn.scienceengine.core.lang.IFunction$A2 -> com.mazalearn.scienceengine.core.lang.h:
    float eval$16da0607() -> a
com.mazalearn.scienceengine.core.lang.NumberLiteralExpr -> com.mazalearn.scienceengine.core.lang.i:
    double v -> a
    134:134:double fvalue() -> a
    135:135:java.lang.String svalue() -> b
    136:136:boolean bvalue() -> c
com.mazalearn.scienceengine.core.lang.Parser -> com.mazalearn.scienceengine.core.lang.j:
    com.mazalearn.scienceengine.core.lang.Variable pi -> b
    java.util.Set variables -> c
    java.util.HashMap allowedVariables -> d
    java.util.Map functions0 -> e
    java.util.Map functions1 -> f
    java.util.Map functions2 -> g
    com.mazalearn.scienceengine.core.lang.Scanner tokens -> a
    com.mazalearn.scienceengine.core.lang.Token token -> h
    java.lang.String operatorChars -> i
    java.lang.String[] procs1 -> j
    int[] rators1 -> k
    java.lang.String[] procs2 -> l
    int[] rators2 -> m
    71:71:com.mazalearn.scienceengine.core.lang.Expr parse(java.lang.String) -> a
    76:79:void allowFunctions(java.util.Map,java.util.Map,java.util.Map) -> a
    88:94:void allow(com.mazalearn.scienceengine.core.lang.Variable) -> a
    100:100:java.util.Set getVariables() -> a
    111:112:com.mazalearn.scienceengine.core.lang.Expr parseString(java.lang.String) -> b
    118:124:com.mazalearn.scienceengine.core.lang.Expr reparse() -> c
    128:129:void nextToken() -> d
    132:176:com.mazalearn.scienceengine.core.lang.Expr parseExpr(int) -> a
    202:295:com.mazalearn.scienceengine.core.lang.Expr parseFactor() -> e
    303:303:com.mazalearn.scienceengine.core.lang.SyntaxException error(java.lang.String,int,java.lang.String) -> a
    307:311:void expect(int) -> b
    317:317:boolean tryCorrections() -> b
    321:341:boolean tryInsertions() -> f
    345:358:boolean tryDeletions() -> g
    362:377:boolean trySubstitutions() -> h
    382:406:com.mazalearn.scienceengine.core.lang.Token[] possibleInsertions(com.mazalearn.scienceengine.core.lang.Token) -> a
    410:410:com.mazalearn.scienceengine.core.lang.Token[] possibleSubstitutions(com.mazalearn.scienceengine.core.lang.Token) -> b
com.mazalearn.scienceengine.core.lang.RegressionTest -> com.mazalearn.scienceengine.core.lang.k:
    com.mazalearn.scienceengine.core.lang.Parser parser -> a
    16:140:void main$3231c38a() -> a
    143:147:void assertEquals(java.lang.String,java.lang.String) -> a
    152:163:void expect(double,java.lang.String) -> a
    168:179:void expect(java.lang.String,java.lang.String) -> b
com.mazalearn.scienceengine.core.lang.RegressionTest$1 -> com.mazalearn.scienceengine.core.lang.l:
    128:128:float eval() -> a
com.mazalearn.scienceengine.core.lang.RegressionTest$2 -> com.mazalearn.scienceengine.core.lang.m:
    130:130:float eval(java.lang.String) -> a
com.mazalearn.scienceengine.core.lang.RegressionTest$3 -> com.mazalearn.scienceengine.core.lang.n:
    132:132:float eval$16da0607() -> a
com.mazalearn.scienceengine.core.lang.Scanner -> com.mazalearn.scienceengine.core.lang.o:
    java.lang.String s -> c
    java.lang.String operatorChars -> d
    java.util.Vector tokens -> a
    int index -> b
    27:27:java.lang.String getInput() -> a
    33:49:java.lang.String toString() -> toString
    53:53:boolean joinable(com.mazalearn.scienceengine.core.lang.Token,com.mazalearn.scienceengine.core.lang.Token) -> a
    57:57:boolean isAlphanumeric(com.mazalearn.scienceengine.core.lang.Token) -> a
    61:61:boolean isEmpty() -> e
    65:65:boolean atStart() -> b
    69:69:boolean atEnd() -> c
    73:74:com.mazalearn.scienceengine.core.lang.Token nextToken() -> f
    78:80:com.mazalearn.scienceengine.core.lang.Token getCurrentToken() -> d
    85:121:int scanToken(int) -> a
    126:133:int scanSymbol(int) -> b
    137:141:int scanString(int) -> c
    145:165:int scanNumber(int) -> d
    169:169:com.mazalearn.scienceengine.core.lang.Token makeErrorToken(int,int) -> a
com.mazalearn.scienceengine.core.lang.StringLiteralExpr -> com.mazalearn.scienceengine.core.lang.p:
    java.lang.String v -> a
    142:142:double fvalue() -> a
    143:143:java.lang.String svalue() -> b
    144:144:boolean bvalue() -> c
com.mazalearn.scienceengine.core.lang.SyntaxException -> com.mazalearn.scienceengine.core.lang.SyntaxException:
    long serialVersionUID -> serialVersionUID
    int INCOMPLETE -> a
    int BAD_FACTOR -> b
    int PREMATURE_EOF -> c
    int EXPECTED -> d
    int UNKNOWN_VARIABLE -> e
    com.mazalearn.scienceengine.core.lang.Parser parser -> parser
    com.mazalearn.scienceengine.core.lang.Scanner scanner -> scanner
    int reason -> reason
    java.lang.String expected -> expected
    java.lang.String fixedInput -> fixedInput
    61:71:java.lang.String explain() -> a
    83:107:void explainWhere(java.lang.StringBuffer) -> a
    110:133:void explainWhy(java.lang.StringBuffer) -> b
    136:142:void explainWhat(java.lang.StringBuffer) -> c
    145:145:java.lang.String tryToFix() -> b
    149:152:void quotify(java.lang.StringBuffer,java.lang.String) -> a
    155:157:java.lang.String asFarAs() -> c
    161:161:java.lang.String theToken() -> d
    165:166:boolean isLegalToken() -> e
com.mazalearn.scienceengine.core.lang.Token -> com.mazalearn.scienceengine.core.lang.q:
    int TT_ERROR -> a
    int TT_EOF -> b
    int TT_NUMBER -> c
    int TT_WORD -> d
    int TT_LE -> e
    int TT_NE -> f
    int TT_GE -> g
    int TT_STRING -> h
    int ttype -> i
    java.lang.String sval -> j
    double nval -> k
    int location -> l
    int leadingWhitespace -> m
    int trailingWhitespace -> n
com.mazalearn.scienceengine.core.lang.UnaryExpr -> com.mazalearn.scienceengine.core.lang.r:
    int rator -> a
    com.mazalearn.scienceengine.core.lang.Expr rand -> b
    158:175:double fvalue() -> a
    180:180:java.lang.String svalue() -> b
    182:182:boolean bvalue() -> c
com.mazalearn.scienceengine.core.lang.Variable -> com.mazalearn.scienceengine.core.lang.s:
    java.util.HashMap variables -> a
    java.lang.String name -> b
    double fval -> c
    java.lang.String sval -> d
    boolean bval -> L
    23:26:com.mazalearn.scienceengine.core.lang.Variable make(java.lang.String) -> a
    42:42:java.lang.String name() -> d
    44:44:java.lang.String toString() -> toString
    49:51:double fvalue() -> a
    57:59:java.lang.String svalue() -> b
    65:67:boolean bvalue() -> c
    73:75:void setValue(boolean) -> a
    80:82:void setValue(double) -> a
    87:89:void setValue(java.lang.String) -> b
com.mazalearn.scienceengine.core.model.AbstractScience2DModel -> com.mazalearn.scienceengine.core.model.a:
    java.lang.String NUM_REVOLUTIONS -> h
    java.lang.String ANGLE -> i
    java.lang.String ANGULAR_VELOCITY -> j
    java.lang.String VELOCITY -> k
    com.badlogic.gdx.physics.box2d.World box2DWorld -> a
    java.util.List bodies -> b
    java.util.Map modelConfigs -> l
    java.util.Map allConfigs -> m
    boolean isEnabled -> n
    int numStepsPerView -> c
    java.util.List circuits -> o
    java.util.List emProducers -> d
    java.util.List emConsumers -> e
    com.badlogic.gdx.math.Vector3 bField -> f
    com.badlogic.gdx.math.Vector3 totalBField -> g
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$core$model$CoreComponentType -> p
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$core$controller$IModelConfig$ConfigType -> q
    54:54:com.mazalearn.scienceengine.core.controller.IModelConfig getConfig(java.lang.String) -> a
    59:63:void simulateSteps(float) -> a
    void singleStep() -> a
    70:94:com.mazalearn.scienceengine.core.model.Science2DBody addBody(java.lang.String,float,float,float) -> a
    99:104:com.mazalearn.scienceengine.core.model.Science2DBody findBody(com.mazalearn.scienceengine.core.model.IComponentType) -> a
    108:114:void propagateField() -> b
    117:125:void getBField(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector3) -> a
    131:136:void notifyFieldChange() -> c
    139:146:void addCircuit(com.mazalearn.scienceengine.core.model.ICurrent$CircuitElement[]) -> a
    149:149:java.util.List getCircuits() -> d
    154:162:void removeCircuits() -> e
    169:185:void notifyCurrentChange(com.mazalearn.scienceengine.core.model.ICurrent$Source) -> a
    188:201:java.util.Map getAllConfigs() -> f
    206:206:boolean isEnabled() -> g
    211:212:void enable(boolean) -> a
    215:215:com.badlogic.gdx.physics.box2d.World getBox2DWorld() -> h
    void initializeConfigs$5eadb890() -> i
    222:233:com.mazalearn.scienceengine.core.model.Science2DBody createScience2DBody(java.lang.String,float,float,float) -> b
    239:244:void reset() -> j
    248:252:void prepareModel() -> k
    255:255:java.util.List getBodies() -> l
    260:295:void bindParameterValues(java.util.Collection) -> a
    298:303:com.mazalearn.scienceengine.core.model.Science2DBody findBody(java.lang.String) -> b
    21:21:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$core$model$CoreComponentType() -> m
    21:21:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$core$controller$IModelConfig$ConfigType() -> n
com.mazalearn.scienceengine.core.model.CoreComponentType -> com.mazalearn.scienceengine.core.model.CoreComponentType:
    com.mazalearn.scienceengine.core.model.CoreComponentType Dummy -> a
    com.mazalearn.scienceengine.core.model.CoreComponentType Drawing -> b
    com.mazalearn.scienceengine.core.model.CoreComponentType Environment -> c
    com.mazalearn.scienceengine.core.model.CoreComponentType Global -> d
    com.mazalearn.scienceengine.core.model.CoreComponentType ScienceTrain -> e
    com.mazalearn.scienceengine.core.model.CoreComponentType Image -> f
    com.mazalearn.scienceengine.core.model.CoreComponentType[] ENUM$VALUES -> g
    14:14:java.lang.String getLocalizedName() -> b
    1:1:com.mazalearn.scienceengine.core.model.CoreComponentType[] values() -> values
    1:1:com.mazalearn.scienceengine.core.model.CoreComponentType valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.core.model.Drawing -> com.mazalearn.scienceengine.core.model.b:
    java.util.List points -> a
    26:27:void initializeConfigs() -> a
    31:33:void reset() -> a_
    37:42:void addPointSequence() -> c
    45:46:void addPoint(float,float) -> a
    49:49:java.util.List getPointSequences() -> d
    54:54:boolean allowsConfiguration() -> e
com.mazalearn.scienceengine.core.model.DummyBody -> com.mazalearn.scienceengine.core.model.c:
    float[] parameters -> a
    com.mazalearn.scienceengine.core.model.DummyBody$ProbeConfig probeConfig -> f
    39:41:void initializeConfigs() -> a
    45:45:boolean allowsConfiguration() -> e
    49:54:void setConfigParameter(com.mazalearn.scienceengine.core.model.IParameter,float) -> a
com.mazalearn.scienceengine.core.model.DummyBody$ProbeConfig -> com.mazalearn.scienceengine.core.model.d:
    int num -> c
    com.mazalearn.scienceengine.core.model.DummyBody this$0 -> b
    19:19:java.lang.Float getValue() -> p
    21:21:void setValue(java.lang.Float) -> a
    23:23:boolean isPossible() -> h
    25:25:boolean isAvailable() -> i
    28:30:void setConfigParameter(com.mazalearn.scienceengine.core.model.IParameter) -> a
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.core.model.EnvironmentBody -> com.mazalearn.scienceengine.core.model.e:
    java.util.List parameters -> a
    java.util.List environmentConfigs -> f
    40:42:void initializeConfigs() -> a
    45:56:void addParameter(java.lang.String) -> a
com.mazalearn.scienceengine.core.model.EnvironmentBody$1 -> com.mazalearn.scienceengine.core.model.f:
    com.mazalearn.scienceengine.core.model.EnvironmentBody this$0 -> b
    int val$index -> c
    50:50:java.lang.Float getValue() -> p
    51:51:void setValue(java.lang.Float) -> a
    52:52:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.core.model.EnvironmentBody$Parameter -> com.mazalearn.scienceengine.core.model.g:
    java.lang.String name -> b
    com.mazalearn.scienceengine.core.model.EnvironmentBody this$0 -> a
    23:23:java.lang.String toString() -> toString
    28:28:java.lang.String name() -> name
com.mazalearn.scienceengine.core.model.IBody -> com.mazalearn.scienceengine.core.model.h:
    com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.FixtureDef) -> a
    com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float) -> a
    void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture) -> a
    void setTransform(com.badlogic.gdx.math.Vector2,float) -> a
    void setTransform(float,float,float) -> a
    com.badlogic.gdx.physics.box2d.Transform getTransform() -> f
    com.badlogic.gdx.math.Vector2 getPosition() -> g
    float getAngle() -> h
    com.badlogic.gdx.math.Vector2 getWorldCenter() -> i
    com.badlogic.gdx.math.Vector2 getLocalCenter() -> j
    void setLinearVelocity(com.badlogic.gdx.math.Vector2) -> a
    void setLinearVelocity$2548a35() -> k
    com.badlogic.gdx.math.Vector2 getLinearVelocity() -> l
    void setAngularVelocity(float) -> a
    float getAngularVelocity() -> m
    void applyForce(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
    void applyForce(float,float,float,float) -> a
    void applyForceToCenter(com.badlogic.gdx.math.Vector2) -> b
    void applyForceToCenter(float,float) -> b
    void applyTorque(float) -> b
    void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> b
    void applyLinearImpulse(float,float,float,float) -> b
    void applyAngularImpulse(float) -> c
    float getMass() -> n
    float getInertia() -> o
    com.badlogic.gdx.physics.box2d.MassData getMassData() -> p
    void setMassData(com.badlogic.gdx.physics.box2d.MassData) -> a
    void resetMassData() -> q
    com.badlogic.gdx.math.Vector2 getWorldPoint(com.badlogic.gdx.math.Vector2) -> c
    com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2) -> d
    com.badlogic.gdx.math.Vector2 getLocalPoint(com.badlogic.gdx.math.Vector2) -> e
    com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2) -> f
    com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2) -> g
    com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2) -> h
    float getLinearDamping() -> r
    void setLinearDamping(float) -> d
    float getAngularDamping() -> s
    void setAngularDamping(float) -> e
    void setType(com.badlogic.gdx.physics.box2d.BodyDef$BodyType) -> a
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType getType() -> t
    void setBullet(boolean) -> a
    boolean isBullet() -> u
    void setSleepingAllowed(boolean) -> b
    boolean isSleepingAllowed() -> v
    void setAwake(boolean) -> c
    boolean isAwake() -> w
    void setActive(boolean) -> d
    boolean isActive() -> x
    void setFixedRotation(boolean) -> e
    boolean isFixedRotation() -> y
    java.util.ArrayList getFixtureList() -> z
    java.util.ArrayList getJointList() -> A
    float getGravityScale() -> B
    void setGravityScale(float) -> f
    com.badlogic.gdx.physics.box2d.World getWorld() -> C
    java.lang.Object getUserData() -> D
    void setUserData(java.lang.Object) -> a
com.mazalearn.scienceengine.core.model.IComponentType -> com.mazalearn.scienceengine.core.model.i:
    java.lang.String name() -> name
    java.lang.String getLocalizedName() -> b
com.mazalearn.scienceengine.core.model.ICurrent -> com.mazalearn.scienceengine.core.model.j:
com.mazalearn.scienceengine.core.model.ICurrent$CircuitElement -> com.mazalearn.scienceengine.core.model.k:
    com.badlogic.gdx.math.Vector2 getT1Position() -> c
    com.badlogic.gdx.math.Vector2 getT2Position() -> d
    boolean isActive() -> x
com.mazalearn.scienceengine.core.model.ICurrent$Sink -> com.mazalearn.scienceengine.core.model.l:
    void setCurrent(float) -> a_
com.mazalearn.scienceengine.core.model.ICurrent$Source -> com.mazalearn.scienceengine.core.model.m:
    float getCurrent() -> b
com.mazalearn.scienceengine.core.model.IMagneticField -> com.mazalearn.scienceengine.core.model.n:
com.mazalearn.scienceengine.core.model.IMagneticField$Consumer -> com.mazalearn.scienceengine.core.model.o:
    com.badlogic.gdx.math.Vector2 getPosition() -> g
    void setBField(com.badlogic.gdx.math.Vector3) -> a
    boolean isActive() -> x
    void notifyFieldChange() -> c
com.mazalearn.scienceengine.core.model.IMagneticField$Producer -> com.mazalearn.scienceengine.core.model.p:
    com.badlogic.gdx.math.Vector3 getBField(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector3) -> a
    boolean isActive() -> x
    com.badlogic.gdx.math.Vector2 getPosition() -> g
com.mazalearn.scienceengine.core.model.IParameter -> com.mazalearn.scienceengine.core.model.q:
    java.lang.String name() -> name
    java.lang.String toString() -> toString
com.mazalearn.scienceengine.core.model.IScience2DModel -> com.mazalearn.scienceengine.core.model.r:
    void reset() -> j
    void simulateSteps(float) -> a
    java.util.Map getAllConfigs() -> f
    com.badlogic.gdx.physics.box2d.World getBox2DWorld() -> h
    void enable(boolean) -> a
    boolean isEnabled() -> g
    void notifyFieldChange() -> c
    void getBField(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector3) -> a
    java.util.List getCircuits() -> d
    void removeCircuits() -> e
    void addCircuit(com.mazalearn.scienceengine.core.model.ICurrent$CircuitElement[]) -> a
    void notifyCurrentChange(com.mazalearn.scienceengine.core.model.ICurrent$Source) -> a
    com.mazalearn.scienceengine.core.model.Science2DBody addBody(java.lang.String,float,float,float) -> a
    void prepareModel() -> k
    com.mazalearn.scienceengine.core.controller.IModelConfig getConfig(java.lang.String) -> a
    com.mazalearn.scienceengine.core.model.Science2DBody findBody(com.mazalearn.scienceengine.core.model.IComponentType) -> a
    com.mazalearn.scienceengine.core.model.Science2DBody findBody(java.lang.String) -> b
    void bindParameterValues(java.util.Collection) -> a
    java.util.List getBodies() -> l
com.mazalearn.scienceengine.core.model.Parameter -> com.mazalearn.scienceengine.core.model.Parameter:
    com.mazalearn.scienceengine.core.model.Parameter Self -> a
    com.mazalearn.scienceengine.core.model.Parameter Reset -> b
    com.mazalearn.scienceengine.core.model.Parameter Tutoring -> c
    com.mazalearn.scienceengine.core.model.Parameter PauseResume -> d
    com.mazalearn.scienceengine.core.model.Parameter Select -> e
    com.mazalearn.scienceengine.core.model.Parameter Move -> f
    com.mazalearn.scienceengine.core.model.Parameter NameOfSelectedBody -> g
    com.mazalearn.scienceengine.core.model.Parameter Rotate -> h
    com.mazalearn.scienceengine.core.model.Parameter Tutor -> i
    com.mazalearn.scienceengine.core.model.Parameter RotationAngle -> j
    com.mazalearn.scienceengine.core.model.Parameter[] ENUM$VALUES -> k
    21:21:java.lang.String toString() -> toString
    25:30:com.mazalearn.scienceengine.core.model.Parameter valueOf(com.mazalearn.scienceengine.core.model.IComponentType) -> a
    1:1:com.mazalearn.scienceengine.core.model.Parameter[] values() -> values
    1:1:com.mazalearn.scienceengine.core.model.Parameter valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.core.model.Science2DBody -> com.mazalearn.scienceengine.core.model.Science2DBody:
    com.badlogic.gdx.physics.box2d.World box2DWorld -> a
    com.badlogic.gdx.physics.box2d.Body GROUND -> f
    com.mazalearn.scienceengine.core.model.IScience2DModel model -> g
    com.badlogic.gdx.physics.box2d.Body body -> b
    java.util.List configs -> c
    com.badlogic.gdx.math.Vector2 aPosition -> h
    com.mazalearn.scienceengine.core.model.IComponentType componentType -> i
    int count -> j
    com.mazalearn.scienceengine.core.model.Science2DBody$MovementMode movementMode -> k
    com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef rotationJointDef -> l
    com.badlogic.gdx.physics.box2d.Joint rotationJoint -> m
    float prevAngularVelocity -> d
    float angleCovered -> e
    float prevAngle -> n
    77:78:void setCount(int) -> a
    81:87:void initializeConfigs() -> a
    90:90:java.util.List getConfigs() -> E
    94:103:void singleStep(float) -> g
    106:107:int getNumRevolutions() -> F
    111:113:void reset() -> a_
    123:130:void setPositionAndAngle(com.badlogic.gdx.math.Vector2,float) -> b
    140:142:void setPositionAndAngle(float,float,float) -> b
    145:145:com.badlogic.gdx.physics.box2d.World getBox2DWorld() -> c
    149:151:void setBox2DWorld(com.badlogic.gdx.physics.box2d.World) -> a
    154:154:com.badlogic.gdx.physics.box2d.Body getGround() -> d
    158:158:java.lang.String getComponentTypeName() -> G
    163:163:java.lang.String name() -> H
    168:168:java.lang.String getLocalizedName() -> I
    172:172:com.mazalearn.scienceengine.core.model.IComponentType getComponentType() -> J
    176:176:com.badlogic.gdx.physics.box2d.Body getBody() -> K
    180:180:com.mazalearn.scienceengine.core.model.IScience2DModel getModel() -> L
    184:185:void setModel(com.mazalearn.scienceengine.core.model.IScience2DModel) -> a
    188:188:java.lang.String getMovementMode() -> M
    192:193:void setMovementMode(java.lang.String) -> b
    196:207:void setMovementMode(com.mazalearn.scienceengine.core.model.Science2DBody$MovementMode) -> a
    210:215:com.mazalearn.scienceengine.core.controller.IModelConfig findConfig(com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter) -> a
    219:219:boolean allowsConfiguration() -> e
    227:227:com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.FixtureDef) -> a
    232:232:com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float) -> a
    237:238:void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture) -> a
    242:243:void setTransform(com.badlogic.gdx.math.Vector2,float) -> a
    247:248:void setTransform(float,float,float) -> a
    252:252:com.badlogic.gdx.physics.box2d.Transform getTransform() -> f
    257:257:com.badlogic.gdx.math.Vector2 getPosition() -> g
    262:266:float getAngle() -> h
    271:271:com.badlogic.gdx.math.Vector2 getWorldCenter() -> i
    276:276:com.badlogic.gdx.math.Vector2 getLocalCenter() -> j
    281:282:void setLinearVelocity(com.badlogic.gdx.math.Vector2) -> a
    286:287:void setLinearVelocity$2548a35() -> k
    291:291:com.badlogic.gdx.math.Vector2 getLinearVelocity() -> l
    296:297:void setAngularVelocity(float) -> a
    301:301:float getAngularVelocity() -> m
    306:307:void applyForce(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
    311:312:void applyForce(float,float,float,float) -> a
    316:317:void applyForceToCenter(com.badlogic.gdx.math.Vector2) -> b
    321:322:void applyForceToCenter(float,float) -> b
    326:327:void applyTorque(float) -> b
    331:332:void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> b
    337:338:void applyLinearImpulse(float,float,float,float) -> b
    342:343:void applyAngularImpulse(float) -> c
    347:347:float getMass() -> n
    352:352:float getInertia() -> o
    357:357:com.badlogic.gdx.physics.box2d.MassData getMassData() -> p
    362:363:void setMassData(com.badlogic.gdx.physics.box2d.MassData) -> a
    367:368:void resetMassData() -> q
    372:372:com.badlogic.gdx.math.Vector2 getWorldPoint(com.badlogic.gdx.math.Vector2) -> c
    377:377:com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2) -> d
    382:382:com.badlogic.gdx.math.Vector2 getLocalPoint(com.badlogic.gdx.math.Vector2) -> e
    387:387:com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2) -> f
    392:392:com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2) -> g
    397:397:com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2) -> h
    402:402:float getLinearDamping() -> r
    407:408:void setLinearDamping(float) -> d
    412:412:float getAngularDamping() -> s
    417:418:void setAngularDamping(float) -> e
    422:423:void setType(com.badlogic.gdx.physics.box2d.BodyDef$BodyType) -> a
    427:427:com.badlogic.gdx.physics.box2d.BodyDef$BodyType getType() -> t
    432:433:void setBullet(boolean) -> a
    437:437:boolean isBullet() -> u
    442:443:void setSleepingAllowed(boolean) -> b
    447:447:boolean isSleepingAllowed() -> v
    452:453:void setAwake(boolean) -> c
    457:457:boolean isAwake() -> w
    462:463:void setActive(boolean) -> d
    467:467:boolean isActive() -> x
    472:473:void setFixedRotation(boolean) -> e
    477:477:boolean isFixedRotation() -> y
    482:482:java.util.ArrayList getFixtureList() -> z
    487:487:java.util.ArrayList getJointList() -> A
    492:492:float getGravityScale() -> B
    497:498:void setGravityScale(float) -> f
    502:502:com.badlogic.gdx.physics.box2d.World getWorld() -> C
    507:507:java.lang.Object getUserData() -> D
    512:513:void setUserData(java.lang.Object) -> a
com.mazalearn.scienceengine.core.model.Science2DBody$1 -> com.mazalearn.scienceengine.core.model.s:
    com.mazalearn.scienceengine.core.model.Science2DBody this$0 -> b
    83:83:java.lang.Float getValue() -> p
    84:84:void setValue(java.lang.Float) -> a
    85:85:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.core.model.Science2DBody$MovementMode -> com.mazalearn.scienceengine.core.model.Science2DBody$MovementMode:
    com.mazalearn.scienceengine.core.model.Science2DBody$MovementMode Move -> a
    com.mazalearn.scienceengine.core.model.Science2DBody$MovementMode Rotate -> b
    com.mazalearn.scienceengine.core.model.Science2DBody$MovementMode None -> c
    com.mazalearn.scienceengine.core.model.Science2DBody$MovementMode[] ENUM$VALUES -> d
    1:1:com.mazalearn.scienceengine.core.model.Science2DBody$MovementMode[] values() -> values
    1:1:com.mazalearn.scienceengine.core.model.Science2DBody$MovementMode valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.core.model.ScienceTrain -> com.mazalearn.scienceengine.core.model.t:
    17:17:boolean allowsConfiguration() -> e
com.mazalearn.scienceengine.core.view.AbstractScience2DView -> com.mazalearn.scienceengine.core.view.a:
    com.mazalearn.scienceengine.core.model.IScience2DModel science2DModel -> a
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> b
    boolean isTutoringInProgress -> d
    com.mazalearn.scienceengine.core.view.ModelControls modelControls -> c
    java.util.List locationGroups -> e
    com.badlogic.gdx.math.Vector2 deltaPosition -> f
    com.mazalearn.scienceengine.core.controller.IScience2DController science2DController -> g
    java.util.List viewCommands -> h
    com.mazalearn.scienceengine.core.view.ViewControls viewControls -> i
    com.badlogic.gdx.scenes.scene2d.Group activityGroup -> j
    50:51:void suspend(boolean) -> a
    55:55:boolean isSuspended() -> k
    60:64:java.util.List getCommands() -> l
    68:68:void initializeCommands(java.util.List) -> a
    71:82:void done(boolean) -> b
    86:86:com.badlogic.gdx.graphics.g2d.BitmapFont getFont() -> m
    91:91:com.badlogic.gdx.scenes.scene2d.Actor findActor(java.lang.String) -> a
    97:110:void tutoring(boolean) -> c
    114:114:boolean isTutoringInProgress() -> n
    119:123:void act(float) -> a
    126:127:void addLocationGroup(com.badlogic.gdx.scenes.scene2d.Actor[]) -> a
    132:132:java.util.List getLocationGroups() -> o
    137:138:void removeLocationGroups() -> p
    141:165:void notifyLocationChangedByUser$5cc3aa2f(com.mazalearn.scienceengine.core.view.Science2DActor,com.badlogic.gdx.math.Vector2) -> a
    169:179:void prepareView() -> q
    182:191:void setupControls() -> r
    194:194:com.mazalearn.scienceengine.core.view.ModelControls getModelControls() -> s
    199:200:void checkActiveTutorProgress() -> t
    204:204:com.mazalearn.scienceengine.core.view.ViewControls getViewControls() -> u
com.mazalearn.scienceengine.core.view.ActivityViewControls -> com.mazalearn.scienceengine.core.view.b:
    com.mazalearn.scienceengine.core.view.IScience2DView science2DView -> d
    com.mazalearn.scienceengine.core.controller.IControl suspendControl -> e
    com.mazalearn.scienceengine.core.controller.IControl resetControl -> f
    com.mazalearn.scienceengine.core.controller.IScience2DController science2DController -> g
    32:32:com.mazalearn.scienceengine.app.services.IMessage getMsg() -> d
    38:81:void addActivityControls() -> e
    84:102:void takeSnapshot() -> f
    104:106:void syncWithModel() -> a
    109:112:void enableControls(boolean) -> a
    116:116:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> c
    19:19:com.mazalearn.scienceengine.core.view.IScience2DView access$0(com.mazalearn.scienceengine.core.view.ActivityViewControls) -> a
    31:31:com.mazalearn.scienceengine.app.services.IMessage access$1(com.mazalearn.scienceengine.core.view.ActivityViewControls) -> b
    22:22:com.mazalearn.scienceengine.core.controller.IScience2DController access$2(com.mazalearn.scienceengine.core.view.ActivityViewControls) -> c
    83:83:void access$3(com.mazalearn.scienceengine.core.view.ActivityViewControls) -> d
com.mazalearn.scienceengine.core.view.ActivityViewControls$1 -> com.mazalearn.scienceengine.core.view.c:
    com.mazalearn.scienceengine.core.view.ActivityViewControls this$0 -> b
    39:39:void setValue(java.lang.Boolean) -> a
    40:40:java.lang.Boolean getValue() -> p
    41:41:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.core.view.ActivityViewControls$2 -> com.mazalearn.scienceengine.core.view.d:
    com.mazalearn.scienceengine.core.view.ActivityViewControls this$0 -> b
    45:49:void syncWithModel() -> a
com.mazalearn.scienceengine.core.view.ActivityViewControls$3 -> com.mazalearn.scienceengine.core.view.e:
    com.mazalearn.scienceengine.core.view.ActivityViewControls this$0 -> b
    55:55:void doCommand() -> n
    56:56:boolean isPossible() -> h
com.mazalearn.scienceengine.core.view.ActivityViewControls$4 -> com.mazalearn.scienceengine.core.view.f:
    com.mazalearn.scienceengine.core.view.ActivityViewControls this$0 -> a
    66:68:void doCommand() -> a
com.mazalearn.scienceengine.core.view.ActivityViewControls$5 -> com.mazalearn.scienceengine.core.view.g:
    com.mazalearn.scienceengine.core.view.ActivityViewControls this$0 -> a
    com.badlogic.gdx.scenes.scene2d.Actor val$snapshotter -> b
    87:91:void drag$1dcb6a94(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> a
    94:99:void dragStop$1dcb6a94(com.badlogic.gdx.scenes.scene2d.InputEvent) -> b
com.mazalearn.scienceengine.core.view.AnimateAction -> com.mazalearn.scienceengine.core.view.h:
    15:16:com.badlogic.gdx.scenes.scene2d.Action animateSize(float,float,boolean) -> b
    40:41:com.badlogic.gdx.scenes.scene2d.Action animatePosition(float,float,boolean) -> a
com.mazalearn.scienceengine.core.view.AnimateAction$1 -> com.mazalearn.scienceengine.core.view.i:
    float val$w -> b
    float val$h -> c
    boolean val$visible -> d
    23:30:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    33:33:boolean act(float) -> a
com.mazalearn.scienceengine.core.view.AnimateAction$2 -> com.mazalearn.scienceengine.core.view.j:
    float val$x -> b
    float val$y -> c
    boolean val$visible -> d
    48:55:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    58:58:boolean act(float) -> a
com.mazalearn.scienceengine.core.view.CoachDrawingActor -> com.mazalearn.scienceengine.core.view.k:
    int LINE_WIDTH -> a
    float SCALE -> i
    int WHEEL_DIA -> j
    int COACH_HEIGHT -> k
    int COACH_WIDTH -> l
    int WHEEL_OFFSET -> m
    float DRAWING_WHEEL_DIA_X -> n
    float DRAWING_WHEEL_DIA_Y -> o
    float DRAWING_WHEEL_OFFSET -> p
    float DRAWING_COACH_WIDTH -> q
    float DRAWING_COACH_HEIGHT -> r
    com.mazalearn.scienceengine.core.model.Drawing drawing -> s
    com.badlogic.gdx.math.Vector2 pos -> t
    com.badlogic.gdx.math.Vector2 prevPos -> u
    com.badlogic.gdx.graphics.glutils.ShapeRenderer shapeRenderer -> v
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> w
    com.badlogic.gdx.graphics.Texture coachTexture -> x
    boolean hasChangedSinceSnapshot -> y
    com.badlogic.gdx.graphics.Pixmap snapshot -> z
    com.mazalearn.scienceengine.core.view.CoachDrawingActor$Coach coach -> A
    java.lang.String viewSpec -> B
    154:188:void takeSnapshot() -> a
    191:191:boolean hasChangedSinceSnapshot() -> c
    196:203:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    206:240:void drawCoachAndWheelAreas(java.util.List) -> a
    243:243:com.mazalearn.scienceengine.core.view.CoachDrawingActor$Coach getCoach() -> d
    247:247:com.badlogic.gdx.graphics.Pixmap getPixmap() -> e
    46:46:com.mazalearn.scienceengine.core.model.Drawing access$0(com.mazalearn.scienceengine.core.view.CoachDrawingActor) -> a
    51:51:void access$1$7bdd1b9e(com.mazalearn.scienceengine.core.view.CoachDrawingActor) -> b
    47:47:com.badlogic.gdx.math.Vector2 access$2(com.mazalearn.scienceengine.core.view.CoachDrawingActor) -> c
com.mazalearn.scienceengine.core.view.CoachDrawingActor$1 -> com.mazalearn.scienceengine.core.view.l:
    com.mazalearn.scienceengine.core.view.CoachDrawingActor this$0 -> a
    130:132:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    137:140:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    144:148:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
com.mazalearn.scienceengine.core.view.CoachDrawingActor$Coach -> com.mazalearn.scienceengine.core.view.m:
    com.badlogic.gdx.scenes.scene2d.ui.Label userCurrentLabel -> a
    com.badlogic.gdx.graphics.Color lightColor -> b
    float lightIntensity -> c
    95:98:void setLight(float,com.badlogic.gdx.graphics.Color) -> a
    102:108:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.mazalearn.scienceengine.core.view.ColorPanel -> com.mazalearn.scienceengine.core.view.n:
    com.badlogic.gdx.graphics.Texture backgroundTexture -> a
    27:30:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.mazalearn.scienceengine.core.view.CommandClickListener -> com.mazalearn.scienceengine.core.view.o:
    12:14:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    void doCommand() -> a
com.mazalearn.scienceengine.core.view.DrawingActor -> com.mazalearn.scienceengine.core.view.p:
    int LINE_WIDTH -> e
    int FACE_HEIGHT -> a
    int FACE_WIDTH -> b
    int SCALE -> f
    int SCALED_FACE_WIDTH -> c
    int SCALED_FACE_HEIGHT -> d
    com.badlogic.gdx.math.Vector2 pos -> g
    com.badlogic.gdx.math.Vector2 prevPos -> h
    com.badlogic.gdx.graphics.glutils.ShapeRenderer shapeRenderer -> i
    com.badlogic.gdx.graphics.Texture faceTexture -> j
    boolean hasChangedSinceSnapshot -> k
    com.badlogic.gdx.graphics.Pixmap snapshot -> l
    com.mazalearn.scienceengine.core.view.DrawingActor$Face face -> m
    java.util.List pointSequences -> n
    69:74:void addPointSequence() -> a
    77:78:void addPoint(float,float) -> a
    116:127:void takeSnapshot() -> c
    130:130:boolean hasChangedSinceSnapshot() -> d
    135:141:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    144:179:void drawFaceAndEyesAreas(java.util.List) -> a
    182:182:com.mazalearn.scienceengine.core.view.DrawingActor$Face getFace() -> e
    186:186:com.badlogic.gdx.graphics.Pixmap getPixmap() -> b
    48:48:java.util.List access$0(com.mazalearn.scienceengine.core.view.DrawingActor) -> a
    45:45:void access$1$15ee46c2(com.mazalearn.scienceengine.core.view.DrawingActor) -> b
    42:42:com.badlogic.gdx.math.Vector2 access$2(com.mazalearn.scienceengine.core.view.DrawingActor) -> c
com.mazalearn.scienceengine.core.view.DrawingActor$1 -> com.mazalearn.scienceengine.core.view.q:
    com.mazalearn.scienceengine.core.view.DrawingActor this$0 -> a
    94:95:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    100:103:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    107:111:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
com.mazalearn.scienceengine.core.view.DrawingActor$Face -> com.mazalearn.scienceengine.core.view.r:
    com.badlogic.gdx.scenes.scene2d.ui.Label userCurrentLabel -> a
com.mazalearn.scienceengine.core.view.Helper -> com.mazalearn.scienceengine.core.view.s:
    com.badlogic.gdx.scenes.scene2d.ui.TextButton helpBox -> a
    float originalX -> b
    float originalY -> c
    com.badlogic.gdx.math.Vector2 lastTouch -> d
    com.badlogic.gdx.math.Vector3 currentTouch -> e
    com.badlogic.gdx.scenes.scene2d.ui.Image helpIcon -> f
    19:19:com.badlogic.gdx.scenes.scene2d.ui.TextButton access$0(com.mazalearn.scienceengine.core.view.Helper) -> a
    23:23:com.badlogic.gdx.math.Vector3 access$1(com.mazalearn.scienceengine.core.view.Helper) -> b
    22:22:com.badlogic.gdx.math.Vector2 access$2(com.mazalearn.scienceengine.core.view.Helper) -> c
    24:24:com.badlogic.gdx.scenes.scene2d.ui.Image access$3(com.mazalearn.scienceengine.core.view.Helper) -> d
    20:20:void access$4(com.mazalearn.scienceengine.core.view.Helper,float) -> a
    21:21:void access$5(com.mazalearn.scienceengine.core.view.Helper,float) -> b
    20:20:float access$6(com.mazalearn.scienceengine.core.view.Helper) -> e
    21:21:float access$7(com.mazalearn.scienceengine.core.view.Helper) -> f
com.mazalearn.scienceengine.core.view.Helper$1 -> com.mazalearn.scienceengine.core.view.t:
    com.mazalearn.scienceengine.core.view.Helper this$0 -> a
    40:41:void doCommand() -> a
com.mazalearn.scienceengine.core.view.Helper$2 -> com.mazalearn.scienceengine.core.view.u:
    com.mazalearn.scienceengine.core.view.Helper this$0 -> a
    48:53:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    59:67:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    72:96:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    45:45:com.mazalearn.scienceengine.core.view.Helper access$0(com.mazalearn.scienceengine.core.view.Helper$2) -> a
com.mazalearn.scienceengine.core.view.Helper$2$1 -> com.mazalearn.scienceengine.core.view.v:
    com.mazalearn.scienceengine.core.view.Helper$2 this$1 -> b
    91:92:boolean act(float) -> a
com.mazalearn.scienceengine.core.view.IScience2DView -> com.mazalearn.scienceengine.core.view.w:
    void suspend(boolean) -> a
    boolean isSuspended() -> k
    com.badlogic.gdx.utils.Array getActors() -> c
    void tutoring(boolean) -> c
    boolean isTutoringInProgress() -> n
    com.badlogic.gdx.scenes.scene2d.Actor findActor(java.lang.String) -> a
    java.util.List getLocationGroups() -> o
    void addLocationGroup(com.badlogic.gdx.scenes.scene2d.Actor[]) -> a
    void removeLocationGroups() -> p
    void prepareView() -> q
    void checkActiveTutorProgress() -> t
    com.badlogic.gdx.graphics.g2d.BitmapFont getFont() -> m
    java.util.List getCommands() -> l
    com.mazalearn.scienceengine.core.view.ModelControls getModelControls() -> s
    com.mazalearn.scienceengine.core.view.ViewControls getViewControls() -> u
com.mazalearn.scienceengine.core.view.ModelControls -> com.mazalearn.scienceengine.core.view.x:
    com.mazalearn.scienceengine.core.model.IScience2DModel science2DModel -> a
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> b
    java.util.List controllers -> c
    com.badlogic.gdx.scenes.scene2d.ui.Table modelControlPanel -> d
    com.badlogic.gdx.scenes.scene2d.ui.TextButton title -> e
    41:45:com.badlogic.gdx.scenes.scene2d.ui.Table createModelControlPanel(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    49:52:void refresh() -> a
    55:55:com.mazalearn.scienceengine.core.model.IParameter asParameter(com.mazalearn.scienceengine.core.model.Science2DBody) -> a
    69:75:void validate() -> validate
    79:115:void registerModelConfigs(com.badlogic.gdx.scenes.scene2d.ui.Table) -> a
    118:118:com.badlogic.gdx.scenes.scene2d.Actor getTitle() -> b
    123:127:void act(float) -> act
    130:133:void syncWithModel() -> c
    136:138:void enableControls(boolean) -> a
com.mazalearn.scienceengine.core.view.ModelControls$1 -> com.mazalearn.scienceengine.core.view.y:
    com.mazalearn.scienceengine.core.view.ModelControls this$0 -> a
    com.mazalearn.scienceengine.core.model.Science2DBody val$body -> b
    58:58:java.lang.String name() -> name
    62:62:java.lang.String toString() -> toString
com.mazalearn.scienceengine.core.view.ModelControls$2 -> com.mazalearn.scienceengine.core.view.z:
    com.mazalearn.scienceengine.core.view.ModelControls this$0 -> b
    com.mazalearn.scienceengine.core.model.Science2DBody val$body -> c
    96:96:boolean isPossible() -> h
    97:97:boolean isAvailable() -> i
    98:98:java.lang.Boolean getValue() -> p
    99:99:void setValue(java.lang.Boolean) -> a
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.core.view.Parameter -> com.mazalearn.scienceengine.core.view.Parameter:
    com.mazalearn.scienceengine.core.view.Parameter Reset -> a
    com.mazalearn.scienceengine.core.view.Parameter Tutoring -> b
    com.mazalearn.scienceengine.core.view.Parameter PauseResume -> c
    com.mazalearn.scienceengine.core.view.Parameter Select -> d
    com.mazalearn.scienceengine.core.view.Parameter Move -> e
    com.mazalearn.scienceengine.core.view.Parameter NameOfSelectedBody -> f
    com.mazalearn.scienceengine.core.view.Parameter Rotate -> g
    com.mazalearn.scienceengine.core.view.Parameter[] ENUM$VALUES -> h
    20:20:java.lang.String toString() -> toString
    24:29:com.mazalearn.scienceengine.core.view.Parameter valueOf(com.mazalearn.scienceengine.core.model.IComponentType) -> a
    1:1:com.mazalearn.scienceengine.core.view.Parameter[] values() -> values
    1:1:com.mazalearn.scienceengine.core.view.Parameter valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.core.view.Science2DActor -> com.mazalearn.scienceengine.core.view.aa:
    float TOLERANCE -> b
    com.mazalearn.scienceengine.core.model.Science2DBody body -> a
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> i
    com.badlogic.gdx.math.Vector2 viewPos -> j
    com.badlogic.gdx.math.Vector2 box2DPos -> k
    com.badlogic.gdx.math.Vector2 lastTouch -> c
    boolean drag -> l
    com.badlogic.gdx.math.Vector3 currentTouch -> m
    float moveDistance -> n
    float px -> d
    float py -> e
    float pbx -> f
    float pby -> g
    float pa -> h
    128:138:void moveToCurrent() -> a
    141:141:com.mazalearn.scienceengine.core.model.Science2DBody getBody() -> g
    149:151:void setVisible(boolean) -> setVisible
    156:161:void act(float) -> act
    168:168:java.lang.String getName() -> getName
    176:176:java.lang.String getLocalizedName() -> b
    184:184:java.lang.String getComponentType() -> f
    189:194:void showHelp(com.badlogic.gdx.scenes.scene2d.Stage,boolean) -> a
    197:198:void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    202:206:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    210:220:void debugDraw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    223:223:com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> h
    233:236:void getViewPositionFromBox2DPosition(com.badlogic.gdx.math.Vector2) -> a
    245:248:void getBox2DPositionFromViewPosition$62b7ab5(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
    251:259:void setPositionFromViewCoords(boolean) -> a
    262:262:java.lang.String getMovementMode() -> i
    266:267:void setMovementMode(java.lang.String) -> a
    270:270:int getRotationForceScaler() -> j
    274:274:void prepareActor() -> k
    41:41:void access$0(com.mazalearn.scienceengine.core.view.Science2DActor,boolean) -> a
    43:43:void access$1$59f9b2d2(com.mazalearn.scienceengine.core.view.Science2DActor) -> a
    41:41:boolean access$2(com.mazalearn.scienceengine.core.view.Science2DActor) -> b
    126:126:void access$3(com.mazalearn.scienceengine.core.view.Science2DActor) -> c
    43:43:float access$4(com.mazalearn.scienceengine.core.view.Science2DActor) -> d
    39:39:com.badlogic.gdx.math.Vector2 access$5(com.mazalearn.scienceengine.core.view.Science2DActor) -> e
com.mazalearn.scienceengine.core.view.Science2DActor$1 -> com.mazalearn.scienceengine.core.view.ab:
    com.mazalearn.scienceengine.core.view.Science2DActor this$0 -> a
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$core$model$Science2DBody$MovementMode -> b
    com.mazalearn.scienceengine.core.model.Science2DBody val$body -> c
    64:70:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    75:78:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    82:109:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    61:61:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$core$model$Science2DBody$MovementMode() -> a
com.mazalearn.scienceengine.core.view.Science2DActor$2 -> com.mazalearn.scienceengine.core.view.ac:
    com.mazalearn.scienceengine.core.view.Science2DActor this$0 -> a
    com.mazalearn.scienceengine.core.model.Science2DBody val$body -> b
    116:120:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.mazalearn.scienceengine.core.view.Science2DGestureDetector -> com.mazalearn.scienceengine.core.view.ad:
com.mazalearn.scienceengine.core.view.Science2DGestureDetector$Science2DGestureAdapter -> com.mazalearn.scienceengine.core.view.ae:
    float TOLERANCE -> a
    com.badlogic.gdx.scenes.scene2d.Stage science2DView -> b
    com.badlogic.gdx.math.Vector2 p -> c
    com.badlogic.gdx.math.Vector2 center -> d
    37:76:boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
com.mazalearn.scienceengine.core.view.ScienceTrainActor -> com.mazalearn.scienceengine.core.view.af:
    com.mazalearn.scienceengine.core.view.IScience2DView science2DView -> b
    com.badlogic.gdx.scenes.scene2d.Actor coach -> a
    26:37:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    40:41:void reset() -> a
    44:49:void animate() -> b
com.mazalearn.scienceengine.core.view.Scoreboard -> com.mazalearn.scienceengine.core.view.ag:
    com.badlogic.gdx.scenes.scene2d.ui.Label scoreLabel -> a
    com.mazalearn.scienceengine.app.services.Profile profile -> b
    38:42:void act(float) -> act
com.mazalearn.scienceengine.core.view.SizeAction -> com.mazalearn.scienceengine.core.view.ah:
    16:20:void update(float) -> b
    23:27:com.mazalearn.scienceengine.core.view.SizeAction sizeTo(float,float,float) -> a
com.mazalearn.scienceengine.core.view.Snapshotter -> com.mazalearn.scienceengine.core.view.ai:
    com.badlogic.gdx.graphics.glutils.ShapeRenderer shapeRenderer -> a
    22:31:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.mazalearn.scienceengine.core.view.ViewControls -> com.mazalearn.scienceengine.core.view.aj:
    int VIEW_BUTTON_HEIGHT -> d
    int VIEW_BUTTON_WIDTH -> e
    com.mazalearn.scienceengine.app.services.IMessage messages -> a
    boolean isActivated -> f
    com.badlogic.gdx.scenes.scene2d.ui.Table viewControlPanel -> b
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> c
    51:51:com.mazalearn.scienceengine.app.services.IMessage getMsg() -> d
    55:62:com.badlogic.gdx.scenes.scene2d.ui.Table createViewControlPanel(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    66:66:void syncWithModel() -> a
    69:70:void enableControls(boolean) -> a
    74:74:com.badlogic.gdx.scenes.scene2d.Actor getActor() -> c
    78:78:boolean isActivated() -> b
    82:84:void setActivated(boolean) -> b
    88:100:void addActivityControls() -> e
com.mazalearn.scienceengine.core.view.ViewControls$1 -> com.mazalearn.scienceengine.core.view.ak:
    com.mazalearn.scienceengine.core.view.ViewControls this$0 -> a
    36:37:void doCommand() -> a
com.mazalearn.scienceengine.core.view.ViewControls$2 -> com.mazalearn.scienceengine.core.view.al:
    com.mazalearn.scienceengine.core.view.ViewControls this$0 -> a
    93:95:void doCommand() -> a
com.mazalearn.scienceengine.designer.ActorPropertyPanel -> com.mazalearn.scienceengine.designer.a:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> a
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> b
    com.badlogic.gdx.scenes.scene2d.ui.TextField widthField -> c
    com.badlogic.gdx.scenes.scene2d.ui.TextField heightField -> d
    com.badlogic.gdx.scenes.scene2d.ui.TextField xField -> e
    com.badlogic.gdx.scenes.scene2d.ui.TextField yField -> f
    com.badlogic.gdx.scenes.scene2d.ui.TextField rotationField -> g
    com.badlogic.gdx.scenes.scene2d.ui.TextField originXField -> h
    com.badlogic.gdx.scenes.scene2d.ui.TextField originYField -> i
    com.badlogic.gdx.scenes.scene2d.ui.Label nameLabel -> j
    com.badlogic.gdx.scenes.scene2d.ui.TextField allowMoveField -> k
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox dynamicBodyField -> l
    39:43:com.badlogic.gdx.scenes.scene2d.ui.CheckBox addCheckBoxProperty(java.lang.String) -> a
    47:51:com.badlogic.gdx.scenes.scene2d.ui.TextField addLabeledProperty(java.lang.String) -> b
    55:67:void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> a
    70:83:void saveActorProperties(com.badlogic.gdx.scenes.scene2d.Actor) -> b
    86:104:void showActorProperties(com.badlogic.gdx.scenes.scene2d.Actor) -> c
com.mazalearn.scienceengine.designer.LevelEditor -> com.mazalearn.scienceengine.designer.LevelEditor:
    com.mazalearn.scienceengine.app.screens.AbstractScreen screen -> a
    float THUMBNAIL_SCALE -> b
    com.badlogic.gdx.graphics.OrthographicCamera orthographicCamera -> c
    com.mazalearn.scienceengine.designer.LevelEditor$Operation operation -> d
    com.mazalearn.scienceengine.designer.LevelEditor$Mode mode -> e
    com.badlogic.gdx.graphics.Color fontColor -> f
    com.badlogic.gdx.scenes.scene2d.Actor selectedActor -> g
    com.badlogic.gdx.math.Vector2 lastTouch -> h
    com.badlogic.gdx.scenes.scene2d.Stage originalStage -> i
    com.badlogic.gdx.math.Vector3 originalCameraPos -> j
    float originalCameraZoom -> k
    com.badlogic.gdx.scenes.scene2d.ui.Table layout -> l
    com.mazalearn.scienceengine.core.model.IScience2DModel science2DModel -> m
    com.mazalearn.scienceengine.core.view.ModelControls modelControls -> n
    com.badlogic.gdx.graphics.glutils.ShapeRenderer shapeRenderer -> o
    com.badlogic.gdx.math.Vector2 stagePoint -> p
    com.badlogic.gdx.math.Vector2 point -> q
    com.badlogic.gdx.math.Vector2 rotatedVector -> r
    com.mazalearn.scienceengine.designer.ActorPropertyPanel actorPropertyPanel -> s
    com.badlogic.gdx.scenes.scene2d.ui.Table configTable -> t
    com.mazalearn.scienceengine.core.controller.IScience2DController science2DController -> u
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$designer$LevelEditor$Mode -> v
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$designer$LevelEditor$Operation -> w
    113:163:com.badlogic.gdx.scenes.scene2d.ui.Table createLayout(com.badlogic.gdx.scenes.scene2d.Stage,com.mazalearn.scienceengine.core.model.IScience2DModel) -> a
    167:208:com.badlogic.gdx.scenes.scene2d.ui.Table createMenu(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    216:226:void takeSnapshot(com.badlogic.gdx.scenes.scene2d.Stage,com.mazalearn.scienceengine.Topic,com.mazalearn.scienceengine.Topic,int,int,int,int) -> a
    230:254:com.badlogic.gdx.scenes.scene2d.Actor createComponentsPanel(com.badlogic.gdx.scenes.scene2d.Stage,com.badlogic.gdx.scenes.scene2d.ui.Skin,com.badlogic.gdx.scenes.scene2d.ui.Table) -> a
    258:261:com.badlogic.gdx.scenes.scene2d.ui.Table createConfigTable(com.mazalearn.scienceengine.core.model.IScience2DModel,com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    266:283:void refreshConfigsTable(com.mazalearn.scienceengine.core.model.IScience2DModel,com.badlogic.gdx.scenes.scene2d.ui.Skin,com.badlogic.gdx.scenes.scene2d.ui.Table) -> a
    289:293:void enableEditor() -> k
    296:299:void disableEditor() -> l
    306:316:void draw() -> a
    319:342:void drawOverlay() -> m
    345:350:void drawConfigure() -> n
    354:390:boolean touchDown(int,int,int,int) -> a
    395:412:boolean touchUp(int,int,int,int) -> b
    417:441:boolean touchDragged(int,int,int) -> a
    445:476:void operateOnActor(com.badlogic.gdx.scenes.scene2d.Actor,int,int,com.badlogic.gdx.math.Vector3) -> a
    480:482:boolean scrolled(int) -> c
    487:508:boolean keyDown(int) -> a
    512:512:java.lang.String getInfo(com.badlogic.gdx.scenes.scene2d.Actor) -> e
    519:522:void restoreCamera() -> o
    525:527:com.badlogic.gdx.math.Vector2 screenToWorld(int,int) -> b
    532:556:void drawBoundingBox(com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> a
    85:85:com.mazalearn.scienceengine.core.controller.IScience2DController access$0(com.mazalearn.scienceengine.designer.LevelEditor) -> a
    518:518:void access$1(com.mazalearn.scienceengine.designer.LevelEditor) -> b
    295:295:void access$2(com.mazalearn.scienceengine.designer.LevelEditor) -> c
    67:67:void access$3(com.mazalearn.scienceengine.designer.LevelEditor,com.badlogic.gdx.scenes.scene2d.Actor) -> a
    82:82:com.mazalearn.scienceengine.designer.ActorPropertyPanel access$4(com.mazalearn.scienceengine.designer.LevelEditor) -> d
    67:67:com.badlogic.gdx.scenes.scene2d.Actor access$5(com.mazalearn.scienceengine.designer.LevelEditor) -> e
    75:75:com.mazalearn.scienceengine.core.model.IScience2DModel access$6(com.mazalearn.scienceengine.designer.LevelEditor) -> f
    264:264:void access$7(com.mazalearn.scienceengine.designer.LevelEditor,com.mazalearn.scienceengine.core.model.IScience2DModel,com.badlogic.gdx.scenes.scene2d.ui.Skin,com.badlogic.gdx.scenes.scene2d.ui.Table) -> a
    76:76:com.mazalearn.scienceengine.core.view.ModelControls access$8(com.mazalearn.scienceengine.designer.LevelEditor) -> g
    51:51:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$designer$LevelEditor$Mode() -> p
    51:51:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$designer$LevelEditor$Operation() -> q
com.mazalearn.scienceengine.designer.LevelEditor$1 -> com.mazalearn.scienceengine.designer.b:
    com.mazalearn.scienceengine.designer.LevelEditor this$0 -> a
    174:180:void doCommand() -> a
com.mazalearn.scienceengine.designer.LevelEditor$2 -> com.mazalearn.scienceengine.designer.c:
    com.mazalearn.scienceengine.designer.LevelEditor this$0 -> a
    187:188:void doCommand() -> a
com.mazalearn.scienceengine.designer.LevelEditor$3 -> com.mazalearn.scienceengine.designer.d:
    com.mazalearn.scienceengine.designer.LevelEditor this$0 -> a
    195:196:void doCommand() -> a
com.mazalearn.scienceengine.designer.LevelEditor$4 -> com.mazalearn.scienceengine.designer.e:
    com.mazalearn.scienceengine.designer.LevelEditor this$0 -> a
    203:204:void doCommand() -> a
com.mazalearn.scienceengine.designer.LevelEditor$5 -> com.mazalearn.scienceengine.designer.f:
    com.mazalearn.scienceengine.designer.LevelEditor this$0 -> a
    com.badlogic.gdx.scenes.scene2d.Stage val$stage -> b
    com.badlogic.gdx.scenes.scene2d.Actor val$actor -> c
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox val$componentCheckbox -> d
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> e
    com.badlogic.gdx.scenes.scene2d.ui.Table val$configTable -> f
    242:251:void doCommand() -> a
com.mazalearn.scienceengine.designer.LevelEditor$6 -> com.mazalearn.scienceengine.designer.g:
    com.mazalearn.scienceengine.designer.LevelEditor this$0 -> a
    com.mazalearn.scienceengine.core.controller.IModelConfig val$config -> b
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox val$configCheckbox -> c
    277:278:void doCommand() -> a
com.mazalearn.scienceengine.designer.LevelEditor$Mode -> com.mazalearn.scienceengine.designer.LevelEditor$Mode:
    com.mazalearn.scienceengine.designer.LevelEditor$Mode CONFIGURE -> a
    com.mazalearn.scienceengine.designer.LevelEditor$Mode OVERLAY -> b
    com.mazalearn.scienceengine.designer.LevelEditor$Mode[] ENUM$VALUES -> c
    1:1:com.mazalearn.scienceengine.designer.LevelEditor$Mode[] values() -> values
    1:1:com.mazalearn.scienceengine.designer.LevelEditor$Mode valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.designer.LevelEditor$Operation -> com.mazalearn.scienceengine.designer.LevelEditor$Operation:
    com.mazalearn.scienceengine.designer.LevelEditor$Operation MOVE -> a
    com.mazalearn.scienceengine.designer.LevelEditor$Operation ROTATE -> b
    com.mazalearn.scienceengine.designer.LevelEditor$Operation RESIZE -> c
    com.mazalearn.scienceengine.designer.LevelEditor$Operation[] ENUM$VALUES -> d
    1:1:com.mazalearn.scienceengine.designer.LevelEditor$Operation[] values() -> values
    1:1:com.mazalearn.scienceengine.designer.LevelEditor$Operation valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.designer.LevelSaver -> com.mazalearn.scienceengine.designer.h:
    com.mazalearn.scienceengine.Topic level -> a
    com.mazalearn.scienceengine.core.controller.IScience2DController science2DController -> b
    com.mazalearn.scienceengine.core.view.IScience2DView science2DView -> c
    com.mazalearn.scienceengine.core.model.IScience2DModel science2DModel -> d
    41:55:void save() -> a
    58:62:void writeLevelInfo(com.badlogic.gdx.utils.JsonWriter) -> a
    65:74:void writeConfigs(com.badlogic.gdx.utils.JsonWriter) -> b
    77:86:void writeGroups(com.badlogic.gdx.utils.JsonWriter) -> c
    89:99:void writeCircuits(com.badlogic.gdx.utils.JsonWriter) -> d
    102:127:void writeComponents(com.badlogic.gdx.utils.JsonWriter) -> e
com.mazalearn.scienceengine.designer.PngWriter -> com.mazalearn.scienceengine.designer.i:
    byte[] HEADER -> a
    byte[] IDAT -> b
    byte[] IEND -> c
    byte[] IHDR -> d
    java.lang.String CONTENT_TYPE -> e
    52:52:java.lang.String getContentType() -> a
    56:114:byte[] generateImage(com.badlogic.gdx.graphics.Pixmap) -> a
    119:122:byte[] stringToBytes(java.lang.String) -> a
    128:132:void writeUnsignedInt(java.io.OutputStream,long) -> a
com.mazalearn.scienceengine.domains.electromagnetism.ElectroMagnetismController -> com.mazalearn.scienceengine.domains.electromagnetism.a:
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$electromagnetism$model$ComponentType -> f
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$electromagnetism$tutor$TutorType -> g
    54:94:com.badlogic.gdx.scenes.scene2d.Actor createActor(java.lang.String,java.lang.String,com.mazalearn.scienceengine.core.model.Science2DBody) -> a
    103:119:com.mazalearn.scienceengine.tutor.AbstractTutor createTutor(com.mazalearn.scienceengine.tutor.ITutor,java.lang.String,com.mazalearn.scienceengine.Topic,java.lang.String,java.lang.String,com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array,java.lang.String[],java.lang.String[],java.lang.String[]) -> a
    41:41:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$electromagnetism$model$ComponentType() -> k
    41:41:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$electromagnetism$tutor$TutorType() -> l
com.mazalearn.scienceengine.domains.electromagnetism.ElectroMagnetismModel -> com.mazalearn.scienceengine.domains.electromagnetism.b:
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$electromagnetism$model$ComponentType -> h
    37:62:com.mazalearn.scienceengine.core.model.Science2DBody createScience2DBody(java.lang.String,float,float,float) -> b
    67:75:void singleStep() -> a
    79:79:void initializeConfigs$5eadb890() -> i
    27:27:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$electromagnetism$model$ComponentType() -> m
com.mazalearn.scienceengine.domains.electromagnetism.ElectroMagnetismView -> com.mazalearn.scienceengine.domains.electromagnetism.c:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo dynamo -> d
    com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet magnet -> e
    com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb lightbulb -> f
    42:52:void act(float) -> a
    57:73:void prepareView() -> q
    77:82:void initializeCommands(java.util.List) -> a
    85:112:void saveInProfile() -> v
    115:115:java.lang.String rgba(com.badlogic.gdx.graphics.Color) -> a
    84:84:void access$0(com.mazalearn.scienceengine.domains.electromagnetism.ElectroMagnetismView) -> a
com.mazalearn.scienceengine.domains.electromagnetism.ElectroMagnetismView$1 -> com.mazalearn.scienceengine.domains.electromagnetism.d:
    com.mazalearn.scienceengine.domains.electromagnetism.ElectroMagnetismView this$0 -> b
    79:79:void doCommand() -> n
    80:80:boolean isPossible() -> h
com.mazalearn.scienceengine.domains.electromagnetism.model.AbstractMagnet -> com.mazalearn.scienceengine.domains.electromagnetism.model.a:
    float TOLERANCE -> a
    float width -> f
    float height -> g
    float strength -> h
    com.badlogic.gdx.math.Vector2 bField -> i
    42:48:void setStrength(float) -> h
    51:57:void setAngle(float) -> i
    65:65:float getStrength() -> N
    82:98:com.badlogic.gdx.math.Vector3 getBField(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector3) -> a
    com.badlogic.gdx.math.Vector2 getBFieldRelative(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> c
    122:124:void setSize(float,float) -> a
    127:129:void scaleSize(float) -> j
    136:136:float getWidth() -> O
    145:145:float getHeight() -> P
com.mazalearn.scienceengine.domains.electromagnetism.model.Ammeter -> com.mazalearn.scienceengine.domains.electromagnetism.model.b:
    float CURRENT_AMPLITUDE_THRESHOLD -> a
    float MAX_NEEDLE_ANGLE -> f
    float HYSTERESIS -> g
    float maxCurrent -> h
    int SMOOTH -> i
    com.badlogic.gdx.math.Vector2 firstTerminal -> j
    com.badlogic.gdx.math.Vector2 secondTerminal -> k
    float needleAngle -> l
    float minNeedleAngle -> m
    float maxNeedleAngle -> n
    float current -> o
    47:54:void initializeConfigs() -> a
    58:60:void reset() -> a_
    67:74:void setNeedleAngle(float) -> i
    80:80:float getMinNeedleAngle() -> N
    87:87:float getMaxNeedleAngle() -> O
    94:94:float getNeedleAngle() -> P
    106:114:float computeNeedleAngle() -> R
    122:123:void singleStep(float) -> g
    127:127:com.badlogic.gdx.math.Vector2 getT1Position() -> c
    133:133:com.badlogic.gdx.math.Vector2 getT2Position() -> d
    139:140:void setCurrent(float) -> a_
    143:143:float getMaxCurrent() -> Q
    147:148:void setMaxCurrent(float) -> h
com.mazalearn.scienceengine.domains.electromagnetism.model.Ammeter$1 -> com.mazalearn.scienceengine.domains.electromagnetism.model.c:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Ammeter this$0 -> b
    50:50:java.lang.Float getValue() -> p
    51:51:void setValue(java.lang.Float) -> a
    52:52:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet -> com.mazalearn.scienceengine.domains.electromagnetism.model.d:
    float MAX_STRENGTH -> a
    float GRID_MAGNET_STRENGTH -> g
    float INTERNAL_GRID_SPACING -> h
    float EXTERNAL_NEAR_GRID_SPACING -> i
    float EXTERNAL_FAR_GRID_SPACING -> j
    com.mazalearn.scienceengine.app.utils.Dimension INTERNAL_GRID_SIZE -> k
    com.mazalearn.scienceengine.app.utils.Dimension EXTERNAL_NEAR_GRID_SIZE -> l
    com.mazalearn.scienceengine.app.utils.Dimension EXTERNAL_FAR_GRID_SIZE -> m
    java.lang.String BX_INTERNAL_RESOURCE_NAME -> n
    java.lang.String BY_INTERNAL_RESOURCE_NAME -> o
    java.lang.String BX_EXTERNAL_NEAR_RESOURCE_NAME -> p
    java.lang.String BY_EXTERNAL_NEAR_RESOURCE_NAME -> q
    java.lang.String BX_EXTERNAL_FAR_RESOURCE_NAME -> r
    java.lang.String BY_EXTERNAL_FAR_RESOURCE_NAME -> s
    float PERIPHERY_SCALE_DOWN -> t
    float MODEL_SCALE -> u
    com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet$Grid internalGrid -> v
    com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet$Grid externalNearGrid -> w
    com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet$Grid externalFarGrid -> x
    boolean $assertionsDisabled -> f
    136:155:void initializeConfigs() -> a
    167:180:com.badlogic.gdx.math.Vector2 getBFieldRelative(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> c
    188:189:float getBx(double,double) -> a
    199:205:float getBy(double,double) -> b
    212:220:com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet$Grid chooseGrid(double,double) -> c
    233:274:double interpolate(double,double,double,double,float[][],double) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet$1 -> com.mazalearn.scienceengine.domains.electromagnetism.model.e:
    com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet this$0 -> b
    139:139:java.lang.Float getValue() -> p
    140:140:void setValue(java.lang.Float) -> a
    141:141:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet$2 -> com.mazalearn.scienceengine.domains.electromagnetism.model.f:
    com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet this$0 -> b
    145:145:java.lang.Float getValue() -> p
    146:146:void setValue(java.lang.Float) -> a
    147:147:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet$3 -> com.mazalearn.scienceengine.domains.electromagnetism.model.g:
    com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet this$0 -> b
    151:151:java.lang.String getValue() -> p
    152:152:void setValue(java.lang.String) -> a
    153:153:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet$Grid -> com.mazalearn.scienceengine.domains.electromagnetism.model.h:
    java.lang.String TOKEN_DELIMITER -> a
    float[][] bxArray -> b
    float[][] byArray -> c
    com.mazalearn.scienceengine.app.utils.Dimension size -> d
    float spacing -> e
    300:300:float getSpacing() -> a
    304:304:float[][] getBxArray() -> b
    308:308:float[][] getByArray() -> c
    321:323:boolean contains(double,double) -> a
    327:327:double getMaxX() -> d
    331:331:double getMaxY() -> e
    341:345:java.io.InputStream getResourceAsStream(java.lang.String) -> a
    355:404:float[][] readComponent(java.lang.String,com.mazalearn.scienceengine.app.utils.Dimension) -> a
    326:326:double access$0(com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet$Grid) -> a
    330:330:double access$1(com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet$Grid) -> b
com.mazalearn.scienceengine.domains.electromagnetism.model.Charge -> com.mazalearn.scienceengine.domains.electromagnetism.model.i:
    float MAX_STRENGTH -> a
    com.badlogic.gdx.math.Vector3 fieldVector -> f
    com.badlogic.gdx.math.Vector3 velocity -> g
    com.badlogic.gdx.math.Vector2 force -> h
    float charge -> i
    float velocityMagnitude -> j
    45:58:void initializeConfigs() -> a
    61:61:float getStrength() -> d
    65:66:void setStrength(float) -> h
    70:73:void reset() -> a_
    76:78:void setLinearVelocity(com.badlogic.gdx.math.Vector2) -> a
    82:92:void singleStep(float) -> g
    96:98:void setBField(com.badlogic.gdx.math.Vector3) -> a
    102:103:void notifyFieldChange() -> c
    24:24:com.badlogic.gdx.math.Vector2 access$0(com.mazalearn.scienceengine.domains.electromagnetism.model.Charge) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Charge$1 -> com.mazalearn.scienceengine.domains.electromagnetism.model.j:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Charge this$0 -> b
    48:48:java.lang.Float getValue() -> p
    49:49:void setValue(java.lang.Float) -> a
    50:50:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Charge$2 -> com.mazalearn.scienceengine.domains.electromagnetism.model.k:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Charge this$0 -> b
    54:54:java.lang.Float getValue() -> p
    55:55:void setValue(java.lang.Float) -> a
    56:56:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Clamp -> com.mazalearn.scienceengine.domains.electromagnetism.model.l:
    14:21:float clamp(float,float,float) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Compass -> com.mazalearn.scienceengine.domains.electromagnetism.model.m:
    com.badlogic.gdx.math.Vector2 fieldVector -> a
    com.badlogic.gdx.math.Vector3 bField -> f
    41:46:void singleStep(float) -> g
    49:49:float getBField() -> c
com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType -> com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType:
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType BarMagnet -> a
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType CurrentSource -> b
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType Compass -> c
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType ElectroMagnet -> d
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType Lightbulb -> e
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType FieldMeter -> f
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType PickupCoil -> g
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType Wire -> h
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType Ammeter -> i
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType HorseshoeMagnet -> j
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType CurrentCoil -> k
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType Dynamo -> l
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType Magnet -> m
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType Monopole -> n
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType MagneticField -> o
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType Charge -> p
    java.lang.String textureName -> textureName
    com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType[] ENUM$VALUES -> q
    31:31:java.lang.String getTextureName() -> a
    35:35:java.lang.String getLocalizedName() -> b
    39:44:com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType valueOf(com.mazalearn.scienceengine.core.model.IComponentType) -> a
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.ComponentType valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil -> com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil:
    float OUTPUT_SCALE -> a
    float width -> f
    float height -> g
    float current -> h
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$CommutatorType commutatorType -> i
    com.badlogic.gdx.math.Vector2 forceVector -> j
    com.badlogic.gdx.math.Vector2 pos -> k
    com.badlogic.gdx.math.Vector3 bField -> l
    com.badlogic.gdx.math.Vector2 firstTerminal -> m
    com.badlogic.gdx.math.Vector2 secondTerminal -> n
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$RotationDataType rotationDataType -> o
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$electromagnetism$model$CurrentCoil$CommutatorType -> p
    59:82:void initializeConfigs() -> a
    85:85:java.lang.Float getRotationData() -> N
    94:95:void setCurrent(float) -> a_
    102:111:float getCurrent() -> O
    120:125:void singleStep(float) -> g
    128:128:float getWidth() -> Q
    132:132:float getHeight() -> R
    136:136:com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$CommutatorType getCommutatorType() -> P
    141:141:com.badlogic.gdx.math.Vector2 getT1Position() -> c
    147:147:com.badlogic.gdx.math.Vector2 getT2Position() -> d
    29:29:com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$CommutatorType access$0(com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil) -> a
    29:29:void access$1(com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil,com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$CommutatorType) -> a
    39:39:com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$RotationDataType access$2(com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil) -> b
    39:39:void access$3(com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil,com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$RotationDataType) -> a
    20:20:void access$4$4804a8e7(com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil) -> c
    20:20:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$electromagnetism$model$CurrentCoil$CommutatorType() -> S
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$1 -> com.mazalearn.scienceengine.domains.electromagnetism.model.n:
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil this$0 -> b
    62:62:java.lang.String getValue() -> p
    63:63:void setValue(java.lang.String) -> a
    64:64:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$2 -> com.mazalearn.scienceengine.domains.electromagnetism.model.o:
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil this$0 -> b
    68:68:java.lang.String getValue() -> p
    70:72:void setValue(java.lang.String) -> a
    73:73:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$3 -> com.mazalearn.scienceengine.domains.electromagnetism.model.p:
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil this$0 -> b
    77:77:java.lang.Float getValue() -> p
    78:78:void setValue$335ca104() -> q
    79:79:boolean isMeter() -> a
    80:80:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$CommutatorType -> com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$CommutatorType:
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$CommutatorType Connector -> a
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$CommutatorType Commutator -> b
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$CommutatorType Disconnected -> c
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$CommutatorType[] ENUM$VALUES -> d
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$CommutatorType[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$CommutatorType valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$RotationDataType -> com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$RotationDataType:
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$RotationDataType AngularVelocity -> a
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$RotationDataType NumRevolutions -> b
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$RotationDataType[] ENUM$VALUES -> c
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$RotationDataType[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil$RotationDataType valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource -> com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource:
    float MIN_STEPS_PER_CYCLE -> g
    float DEFAULT_MAX_CURRENT -> a
    float TOLERANCE -> h
    float frequency -> i
    float acAngle -> j
    float deltaAngle -> k
    float maxCurrent -> l
    float current -> m
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource$CurrentType currentType -> n
    boolean isNegativeCurrent -> o
    com.badlogic.gdx.math.Vector2 firstTerminal -> p
    com.badlogic.gdx.math.Vector2 secondTerminal -> q
    boolean $assertionsDisabled -> f
    63:101:void initializeConfigs() -> a
    104:105:void setCurrentType(java.lang.String) -> a
    108:108:java.lang.String getCurrentType() -> N
    118:122:void setFrequency(float) -> h
    130:130:float getFrequency() -> O
    139:158:void singleStep(float) -> g
    166:166:float getCurrent() -> b
    173:177:void setCurrent(float) -> j
    185:186:void setMaxCurrent(float) -> i
    194:194:float getMaxCurrent() -> P
    201:206:void setNegativeCurrent(boolean) -> f
    210:210:com.badlogic.gdx.math.Vector2 getT1Position() -> c
    216:216:com.badlogic.gdx.math.Vector2 getT2Position() -> d
    43:43:com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource$CurrentType access$0(com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource) -> a
    172:172:void access$1(com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource,float) -> a
    45:45:boolean access$2(com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource) -> b
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource$1 -> com.mazalearn.scienceengine.domains.electromagnetism.model.q:
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource this$0 -> b
    66:66:java.lang.String getValue() -> p
    67:67:void setValue(java.lang.String) -> a
    68:68:boolean isPossible() -> h
    69:69:boolean hasProbeMode() -> j
    70:70:void setProbeMode() -> k
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource$2 -> com.mazalearn.scienceengine.domains.electromagnetism.model.r:
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource this$0 -> b
    75:75:java.lang.Float getValue() -> p
    76:76:void setValue(java.lang.Float) -> a
    77:77:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource$3 -> com.mazalearn.scienceengine.domains.electromagnetism.model.s:
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource this$0 -> b
    82:82:java.lang.Float getValue() -> p
    83:83:void setValue(java.lang.Float) -> a
    84:84:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource$4 -> com.mazalearn.scienceengine.domains.electromagnetism.model.t:
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource this$0 -> b
    89:89:java.lang.Float getValue() -> p
    90:90:void setValue(java.lang.Float) -> a
    91:91:boolean isMeter() -> a
    92:92:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource$5 -> com.mazalearn.scienceengine.domains.electromagnetism.model.u:
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource this$0 -> b
    97:97:void setValue(java.lang.Boolean) -> a
    98:98:java.lang.Boolean getValue() -> p
    99:99:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource$CurrentType -> com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource$CurrentType:
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource$CurrentType AC -> a
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource$CurrentType DC -> b
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource$CurrentType[] ENUM$VALUES -> c
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource$CurrentType[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource$CurrentType valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo -> com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo:
    float TOLERANCE -> a
    float SCALE_OUTPUT -> f
    float width -> g
    float height -> h
    float current -> i
    com.badlogic.gdx.math.Vector2 firstTerminal -> j
    com.badlogic.gdx.math.Vector2 secondTerminal -> k
    com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo$AreaOrientation areaOrientation -> l
    int numberOfLoops -> m
    float minWidth -> n
    float maxCurrent -> o
    53:74:void initializeConfigs() -> a
    77:95:void setMagnetFlux(float) -> h
    102:106:void setCurrent(float) -> m
    113:113:float getCurrent() -> b
    121:121:float getMaxCurrent() -> N
    125:125:float getWidth() -> O
    129:132:void setWidth(float) -> i
    135:138:void setHeight(float) -> j
    141:141:float getHeight() -> P
    152:153:void setNumberOfLoops(float) -> k
    161:161:float getNumberOfLoops() -> Q
    166:169:com.badlogic.gdx.math.Vector2 getT2Position() -> d
    174:177:com.badlogic.gdx.math.Vector2 getT1Position() -> c
    181:181:java.lang.String getAreaOrientation() -> R
    185:186:void setAreaOrientation(java.lang.String) -> a
    189:190:void setMinWidth(float) -> l
com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo$1 -> com.mazalearn.scienceengine.domains.electromagnetism.model.v:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo this$0 -> b
    56:56:java.lang.String getValue() -> p
    57:57:void setValue(java.lang.String) -> a
    58:58:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo$2 -> com.mazalearn.scienceengine.domains.electromagnetism.model.w:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo this$0 -> b
    62:62:java.lang.Float getValue() -> p
    64:65:void setValue(java.lang.Float) -> a
    66:66:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo$3 -> com.mazalearn.scienceengine.domains.electromagnetism.model.x:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo this$0 -> b
    70:70:java.lang.Float getValue() -> p
    71:71:void setValue(java.lang.Float) -> a
    72:72:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo$AreaOrientation -> com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo$AreaOrientation:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo$AreaOrientation ParallelToRotation -> a
    com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo$AreaOrientation PerpendicularToRotation -> b
    com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo$AreaOrientation[] ENUM$VALUES -> c
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo$AreaOrientation[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo$AreaOrientation valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.electromagnetism.model.ElectroMagnet -> com.mazalearn.scienceengine.domains.electromagnetism.model.y:
    float OUTPUT_SCALE -> g
    float TOLERANCE -> h
    int ELECTROMAGNET_LOOPS_MAX -> i
    float MAX_EMF -> j
    float DISPLAY_WIDTH -> a
    float CANONICAL_RADIUS -> f
    float COIL_WIDTH -> k
    float maxStrengthOutside -> l
    float current -> m
    int numberOfLoops -> n
    com.badlogic.gdx.math.Vector2 firstTerminal -> o
    com.badlogic.gdx.math.Vector2 secondTerminal -> p
    float radius -> q
    65:78:void initializeConfigs() -> a
    81:83:void setRadius(java.lang.Float) -> a
    86:86:java.lang.Float getRadius() -> Q
    90:95:void setCurrent(float) -> a_
    99:108:void updateStrength() -> T
    117:117:boolean isInside(com.badlogic.gdx.math.Vector2) -> i
    136:142:com.badlogic.gdx.math.Vector2 getBFieldRelative(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> c
    157:158:void getBFieldInside$42437aeb(com.badlogic.gdx.math.Vector2) -> j
    196:225:void getBFieldOutside(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> d
    228:228:float getNumberOfLoops() -> R
    232:237:void setNumberOfLoops(float) -> j
    240:240:float getCoilWidth() -> U
    245:246:com.badlogic.gdx.math.Vector2 getT1Position() -> c
    253:254:com.badlogic.gdx.math.Vector2 getT2Position() -> d
    260:260:float getCurrent() -> S
com.mazalearn.scienceengine.domains.electromagnetism.model.ElectroMagnet$1 -> com.mazalearn.scienceengine.domains.electromagnetism.model.z:
    com.mazalearn.scienceengine.domains.electromagnetism.model.ElectroMagnet this$0 -> b
    68:68:java.lang.Float getValue() -> p
    69:69:void setValue(java.lang.Float) -> a
    70:70:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.ElectroMagnet$2 -> com.mazalearn.scienceengine.domains.electromagnetism.model.aa:
    com.mazalearn.scienceengine.domains.electromagnetism.model.ElectroMagnet this$0 -> b
    74:74:java.lang.Float getValue() -> p
    75:75:void setValue(java.lang.Float) -> a
    76:76:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter -> com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter:
    float X_SPACE -> a
    float Y_SPACE -> f
    com.badlogic.gdx.math.Vector3 fieldVector -> g
    com.badlogic.gdx.math.Vector2 samplePoint -> h
    com.badlogic.gdx.math.Vector2 bField -> i
    com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter$SampleMode sampleMode -> j
    java.util.List fieldSamples -> k
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$electromagnetism$model$FieldMeter$SampleMode -> l
    81:94:void initializeConfigs() -> a
    98:101:void setPositionAndAngle(com.badlogic.gdx.math.Vector2,float) -> b
    105:108:void reset() -> a_
    111:111:float getBField() -> O
    115:117:void addFieldSample(float,float,com.badlogic.gdx.math.Vector3) -> a
    120:120:java.util.List getFieldSamples() -> d
    125:126:void setBField(com.badlogic.gdx.math.Vector3) -> a
    130:130:boolean allowsConfiguration() -> e
    135:140:void notifyFieldChange() -> c
    143:159:void setSampleMode(java.lang.String) -> a
    162:162:com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter$SampleMode getSampleMode() -> N
    61:61:java.util.List access$0(com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter) -> a
    35:35:com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter$SampleMode access$1(com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter) -> b
    142:142:void access$2(com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter,java.lang.String) -> a
    27:27:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$electromagnetism$model$FieldMeter$SampleMode() -> P
com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter$1 -> com.mazalearn.scienceengine.domains.electromagnetism.model.ab:
    com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter this$0 -> b
    83:83:java.lang.Float getValue() -> p
    84:84:void setValue$335ca104() -> q
    85:85:boolean isMeter() -> a
    86:86:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter$2 -> com.mazalearn.scienceengine.domains.electromagnetism.model.ac:
    com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter this$0 -> b
    90:90:java.lang.String getValue() -> p
    91:91:void setValue(java.lang.String) -> a
    92:92:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter$FieldSample -> com.mazalearn.scienceengine.domains.electromagnetism.model.ad:
    float x -> a
    float y -> b
    float magnitude -> c
    float theta -> d
    float phi -> e
    53:58:void rectangular2spherical(com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter$FieldSample,com.badlogic.gdx.math.Vector3) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter$SampleMode -> com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter$SampleMode:
    com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter$SampleMode User -> a
    com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter$SampleMode Uniform -> b
    com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter$SampleMode[] ENUM$VALUES -> c
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter$SampleMode[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter$SampleMode valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.electromagnetism.model.HorseshoeMagnet -> com.mazalearn.scienceengine.domains.electromagnetism.model.ae:
    float B_FIELD_MAGNITUDE -> a
    19:20:com.badlogic.gdx.math.Vector2 getBFieldRelative(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> c
    25:39:void initializeConfigs() -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.HorseshoeMagnet$1 -> com.mazalearn.scienceengine.domains.electromagnetism.model.af:
    com.mazalearn.scienceengine.domains.electromagnetism.model.HorseshoeMagnet this$0 -> b
    28:28:java.lang.Float getValue() -> p
    29:29:void setValue(java.lang.Float) -> a
    30:30:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.HorseshoeMagnet$2 -> com.mazalearn.scienceengine.domains.electromagnetism.model.ag:
    com.mazalearn.scienceengine.domains.electromagnetism.model.HorseshoeMagnet this$0 -> b
    35:35:java.lang.Boolean getValue() -> p
    36:36:void setValue(java.lang.Boolean) -> a
    37:37:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb -> com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb:
    double CURRENT_AMPLITUDE_THRESHOLD -> a
    float previousCurrent -> g
    float current -> h
    float intensity -> i
    com.badlogic.gdx.math.Vector2 firstTerminal -> j
    com.badlogic.gdx.math.Vector2 secondTerminal -> k
    com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb$BulbColor bulbColor -> f
    63:70:void initializeConfigs() -> a
    73:73:java.lang.String getBulbColor() -> P
    77:78:void setBulbColor(java.lang.String) -> a
    81:81:com.badlogic.gdx.graphics.Color getColor() -> N
    90:90:float getIntensity() -> O
    95:106:void setIntensity() -> Q
    110:114:void setCurrent(float) -> a_
    118:118:com.badlogic.gdx.math.Vector2 getT2Position() -> d
    124:124:com.badlogic.gdx.math.Vector2 getT1Position() -> c
com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb$1 -> com.mazalearn.scienceengine.domains.electromagnetism.model.ah:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb this$0 -> b
    66:66:java.lang.String getValue() -> p
    67:67:void setValue(java.lang.String) -> a
    68:68:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb$BulbColor -> com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb$BulbColor:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb$BulbColor Yellow -> a
    com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb$BulbColor Red -> b
    com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb$BulbColor Blue -> c
    com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb$BulbColor Green -> d
    com.badlogic.gdx.graphics.Color color -> color
    com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb$BulbColor[] ENUM$VALUES -> e
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb$BulbColor[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb$BulbColor valueOf(java.lang.String) -> valueOf
    34:34:com.badlogic.gdx.graphics.Color access$2(com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb$BulbColor) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet -> com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet:
    int CANONICAL_WIDTH -> f
    int CANONICAL_HEIGHT -> g
    int CANONICAL_AREA -> h
    com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$MagnetType magnetType -> i
    float maxWidth -> j
    com.mazalearn.scienceengine.core.controller.AbstractModelConfig strengthConfig -> k
    float maxHeight -> l
    boolean $assertionsDisabled -> a
    60:80:void initializeConfigs() -> a
    85:88:void reset() -> a_
    95:103:void setStrength(float) -> h
    106:106:float getMaxWidth() -> d
    110:113:void setMaxWidth(float) -> j
    116:116:java.lang.String getMagnetType() -> c
    120:124:void setMagnetType(java.lang.String) -> a
    136:141:com.badlogic.gdx.math.Vector2 getBFieldRelative(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> c
    37:37:com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$MagnetType access$0(com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$1 -> com.mazalearn.scienceengine.domains.electromagnetism.model.ai:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet this$0 -> b
    63:63:java.lang.Float getValue() -> p
    64:64:void setValue(java.lang.Float) -> a
    65:65:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$2 -> com.mazalearn.scienceengine.domains.electromagnetism.model.aj:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet this$0 -> b
    70:70:java.lang.Float getValue() -> p
    71:71:void setValue$335ca104() -> q
    72:72:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$3 -> com.mazalearn.scienceengine.domains.electromagnetism.model.ak:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet this$0 -> b
    76:76:java.lang.String getValue() -> p
    77:77:void setValue(java.lang.String) -> a
    78:78:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$MagnetType -> com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$MagnetType:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$MagnetType Ferrite -> a
    com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$MagnetType Smco -> b
    com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$MagnetType Neodymium -> c
    float OUTPUT_SCALE -> d
    float costPerLb -> costPerLb
    float bhMax -> bhMax
    com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$MagnetType[] ENUM$VALUES -> e
    28:28:float getStrength(float) -> a
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$MagnetType[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$MagnetType valueOf(java.lang.String) -> valueOf
    24:24:float access$2(com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$MagnetType) -> a
    27:27:float access$3(com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet$MagnetType,float) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField -> com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField:
    float MAX_STRENGTH -> a
    com.badlogic.gdx.math.Vector3 field3 -> f
    com.badlogic.gdx.math.Vector2 field2 -> g
    com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField$Phi phi -> h
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$electromagnetism$model$MagneticField$Phi -> i
    31:50:void initializeConfigs() -> a
    53:53:float getStrength() -> N
    57:57:float getAngle() -> h
    62:62:com.badlogic.gdx.math.Vector3 getBField(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector3) -> a
    66:73:void setTheta(java.lang.Float) -> a
    76:78:float getTheta() -> c
    82:100:void setPhi(java.lang.String) -> a
    103:103:java.lang.String getPhi() -> d
    21:21:com.badlogic.gdx.math.Vector3 access$0(com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField) -> a
    23:23:com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField$Phi access$1(com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField) -> b
    16:16:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$electromagnetism$model$MagneticField$Phi() -> O
com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField$1 -> com.mazalearn.scienceengine.domains.electromagnetism.model.al:
    com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField this$0 -> b
    34:34:java.lang.Float getValue() -> p
    35:35:void setValue(java.lang.Float) -> a
    36:36:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField$2 -> com.mazalearn.scienceengine.domains.electromagnetism.model.am:
    com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField this$0 -> b
    40:40:java.lang.String getValue() -> p
    41:41:void setValue(java.lang.String) -> a
    42:42:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField$3 -> com.mazalearn.scienceengine.domains.electromagnetism.model.an:
    com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField this$0 -> b
    46:46:java.lang.Float getValue() -> p
    47:47:void setValue(java.lang.Float) -> a
    48:48:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField$Phi -> com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField$Phi:
    com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField$Phi XYPlane -> a
    com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField$Phi Up -> b
    com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField$Phi Down -> c
    com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField$Phi[] ENUM$VALUES -> d
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField$Phi[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.MagneticField$Phi valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole -> com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole:
    float MAX_STRENGTH -> a
    com.badlogic.gdx.math.Vector3 fieldVector -> f
    com.badlogic.gdx.math.Vector2 force -> g
    float strength -> h
    com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole$MonopoleType monopoleType -> i
    49:62:void initializeConfigs() -> a
    65:65:float getStrength() -> d
    69:70:void setStrength(float) -> h
    73:73:com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole$MonopoleType getPoleType() -> N
    78:80:void reset() -> a_
    83:90:void singleStep(float) -> g
    94:95:void setBField(com.badlogic.gdx.math.Vector3) -> a
    99:100:void notifyFieldChange() -> c
    31:31:com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole$MonopoleType access$0(com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole) -> a
    31:31:void access$1(com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole,com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole$MonopoleType) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole$1 -> com.mazalearn.scienceengine.domains.electromagnetism.model.ao:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole this$0 -> b
    52:52:java.lang.String getValue() -> p
    53:53:void setValue(java.lang.String) -> a
    54:54:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole$2 -> com.mazalearn.scienceengine.domains.electromagnetism.model.ap:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole this$0 -> b
    58:58:java.lang.Float getValue() -> p
    59:59:void setValue(java.lang.Float) -> a
    60:60:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole$MonopoleType -> com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole$MonopoleType:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole$MonopoleType NorthPole -> a
    com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole$MonopoleType SouthPole -> b
    com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole$MonopoleType[] ENUM$VALUES -> c
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole$MonopoleType[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole$MonopoleType valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter -> com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter CurrentType -> a
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter CurrentFrequency -> b
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter MaxCurrent -> c
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter CurrentDirection -> d
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter MagnetStrength -> e
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter MovementMode -> f
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter CommutatorType -> g
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter CoilLoops -> h
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter Flip -> i
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter RotationDataType -> j
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter RotationData -> k
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter Count -> l
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter Current -> m
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter RotationVelocity -> n
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter MagnetType -> o
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter Cost -> p
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter AreaOrientation -> q
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter Width -> r
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter Color -> s
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter MonopoleType -> t
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter FieldStrength -> u
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter FieldAngle -> v
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter FieldUpDown -> w
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter ChargeStrength -> x
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter SampleMode -> y
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter Velocity -> z
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter Radius -> A
    com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter[] ENUM$VALUES -> B
    38:38:java.lang.String toString() -> toString
    42:47:com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter valueOf(com.mazalearn.scienceengine.core.model.IComponentType) -> a
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.model.Parameter valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.electromagnetism.model.PickupCoil -> com.mazalearn.scienceengine.domains.electromagnetism.model.aq:
    boolean DEBUG_CALIBRATION -> f
    float MIN_PICKUP_LOOP_RADIUS -> g
    int NUM_SAMPLE_POINTS -> h
    float TOLERANCE -> i
    float averageBx -> j
    float flux -> k
    float emf -> l
    float biggestAbsEmf -> m
    com.badlogic.gdx.math.Vector2[] samplePoints -> n
    float calibrationEmf -> o
    com.badlogic.gdx.math.Vector3 sampleBField -> p
    int numberOfLoops -> q
    float wireWidth -> r
    float current -> s
    float radius -> t
    com.badlogic.gdx.math.Vector2 firstTerminal -> u
    com.badlogic.gdx.math.Vector2 secondTerminal -> v
    boolean $assertionsDisabled -> a
    103:117:void initializeConfigs() -> a
    125:125:com.badlogic.gdx.math.Vector2[] getSamplePoints() -> O
    139:145:void setCalibrationEmf(float) -> i
    148:148:double getCalibrationEmf() -> P
    159:178:void createSamplePoints() -> Q
    188:219:void singleStep(float) -> g
    235:272:void calibrateEmf() -> R
    280:299:float getSumBx() -> S
    316:318:float getEffectiveLoopArea() -> T
    329:330:void setNumberOfLoops(float) -> h
    338:338:float getNumberOfLoops() -> N
    342:346:void setCurrent(float) -> j
    352:352:float getCurrent() -> b
    357:357:com.badlogic.gdx.math.Vector2 getT1Position() -> c
    363:363:com.badlogic.gdx.math.Vector2 getT2Position() -> d
    341:341:void access$0(com.mazalearn.scienceengine.domains.electromagnetism.model.PickupCoil,float) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.PickupCoil$1 -> com.mazalearn.scienceengine.domains.electromagnetism.model.ar:
    com.mazalearn.scienceengine.domains.electromagnetism.model.PickupCoil this$0 -> b
    106:106:java.lang.Float getValue() -> p
    107:107:void setValue(java.lang.Float) -> a
    108:108:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.PickupCoil$2 -> com.mazalearn.scienceengine.domains.electromagnetism.model.as:
    com.mazalearn.scienceengine.domains.electromagnetism.model.PickupCoil this$0 -> b
    112:112:java.lang.Float getValue() -> p
    113:113:void setValue(java.lang.Float) -> a
    114:114:boolean isMeter() -> a
    115:115:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.electromagnetism.model.Wire -> com.mazalearn.scienceengine.domains.electromagnetism.model.at:
    int OUTPUT_SCALE -> a
    float radius -> f
    float current -> g
    com.badlogic.gdx.math.Vector2 forceVector -> h
    com.badlogic.gdx.math.Vector3 bField -> i
    com.badlogic.gdx.math.Vector2 firstTerminal -> j
    com.badlogic.gdx.math.Vector2 secondTerminal -> k
    50:54:void setCurrent(float) -> a_
    61:61:float getCurrent() -> N
    66:72:com.badlogic.gdx.math.Vector3 getBField(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector3) -> a
    80:83:void singleStep(float) -> g
    86:86:com.badlogic.gdx.math.Vector2 getBForce() -> O
    91:91:com.badlogic.gdx.math.Vector2 getT1Position() -> c
    96:96:com.badlogic.gdx.math.Vector2 getT2Position() -> d
com.mazalearn.scienceengine.domains.electromagnetism.tutor.AbstractFieldProber -> com.mazalearn.scienceengine.domains.electromagnetism.tutor.a:
    com.badlogic.gdx.math.Vector2 modelPos -> t
    com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter fieldMeter -> a
    com.mazalearn.scienceengine.core.view.Science2DActor fieldMeterActor -> b
    int netSuccesses -> u
    32:37:void createFieldMeterSamples(com.badlogic.gdx.math.Vector2[],com.badlogic.gdx.math.Vector3[]) -> a
    40:42:void getBField(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector3) -> a
    46:63:void systemReadyToFinish(boolean) -> a
    67:69:void prepareToTeach(com.mazalearn.scienceengine.tutor.ITutor) -> a
com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldDirectionProber -> com.mazalearn.scienceengine.domains.electromagnetism.tutor.b:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> t
    com.badlogic.gdx.scenes.scene2d.ui.Image userField -> u
    com.badlogic.gdx.math.Vector2[] points -> v
    com.badlogic.gdx.math.Vector2 bField2 -> w
    com.badlogic.gdx.math.Vector3[] bFields -> x
    90:92:void prepareToTeach(com.mazalearn.scienceengine.tutor.ITutor) -> a
    96:107:void teach() -> a
    23:23:com.badlogic.gdx.scenes.scene2d.ui.Image access$0(com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldDirectionProber) -> a
    23:23:com.badlogic.gdx.scenes.scene2d.ui.Image access$1(com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldDirectionProber) -> b
    25:25:com.badlogic.gdx.math.Vector2 access$2(com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldDirectionProber) -> c
    26:26:com.badlogic.gdx.math.Vector3[] access$3(com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldDirectionProber) -> d
com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldDirectionProber$1 -> com.mazalearn.scienceengine.domains.electromagnetism.tutor.c:
    com.badlogic.gdx.math.Vector2 lastTouch -> a
    com.badlogic.gdx.math.Vector2 currentTouch -> b
    com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldDirectionProber this$0 -> c
    49:53:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    58:61:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    65:82:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    45:45:com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldDirectionProber access$0(com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldDirectionProber$1) -> a
com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldDirectionProber$1$1 -> com.mazalearn.scienceengine.domains.electromagnetism.tutor.d:
    com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldDirectionProber$1 this$1 -> b
    boolean val$success -> c
    73:79:boolean act(float) -> a
com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldMagnitudeProber -> com.mazalearn.scienceengine.domains.electromagnetism.tutor.e:
    com.badlogic.gdx.scenes.scene2d.ui.Image imageCorrect -> t
    com.badlogic.gdx.scenes.scene2d.ui.Image imageWrong -> u
    com.badlogic.gdx.math.Vector2[] points -> v
    com.badlogic.gdx.math.Vector3[] bFields -> w
    75:78:void prepareToTeach(com.mazalearn.scienceengine.tutor.ITutor) -> a
    82:108:void teach() -> a
    111:113:boolean haveSimilarMagnitudes(float,float) -> a
    117:120:boolean arePointsAcceptable(com.badlogic.gdx.math.Vector2[],com.badlogic.gdx.math.Vector3[]) -> b
    52:52:com.badlogic.gdx.scenes.scene2d.ui.Image access$0(com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldMagnitudeProber) -> a
    52:52:com.badlogic.gdx.scenes.scene2d.ui.Image access$1(com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldMagnitudeProber) -> b
com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldMagnitudeProber$ClickResult -> com.mazalearn.scienceengine.domains.electromagnetism.tutor.f:
    boolean success -> b
    com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldMagnitudeProber this$0 -> a
    31:49:void doCommand() -> a
    23:23:boolean access$0(com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldMagnitudeProber$ClickResult) -> a
    22:22:com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldMagnitudeProber access$2(com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldMagnitudeProber$ClickResult) -> b
com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldMagnitudeProber$ClickResult$1 -> com.mazalearn.scienceengine.domains.electromagnetism.tutor.g:
    com.mazalearn.scienceengine.domains.electromagnetism.tutor.FieldMagnitudeProber$ClickResult this$1 -> b
    39:45:boolean act(float) -> a
com.mazalearn.scienceengine.domains.electromagnetism.tutor.LightProber -> com.mazalearn.scienceengine.domains.electromagnetism.tutor.h:
    com.badlogic.gdx.math.Vector2[] points -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> b
    com.mazalearn.scienceengine.domains.electromagnetism.view.LightbulbActor lightbulbActor -> t
    37:42:void act(float) -> act
    46:52:void teach() -> a
com.mazalearn.scienceengine.domains.electromagnetism.tutor.TutorType -> com.mazalearn.scienceengine.domains.electromagnetism.tutor.TutorType:
    com.mazalearn.scienceengine.domains.electromagnetism.tutor.TutorType FieldMagnitudeProber -> a
    com.mazalearn.scienceengine.domains.electromagnetism.tutor.TutorType FieldDirectionProber -> b
    com.mazalearn.scienceengine.domains.electromagnetism.tutor.TutorType LightProber -> c
    com.badlogic.gdx.graphics.Color color -> color
    int successPoints -> successPoints
    int failurePoints -> failurePoints
    com.mazalearn.scienceengine.domains.electromagnetism.tutor.TutorType[] ENUM$VALUES -> d
    22:22:com.badlogic.gdx.graphics.Color getColor() -> a
    26:26:java.lang.String getLocalizedName() -> b
    31:31:int getSuccessPoints() -> c
    36:36:int getFailurePoints() -> d
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.tutor.TutorType[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.electromagnetism.tutor.TutorType valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.electromagnetism.view.AmmeterActor -> com.mazalearn.scienceengine.domains.electromagnetism.a.a:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Ammeter ammeter -> a
    com.badlogic.gdx.graphics.glutils.ShapeRenderer shapeRenderer -> i
    25:44:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.mazalearn.scienceengine.domains.electromagnetism.view.BarMagnetActor -> com.mazalearn.scienceengine.domains.electromagnetism.a.b:
    com.mazalearn.scienceengine.domains.electromagnetism.model.BarMagnet barMagnet -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> i
    com.badlogic.gdx.math.Vector2 newPos -> j
    28:36:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    39:46:void drawRpm(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
com.mazalearn.scienceengine.domains.electromagnetism.view.ChargeActor -> com.mazalearn.scienceengine.domains.electromagnetism.a.c:
    float SCALE -> a
    com.mazalearn.scienceengine.domains.electromagnetism.model.Charge charge -> k
    com.badlogic.gdx.math.Vector2 lastTouch -> i
    com.badlogic.gdx.math.Vector2 currentTouch -> j
    com.badlogic.gdx.graphics.g2d.TextureRegion textureNegative -> l
    com.badlogic.gdx.graphics.g2d.TextureRegion texturePositive -> m
    43:51:void act(float) -> act
    55:58:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    16:16:com.mazalearn.scienceengine.domains.electromagnetism.model.Charge access$0(com.mazalearn.scienceengine.domains.electromagnetism.view.ChargeActor) -> a
com.mazalearn.scienceengine.domains.electromagnetism.view.ChargeActor$1 -> com.mazalearn.scienceengine.domains.electromagnetism.a.d:
    com.mazalearn.scienceengine.domains.electromagnetism.view.ChargeActor this$0 -> a
    28:29:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    35:37:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.mazalearn.scienceengine.domains.electromagnetism.view.CircuitActor -> com.mazalearn.scienceengine.domains.electromagnetism.a.e:
    java.lang.String COMPONENT_TYPE -> a
    int WIRE_WIDTH -> b
    java.util.List circuit -> c
    com.badlogic.gdx.graphics.glutils.ShapeRenderer shapeRenderer -> d
    com.badlogic.gdx.math.Vector2 delta -> e
    31:51:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    54:76:void drawConnection(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> a
com.mazalearn.scienceengine.domains.electromagnetism.view.CurrentCoilActor -> com.mazalearn.scienceengine.domains.electromagnetism.a.f:
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentCoil currentCoil -> i
    com.badlogic.gdx.graphics.g2d.TextureRegion commutatorNone -> j
    com.badlogic.gdx.graphics.g2d.TextureRegion commutatorAc -> k
    com.badlogic.gdx.graphics.g2d.TextureRegion commutatorDc -> l
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> m
    com.badlogic.gdx.math.Vector2 newPos -> n
    int NUM_FRAMES -> o
    int[] rotationAngles -> p
    com.badlogic.gdx.graphics.g2d.TextureRegion[] rotationFrames -> a
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$electromagnetism$model$CurrentCoil$CommutatorType -> q
    56:56:int getRotationForceScaler() -> j
    62:95:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    98:105:void drawRotationData(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> a
    15:15:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$electromagnetism$model$CurrentCoil$CommutatorType() -> a
com.mazalearn.scienceengine.domains.electromagnetism.view.CurrentSourceActor -> com.mazalearn.scienceengine.domains.electromagnetism.a.g:
    com.badlogic.gdx.graphics.g2d.TextureRegion current -> a
    com.mazalearn.scienceengine.domains.electromagnetism.model.CurrentSource currentSource -> i
    22:25:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    28:34:void drawCurrent(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float) -> a
com.mazalearn.scienceengine.domains.electromagnetism.view.DynamoActor -> com.mazalearn.scienceengine.domains.electromagnetism.a.h:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Dynamo dynamo -> i
    int NUM_FRAMES -> j
    float COIL_OFFSET_PERCENT -> k
    com.badlogic.gdx.graphics.g2d.TextureRegion[] rotationFrames -> a
    35:40:void act(float) -> act
    44:64:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.mazalearn.scienceengine.domains.electromagnetism.view.ElectromagnetActor -> com.mazalearn.scienceengine.domains.electromagnetism.a.i:
    com.badlogic.gdx.graphics.g2d.TextureRegion coil -> a
    float COIL_WIDTH -> i
    com.mazalearn.scienceengine.domains.electromagnetism.model.ElectroMagnet electromagnet -> j
    29:40:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    45:45:float getWidth() -> getWidth
    49:50:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    56:61:void showHelp(com.badlogic.gdx.scenes.scene2d.Stage,boolean) -> a
com.mazalearn.scienceengine.domains.electromagnetism.view.FieldMeterActor -> com.mazalearn.scienceengine.domains.electromagnetism.a.j:
    com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter fieldMeter -> a
    com.badlogic.gdx.math.Vector2 pos -> i
    com.badlogic.gdx.graphics.glutils.ShapeRenderer shapeRenderer -> j
    56:58:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    63:70:void showHelp(com.badlogic.gdx.scenes.scene2d.Stage,boolean) -> a
    74:133:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    28:28:com.mazalearn.scienceengine.domains.electromagnetism.model.FieldMeter access$0(com.mazalearn.scienceengine.domains.electromagnetism.view.FieldMeterActor) -> a
    29:29:com.badlogic.gdx.math.Vector2 access$1(com.mazalearn.scienceengine.domains.electromagnetism.view.FieldMeterActor) -> b
com.mazalearn.scienceengine.domains.electromagnetism.view.FieldMeterActor$1 -> com.mazalearn.scienceengine.domains.electromagnetism.a.k:
    com.mazalearn.scienceengine.domains.electromagnetism.view.FieldMeterActor this$0 -> a
    42:49:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.mazalearn.scienceengine.domains.electromagnetism.view.LightbulbActor -> com.mazalearn.scienceengine.domains.electromagnetism.a.l:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Lightbulb lightbulb -> a
    com.badlogic.gdx.graphics.g2d.TextureRegion LIGHT_TEXTURE -> i
    float lightRadius -> j
    com.badlogic.gdx.math.Vector2 point -> k
    26:33:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    39:44:void drawLight(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,com.badlogic.gdx.graphics.Color,float,float) -> a
    47:52:com.badlogic.gdx.graphics.g2d.TextureRegion createLightTexture() -> a
    56:57:boolean withinLightRegion(float,float) -> a
com.mazalearn.scienceengine.domains.electromagnetism.view.MagnetActor -> com.mazalearn.scienceengine.domains.electromagnetism.a.m:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Magnet magnet -> a
    com.badlogic.gdx.graphics.g2d.TextureRegion ferrite -> i
    com.badlogic.gdx.graphics.g2d.TextureRegion smco -> j
    com.badlogic.gdx.graphics.g2d.TextureRegion neodymium -> k
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$electromagnetism$model$Magnet$MagnetType -> l
    26:32:void act(float) -> act
    36:44:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    12:12:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$electromagnetism$model$Magnet$MagnetType() -> a
com.mazalearn.scienceengine.domains.electromagnetism.view.MonopoleActor -> com.mazalearn.scienceengine.domains.electromagnetism.a.n:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Monopole monopole -> a
    com.badlogic.gdx.graphics.g2d.TextureRegion textureSouthPole -> i
    com.badlogic.gdx.graphics.g2d.TextureRegion textureNorthPole -> j
    26:34:void act(float) -> act
    38:41:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.mazalearn.scienceengine.domains.electromagnetism.view.PickupCoilActor -> com.mazalearn.scienceengine.domains.electromagnetism.a.o:
    com.badlogic.gdx.graphics.g2d.TextureRegion coil -> a
    int COIL_OFFSET -> i
    com.mazalearn.scienceengine.domains.electromagnetism.model.PickupCoil pickupCoil -> j
    24:30:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    33:34:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    41:41:void showHelp(com.badlogic.gdx.scenes.scene2d.Stage,boolean) -> a
com.mazalearn.scienceengine.domains.electromagnetism.view.WireActor -> com.mazalearn.scienceengine.domains.electromagnetism.a.p:
    com.mazalearn.scienceengine.domains.electromagnetism.model.Wire currentWire -> a
    com.badlogic.gdx.graphics.g2d.TextureRegion currentWireDown -> i
    com.badlogic.gdx.graphics.g2d.TextureRegion currentWireUp -> j
    24:27:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.mazalearn.scienceengine.domains.mechanics.model.ComponentType -> com.mazalearn.scienceengine.domains.mechanics.model.ComponentType:
    com.mazalearn.scienceengine.domains.mechanics.model.ComponentType SimpleBody -> a
    java.lang.String textureName -> textureName
    com.mazalearn.scienceengine.domains.mechanics.model.ComponentType[] ENUM$VALUES -> b
    16:16:java.lang.String getTextureName() -> a
    20:20:java.lang.String getLocalizedName() -> b
    24:29:com.mazalearn.scienceengine.domains.mechanics.model.ComponentType valueOf(com.mazalearn.scienceengine.core.model.IComponentType) -> a
    1:1:com.mazalearn.scienceengine.domains.mechanics.model.ComponentType[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.mechanics.model.ComponentType valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.mechanics.model.Parameter -> com.mazalearn.scienceengine.domains.mechanics.model.Parameter:
    com.mazalearn.scienceengine.domains.mechanics.model.Parameter MonopoleType -> a
    com.mazalearn.scienceengine.domains.mechanics.model.Parameter[] ENUM$VALUES -> b
    14:14:java.lang.String toString() -> toString
    18:23:com.mazalearn.scienceengine.domains.mechanics.model.Parameter valueOf(com.mazalearn.scienceengine.core.model.IComponentType) -> a
    1:1:com.mazalearn.scienceengine.domains.mechanics.model.Parameter[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.mechanics.model.Parameter valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.mechanics.model.SimpleBody -> com.mazalearn.scienceengine.domains.mechanics.model.a:
    com.badlogic.gdx.math.Vector2 force -> a
    37:39:void reset() -> a_
    43:45:void singleStep(float) -> g
    48:49:void setForce(com.badlogic.gdx.math.Vector2) -> i
com.mazalearn.scienceengine.domains.mechanics.view.SimpleBodyActor -> com.mazalearn.scienceengine.domains.mechanics.a.a:
    com.mazalearn.scienceengine.domains.mechanics.model.SimpleBody simpleBody -> j
    com.badlogic.gdx.scenes.scene2d.ui.Image forceArrow -> k
    com.badlogic.gdx.math.Vector2 lastTouch -> a
    com.badlogic.gdx.math.Vector2 currentTouch -> i
    60:68:void act(float) -> act
    72:75:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    17:17:com.badlogic.gdx.scenes.scene2d.ui.Image access$0(com.mazalearn.scienceengine.domains.mechanics.view.SimpleBodyActor) -> a
    16:16:com.mazalearn.scienceengine.domains.mechanics.model.SimpleBody access$1(com.mazalearn.scienceengine.domains.mechanics.view.SimpleBodyActor) -> b
com.mazalearn.scienceengine.domains.mechanics.view.SimpleBodyActor$1 -> com.mazalearn.scienceengine.domains.mechanics.a.b:
    com.mazalearn.scienceengine.domains.mechanics.view.SimpleBodyActor this$0 -> a
    29:30:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    35:44:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    49:54:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.mazalearn.scienceengine.domains.statesofmatter.StatesOfMatterController -> com.mazalearn.scienceengine.domains.statesofmatter.a:
    int N -> g
    com.mazalearn.scienceengine.core.model.IScience2DModel statesOfMatterModel -> h
    com.mazalearn.scienceengine.domains.statesofmatter.StatesOfMatterView statesOfMatterView -> i
    com.mazalearn.scienceengine.core.view.ModelControls modelControls -> f
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$statesofmatter$model$ComponentType -> j
    78:92:com.badlogic.gdx.scenes.scene2d.Actor createActor(java.lang.String,java.lang.String,com.mazalearn.scienceengine.core.model.Science2DBody) -> a
    17:17:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$statesofmatter$model$ComponentType() -> k
com.mazalearn.scienceengine.domains.statesofmatter.StatesOfMatterModel -> com.mazalearn.scienceengine.domains.statesofmatter.b:
    int BOX_HEIGHT -> i
    int BOX_WIDTH -> j
    int N -> h
    com.mazalearn.scienceengine.domains.statesofmatter.model.AbstractMoleculeBox moleculeBox -> k
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$statesofmatter$model$ComponentType -> l
    26:28:void simulateSteps(float) -> a
    32:33:void singleStep() -> a
    37:37:void initializeConfigs$5eadb890() -> i
    42:54:com.mazalearn.scienceengine.core.model.Science2DBody createScience2DBody(java.lang.String,float,float,float) -> b
    12:12:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$statesofmatter$model$ComponentType() -> m
com.mazalearn.scienceengine.domains.statesofmatter.StatesOfMatterView -> com.mazalearn.scienceengine.domains.statesofmatter.c:
com.mazalearn.scienceengine.domains.statesofmatter.model.AbstractMoleculeBox -> com.mazalearn.scienceengine.domains.statesofmatter.model.a:
    double WALL_STIFFNESS -> a
    double GRAVITY -> f
    double WALL_DISTANCE_THRESHOLD -> g
    double MIN_DISTANCE -> h
    double MIN_DISTANCE_SQUARED -> i
    com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$State state -> w
    double[] DAMPING -> x
    double dt -> j
    double dtOver2 -> k
    double dtSquaredOver2 -> l
    com.mazalearn.scienceengine.domains.statesofmatter.model.Molecule[] molecules -> m
    int boxWidth -> n
    int boxHeight -> o
    double temperature -> p
    int N -> q
    double ke -> r
    double pe -> s
    double energy -> t
    double simulatedTime -> u
    com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$HeatingLevel heatingLevel -> v
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$statesofmatter$model$IMoleculeBox$State -> y
    43:48:void reset() -> a_
    57:60:void reScaleDt() -> c
    63:88:void distributeMoleculesHomogeneously() -> U
    91:103:void normalizeVelocities() -> V
    106:106:com.mazalearn.scienceengine.domains.statesofmatter.model.Molecule getMolecule(int) -> b
    110:110:double getEnergy() -> d
    114:114:double getSimulatedTime() -> N
    118:119:void setHeatingLevel(com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$HeatingLevel) -> a
    122:122:double getTemperature() -> O
    126:135:void setTemperature(double) -> a
    138:138:double getGravity() -> P
    145:179:void singleStep() -> Q
    182:197:double computeElasticWallForce(com.mazalearn.scienceengine.domains.statesofmatter.model.Molecule) -> a
    double computeAccelerations() -> R
    203:203:java.lang.String getState() -> S
    207:208:void setState(java.lang.String) -> a
    211:217:void setState(com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$State) -> a
    220:220:java.lang.String getHeatingLevel() -> T
    224:225:void setHeatingLevel(java.lang.String) -> c
    229:240:void initializeConfigs() -> a
    6:6:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$statesofmatter$model$IMoleculeBox$State() -> W
com.mazalearn.scienceengine.domains.statesofmatter.model.AbstractMoleculeBox$1 -> com.mazalearn.scienceengine.domains.statesofmatter.model.b:
    com.mazalearn.scienceengine.domains.statesofmatter.model.AbstractMoleculeBox this$0 -> b
    230:230:java.lang.String getValue() -> p
    231:231:void setValue(java.lang.String) -> a
    232:232:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.statesofmatter.model.AbstractMoleculeBox$2 -> com.mazalearn.scienceengine.domains.statesofmatter.model.c:
    com.mazalearn.scienceengine.domains.statesofmatter.model.AbstractMoleculeBox this$0 -> b
    236:236:java.lang.String getValue() -> p
    237:237:void setValue(java.lang.String) -> a
    238:238:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.statesofmatter.model.Cell -> com.mazalearn.scienceengine.domains.statesofmatter.model.d:
    com.mazalearn.scienceengine.domains.statesofmatter.model.Molecule firstMolecule -> a
com.mazalearn.scienceengine.domains.statesofmatter.model.CellularLJMoleculeBox -> com.mazalearn.scienceengine.domains.statesofmatter.model.e:
    double CELL_SIZE -> B
    java.util.List neighbourCells -> C
    int nXCells -> D
    int nYCells -> E
    com.mazalearn.scienceengine.domains.statesofmatter.model.Cell[][] cells -> F
    64:66:void reset() -> a_
    75:80:double computeAccelerations() -> R
    85:89:double computeWallForces() -> U
    94:107:double computeForcesWithNeighbourCells() -> V
    112:126:double computeForcesWithinCells() -> W
    131:148:void assignMoleculesToCells() -> X
    158:179:double computeForceBetweenMolecules(com.mazalearn.scienceengine.domains.statesofmatter.model.Molecule,com.mazalearn.scienceengine.domains.statesofmatter.model.Molecule) -> a
    183:212:java.util.List createNeighbourCells() -> Y
com.mazalearn.scienceengine.domains.statesofmatter.model.ComponentType -> com.mazalearn.scienceengine.domains.statesofmatter.model.ComponentType:
    com.mazalearn.scienceengine.domains.statesofmatter.model.ComponentType MoleculeBox -> a
    com.mazalearn.scienceengine.domains.statesofmatter.model.ComponentType ColorPanel -> b
    com.mazalearn.scienceengine.domains.statesofmatter.model.ComponentType[] ENUM$VALUES -> c
    11:11:java.lang.String getLocalizedName() -> b
    15:20:com.mazalearn.scienceengine.domains.statesofmatter.model.ComponentType valueOf(com.mazalearn.scienceengine.core.model.IComponentType) -> a
    1:1:com.mazalearn.scienceengine.domains.statesofmatter.model.ComponentType[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.statesofmatter.model.ComponentType valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox -> com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox:
    void reset() -> a_
    double getSimulatedTime() -> N
    double getEnergy() -> d
    com.mazalearn.scienceengine.domains.statesofmatter.model.Molecule getMolecule(int) -> b
    double getTemperature() -> O
    void setTemperature(double) -> a
    void setHeatingLevel(com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$HeatingLevel) -> a
com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$HeatingLevel -> com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$HeatingLevel:
    com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$HeatingLevel Neutral -> a
    com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$HeatingLevel Cold -> b
    com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$HeatingLevel Hot -> c
    int level -> level
    com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$HeatingLevel[] ENUM$VALUES -> d
    32:32:int level() -> a
    1:1:com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$HeatingLevel[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$HeatingLevel valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$State -> com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$State:
    com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$State Solid -> a
    com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$State Liquid -> b
    com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$State Gas -> c
    com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$State[] ENUM$VALUES -> d
    1:1:com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$State[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox$State valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.statesofmatter.model.LJMoleculeBox -> com.mazalearn.scienceengine.domains.statesofmatter.model.f:
    double LJ_CUTOFF -> w
    double LJ_CUTOFF_SQUARED -> x
    double LJ_CUTOFF_CORRECTION -> y
    double MIN_LJ_FORCE_OVER_R -> z
    double[] DAMPING_FORCE_OVER_R -> B
    double MIN_LJ_POTENTIAL_ENERGY -> A
    26:29:double computeAccelerations() -> R
    33:65:double computeInterMolecularForces() -> U
    69:74:double computeWallForces() -> V
    85:116:double computeLJWallForce(com.mazalearn.scienceengine.domains.statesofmatter.model.Molecule) -> b
com.mazalearn.scienceengine.domains.statesofmatter.model.Molecule -> com.mazalearn.scienceengine.domains.statesofmatter.model.g:
    double x -> a
    double y -> b
    double vx -> c
    double vy -> d
    double ax -> e
    double ay -> f
    com.mazalearn.scienceengine.domains.statesofmatter.model.Molecule nextMoleculeInCell -> g
com.mazalearn.scienceengine.domains.statesofmatter.model.Parameter -> com.mazalearn.scienceengine.domains.statesofmatter.model.Parameter:
    com.mazalearn.scienceengine.domains.statesofmatter.model.Parameter StateOfMatter -> a
    com.mazalearn.scienceengine.domains.statesofmatter.model.Parameter HeatingLevel -> b
    com.mazalearn.scienceengine.domains.statesofmatter.model.Parameter[] ENUM$VALUES -> c
    15:15:java.lang.String toString() -> toString
    19:24:com.mazalearn.scienceengine.domains.statesofmatter.model.Parameter valueOf(com.mazalearn.scienceengine.core.model.IComponentType) -> a
    1:1:com.mazalearn.scienceengine.domains.statesofmatter.model.Parameter[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.statesofmatter.model.Parameter valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.statesofmatter.model.SimpleMoleculeBox -> com.mazalearn.scienceengine.domains.statesofmatter.model.h:
    double DISTANCE_CUTOFF -> x
    double DISTANCE_CUTOFF_SQUARED -> y
    double GRAVITY -> w
    15:15:double getGravity() -> P
    21:48:double computeAccelerations() -> R
com.mazalearn.scienceengine.domains.statesofmatter.view.MoleculeBoxActor -> com.mazalearn.scienceengine.domains.statesofmatter.a.a:
    com.mazalearn.scienceengine.domains.statesofmatter.model.IMoleculeBox moleculeBox -> a
    com.badlogic.gdx.graphics.Texture moleculeTextureWhite -> i
    com.badlogic.gdx.graphics.Texture moleculeTextureRed -> j
    long timeStart -> k
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> l
    com.badlogic.gdx.graphics.Texture backgroundTexture -> m
    int boxHeight -> n
    int boxWidth -> o
    int N -> p
    58:71:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
    75:83:void drawDebug(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    87:87:com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    91:94:void dispose() -> a
com.mazalearn.scienceengine.domains.waves.WaveController -> com.mazalearn.scienceengine.domains.waves.a:
    int NUM_BALLS -> f
    float ORIGIN_Y -> g
    float ORIGIN_X -> h
    com.mazalearn.scienceengine.domains.waves.WaveModel waveModel -> i
    com.badlogic.gdx.graphics.g2d.TextureRegion ballTextureRed -> j
    com.badlogic.gdx.graphics.g2d.TextureRegion ballTextureBlue -> k
    com.mazalearn.scienceengine.domains.waves.WaveView waveView -> l
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$waves$model$ComponentType -> m
    44:50:com.badlogic.gdx.graphics.g2d.TextureRegion createBallTexture(com.badlogic.gdx.graphics.Color) -> a
    57:71:com.badlogic.gdx.scenes.scene2d.Actor createActor(java.lang.String,java.lang.String,com.mazalearn.scienceengine.core.model.Science2DBody) -> a
    22:22:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$waves$model$ComponentType() -> k
com.mazalearn.scienceengine.domains.waves.WaveModel -> com.mazalearn.scienceengine.domains.waves.b:
    com.mazalearn.scienceengine.domains.waves.model.Boundary boundary -> i
    com.mazalearn.scienceengine.domains.waves.model.WaveMaker waveMaker -> j
    com.mazalearn.scienceengine.domains.waves.model.WaveBox waveBox -> k
    int numBalls -> l
    com.mazalearn.scienceengine.domains.waves.model.WaveBox$Ball[] balls -> h
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$waves$model$ComponentType -> m
    30:35:void singleStep() -> a
    39:41:void reset() -> j
    46:62:com.mazalearn.scienceengine.core.model.Science2DBody createScience2DBody(java.lang.String,float,float,float) -> b
    67:67:void initializeConfigs$5eadb890() -> i
    15:15:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$waves$model$ComponentType() -> m
com.mazalearn.scienceengine.domains.waves.WaveView -> com.mazalearn.scienceengine.domains.waves.c:
    float ORIGIN_X -> d
    com.mazalearn.scienceengine.domains.waves.view.WaveMakerActor waveMakerActor -> e
    com.mazalearn.scienceengine.domains.waves.view.BoundaryActor boundaryActor -> f
    com.mazalearn.scienceengine.domains.waves.view.WaveBoxActor waveBoxActor -> g
    com.mazalearn.scienceengine.domains.waves.WaveModel waveModel -> h
    28:33:void setBallDiameter(int) -> d
    37:43:void prepareView() -> q
com.mazalearn.scienceengine.domains.waves.model.Boundary -> com.mazalearn.scienceengine.domains.waves.model.Boundary:
    com.mazalearn.scienceengine.domains.waves.model.Boundary$BoundaryType boundaryType -> a
    18:18:java.lang.String getBoundaryType() -> c
    22:24:void setBoundaryType(java.lang.String) -> a
    28:33:void initializeConfigs() -> a
    36:36:com.mazalearn.scienceengine.domains.waves.model.Boundary$BoundaryType boundaryType() -> d
com.mazalearn.scienceengine.domains.waves.model.Boundary$1 -> com.mazalearn.scienceengine.domains.waves.model.a:
    com.mazalearn.scienceengine.domains.waves.model.Boundary this$0 -> b
    29:29:java.lang.String getValue() -> p
    30:30:void setValue(java.lang.String) -> a
    31:31:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.waves.model.Boundary$BoundaryType -> com.mazalearn.scienceengine.domains.waves.model.Boundary$BoundaryType:
    com.mazalearn.scienceengine.domains.waves.model.Boundary$BoundaryType FixedEnd -> a
    com.mazalearn.scienceengine.domains.waves.model.Boundary$BoundaryType LooseEnd -> b
    com.mazalearn.scienceengine.domains.waves.model.Boundary$BoundaryType NoEnd -> c
    com.mazalearn.scienceengine.domains.waves.model.Boundary$BoundaryType[] ENUM$VALUES -> d
    1:1:com.mazalearn.scienceengine.domains.waves.model.Boundary$BoundaryType[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.waves.model.Boundary$BoundaryType valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.waves.model.ComponentType -> com.mazalearn.scienceengine.domains.waves.model.ComponentType:
    com.mazalearn.scienceengine.domains.waves.model.ComponentType WaveBox -> a
    com.mazalearn.scienceengine.domains.waves.model.ComponentType Boundary -> b
    com.mazalearn.scienceengine.domains.waves.model.ComponentType WaveMaker -> c
    com.mazalearn.scienceengine.domains.waves.model.ComponentType[] ENUM$VALUES -> d
    12:12:java.lang.String getLocalizedName() -> b
    16:21:com.mazalearn.scienceengine.domains.waves.model.ComponentType valueOf(com.mazalearn.scienceengine.core.model.IComponentType) -> a
    1:1:com.mazalearn.scienceengine.domains.waves.model.ComponentType[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.waves.model.ComponentType valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.waves.model.Parameter -> com.mazalearn.scienceengine.domains.waves.model.Parameter:
    com.mazalearn.scienceengine.domains.waves.model.Parameter Amplitude -> a
    com.mazalearn.scienceengine.domains.waves.model.Parameter Frequency -> b
    com.mazalearn.scienceengine.domains.waves.model.Parameter Damping -> c
    com.mazalearn.scienceengine.domains.waves.model.Parameter GenMode -> d
    com.mazalearn.scienceengine.domains.waves.model.Parameter PulseWidth -> e
    com.mazalearn.scienceengine.domains.waves.model.Parameter Tension -> f
    com.mazalearn.scienceengine.domains.waves.model.Parameter BoundaryType -> g
    com.mazalearn.scienceengine.domains.waves.model.Parameter[] ENUM$VALUES -> h
    20:20:java.lang.String toString() -> toString
    24:29:com.mazalearn.scienceengine.domains.waves.model.Parameter valueOf(com.mazalearn.scienceengine.core.model.IComponentType) -> a
    1:1:com.mazalearn.scienceengine.domains.waves.model.Parameter[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.waves.model.Parameter valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.waves.model.WaveBox -> com.mazalearn.scienceengine.domains.waves.model.b:
    float MASS -> g
    float WAVE_SPEED -> h
    float ALPHA_SQUARE -> i
    int numBalls -> j
    float BALL_DIAMETER -> a
    com.mazalearn.scienceengine.domains.waves.model.WaveBox$Ball[] balls -> f
    float tension -> k
    float beta -> l
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$waves$model$Boundary$BoundaryType -> m
    52:85:void singleStep(com.mazalearn.scienceengine.domains.waves.model.Boundary$BoundaryType) -> a
    89:93:void reset() -> a_
    96:96:float getTension() -> c
    100:101:void setTension(float) -> h
    104:104:float getDamping() -> d
    108:109:void setDamping(float) -> i
    113:124:void initializeConfigs() -> a
    8:8:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$waves$model$Boundary$BoundaryType() -> N
com.mazalearn.scienceengine.domains.waves.model.WaveBox$1 -> com.mazalearn.scienceengine.domains.waves.model.c:
    com.mazalearn.scienceengine.domains.waves.model.WaveBox this$0 -> b
    114:114:java.lang.Float getValue() -> p
    115:115:void setValue(java.lang.Float) -> a
    116:116:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.waves.model.WaveBox$2 -> com.mazalearn.scienceengine.domains.waves.model.d:
    com.mazalearn.scienceengine.domains.waves.model.WaveBox this$0 -> b
    120:120:java.lang.Float getValue() -> p
    121:121:void setValue(java.lang.Float) -> a
    122:122:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.waves.model.WaveBox$Ball -> com.mazalearn.scienceengine.domains.waves.model.e:
    com.badlogic.gdx.math.Vector2 pos -> a
    float nextY -> b
    float previousY -> c
com.mazalearn.scienceengine.domains.waves.model.WaveMaker -> com.mazalearn.scienceengine.domains.waves.model.WaveMaker:
    com.mazalearn.scienceengine.domains.waves.model.WaveMaker$GenMode genMode -> a
    float amplitude -> f
    float frequency -> g
    float pulseWidth -> h
    long pulseStartTime -> i
    float phi -> j
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$waves$model$WaveMaker$GenMode -> k
    29:29:java.lang.String getGenMode() -> c
    33:38:void setGenMode(java.lang.String) -> a
    42:44:void reset() -> a_
    48:72:void initializeConfigs() -> a
    75:75:float getPulseWidth() -> d
    79:80:void setPulseWidth(float) -> h
    83:83:float getAmplitude() -> N
    87:88:void setAmplitude(float) -> i
    91:91:float getFrequency() -> O
    96:98:void setFrequency(float) -> j
    101:101:float sinusoid(long) -> a
    105:112:float pulse(long) -> b
    116:120:float getPos(long,float) -> a
    12:12:com.mazalearn.scienceengine.domains.waves.model.WaveMaker$GenMode access$0(com.mazalearn.scienceengine.domains.waves.model.WaveMaker) -> a
    8:8:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$domains$waves$model$WaveMaker$GenMode() -> P
com.mazalearn.scienceengine.domains.waves.model.WaveMaker$1 -> com.mazalearn.scienceengine.domains.waves.model.f:
    com.mazalearn.scienceengine.domains.waves.model.WaveMaker this$0 -> b
    49:49:java.lang.String getValue() -> p
    50:50:void setValue(java.lang.String) -> a
    51:51:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.waves.model.WaveMaker$2 -> com.mazalearn.scienceengine.domains.waves.model.g:
    com.mazalearn.scienceengine.domains.waves.model.WaveMaker this$0 -> b
    55:55:java.lang.Float getValue() -> p
    56:56:void setValue(java.lang.Float) -> a
    57:57:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.waves.model.WaveMaker$3 -> com.mazalearn.scienceengine.domains.waves.model.h:
    com.mazalearn.scienceengine.domains.waves.model.WaveMaker this$0 -> b
    61:61:java.lang.Float getValue() -> p
    62:62:void setValue(java.lang.Float) -> a
    63:63:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.waves.model.WaveMaker$4 -> com.mazalearn.scienceengine.domains.waves.model.i:
    com.mazalearn.scienceengine.domains.waves.model.WaveMaker this$0 -> b
    67:67:java.lang.Float getValue() -> p
    68:68:void setValue(java.lang.Float) -> a
    69:69:boolean isPossible() -> h
    1:1:java.lang.Object getValue() -> g
    1:1:void setValue(java.lang.Object) -> a
com.mazalearn.scienceengine.domains.waves.model.WaveMaker$GenMode -> com.mazalearn.scienceengine.domains.waves.model.WaveMaker$GenMode:
    com.mazalearn.scienceengine.domains.waves.model.WaveMaker$GenMode Oscillate -> a
    com.mazalearn.scienceengine.domains.waves.model.WaveMaker$GenMode Pulse -> b
    com.mazalearn.scienceengine.domains.waves.model.WaveMaker$GenMode Manual -> c
    com.mazalearn.scienceengine.domains.waves.model.WaveMaker$GenMode[] ENUM$VALUES -> d
    1:1:com.mazalearn.scienceengine.domains.waves.model.WaveMaker$GenMode[] values() -> values
    1:1:com.mazalearn.scienceengine.domains.waves.model.WaveMaker$GenMode valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.domains.waves.view.BoundaryActor -> com.mazalearn.scienceengine.domains.waves.a.a:
    com.mazalearn.scienceengine.domains.waves.model.WaveBox$Ball ball -> a
    float originY -> i
    int ballDiameter -> j
    com.mazalearn.scienceengine.domains.waves.view.WaveBoxActor waveBoxActor -> k
    22:24:void act(float) -> act
    27:29:void setBallDiameter(int) -> a
    32:33:void setWaveBox(com.mazalearn.scienceengine.domains.waves.view.WaveBoxActor) -> a
com.mazalearn.scienceengine.domains.waves.view.WaveBoxActor -> com.mazalearn.scienceengine.domains.waves.a.b:
    com.badlogic.gdx.graphics.g2d.TextureRegion ballTextureRed -> a
    com.badlogic.gdx.graphics.g2d.TextureRegion ballTextureBlue -> i
    float originX -> j
    float originY -> k
    int ballDiameter -> l
    com.mazalearn.scienceengine.domains.waves.WaveView waveView -> m
    com.mazalearn.scienceengine.domains.waves.model.WaveBox waveBox -> n
    37:42:void setWidth(float) -> setWidth
    45:45:int getBallDiameter() -> a
    51:58:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.mazalearn.scienceengine.domains.waves.view.WaveMakerActor -> com.mazalearn.scienceengine.domains.waves.a.c:
    com.mazalearn.scienceengine.domains.waves.model.WaveBox$Ball ball -> k
    float lastTouchedY -> a
    float originX -> i
    float originY -> j
    int ballDiameter -> l
    40:41:void act(float) -> act
    44:45:void setBallDiameter(int) -> a
    13:13:int access$0(com.mazalearn.scienceengine.domains.waves.view.WaveMakerActor) -> a
com.mazalearn.scienceengine.domains.waves.view.WaveMakerActor$1 -> com.mazalearn.scienceengine.domains.waves.a.d:
    com.mazalearn.scienceengine.domains.waves.view.WaveMakerActor this$0 -> a
    com.mazalearn.scienceengine.domains.waves.model.WaveBox$Ball val$ball -> b
    26:27:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    32:33:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
com.mazalearn.scienceengine.tutor.AbstractScience2DProber -> com.mazalearn.scienceengine.tutor.a:
    float TOLERANCE -> c
    float ZERO_TOLERANCE -> d
    com.badlogic.gdx.math.Vector2 localPoint -> a
    32:33:boolean areTooClose(com.badlogic.gdx.math.Vector2[]) -> b
    39:67:boolean isInsideExcludedActor(com.badlogic.gdx.math.Vector2,java.util.List) -> a
    74:89:void generateProbePoints(com.badlogic.gdx.math.Vector2[]) -> a
    92:92:boolean approxEquals(float,float) -> a
com.mazalearn.scienceengine.tutor.AbstractTutor -> com.mazalearn.scienceengine.tutor.b:
    com.badlogic.gdx.utils.Array components -> e
    com.badlogic.gdx.utils.Array configs -> f
    java.lang.String[] hints -> a
    java.lang.String goal -> b
    com.mazalearn.scienceengine.core.controller.IScience2DController science2DController -> g
    com.mazalearn.scienceengine.tutor.ITutor parent -> h
    com.mazalearn.scienceengine.tutor.TutorHelper tutorHelper -> i
    com.mazalearn.scienceengine.tutor.ITutor$ITutorType tutorType -> c
    java.lang.String id -> d
    boolean success -> j
    float[] stats -> k
    com.mazalearn.scienceengine.tutor.ITutor$State state -> l
    int successPoints -> t
    int failurePoints -> u
    java.lang.String[] explanation -> v
    java.lang.String[] refs -> w
    int hintCounter -> x
    81:81:java.lang.String makeGlobalId(com.mazalearn.scienceengine.Topic,java.lang.String) -> a
    86:96:void systemReadyToFinish(boolean) -> a
    100:100:java.lang.String[] getExplanation() -> b
    108:108:boolean isSuccess() -> c
    113:113:java.lang.String getGoal() -> d
    117:117:java.lang.String getId() -> e
    122:130:void userReadyToFinish() -> f
    134:147:void finish() -> g
    151:153:void abort() -> h
    158:161:void recordStats() -> i
    165:165:float[] getStats() -> j
    169:170:void setSuccessPoints(int) -> a
    174:183:void teach() -> a
    187:187:com.mazalearn.scienceengine.tutor.ITutor getParentTutor() -> k
    192:207:void prepareToTeach(com.mazalearn.scienceengine.tutor.ITutor) -> a
    210:217:void prepareStage() -> l
    221:223:java.lang.String getHint() -> m
    228:228:int getSuccessPoints() -> n
    232:232:int getFailurePoints() -> o
    237:237:void checkProgress() -> p
    241:241:com.mazalearn.scienceengine.tutor.ITutor$ITutorType getType() -> q
    246:246:java.util.List getChildTutors() -> r
    251:252:void addTimeSpent(float) -> a
    256:256:com.mazalearn.scienceengine.tutor.ITutor$State getState() -> s
    261:262:void setParentTutor(com.mazalearn.scienceengine.tutor.ITutor) -> b
    266:266:java.lang.String[] getRefs() -> t
    271:271:java.lang.String getProgressText() -> u
com.mazalearn.scienceengine.tutor.Abstractor -> com.mazalearn.scienceengine.tutor.c:
    com.badlogic.gdx.math.Vector2[] points -> a
    com.badlogic.gdx.scenes.scene2d.ui.Table configTable -> b
    com.mazalearn.scienceengine.core.view.ModelControls modelControls -> c
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> d
    java.util.Map correctParameters -> t
    com.badlogic.gdx.scenes.scene2d.ui.Image[] life -> u
    int numLivesLeft -> v
    com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable increase -> w
    com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable decrease -> x
    com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable noeffect -> y
    com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable question -> z
    java.util.List configList -> A
    62:77:void prepareToTeach(com.mazalearn.scienceengine.tutor.ITutor) -> a
    80:129:void createConfigTable(com.mazalearn.scienceengine.core.model.IScience2DModel,com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    178:199:com.badlogic.gdx.scenes.scene2d.ui.TextButton createSubmitButton(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    204:217:void systemReadyToFinish(boolean) -> a
    221:223:void teach() -> a
    226:227:void initialize(java.util.Map) -> a
    34:34:com.badlogic.gdx.scenes.scene2d.ui.Table access$0(com.mazalearn.scienceengine.tutor.Abstractor) -> a
    40:40:com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable access$1(com.mazalearn.scienceengine.tutor.Abstractor) -> b
    40:40:com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable access$2(com.mazalearn.scienceengine.tutor.Abstractor) -> c
    37:37:java.util.Map access$3(com.mazalearn.scienceengine.tutor.Abstractor) -> d
com.mazalearn.scienceengine.tutor.Abstractor$1 -> com.mazalearn.scienceengine.tutor.d:
    com.mazalearn.scienceengine.tutor.Abstractor this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image val$image -> b
    com.mazalearn.scienceengine.tutor.Abstractor$ChangeOptions val$changeOptions -> c
    com.badlogic.gdx.scenes.scene2d.ui.Label val$label -> d
    109:114:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.mazalearn.scienceengine.tutor.Abstractor$2 -> com.mazalearn.scienceengine.tutor.e:
    com.mazalearn.scienceengine.tutor.Abstractor this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.TextButton val$submitButton -> b
    183:196:void doCommand() -> a
com.mazalearn.scienceengine.tutor.Abstractor$ChangeOptions -> com.mazalearn.scienceengine.tutor.f:
    com.badlogic.gdx.scenes.scene2d.ui.Image img -> a
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> b
    169:174:void setImageAndLabel(com.badlogic.gdx.scenes.scene2d.ui.Image,com.badlogic.gdx.scenes.scene2d.ui.Label) -> a
    133:133:com.badlogic.gdx.scenes.scene2d.ui.Label access$0(com.mazalearn.scienceengine.tutor.Abstractor$ChangeOptions) -> a
com.mazalearn.scienceengine.tutor.Abstractor$ChangeOptions$1 -> com.mazalearn.scienceengine.tutor.g:
    com.mazalearn.scienceengine.tutor.Abstractor$ChangeOptions this$1 -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image val$opt -> b
    com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable[] val$options -> c
    com.badlogic.gdx.utils.Array val$choices -> d
    com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable val$question -> e
    com.badlogic.gdx.scenes.scene2d.ui.Button val$submitButton -> f
    142:162:void doCommand() -> a
com.mazalearn.scienceengine.tutor.ClickResult -> com.mazalearn.scienceengine.tutor.h:
    com.mazalearn.scienceengine.tutor.IDoneCallback doneCallback -> a
    int resultImage -> b
    com.badlogic.gdx.scenes.scene2d.ui.Image[] stateImages -> c
    com.mazalearn.scienceengine.tutor.ClickResult$StateMapper stateMapper -> d
    33:34:void setResult(int) -> a
    38:40:boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    45:49:void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    53:60:void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.mazalearn.scienceengine.tutor.ClickResult$StateMapper -> com.mazalearn.scienceengine.tutor.i:
    int map$2548a28(float) -> a
com.mazalearn.scienceengine.tutor.ConfigGenerator -> com.mazalearn.scienceengine.tutor.j:
    int[] $SWITCH_TABLE$com$mazalearn$scienceengine$core$controller$IModelConfig$ConfigType -> a
    12:51:void generateConfig(java.util.Collection) -> a
    8:8:int[] $SWITCH_TABLE$com$mazalearn$scienceengine$core$controller$IModelConfig$ConfigType() -> a
com.mazalearn.scienceengine.tutor.ExplanationBox -> com.mazalearn.scienceengine.tutor.k:
    int current -> a
    java.lang.String[] explanation -> b
    com.badlogic.gdx.scenes.scene2d.ui.TextButton reviseButton -> c
    boolean hasRevisionRefs -> d
    53:80:void showExplanation() -> e
    88:92:void setExplanation(java.lang.String[],boolean) -> a
    52:52:void access$0(com.mazalearn.scienceengine.tutor.ExplanationBox) -> a
com.mazalearn.scienceengine.tutor.ExplanationBox$1 -> com.mazalearn.scienceengine.tutor.l:
    com.mazalearn.scienceengine.tutor.ExplanationBox this$0 -> a
    25:27:void doCommand() -> a
com.mazalearn.scienceengine.tutor.ExplanationBox$2 -> com.mazalearn.scienceengine.tutor.m:
    com.mazalearn.scienceengine.tutor.ExplanationBox this$0 -> a
    32:34:void doCommand() -> a
com.mazalearn.scienceengine.tutor.ExplanationBox$3 -> com.mazalearn.scienceengine.tutor.n:
    com.mazalearn.scienceengine.tutor.ExplanationBox this$0 -> a
    com.mazalearn.scienceengine.tutor.TutorHelper val$tutorHelper -> b
    47:48:void doCommand() -> a
com.mazalearn.scienceengine.tutor.Guru -> com.mazalearn.scienceengine.tutor.o:
    java.lang.String ID -> a
    java.lang.String ROOT_ID -> b
    com.mazalearn.scienceengine.core.view.ModelControls modelControls -> c
    com.mazalearn.scienceengine.tutor.ConfigGenerator configGenerator -> d
    com.mazalearn.scienceengine.core.controller.IScience2DController science2DController -> e
    com.mazalearn.scienceengine.core.view.ViewControls viewControls -> f
    java.lang.String goal -> g
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> h
    com.mazalearn.scienceengine.tutor.TutorGroup rootTutor -> i
    com.mazalearn.scienceengine.tutor.ITutor activeTutor -> j
    com.mazalearn.scienceengine.tutor.TutorHelper tutorHelper -> k
    com.mazalearn.scienceengine.tutor.ITutor gotoTutor -> l
    67:67:com.mazalearn.scienceengine.tutor.ITutor getActiveTutor() -> w
    71:76:com.mazalearn.scienceengine.tutor.ITutor getRootTutor() -> c
    80:84:void initialize(java.util.List) -> a
    87:102:void beginTutoring() -> n
    105:112:void endTutoring() -> o
    115:116:void setActiveTutor(com.mazalearn.scienceengine.tutor.ITutor) -> c
    119:125:void setupProbeConfigs(java.util.Collection,boolean) -> a
    128:130:void checkProgress() -> p
    133:141:void goTo(com.mazalearn.scienceengine.tutor.ITutor) -> d
    144:148:void prepareTutors(com.mazalearn.scienceengine.tutor.ITutor) -> e
    151:151:com.badlogic.gdx.scenes.scene2d.ui.Skin getSkin() -> x
    155:155:com.mazalearn.scienceengine.tutor.TutorHelper getTutorHelper() -> v
    159:177:java.lang.String getLevelEndMessage(boolean) -> b
    185:185:java.lang.String getGoal() -> d
    190:204:void finish() -> g
    208:209:void recordStats() -> i
    213:213:float[] getStats() -> j
    218:229:void teach() -> a
    234:235:void prepareToTeach(com.mazalearn.scienceengine.tutor.ITutor) -> a
    239:239:void prepareStage() -> l
    243:243:java.lang.String getHint() -> m
    248:248:java.lang.String getId() -> e
    253:253:com.mazalearn.scienceengine.tutor.TutorType getType() -> y
    258:258:java.util.List getChildTutors() -> r
    263:263:com.mazalearn.scienceengine.tutor.ITutor getParentTutor() -> k
    268:268:void abort() -> h
    272:272:void addTimeSpent(float) -> a
    276:277:void systemReadyToFinish(boolean) -> a
    281:283:void userReadyToFinish() -> f
    287:287:com.mazalearn.scienceengine.tutor.ITutor$State getState() -> s
    292:292:java.lang.String[] getExplanation() -> b
    297:297:void setParentTutor(com.mazalearn.scienceengine.tutor.ITutor) -> b
    301:301:java.lang.String[] getRefs() -> t
    306:306:java.lang.String getProgressText() -> u
    1:1:com.mazalearn.scienceengine.tutor.ITutor$ITutorType getType() -> q
com.mazalearn.scienceengine.tutor.Hinter -> com.mazalearn.scienceengine.tutor.p:
    int TIME_GAP_BETWEEN_HINTS -> a
    java.lang.String hint -> b
    com.badlogic.gdx.scenes.scene2d.ui.TextButton hintBox -> c
    com.mazalearn.scienceengine.tutor.ITutor activeTutor -> d
    float lastTimeHintShown -> e
    29:34:void act(float) -> act
    37:39:void setActiveTutor(com.mazalearn.scienceengine.tutor.ITutor) -> a
    42:65:void setHint(java.lang.String) -> a
    68:68:boolean hasHint() -> b
    72:78:void clearHint() -> a
    14:14:com.badlogic.gdx.scenes.scene2d.ui.TextButton access$0(com.mazalearn.scienceengine.tutor.Hinter) -> a
com.mazalearn.scienceengine.tutor.Hinter$1 -> com.mazalearn.scienceengine.tutor.q:
    com.mazalearn.scienceengine.tutor.Hinter this$0 -> b
    java.lang.String val$hint -> c
    55:61:boolean act(float) -> a
com.mazalearn.scienceengine.tutor.IDoneCallback -> com.mazalearn.scienceengine.tutor.r:
    void done(boolean) -> b
com.mazalearn.scienceengine.tutor.ITutor -> com.mazalearn.scienceengine.tutor.ITutor:
    int NUM_ATTEMPTS -> m
    int NUM_SUCCESSES -> n
    int PERCENT_PROGRESS -> o
    int TIME_SPENT -> p
    int FAILURE_TRACKER -> q
    int POINTS -> r
    int NUM_STATS -> s
    java.lang.String getGoal() -> d
    void prepareToTeach(com.mazalearn.scienceengine.tutor.ITutor) -> a
    void teach() -> a
    java.lang.String getHint() -> m
    void checkProgress() -> p
    void finish() -> g
    java.util.List getChildTutors() -> r
    com.mazalearn.scienceengine.tutor.ITutor$ITutorType getType() -> q
    java.lang.String getId() -> e
    com.mazalearn.scienceengine.tutor.ITutor getParentTutor() -> k
    com.mazalearn.scienceengine.tutor.ITutor$State getState() -> s
    void systemReadyToFinish(boolean) -> a
    void userReadyToFinish() -> f
    void addTimeSpent(float) -> a
    void recordStats() -> i
    float[] getStats() -> j
    void abort() -> h
    java.lang.String[] getExplanation() -> b
    java.lang.String[] getRefs() -> t
    void setParentTutor(com.mazalearn.scienceengine.tutor.ITutor) -> b
    java.lang.String getProgressText() -> u
    void prepareStage() -> l
com.mazalearn.scienceengine.tutor.ITutor$ITutorType -> com.mazalearn.scienceengine.tutor.s:
    com.badlogic.gdx.graphics.Color getColor() -> a
    int getSuccessPoints() -> c
    int getFailurePoints() -> d
com.mazalearn.scienceengine.tutor.ITutor$State -> com.mazalearn.scienceengine.tutor.ITutor$State:
    com.mazalearn.scienceengine.tutor.ITutor$State Constructed -> a
    com.mazalearn.scienceengine.tutor.ITutor$State Initialized -> b
    com.mazalearn.scienceengine.tutor.ITutor$State PreparedToTeach -> c
    com.mazalearn.scienceengine.tutor.ITutor$State Teaching -> d
    com.mazalearn.scienceengine.tutor.ITutor$State SystemFinished -> e
    com.mazalearn.scienceengine.tutor.ITutor$State UserFinished -> f
    com.mazalearn.scienceengine.tutor.ITutor$State Finished -> g
    com.mazalearn.scienceengine.tutor.ITutor$State Aborted -> h
    com.mazalearn.scienceengine.tutor.ITutor$State[] ENUM$VALUES -> i
    1:1:com.mazalearn.scienceengine.tutor.ITutor$State[] values() -> values
    1:1:com.mazalearn.scienceengine.tutor.ITutor$State valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.tutor.ImageMessageBox -> com.mazalearn.scienceengine.tutor.t:
    com.badlogic.gdx.scenes.scene2d.ui.TextButton nextButton -> a
    com.badlogic.gdx.scenes.scene2d.ui.TextButton prevButton -> b
    int scale -> c
    com.badlogic.gdx.scenes.scene2d.ui.Button closeButton -> d
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle textButtonStyle -> e
    com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable backgroundImg -> f
    float[] padding -> g
    91:92:void setFontColor(com.badlogic.gdx.graphics.Color) -> a
    95:100:void setPaddingAndScale$2d91bd6b() -> a
    104:106:void drawBackground(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> drawBackground
    109:109:com.badlogic.gdx.scenes.scene2d.ui.Button getNextButton() -> b
    113:113:com.badlogic.gdx.scenes.scene2d.ui.Button getPrevButton() -> c
    117:132:void setTextAndResize(java.lang.String,boolean) -> a
    135:138:void positionButtons() -> e
    141:145:void setImageAndResize(com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable) -> a
    148:148:com.badlogic.gdx.scenes.scene2d.Actor getCloseButton() -> d
com.mazalearn.scienceengine.tutor.ImageMessageBox$1 -> com.mazalearn.scienceengine.tutor.u:
    com.mazalearn.scienceengine.tutor.ImageMessageBox this$0 -> a
    com.badlogic.gdx.scenes.scene2d.Actor val$parentActor -> b
    50:55:void doCommand() -> a
com.mazalearn.scienceengine.tutor.ImageMessageBox$2 -> com.mazalearn.scienceengine.tutor.v:
    boolean ignore -> a
    com.mazalearn.scienceengine.tutor.ImageMessageBox this$0 -> b
    73:86:void drag$1dcb6a94(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> a
com.mazalearn.scienceengine.tutor.KnowledgeUnit -> com.mazalearn.scienceengine.tutor.w:
    com.mazalearn.scienceengine.core.lang.Expr postCondition -> a
    java.util.Collection variables -> b
    java.lang.String when -> c
    28:43:void initialize(java.lang.String,java.lang.String) -> a
    46:46:java.lang.String getWhen() -> v
    51:60:void checkProgress() -> p
com.mazalearn.scienceengine.tutor.McqActor -> com.mazalearn.scienceengine.tutor.x:
    int MAX_OPTIONS -> a
    com.mazalearn.scienceengine.tutor.McqActor$OptionListener optionListener -> b
    com.badlogic.gdx.scenes.scene2d.ui.TextButton submitButton -> c
    com.mazalearn.scienceengine.tutor.ITutor tutor -> d
    com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup optionButtons -> e
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle radioButtonStyle -> f
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle checkBoxStyle -> g
    com.badlogic.gdx.scenes.scene2d.ui.Image questionImage -> h
    com.badlogic.gdx.scenes.scene2d.ui.TextButton progressInfo -> i
    90:109:com.mazalearn.scienceengine.tutor.McqActor$OptionListener createListener(com.badlogic.gdx.scenes.scene2d.ui.Skin,com.badlogic.gdx.scenes.scene2d.ui.TextButton) -> a
    113:132:com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup setUp(com.mazalearn.scienceengine.tutor.ITutor,java.lang.String,java.lang.String,java.util.List,boolean) -> a
    136:143:void placeOptionsOnScreen(com.badlogic.gdx.utils.Array,int) -> a
    147:169:void setOptions(java.util.List,boolean,com.badlogic.gdx.utils.Array) -> a
    172:185:void createSubmitButton(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    29:29:com.badlogic.gdx.scenes.scene2d.ui.TextButton access$0(com.mazalearn.scienceengine.tutor.McqActor) -> a
    30:30:com.mazalearn.scienceengine.tutor.ITutor access$1(com.mazalearn.scienceengine.tutor.McqActor) -> b
com.mazalearn.scienceengine.tutor.McqActor$1 -> com.mazalearn.scienceengine.tutor.y:
    com.mazalearn.scienceengine.tutor.McqActor this$0 -> a
    com.badlogic.gdx.graphics.g2d.TextureRegion val$blackTexture -> b
    82:84:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.mazalearn.scienceengine.tutor.McqActor$2 -> com.mazalearn.scienceengine.tutor.z:
    com.mazalearn.scienceengine.tutor.McqActor this$0 -> a
    178:180:void doCommand() -> a
com.mazalearn.scienceengine.tutor.McqActor$OptionListener -> com.mazalearn.scienceengine.tutor.aa:
    com.mazalearn.scienceengine.tutor.ITutor tutor -> a
    com.badlogic.gdx.scenes.scene2d.ui.TextButton submitButton -> b
    46:47:void setTutor(com.mazalearn.scienceengine.tutor.ITutor) -> a
    51:56:void doCommand() -> a
com.mazalearn.scienceengine.tutor.McqTutor -> com.mazalearn.scienceengine.tutor.ab:
    com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup optionsGroup -> a
    java.lang.String answerMask -> b
    boolean singleAnswer -> c
    int[] permutation -> d
    java.util.List optionList -> t
    java.lang.String questionImageTexture -> u
    39:69:void systemReadyToFinish(boolean) -> a
    77:96:void initialize(java.lang.String,java.lang.String[],java.lang.String) -> a
    100:104:void prepareToTeach(com.mazalearn.scienceengine.tutor.ITutor) -> a
com.mazalearn.scienceengine.tutor.ParameterProber -> com.mazalearn.scienceengine.tutor.ParameterProber:
    int netSuccesses -> a
    com.mazalearn.scienceengine.tutor.ParameterProber$ResultType resultType -> t
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> u
    com.mazalearn.scienceengine.tutor.ClickResult imageListener -> v
    com.mazalearn.scienceengine.core.lang.Expr resultExpr -> w
    java.util.Set resultExprVariables -> x
    com.mazalearn.scienceengine.core.controller.IModelConfig probeConfig -> b
    com.badlogic.gdx.math.Vector2 coords -> y
    com.badlogic.gdx.scenes.scene2d.ui.Table changeOptions -> z
    com.badlogic.gdx.scenes.scene2d.ui.Image delta -> A
    58:63:com.badlogic.gdx.scenes.scene2d.ui.Image createResultImage(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> a
    68:73:void finish() -> g
    85:90:void prepareToTeach(com.mazalearn.scienceengine.tutor.ITutor) -> a
    95:120:void teach() -> a
    124:124:void checkProgress() -> p
    128:141:void systemReadyToFinish(boolean) -> a
    145:224:void initialize(com.mazalearn.scienceengine.core.controller.IModelConfig,java.lang.String,java.lang.String) -> a
    45:45:com.badlogic.gdx.scenes.scene2d.ui.Image access$0(com.mazalearn.scienceengine.tutor.ParameterProber) -> a
    44:44:com.mazalearn.scienceengine.tutor.ParameterProber$ResultType access$1(com.mazalearn.scienceengine.tutor.ParameterProber) -> b
    54:54:com.badlogic.gdx.scenes.scene2d.ui.Table access$2(com.mazalearn.scienceengine.tutor.ParameterProber) -> c
com.mazalearn.scienceengine.tutor.ParameterProber$1 -> com.mazalearn.scienceengine.tutor.ac:
    com.mazalearn.scienceengine.tutor.ParameterProber this$0 -> a
    150:154:void done(boolean) -> b
com.mazalearn.scienceengine.tutor.ParameterProber$2 -> com.mazalearn.scienceengine.tutor.ad:
    com.mazalearn.scienceengine.tutor.ParameterProber this$0 -> a
    168:168:int map$2548a28(float) -> a
com.mazalearn.scienceengine.tutor.ParameterProber$3 -> com.mazalearn.scienceengine.tutor.ae:
    com.mazalearn.scienceengine.tutor.ParameterProber this$0 -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image val$increase -> b
    com.badlogic.gdx.scenes.scene2d.ui.Image val$decrease -> c
    com.badlogic.gdx.scenes.scene2d.ui.Image val$dontCare -> d
    195:208:void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.mazalearn.scienceengine.tutor.ParameterProber$ResultType -> com.mazalearn.scienceengine.tutor.ParameterProber$ResultType:
    com.mazalearn.scienceengine.tutor.ParameterProber$ResultType Spin -> a
    com.mazalearn.scienceengine.tutor.ParameterProber$ResultType Direct -> b
    com.mazalearn.scienceengine.tutor.ParameterProber$ResultType Inverse -> c
    com.mazalearn.scienceengine.tutor.ParameterProber$ResultType None -> d
    com.mazalearn.scienceengine.tutor.ParameterProber$ResultType[] ENUM$VALUES -> e
    1:1:com.mazalearn.scienceengine.tutor.ParameterProber$ResultType[] values() -> values
    1:1:com.mazalearn.scienceengine.tutor.ParameterProber$ResultType valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.tutor.ProbeImage -> com.mazalearn.scienceengine.tutor.af:
com.mazalearn.scienceengine.tutor.ScoreImage -> com.mazalearn.scienceengine.tutor.ag:
    java.lang.String message -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> b
    26:44:void show(java.lang.String) -> a
    47:52:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.mazalearn.scienceengine.tutor.ScoreImage$1 -> com.mazalearn.scienceengine.tutor.ah:
    com.mazalearn.scienceengine.tutor.ScoreImage this$0 -> b
    38:39:boolean act(float) -> a
com.mazalearn.scienceengine.tutor.SuccessFailureImage -> com.mazalearn.scienceengine.tutor.ai:
    java.lang.String message -> a
    boolean success -> b
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> c
    27:44:void show(java.lang.String) -> a
    47:52:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.mazalearn.scienceengine.tutor.TimeTracker -> com.mazalearn.scienceengine.tutor.aj:
    float activeTime -> a
    com.mazalearn.scienceengine.tutor.ITutor activeTutor -> b
    20:21:void setActiveTutor(com.mazalearn.scienceengine.tutor.ITutor) -> a
    25:30:void act(float) -> act
    33:33:float getActiveTime() -> a
com.mazalearn.scienceengine.tutor.TutorGroup -> com.mazalearn.scienceengine.tutor.ak:
    int RAPID_FIRE_MAX -> a
    int REVIEWER_MAX -> b
    java.util.List childTutors -> c
    com.mazalearn.scienceengine.tutor.ITutor currentTutor -> d
    float[] tutorBeginTime -> t
    int tutorIndex -> u
    com.mazalearn.scienceengine.core.lang.Expr successActions -> v
    java.util.Set variables -> w
    int numChildren -> x
    43:70:void systemReadyToFinish(boolean) -> a
    77:90:void teach() -> a
    98:117:void prepareToTeach(com.mazalearn.scienceengine.tutor.ITutor) -> a
    121:121:java.lang.String getProgressText() -> u
    126:130:void randomizeChildTutors() -> v
    134:136:void checkProgress() -> p
    139:158:void initialize(java.util.List,java.lang.String) -> a
    162:162:java.util.List getChildTutors() -> r
    166:169:void doSuccessActions() -> w
    174:196:void recordStats() -> i
com.mazalearn.scienceengine.tutor.TutorHelper -> com.mazalearn.scienceengine.tutor.al:
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> c
    com.mazalearn.scienceengine.app.services.SoundManager soundManager -> d
    com.mazalearn.scienceengine.tutor.ScoreImage correctImage -> e
    com.mazalearn.scienceengine.tutor.ScoreImage wrongImage -> f
    com.mazalearn.scienceengine.tutor.SuccessFailureImage successImage -> a
    com.mazalearn.scienceengine.tutor.SuccessFailureImage failureImage -> b
    com.mazalearn.scienceengine.tutor.McqActor mcqActor -> g
    com.mazalearn.scienceengine.tutor.ITutor activeTutor -> h
    com.mazalearn.scienceengine.tutor.Hinter hinter -> i
    com.mazalearn.scienceengine.tutor.ExplanationBox explanation -> j
    com.mazalearn.scienceengine.app.services.Profile profile -> k
    com.mazalearn.scienceengine.core.view.IScience2DView science2DView -> l
    com.mazalearn.scienceengine.tutor.Guru guru -> m
    com.mazalearn.scienceengine.tutor.TimeTracker timeTracker -> n
    java.util.List excludedActors -> o
    com.mazalearn.scienceengine.tutor.TutorNavigator tutorNavigator -> p
    java.util.Stack revisionStack -> q
    java.lang.String[] ENCOURAGEMENTS -> r
    100:105:void setActiveTutor(com.mazalearn.scienceengine.tutor.ITutor) -> a
    108:108:com.mazalearn.scienceengine.app.services.Profile getProfile() -> a
    112:112:java.util.List getExcludedActors() -> b
    116:116:com.badlogic.gdx.scenes.scene2d.ui.Skin getSkin() -> c
    122:139:com.mazalearn.scienceengine.core.lang.Parser createParser() -> d
    143:146:java.lang.String scoreToString(int) -> e
    150:154:void showWrong(int) -> a
    157:161:void showFailure(int) -> b
    164:169:void showCorrect(int) -> c
    172:177:void showSuccess(int) -> d
    180:183:com.mazalearn.scienceengine.tutor.McqActor getMcqActor() -> e
    187:195:void doAnimation(boolean) -> a
    197:221:void doChallengeAnimation(com.mazalearn.scienceengine.tutor.ITutor) -> b
    224:270:void doRapidFireAnimation(com.mazalearn.scienceengine.tutor.ITutor) -> c
    273:284:void showNextAndExplanation(boolean,boolean) -> a
    287:288:void clearActiveTutor() -> f
    291:307:void populateTutors(com.mazalearn.scienceengine.tutor.TutorGroup) -> a
    310:329:void pushRevisionMode() -> g
    335:338:com.mazalearn.scienceengine.tutor.ITutor popRevisionMode() -> h
    342:342:boolean isRevisionMode() -> i
    186:186:void access$0$30a59096(com.mazalearn.scienceengine.tutor.TutorHelper) -> a
com.mazalearn.scienceengine.tutor.TutorHelper$1 -> com.mazalearn.scienceengine.tutor.am:
    com.mazalearn.scienceengine.tutor.TutorHelper this$0 -> a
    com.mazalearn.scienceengine.core.controller.IModelConfig val$command -> b
    134:134:float eval() -> a
com.mazalearn.scienceengine.tutor.TutorHelper$2 -> com.mazalearn.scienceengine.tutor.an:
    com.mazalearn.scienceengine.tutor.TutorHelper this$0 -> b
    com.badlogic.gdx.scenes.scene2d.ui.Image val$challenge -> c
    com.mazalearn.scienceengine.tutor.ITutor val$tutor -> d
    215:218:boolean act(float) -> a
com.mazalearn.scienceengine.tutor.TutorHelper$3 -> com.mazalearn.scienceengine.tutor.ao:
    com.mazalearn.scienceengine.tutor.TutorHelper this$0 -> b
    com.badlogic.gdx.scenes.scene2d.ui.TextButton val$start -> c
    242:246:boolean act(float) -> a
com.mazalearn.scienceengine.tutor.TutorHelper$4 -> com.mazalearn.scienceengine.tutor.ap:
    com.mazalearn.scienceengine.tutor.TutorHelper this$0 -> b
    com.badlogic.gdx.scenes.scene2d.ui.TextButton val$start -> c
    256:257:boolean act(float) -> a
com.mazalearn.scienceengine.tutor.TutorHelper$5 -> com.mazalearn.scienceengine.tutor.aq:
    com.mazalearn.scienceengine.tutor.TutorHelper this$0 -> b
    com.badlogic.gdx.scenes.scene2d.ui.TextButton val$start -> c
    com.mazalearn.scienceengine.tutor.ITutor val$tutor -> d
    264:267:boolean act(float) -> a
com.mazalearn.scienceengine.tutor.TutorHelper$RevisionFrame -> com.mazalearn.scienceengine.tutor.ar:
    com.mazalearn.scienceengine.tutor.ITutor tutorUnderRevision -> a
    java.util.List childTutors -> b
    53:53:com.mazalearn.scienceengine.tutor.ITutor access$0(com.mazalearn.scienceengine.tutor.TutorHelper$RevisionFrame) -> a
    54:54:java.util.List access$1(com.mazalearn.scienceengine.tutor.TutorHelper$RevisionFrame) -> b
com.mazalearn.scienceengine.tutor.TutorNavigator -> com.mazalearn.scienceengine.tutor.as:
    float TUTOR_WIDTH -> d
    float TUTOR_HEIGHT -> e
    com.badlogic.gdx.graphics.Color c -> a
    com.badlogic.gdx.graphics.g2d.TextureRegion gray -> b
    com.badlogic.gdx.scenes.scene2d.ui.TextButton activeTutorButton -> f
    com.badlogic.gdx.scenes.scene2d.ui.Label[] tutorTimeLabels -> g
    java.util.LinkedHashMap tutors -> h
    com.badlogic.gdx.scenes.scene2d.ui.Image userImage -> i
    com.badlogic.gdx.scenes.scene2d.ui.TextButton goal -> c
    com.mazalearn.scienceengine.tutor.ITutor activeTutor -> j
    com.badlogic.gdx.scenes.scene2d.Group tutorsPanel -> k
    com.badlogic.gdx.scenes.scene2d.ui.Button nextButton -> l
    92:102:void collectLeafTutors(com.mazalearn.scienceengine.tutor.ITutor,java.util.Map) -> a
    105:120:void createNextButton(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    128:144:void show(com.mazalearn.scienceengine.tutor.ITutor) -> a
    147:167:void setActiveTutor(com.mazalearn.scienceengine.tutor.ITutor) -> b
    170:173:void clearActiveTutor() -> a
    176:223:com.badlogic.gdx.scenes.scene2d.Actor createTutorsPane(java.util.Collection,com.mazalearn.scienceengine.tutor.Guru,com.badlogic.gdx.scenes.scene2d.ui.Skin) -> a
    227:228:void showNextButton(boolean) -> a
    231:231:com.mazalearn.scienceengine.tutor.ITutor id2Tutor(java.lang.String) -> a
    45:45:com.badlogic.gdx.scenes.scene2d.Group access$0(com.mazalearn.scienceengine.tutor.TutorNavigator) -> a
    44:44:com.mazalearn.scienceengine.tutor.ITutor access$1(com.mazalearn.scienceengine.tutor.TutorNavigator) -> b
    46:46:com.badlogic.gdx.scenes.scene2d.ui.Button access$2(com.mazalearn.scienceengine.tutor.TutorNavigator) -> c
    39:39:com.badlogic.gdx.scenes.scene2d.ui.TextButton access$3(com.mazalearn.scienceengine.tutor.TutorNavigator) -> d
    42:42:com.badlogic.gdx.scenes.scene2d.ui.Image access$4(com.mazalearn.scienceengine.tutor.TutorNavigator) -> e
com.mazalearn.scienceengine.tutor.TutorNavigator$1 -> com.mazalearn.scienceengine.tutor.at:
    com.mazalearn.scienceengine.tutor.TutorNavigator this$0 -> a
    57:59:void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float) -> draw
com.mazalearn.scienceengine.tutor.TutorNavigator$2 -> com.mazalearn.scienceengine.tutor.au:
    com.mazalearn.scienceengine.tutor.TutorNavigator this$0 -> a
    com.mazalearn.scienceengine.tutor.TutorHelper val$tutorHelper -> b
    70:78:void doCommand() -> a
com.mazalearn.scienceengine.tutor.TutorNavigator$3 -> com.mazalearn.scienceengine.tutor.av:
    com.mazalearn.scienceengine.tutor.TutorNavigator this$0 -> a
    112:114:void doCommand() -> a
com.mazalearn.scienceengine.tutor.TutorNavigator$4 -> com.mazalearn.scienceengine.tutor.aw:
    com.mazalearn.scienceengine.tutor.TutorNavigator this$0 -> b
    com.mazalearn.scienceengine.tutor.ITutor val$activeTutor -> c
    156:163:boolean act(float) -> a
com.mazalearn.scienceengine.tutor.TutorNavigator$5 -> com.mazalearn.scienceengine.tutor.ax:
    com.mazalearn.scienceengine.tutor.TutorNavigator this$0 -> a
    com.mazalearn.scienceengine.tutor.Guru val$guru -> b
    com.mazalearn.scienceengine.tutor.ITutor val$tutor -> c
    185:190:void doCommand() -> a
com.mazalearn.scienceengine.tutor.TutorType -> com.mazalearn.scienceengine.tutor.TutorType:
    com.mazalearn.scienceengine.tutor.TutorType Root -> a
    com.mazalearn.scienceengine.tutor.TutorType Guide -> b
    com.mazalearn.scienceengine.tutor.TutorType Challenge -> c
    com.mazalearn.scienceengine.tutor.TutorType RapidFire -> d
    com.mazalearn.scienceengine.tutor.TutorType MCQ1 -> e
    com.mazalearn.scienceengine.tutor.TutorType MCQ -> f
    com.mazalearn.scienceengine.tutor.TutorType KnowledgeUnit -> g
    com.mazalearn.scienceengine.tutor.TutorType ParameterProber -> h
    com.mazalearn.scienceengine.tutor.TutorType Abstractor -> i
    com.mazalearn.scienceengine.tutor.TutorType Reviewer -> j
    com.badlogic.gdx.graphics.Color color -> color
    int successPoints -> successPoints
    int failurePoints -> failurePoints
    com.mazalearn.scienceengine.tutor.TutorType[] ENUM$VALUES -> k
    29:29:com.badlogic.gdx.graphics.Color getColor() -> a
    33:33:java.lang.String getLocalizedName() -> b
    38:38:int getSuccessPoints() -> c
    43:43:int getFailurePoints() -> d
    1:1:com.mazalearn.scienceengine.tutor.TutorType[] values() -> values
    1:1:com.mazalearn.scienceengine.tutor.TutorType valueOf(java.lang.String) -> valueOf
com.mazalearn.scienceengine.tutor.Utils -> com.mazalearn.scienceengine.tutor.ay:
    15:29:int[] shuffle(java.util.List) -> a
